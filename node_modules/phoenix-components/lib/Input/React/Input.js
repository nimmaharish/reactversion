import { s as styleInject, _ as __assign } from '../../style-inject.es-889d3751.js';
import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { useState } from 'react';
import { c as cx } from '../../index-2d39db8f.js';

var css_248z = ".Input-module_form-group__1gXzD {\n    position: relative;\n    width: 100%;\n    border: 1px solid var(--black30);\n    box-sizing: border-box;\n    border-radius: var(--border-radius);\n    display: flex;\n    flex-direction: row;\n    margin: var(--xs-spacing) 0;\n    background: var(--white);\n}\n\n.Input-module_startMainLabel__3oN2n {\n    color: var(--black70);\n    padding-bottom: 4px;\n}\n\n.Input-module_startLabel__g7AOm {\n    color: var(--black);\n    font-size: var(--d-font-size);\n}\n\n.Input-module_startLabelSec__12lx- {\n    background: rgba(232, 232, 232, 0.3);\n    padding: var(--m-spacing);\n    border-top-left-radius: var(--border-radius);\n    border-bottom-left-radius: var(--border-radius);\n}\n\n.Input-module_container__1Im_P {\n    padding: var(--s-spacing) var(--m-spacing);\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n}\n\n.Input-module_form-group-content__34chK {\n    display: flex;\n    align-items: center;\n    height: 100%;\n}\n\n.Input-module_form-group-startIcon__16-xh {\n    margin-right: var(--xs-spacing);\n    width: 17px;\n    height: 17px;\n}\n\n.Input-module_form-group-error-border__1R6hr {\n    border: 1px solid var(--red100);\n}\n\n.Input-module_form-group-error__3Bn9_ {\n    color: var(--red);\n    font-size: var(--m-font-size);\n    margin-top: var(--xs-spacing);\n}\n\n.Input-module_form-group-focused__2e20p {\n    border: 1px solid var(--black100);\n}\n\n.Input-module_form-group-readonly__2qa4- {\n    opacity: 0.3;\n}\n\n.Input-module_form-group-label__2zixC {\n    font-size: var(--m-font-size);\n    opacity: 0.7;\n    margin-bottom: var(--xs-spacing);\n}\n\n.Input-module_form-group-helper-text__SHxR- {\n    font-size: var(--xs-font-size);\n    margin-top: var(--xs-spacing);\n    color: var(--black);\n}\n\n.Input-module_form-group-label-not-empty__1pjy2 {\n    opacity: 0.7;\n}\n\n.Input-module_text-form-input__3tZyN {\n    border: none;\n    width: 100%;\n    resize: none;\n}\n\n.Input-module_text-form-input__3tZyN:focus {\n    border: none;\n    opacity: 1;\n    outline: 0;\n}\n\n.Input-module_text-form-input__3tZyN::placeholder {\n    color: var(--black);\n    opacity: 0.2;\n    font-size: var(--d-font-size);;\n}\n\n\n.Input-module_text-form-input__3tZyN:read-only {\n    background: var(--white);\n}\n\n\n.Input-module_text-form-input__3tZyN[type=number]::-webkit-inner-spin-button,\n.Input-module_text-form-input__3tZyN[type=number]::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    margin: 0;\n}\n\n.Input-module_text-form-input__3tZyN[type=number] {\n    -moz-appearance: textfield;\n}\n";
var styles = {"form-group":"Input-module_form-group__1gXzD","startMainLabel":"Input-module_startMainLabel__3oN2n","startLabel":"Input-module_startLabel__g7AOm","startLabelSec":"Input-module_startLabelSec__12lx-","container":"Input-module_container__1Im_P","form-group-content":"Input-module_form-group-content__34chK","form-group-startIcon":"Input-module_form-group-startIcon__16-xh","form-group-error-border":"Input-module_form-group-error-border__1R6hr","form-group-error":"Input-module_form-group-error__3Bn9_","form-group-focused":"Input-module_form-group-focused__2e20p","form-group-readonly":"Input-module_form-group-readonly__2qa4-","form-group-label":"Input-module_form-group-label__2zixC","form-group-helper-text":"Input-module_form-group-helper-text__SHxR-","form-group-label-not-empty":"Input-module_form-group-label-not-empty__1pjy2","text-form-input":"Input-module_text-form-input__3tZyN"};
styleInject(css_248z);

/**
 * Primary UI component for user interaction
 */
function Input(_a) {
    var _b, _c;
    var _d = _a.readonly, readonly = _d === void 0 ? false : _d, _e = _a.required, required = _e === void 0 ? false : _e, _f = _a.type, type = _f === void 0 ? 'text' : _f, value = _a.value, label = _a.label, placeholder = _a.placeholder, _g = _a.startIcon, startIcon = _g === void 0 ? '' : _g, _h = _a.autoComplete, autoComplete = _h === void 0 ? 'off' : _h, _j = _a.errorText, errorText = _j === void 0 ? 'Required' : _j, errorTextClass = _a.errorTextClass, startIconClass = _a.startIconClass, inputClass = _a.inputClass, errorInputClass = _a.errorInputClass, focusedClass = _a.focusedClass, labelClass = _a.labelClass, labelFilledClass = _a.labelFilledClass, _k = _a.rows, rows = _k === void 0 ? 2 : _k, _l = _a.helperText, helperText = _l === void 0 ? '' : _l, helperTextClass = _a.helperTextClass, setValue = _a.setValue, pattern = _a.pattern, maxLength = _a.maxLength, minLength = _a.minLength, startLabel = _a.startLabel, startLabelMain = _a.startLabelMain, _m = _a.disabled, disabled = _m === void 0 ? false : _m, _o = _a.startLabelClass, startLabelClass = _o === void 0 ? '' : _o;
    var _p = useState(false), isFocused = _p[0], setIsFocused = _p[1];
    var isEmpty = false;
    var _q = useState(false), isError = _q[0], setIsError = _q[1];
    var isStartIcon = (startIcon === null || startIcon === void 0 ? void 0 : startIcon.length) > 0;
    var isTextarea = type === 'textarea';
    return (jsxs(Fragment, { children: [jsxs("label", __assign({ className: cx(styles['form-group'], inputClass, (_b = {},
                    _b[styles['form-group-error-border']] = isError,
                    _b[styles['form-group-focused']] = isFocused,
                    _b[styles['form-group-readonly']] = readonly,
                    _b), isError && errorInputClass, isFocused && focusedClass) }, { children: [startLabel && (jsxs("div", __assign({ className: styles.startLabelSec }, { children: [startLabelMain && (jsx("div", __assign({ className: styles.startMainLabel }, { children: startLabelMain }), void 0)), jsx("div", __assign({ className: cx(styles.startLabel, startLabelClass) }, { children: startLabel }), void 0)] }), void 0)), jsxs("div", __assign({ className: styles.container }, { children: [label && (jsx("span", __assign({ className: cx(styles['form-group-label'], (_c = {},
                                    _c[styles['form-group-label-not-empty']] = !isEmpty,
                                    _c.labelClass = labelClass,
                                    _c), labelFilledClass) }, { children: label }), void 0)), jsxs("span", __assign({ className: styles['form-group-content'] }, { children: [isStartIcon && jsx("span", { children: jsx("img", { className: cx(styles['form-group-startIcon'], startIconClass), src: startIcon, alt: "" }, void 0) }, void 0), isTextarea && (jsx("textarea", { className: styles['text-form-input'], placeholder: placeholder, rows: rows, disabled: disabled, readOnly: readonly, autoComplete: autoComplete, value: value, onChange: function (e) { return setValue(e.target.value); }, onFocus: function () { return setIsFocused(true); }, onBlur: function () { return setIsFocused(false); }, onInvalid: function () { return setIsError(true); }, required: required, minLength: minLength, maxLength: maxLength }, void 0)), !isTextarea && (jsx("input", { type: type, disabled: readonly, placeholder: placeholder, className: styles['text-form-input'], autoComplete: autoComplete, onChange: function (e) { return setValue(e.target.value); }, value: value, onFocus: function () { return setIsFocused(true); }, onBlur: function () { return setIsFocused(false); }, onInvalid: function () { return setIsError(true); }, required: required, pattern: pattern, minLength: minLength, maxLength: maxLength }, void 0))] }), void 0)] }), void 0)] }), void 0), isError ? (jsx("div", __assign({ className: cx(styles['form-group-error'], errorTextClass) }, { children: errorText || 'Required' }), void 0)) : null, helperText && (jsx("div", __assign({ className: cx(styles['form-group-helper-text'], helperTextClass) }, { children: helperText }), void 0))] }, void 0));
}

export default Input;
//# sourceMappingURL=Input.js.map
