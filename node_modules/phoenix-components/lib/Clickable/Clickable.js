import { s as styleInject, _ as __assign } from '../style-inject.es-889d3751.js';
import { jsx } from 'react/jsx-runtime';
import { Link } from 'react-router-dom';
import { c as cx } from '../index-2d39db8f.js';

var css_248z = ".Clickable-module_button__2Mkx_ {\n    background: transparent;\n    outline: none;\n    border: none;\n    cursor: pointer;\n    color: var(--black);\n    font-size: var(--m-font-size);\n    padding: 0;\n}\n\n.Clickable-module_link__rn3E9, .Clickable-module_link__rn3E9:hover, .Clickable-module_link__rn3E9:visited, .Clickable-module_link__rn3E9:focus {\n    text-decoration: none;\n    color: var(--black);\n    font-size: var(--m-font-size);\n}\n\n.Clickable-module_fullWidth__3kzm5 {\n    width: 100%;\n}\n";
var styles = {"button":"Clickable-module_button__2Mkx_","link":"Clickable-module_link__rn3E9","fullWidth":"Clickable-module_fullWidth__3kzm5"};
styleInject(css_248z);

function Clickable(_a) {
    var _b, _c;
    var onClick = _a.onClick, to = _a.to, children = _a.children, className = _a.className, style = _a.style, _d = _a.fullWidth, fullWidth = _d === void 0 ? false : _d;
    if (to) {
        return (jsx(Link, __assign({ style: style, to: to, className: cx(className, styles.link, (_b = {},
                _b[styles.fullWidth] = fullWidth,
                _b)) }, { children: children }), void 0));
    }
    return (jsx("button", __assign({ style: style, className: cx(styles.button, className, (_c = {},
            _c[styles.fullWidth] = fullWidth,
            _c)), onClick: onClick, disabled: !onClick }, { children: children }), void 0));
}

export default Clickable;
//# sourceMappingURL=Clickable.js.map
