{"ast":null,"code":"import * as Yup from 'yup';\nexport const getInitialValues = (values = {}) => {\n  var _values$enabled, _values$values$name, _values$values$name$c, _values$values$name2, _values$values$name2$, _values$values$name3, _values$values$name3$;\n\n  const val = {\n    name: (values === null || values === void 0 ? void 0 : values.name) || '',\n    enabled: (_values$enabled = values === null || values === void 0 ? void 0 : values.enabled) !== null && _values$enabled !== void 0 ? _values$enabled : true,\n    config: {\n      email: ((_values$values$name = values[values.name]) === null || _values$values$name === void 0 ? void 0 : (_values$values$name$c = _values$values$name.config) === null || _values$values$name$c === void 0 ? void 0 : _values$values$name$c.email) || '',\n      password: ((_values$values$name2 = values[values.name]) === null || _values$values$name2 === void 0 ? void 0 : (_values$values$name2$ = _values$values$name2.config) === null || _values$values$name2$ === void 0 ? void 0 : _values$values$name2$.password) || '',\n      token: ((_values$values$name3 = values[values.name]) === null || _values$values$name3 === void 0 ? void 0 : (_values$values$name3$ = _values$values$name3.config) === null || _values$values$name3$ === void 0 ? void 0 : _values$values$name3$.token) || ''\n    }\n  };\n  return val;\n};\nexport const schema = Yup.object({\n  name: Yup.string().required(),\n  enabled: Yup.bool(),\n  config: Yup.object().when('name', {\n    is: 'shiprocket',\n    then: Yup.object({\n      email: Yup.string().required('Please enter email').email('Please enter a valid email id'),\n      password: Yup.string().required('Please enter password')\n    }),\n    otherwise: Yup.object({\n      token: Yup.string().required('Please enter token')\n    })\n  })\n});\nexport const isEmptyPartner = (name, list = {}) => {\n  if (list[name]) {\n    return false;\n  }\n\n  return true;\n};","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/shippingPartners/utils.js"],"names":["Yup","getInitialValues","values","val","name","enabled","config","email","password","token","schema","object","string","required","bool","when","is","then","otherwise","isEmptyPartner","list"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,MAAM,GAAG,EAAV,KAAiB;AAAA;;AAC/C,QAAMC,GAAG,GAAG;AACVC,IAAAA,IAAI,EAAE,CAAAF,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEE,IAAR,KAAgB,EADZ;AAEVC,IAAAA,OAAO,qBAAEH,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEG,OAAV,6DAAqB,IAFlB;AAGVC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,wBAAAL,MAAM,CAACA,MAAM,CAACE,IAAR,CAAN,qGAAqBE,MAArB,gFAA6BC,KAA7B,KAAsC,EADvC;AAENC,MAAAA,QAAQ,EAAE,yBAAAN,MAAM,CAACA,MAAM,CAACE,IAAR,CAAN,uGAAqBE,MAArB,gFAA6BE,QAA7B,KAAyC,EAF7C;AAGNC,MAAAA,KAAK,EAAE,yBAAAP,MAAM,CAACA,MAAM,CAACE,IAAR,CAAN,uGAAqBE,MAArB,gFAA6BG,KAA7B,KAAsC;AAHvC;AAHE,GAAZ;AASA,SAAON,GAAP;AACD,CAXM;AAaP,OAAO,MAAMO,MAAM,GAAGV,GAAG,CAACW,MAAJ,CAAW;AAC/BP,EAAAA,IAAI,EAAEJ,GAAG,CAACY,MAAJ,GAAaC,QAAb,EADyB;AAE/BR,EAAAA,OAAO,EAAEL,GAAG,CAACc,IAAJ,EAFsB;AAG/BR,EAAAA,MAAM,EAAEN,GAAG,CAACW,MAAJ,GAAaI,IAAb,CAAkB,MAAlB,EAA0B;AAChCC,IAAAA,EAAE,EAAE,YAD4B;AAEhCC,IAAAA,IAAI,EAAEjB,GAAG,CAACW,MAAJ,CAAW;AACfJ,MAAAA,KAAK,EAAEP,GAAG,CAACY,MAAJ,GAAaC,QAAb,CAAsB,oBAAtB,EAA4CN,KAA5C,CAAkD,+BAAlD,CADQ;AAEfC,MAAAA,QAAQ,EAAER,GAAG,CAACY,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB;AAFK,KAAX,CAF0B;AAMhCK,IAAAA,SAAS,EAAElB,GAAG,CAACW,MAAJ,CAAW;AACpBF,MAAAA,KAAK,EAAET,GAAG,CAACY,MAAJ,GAAaC,QAAb,CAAsB,oBAAtB;AADa,KAAX;AANqB,GAA1B;AAHuB,CAAX,CAAf;AAeP,OAAO,MAAMM,cAAc,GAAG,CAACf,IAAD,EAAOgB,IAAI,GAAG,EAAd,KAAqB;AACjD,MAAIA,IAAI,CAAChB,IAAD,CAAR,EAAgB;AACd,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CALM","sourcesContent":["import * as Yup from 'yup';\n\nexport const getInitialValues = (values = {}) => {\n  const val = {\n    name: values?.name || '',\n    enabled: values?.enabled ?? true,\n    config: {\n      email: values[values.name]?.config?.email || '',\n      password: values[values.name]?.config?.password || '',\n      token: values[values.name]?.config?.token || '',\n    }\n  };\n  return val;\n};\n\nexport const schema = Yup.object({\n  name: Yup.string().required(),\n  enabled: Yup.bool(),\n  config: Yup.object().when('name', {\n    is: 'shiprocket',\n    then: Yup.object({\n      email: Yup.string().required('Please enter email').email('Please enter a valid email id'),\n      password: Yup.string().required('Please enter password'),\n    }),\n    otherwise: Yup.object({\n      token: Yup.string().required('Please enter token')\n    }),\n  })\n});\n\nexport const isEmptyPartner = (name, list = {}) => {\n  if (list[name]) {\n    return false;\n  }\n  return true;\n};\n"]},"metadata":{},"sourceType":"module"}