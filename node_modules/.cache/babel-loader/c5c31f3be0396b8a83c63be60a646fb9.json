{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/common/ColorDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog, DialogActions, DialogContent } from '@material-ui/core';\nimport { SketchPicker } from 'react-color';\nimport _ from 'lodash';\nimport { useDesktop } from \"../../contexts\";\nimport { Button } from 'phoenix-components';\nimport styles from \"./ColorDialog.module.css\";\nexport function ColorDialog({\n  onChange,\n  color\n}) {\n  _s();\n\n  const isDesktop = useDesktop();\n  const [state, setState] = useState(color);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !isDesktop && /*#__PURE__*/React.createElement(Dialog, {\n    open: true,\n    maxWidth: \"md\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SketchPicker, {\n    color: _.isEmpty(state) ? undefined : state,\n    onChange: clr => setState(clr.hex),\n    width: \"95%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    primary: false,\n    onClick: () => onChange(color),\n    label: \"Cancel\",\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: () => onChange(state),\n    label: \"Save\",\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }))), isDesktop && /*#__PURE__*/React.createElement(Dialog, {\n    open: true,\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SketchPicker, {\n    color: _.isEmpty(state) ? undefined : state,\n    onChange: clr => setState(clr.hex),\n    width: \"95%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    primary: false,\n    fullWidth: true,\n    onClick: () => onChange(color),\n    label: \"Cancel\",\n    className: styles.button1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    fullWidth: true,\n    onClick: () => onChange(state),\n    label: \"Save\",\n    className: styles.button1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }))));\n}\n\n_s(ColorDialog, \"0OoqdbOc2i011/t43W0ImZfpBEA=\", false, function () {\n  return [useDesktop];\n});\n\n_c = ColorDialog;\nColorDialog.propTypes = {\n  color: PropTypes.string,\n  onChange: PropTypes.func.isRequired\n};\nColorDialog.defaultProps = {\n  color: undefined\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorDialog\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/common/ColorDialog.jsx"],"names":["React","useState","PropTypes","Dialog","DialogActions","DialogContent","SketchPicker","_","useDesktop","Button","styles","ColorDialog","onChange","color","isDesktop","state","setState","isEmpty","undefined","clr","hex","button","container","button1","propTypes","string","func","isRequired","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,MADF,EACUC,aADV,EACyBC,aADzB,QAEO,mBAFP;AAGA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,UAAT;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,MAAP;AAEA,OAAO,SAASC,WAAT,CAAqB;AAC1BC,EAAAA,QAD0B;AAE1BC,EAAAA;AAF0B,CAArB,EAGJ;AAAA;;AACD,QAAMC,SAAS,GAAGN,UAAU,EAA5B;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAACY,KAAD,CAAlC;AAEA,sBACE,0CACG,CAACC,SAAD,iBACC,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,IAAd;AAAoB,IAAA,QAAQ,EAAC,IAA7B;AAAkC,IAAA,SAAS,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAEP,CAAC,CAACU,OAAF,CAAUF,KAAV,IAAmBG,SAAnB,GAA+BH,KADxC;AAEE,IAAA,QAAQ,EAAEI,GAAG,IAAIH,QAAQ,CAACG,GAAG,CAACC,GAAL,CAF3B;AAGE,IAAA,KAAK,EAAC,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAQE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,KADX;AAEE,IAAA,OAAO,EAAE,MAAMR,QAAQ,CAACC,KAAD,CAFzB;AAGE,IAAA,KAAK,EAAC,QAHR;AAIE,IAAA,SAAS,EAAEH,MAAM,CAACW,MAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,IADX;AAEE,IAAA,OAAO,EAAE,MAAMT,QAAQ,CAACG,KAAD,CAFzB;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,SAAS,EAAEL,MAAM,CAACW,MAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CARF,CAFJ,EA0BGP,SAAS,iBACR,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,IAAd;AAAoB,IAAA,QAAQ,EAAC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAEP,CAAC,CAACU,OAAF,CAAUF,KAAV,IAAmBG,SAAnB,GAA+BH,KADxC;AAEE,IAAA,QAAQ,EAAEI,GAAG,IAAIH,QAAQ,CAACG,GAAG,CAACC,GAAL,CAF3B;AAGE,IAAA,KAAK,EAAC,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAQE;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACY,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,KADX;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAE,MAAMV,QAAQ,CAACC,KAAD,CAHzB;AAIE,IAAA,KAAK,EAAC,QAJR;AAKE,IAAA,SAAS,EAAEH,MAAM,CAACa,OALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,IADX;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAE,MAAMX,QAAQ,CAACG,KAAD,CAHzB;AAIE,IAAA,KAAK,EAAC,MAJR;AAKE,IAAA,SAAS,EAAEL,MAAM,CAACa,OALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CARF,CA3BJ,CADF;AAwDD;;GA/DeZ,W;UAIIH,U;;;KAJJG,W;AAiEhBA,WAAW,CAACa,SAAZ,GAAwB;AACtBX,EAAAA,KAAK,EAAEX,SAAS,CAACuB,MADK;AAEtBb,EAAAA,QAAQ,EAAEV,SAAS,CAACwB,IAAV,CAAeC;AAFH,CAAxB;AAKAhB,WAAW,CAACiB,YAAZ,GAA2B;AACzBf,EAAAA,KAAK,EAAEK;AADkB,CAA3B","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Dialog, DialogActions, DialogContent\n} from '@material-ui/core';\nimport { SketchPicker } from 'react-color';\nimport _ from 'lodash';\nimport { useDesktop } from 'contexts';\nimport { Button } from 'phoenix-components';\nimport styles from './ColorDialog.module.css';\n\nexport function ColorDialog({\n  onChange,\n  color\n}) {\n  const isDesktop = useDesktop();\n  const [state, setState] = useState(color);\n\n  return (\n    <>\n      {!isDesktop && (\n        <Dialog open={true} maxWidth=\"md\" fullWidth>\n          <DialogContent>\n            <SketchPicker\n              color={_.isEmpty(state) ? undefined : state}\n              onChange={clr => setState(clr.hex)}\n              width=\"95%\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button\n              primary={false}\n              onClick={() => onChange(color)}\n              label=\"Cancel\"\n              className={styles.button}\n            />\n            <Button\n              primary={true}\n              onClick={() => onChange(state)}\n              label=\"Save\"\n              className={styles.button}\n            />\n          </DialogActions>\n        </Dialog>\n      )}\n      {isDesktop && (\n        <Dialog open={true} maxWidth=\"sm\">\n          <div>\n            <SketchPicker\n              color={_.isEmpty(state) ? undefined : state}\n              onChange={clr => setState(clr.hex)}\n              width=\"95%\"\n            />\n          </div>\n          <div className={styles.container}>\n            <Button\n              primary={false}\n              fullWidth\n              onClick={() => onChange(color)}\n              label=\"Cancel\"\n              className={styles.button1}\n            />\n            <Button\n              primary={true}\n              fullWidth\n              onClick={() => onChange(state)}\n              label=\"Save\"\n              className={styles.button1}\n            />\n          </div>\n        </Dialog>\n      )}\n    </>\n  );\n}\n\nColorDialog.propTypes = {\n  color: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nColorDialog.defaultProps = {\n  color: undefined,\n};\n"]},"metadata":{},"sourceType":"module"}