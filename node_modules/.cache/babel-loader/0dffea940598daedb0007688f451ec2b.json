{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/chat/SendMessage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField } from '@material-ui/core';\nimport sendIcon from \"../../assets/images/chat/send.svg\";\nimport { Hedwig } from \"../../api\";\nimport Loader from \"../../services/loader\";\nimport SnackBar from \"../../services/snackbar\";\nimport styles from \"./SendMessage.module.css\";\nexport function SendMessage({\n  refresh,\n  roomId\n}) {\n  _s();\n\n  const [message, setMessage] = useState('');\n\n  const onFocus = () => {\n    const container = document.getElementById('chatRoom');\n\n    if (container) {\n      setTimeout(() => {\n        container.scrollTo({\n          top: container.scrollHeight,\n          behavior: 'smooth'\n        });\n      }, 500);\n    }\n  };\n\n  const sendMessage = async () => {\n    if (message.length === 0) {\n      return;\n    }\n\n    try {\n      Loader.show();\n      await Hedwig.sendMessage(roomId, {\n        message: {\n          type: 'text',\n          data: message\n        }\n      });\n      setMessage('');\n      setTimeout(refresh, 500);\n    } catch (e) {\n      SnackBar.show('something went wring', 'error');\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    placeholder: \"Type here......\",\n    size: \"small\",\n    className: styles.field,\n    variant: \"outlined\",\n    value: message,\n    onFocus: onFocus,\n    onChange: e => setMessage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: sendMessage,\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: sendIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(SendMessage, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n\n_c = SendMessage;\nSendMessage.propTypes = {\n  refresh: PropTypes.func.isRequired,\n  roomId: PropTypes.string.isRequired\n};\nSendMessage.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"SendMessage\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/chat/SendMessage.jsx"],"names":["React","useState","PropTypes","TextField","Hedwig","Loader","SnackBar","styles","SendMessage","refresh","roomId","message","setMessage","onFocus","container","document","getElementById","setTimeout","scrollTo","top","scrollHeight","behavior","sendMessage","length","show","type","data","e","hide","field","target","value","button","sendIcon","propTypes","func","isRequired","string","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AAEA,SAASC,MAAT;AACA,OAAOC,MAAP;AACA,OAAOC,QAAP;AACA,OAAOC,MAAP;AAEA,OAAO,SAASC,WAAT,CAAqB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAArB,EAA0C;AAAA;;AAC/C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMY,OAAO,GAAG,MAAM;AACpB,UAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAlB;;AACA,QAAIF,SAAJ,EAAe;AACbG,MAAAA,UAAU,CAAC,MAAM;AACfH,QAAAA,SAAS,CAACI,QAAV,CAAmB;AACjBC,UAAAA,GAAG,EAAEL,SAAS,CAACM,YADE;AAEjBC,UAAAA,QAAQ,EAAE;AAFO,SAAnB;AAID,OALS,EAKP,GALO,CAAV;AAMD;AACF,GAVD;;AAYA,QAAMC,WAAW,GAAG,YAAY;AAC9B,QAAIX,OAAO,CAACY,MAAR,KAAmB,CAAvB,EAA0B;AACxB;AACD;;AACD,QAAI;AACFlB,MAAAA,MAAM,CAACmB,IAAP;AACA,YAAMpB,MAAM,CAACkB,WAAP,CAAmBZ,MAAnB,EAA2B;AAC/BC,QAAAA,OAAO,EAAE;AACPc,UAAAA,IAAI,EAAE,MADC;AAEPC,UAAAA,IAAI,EAAEf;AAFC;AADsB,OAA3B,CAAN;AAMAC,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAK,MAAAA,UAAU,CAACR,OAAD,EAAU,GAAV,CAAV;AACD,KAVD,CAUE,OAAOkB,CAAP,EAAU;AACVrB,MAAAA,QAAQ,CAACkB,IAAT,CAAc,sBAAd,EAAsC,OAAtC;AACD,KAZD,SAYU;AACRnB,MAAAA,MAAM,CAACuB,IAAP;AACD;AACF,GAnBD;;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAErB,MAAM,CAACO,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,WAAW,EAAC,iBAFd;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,SAAS,EAAEP,MAAM,CAACsB,KAJpB;AAKE,IAAA,OAAO,EAAC,UALV;AAME,IAAA,KAAK,EAAElB,OANT;AAOE,IAAA,OAAO,EAAEE,OAPX;AAQE,IAAA,QAAQ,EAAEc,CAAC,IAAIf,UAAU,CAACe,CAAC,CAACG,MAAF,CAASC,KAAV,CAR3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAWE;AAAK,IAAA,OAAO,EAAET,WAAd;AAA2B,IAAA,SAAS,EAAEf,MAAM,CAACyB,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEC,QAAV;AAAoB,IAAA,GAAG,EAAC,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CADF;AAiBD;;GArDezB,W;;KAAAA,W;AAuDhBA,WAAW,CAAC0B,SAAZ,GAAwB;AACtBzB,EAAAA,OAAO,EAAEP,SAAS,CAACiC,IAAV,CAAeC,UADF;AAEtB1B,EAAAA,MAAM,EAAER,SAAS,CAACmC,MAAV,CAAiBD;AAFH,CAAxB;AAKA5B,WAAW,CAAC8B,YAAZ,GAA2B,EAA3B","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField } from '@material-ui/core';\nimport sendIcon from 'assets/images/chat/send.svg';\nimport { Hedwig } from 'api';\nimport Loader from 'services/loader';\nimport SnackBar from 'services/snackbar';\nimport styles from './SendMessage.module.css';\n\nexport function SendMessage({ refresh, roomId }) {\n  const [message, setMessage] = useState('');\n\n  const onFocus = () => {\n    const container = document.getElementById('chatRoom');\n    if (container) {\n      setTimeout(() => {\n        container.scrollTo({\n          top: container.scrollHeight,\n          behavior: 'smooth'\n        });\n      }, 500);\n    }\n  };\n\n  const sendMessage = async () => {\n    if (message.length === 0) {\n      return;\n    }\n    try {\n      Loader.show();\n      await Hedwig.sendMessage(roomId, {\n        message: {\n          type: 'text',\n          data: message\n        }\n      });\n      setMessage('');\n      setTimeout(refresh, 500);\n    } catch (e) {\n      SnackBar.show('something went wring', 'error');\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <TextField\n        fullWidth\n        placeholder=\"Type here......\"\n        size=\"small\"\n        className={styles.field}\n        variant=\"outlined\"\n        value={message}\n        onFocus={onFocus}\n        onChange={e => setMessage(e.target.value)}\n      />\n      <div onClick={sendMessage} className={styles.button}>\n        <img src={sendIcon} alt=\"\" />\n      </div>\n    </div>\n  );\n}\n\nSendMessage.propTypes = {\n  refresh: PropTypes.func.isRequired,\n  roomId: PropTypes.string.isRequired,\n};\n\nSendMessage.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}