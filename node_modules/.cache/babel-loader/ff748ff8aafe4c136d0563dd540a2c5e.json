{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/orders/PaymentLink.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport cx from 'classnames';\nimport { Dialog } from '@material-ui/core';\nimport { Button, Clickable, FormikInput } from 'phoenix-components';\nimport { Switch } from 'phoenix-components/lib/formik';\nimport { LinkBar } from 'phoenix-components/lib/containers';\nimport editIcon from \"../../assets/overview/edit.svg\";\nimport generateIcon from \"../../assets/logos/generate.svg\";\nimport closeIcon from \"../../assets/images/orders/list/close.svg\";\nimport { useCustomDomain, useDesktop, useIsOnCustomDomain, useShop } from \"../../contexts\";\nimport { useNonConfirmedAmount, useOrder } from \"../../contexts/orderContext\";\nimport { useToggle } from \"../../hooks/common\";\nimport SnackBar from \"../../services/snackbar\";\nimport Loader from \"../../services/loader\";\nimport { Factory } from \"../../api\";\nimport { Drawer } from \"../shared/Drawer\";\nimport { SideDrawer } from \"../shared/SideDrawer\";\nimport { DeleteAlert } from \"../shared/DeleteAlert\";\nimport { FooterButton } from \"../common/FooterButton\";\nimport { share } from \"../../utils\";\nimport DeviceUtils from \"../../utils/deviceUtils\";\nimport { getInitialValues, marshalData, schema } from \"./paymentLinkUtils\";\nimport styles from \"./PaymentLink.module.css\";\nexport default function PaymentLink() {\n  _s();\n\n  var _getInitialValues, _getInitialValues$mod;\n\n  const order = useOrder();\n  const [link, setLink] = useState(order === null || order === void 0 ? void 0 : order.paymentLink);\n  const [linkAlert, toggleLinkAlert] = useToggle();\n  const shop = useShop();\n  const isDesktop = useDesktop();\n  const due = useNonConfirmedAmount();\n  const [paymentLinkFormOpen, togglePaymentLinkForm] = useToggle();\n  const isCustomDomain = useIsOnCustomDomain();\n  const domain = useCustomDomain();\n  const history = useHistory();\n  const url = `https://${isCustomDomain ? domain : 'mywindo.shop'}/pay/${link === null || link === void 0 ? void 0 : link._id}`;\n\n  const generatePaymentLink = async values => {\n    const mode = values.modes.find(x => x.enabled);\n\n    if (!mode) {\n      SnackBar.showError('Please select at least one mode');\n      return;\n    }\n\n    try {\n      Loader.show();\n      setLink(await Factory.generatePaymentLink({\n        orderId: order === null || order === void 0 ? void 0 : order._id,\n        modes: marshalData(values)\n      }));\n      toggleLinkAlert();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const copyToClipboard = () => {\n    DeviceUtils.copy(url);\n    SnackBar.show('Shop URL Copied !!!');\n  };\n\n  const shareToUser = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    share(`Hello\n    Your order tracking link for order id #${order === null || order === void 0 ? void 0 : order.orderId} is\n\n    url\n\n    Thank you\n    ${shop === null || shop === void 0 ? void 0 : shop.name}`);\n  };\n\n  const Component = isDesktop ? SideDrawer : Drawer;\n\n  if (due === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.container, {\n      [styles.linkExists]: link\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, link ? /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('flexBetween', styles.shareSection),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Share payment link\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: editIcon,\n    alt: \"editIcon\",\n    onClick: togglePaymentLinkForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })) : null, link ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.shareLinkSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.linkbarContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LinkBar, {\n    url: url,\n    onCopy: copyToClipboard,\n    onClick: shareToUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('flexCenter', styles.btnContainer),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.generateIcon,\n    src: generateIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.text,\n    onClick: togglePaymentLinkForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Generate payment link\"))), /*#__PURE__*/React.createElement(Dialog, {\n    PaperProps: {\n      classes: {\n        root: styles.dialog\n      }\n    },\n    maxWidth: isDesktop ? 'xs' : 'md',\n    open: linkAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('flexEnd', styles.closeIcon),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    onClick: () => {\n      togglePaymentLinkForm();\n      toggleLinkAlert();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: closeIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.paymentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Your payment link as been created. You can share the payment link with your user.\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.sharePaymentHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"Share Payment Link\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.shareLinkSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.paymentLinkbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LinkBar, {\n    url: url,\n    onCopy: copyToClipboard,\n    onClick: shareToUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.paymentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, \"you can always share the payment link later in order detail screen\")), paymentLinkFormOpen && (((_getInitialValues = getInitialValues(shop, link)) === null || _getInitialValues === void 0 ? void 0 : (_getInitialValues$mod = _getInitialValues.modes) === null || _getInitialValues$mod === void 0 ? void 0 : _getInitialValues$mod.length) === 0 ? /*#__PURE__*/React.createElement(DeleteAlert, {\n    title: \"Enable at least one payment mode\",\n    onCancel: () => history.go(0),\n    primary: \"Payments\",\n    onDelete: () => history.replace('/payments'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Component, {\n    title: \"Generate Payment Link\",\n    backButton: true,\n    onClose: togglePaymentLinkForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    validationSchema: schema,\n    initialValues: getInitialValues(shop, link),\n    onSubmit: generatePaymentLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, ({\n    values,\n    submitForm\n  }) => {\n    var _values$modes;\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.paymentsContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 27\n      }\n    }, \"Enter the amount\"), /*#__PURE__*/React.createElement(FormikInput, {\n      variant: \"outlined\",\n      name: \"payable\",\n      type: \"text\",\n      label: \"Enter Amount\",\n      placeholder: \"e.g. INR 100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 27\n      }\n    }, \"Payment Mode\"), values === null || values === void 0 ? void 0 : (_values$modes = values.modes) === null || _values$modes === void 0 ? void 0 : _values$modes.map((payment, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: cx('flexBetween', styles.paymentCard),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 31\n      }\n    }, payment === null || payment === void 0 ? void 0 : payment.name), /*#__PURE__*/React.createElement(Switch, {\n      name: `modes[${index}].enabled`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 31\n      }\n    })))), isDesktop ? /*#__PURE__*/React.createElement(Button, {\n      fullWidth: true,\n      bordered: false,\n      label: \"Generate Payment Link\",\n      className: styles.button,\n      onClick: submitForm,\n      variant: \"outlined\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(FooterButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      fullWidth: true,\n      bordered: false,\n      label: \"Generate Payment Link\",\n      className: styles.button,\n      onClick: submitForm,\n      variant: \"outlined\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 29\n      }\n    }))));\n  }))));\n}\n\n_s(PaymentLink, \"XFyuRlSjBFHR216MIN6hGPNT2nc=\", false, function () {\n  return [useOrder, useToggle, useShop, useDesktop, useNonConfirmedAmount, useToggle, useIsOnCustomDomain, useCustomDomain, useHistory];\n});\n\n_c = PaymentLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentLink\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/orders/PaymentLink.jsx"],"names":["React","useState","useHistory","Formik","cx","Dialog","Button","Clickable","FormikInput","Switch","LinkBar","useCustomDomain","useDesktop","useIsOnCustomDomain","useShop","useNonConfirmedAmount","useOrder","useToggle","SnackBar","Loader","Factory","Drawer","SideDrawer","DeleteAlert","FooterButton","share","DeviceUtils","getInitialValues","marshalData","schema","styles","PaymentLink","order","link","setLink","paymentLink","linkAlert","toggleLinkAlert","shop","isDesktop","due","paymentLinkFormOpen","togglePaymentLinkForm","isCustomDomain","domain","history","url","_id","generatePaymentLink","values","mode","modes","find","x","enabled","showError","show","orderId","e","hide","copyToClipboard","copy","shareToUser","stopPropagation","preventDefault","name","Component","container","linkExists","shareSection","editIcon","shareLinkSection","linkbarContainer","btnContainer","generateIcon","text","classes","root","dialog","closeIcon","paymentText","sharePaymentHeading","paymentLinkbar","length","go","replace","submitForm","paymentsContainer","map","payment","index","paymentCard","button"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport cx from 'classnames';\nimport { Dialog } from '@material-ui/core';\nimport { Button, Clickable, FormikInput } from 'phoenix-components';\nimport { Switch } from 'phoenix-components/lib/formik';\nimport { LinkBar } from 'phoenix-components/lib/containers';\nimport editIcon from 'assets/overview/edit.svg';\nimport generateIcon from 'assets/logos/generate.svg';\nimport closeIcon from 'assets/images/orders/list/close.svg';\nimport {\n  useCustomDomain, useDesktop, useIsOnCustomDomain, useShop\n} from 'contexts';\nimport { useNonConfirmedAmount, useOrder } from 'contexts/orderContext';\nimport { useToggle } from 'hooks/common';\nimport SnackBar from 'services/snackbar';\nimport Loader from 'services/loader';\nimport { Factory } from 'api';\nimport { Drawer } from 'components/shared/Drawer';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { DeleteAlert } from 'components/shared/DeleteAlert';\nimport { FooterButton } from 'components/common/FooterButton';\nimport { share } from 'utils';\nimport DeviceUtils from 'utils/deviceUtils';\nimport { getInitialValues, marshalData, schema } from './paymentLinkUtils';\nimport styles from './PaymentLink.module.css';\n\nexport default function PaymentLink() {\n  const order = useOrder();\n  const [link, setLink] = useState(order?.paymentLink);\n  const [linkAlert, toggleLinkAlert] = useToggle();\n  const shop = useShop();\n  const isDesktop = useDesktop();\n  const due = useNonConfirmedAmount();\n  const [paymentLinkFormOpen, togglePaymentLinkForm] = useToggle();\n  const isCustomDomain = useIsOnCustomDomain();\n  const domain = useCustomDomain();\n  const history = useHistory();\n\n  const url = `https://${isCustomDomain ? domain : 'mywindo.shop'}/pay/${link?._id}`;\n\n  const generatePaymentLink = async (values) => {\n    const mode = values.modes.find(x => x.enabled);\n    if (!mode) {\n      SnackBar.showError('Please select at least one mode');\n      return;\n    }\n    try {\n      Loader.show();\n      setLink(await Factory.generatePaymentLink({\n        orderId: order?._id,\n        modes: marshalData(values)\n      }));\n      toggleLinkAlert();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const copyToClipboard = () => {\n    DeviceUtils.copy(url);\n    SnackBar.show('Shop URL Copied !!!');\n  };\n\n  const shareToUser = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    share(`Hello\n    Your order tracking link for order id #${order?.orderId} is\n\n    url\n\n    Thank you\n    ${shop?.name}`);\n  };\n\n  const Component = isDesktop ? SideDrawer : Drawer;\n\n  if (due === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className={cx(styles.container, { [styles.linkExists]: link })}>\n        {link ? (\n          <div className={cx('flexBetween', styles.shareSection)}>\n            <p>Share payment link</p>\n            <img src={editIcon} alt=\"editIcon\" onClick={togglePaymentLinkForm} />\n          </div>\n        ) : null}\n        {link ? (\n          <div className={styles.shareLinkSection}>\n            <div className={styles.linkbarContainer}>\n              <LinkBar url={url} onCopy={copyToClipboard} onClick={shareToUser} />\n            </div>\n          </div>\n        ) : (\n          <div className={cx('flexCenter', styles.btnContainer)}>\n            <img className={styles.generateIcon} src={generateIcon} alt=\"\" />\n            <p className={styles.text} onClick={togglePaymentLinkForm}>Generate payment link</p>\n          </div>\n        )}\n      </div>\n      <Dialog\n        PaperProps={{\n          classes: {\n            root: styles.dialog,\n          }\n        }}\n        maxWidth={isDesktop ? 'xs' : 'md'}\n        open={linkAlert}>\n        <div className={cx('flexEnd', styles.closeIcon)}>\n          <Clickable\n            onClick={() => {\n              togglePaymentLinkForm();\n              toggleLinkAlert();\n            }}>\n            <img src={closeIcon} alt=\"\" />\n          </Clickable>\n        </div>\n        <p className={styles.paymentText}>\n          Your payment link as been created. You can share the payment link with your user.\n        </p>\n        <p className={styles.sharePaymentHeading}>Share Payment Link</p>\n        <div className={styles.shareLinkSection}>\n          <div className={styles.paymentLinkbar}>\n            <LinkBar url={url} onCopy={copyToClipboard} onClick={shareToUser} />\n          </div>\n        </div>\n        <p className={styles.paymentText}>\n          you can always share the payment link later in order\n          detail screen\n        </p>\n      </Dialog>\n      {\n        paymentLinkFormOpen && (\n          getInitialValues(shop, link)?.modes?.length === 0 ? (\n            <DeleteAlert\n              title=\"Enable at least one payment mode\"\n              onCancel={() => history.go(0)}\n              primary=\"Payments\"\n              onDelete={() => history.replace('/payments')}\n            />\n          )\n            : (\n              <Component\n                title=\"Generate Payment Link\"\n                backButton\n                onClose={togglePaymentLinkForm}>\n                <Formik\n                  validationSchema={schema}\n                  initialValues={getInitialValues(shop, link)}\n                  onSubmit={generatePaymentLink}>\n                  {({\n                    values,\n                    submitForm,\n                  }) => (\n                    <>\n                      <div className={styles.paymentsContainer}>\n                        <div>\n                          <p>Enter the amount</p>\n                          <FormikInput\n                            variant=\"outlined\"\n                            name=\"payable\"\n                            type=\"text\"\n                            label=\"Enter Amount\"\n                            placeholder=\"e.g. INR 100\" />\n                          <p>Payment Mode</p>\n                          {values?.modes?.map((payment, index) => (\n                            <div key={index} className={cx('flexBetween', styles.paymentCard)}>\n                              <p>{payment?.name}</p>\n                              <Switch\n                                name={`modes[${index}].enabled`}\n                              />\n                            </div>\n                          ))}\n                        </div>\n                        {isDesktop ? (\n                          <Button\n                            fullWidth\n                            bordered={false}\n                            label=\"Generate Payment Link\"\n                            className={styles.button}\n                            onClick={submitForm}\n                            variant=\"outlined\"\n                            size=\"small\"\n                          />\n                        ) : (\n                          <FooterButton>\n                            <Button\n                              fullWidth\n                              bordered={false}\n                              label=\"Generate Payment Link\"\n                              className={styles.button}\n                              onClick={submitForm}\n                              variant=\"outlined\"\n                              size=\"small\"\n                            />\n                          </FooterButton>\n                        )}\n                      </div>\n                    </>\n                  )}\n                </Formik>\n              </Component>\n            )\n        )\n      }\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}