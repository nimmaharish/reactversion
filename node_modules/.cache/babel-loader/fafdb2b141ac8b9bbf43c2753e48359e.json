{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from 'react';\nimport SnackBar from \"../services/snackbar\";\nimport { User } from \"../api\";\nimport * as Sentry from '@sentry/react';\nexport function useUser() {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const refresh = useCallback(async () => {\n    if (loading) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const res = await User.getSeller();\n      Sentry.setUser({\n        username: res.sellerId.toUpperCase(),\n        email: res.email\n      });\n      setUser(res);\n    } catch (e) {\n      console.error(e);\n      SnackBar.show('something went wrong', 'error');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    refresh();\n  }, [refresh]);\n  return [user, refresh, loading];\n}\n\n_s(useUser, \"7QpsV4bN4TO/P21l4yhvvpJ0vwI=\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/hooks/user.js"],"names":["useCallback","useEffect","useState","SnackBar","User","Sentry","useUser","user","setUser","loading","setLoading","refresh","res","getSeller","username","sellerId","toUpperCase","email","e","console","error","show"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,QAAP;AACA,SAASC,IAAT;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMS,OAAO,GAAGX,WAAW,CAAC,YAAY;AACtC,QAAIS,OAAJ,EAAa;AACX;AACD;;AACD,QAAI;AACFC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAME,GAAG,GAAG,MAAMR,IAAI,CAACS,SAAL,EAAlB;AACAR,MAAAA,MAAM,CAACG,OAAP,CAAe;AACbM,QAAAA,QAAQ,EAAEF,GAAG,CAACG,QAAJ,CAAaC,WAAb,EADG;AAEbC,QAAAA,KAAK,EAAEL,GAAG,CAACK;AAFE,OAAf;AAIAT,MAAAA,OAAO,CAACI,GAAD,CAAP;AACD,KARD,CAQE,OAAOM,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACAf,MAAAA,QAAQ,CAACkB,IAAT,CAAc,sBAAd,EAAsC,OAAtC;AACD,KAXD,SAWU;AACRX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAlB0B,EAkBxB,EAlBwB,CAA3B;AAoBAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO;AACR,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,SAAO,CAACJ,IAAD,EAAOI,OAAP,EAAgBF,OAAhB,CAAP;AACD;;GA7BeH,O","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport SnackBar from 'services/snackbar';\nimport { User } from 'api';\nimport * as Sentry from '@sentry/react';\n\nexport function useUser() {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const refresh = useCallback(async () => {\n    if (loading) {\n      return;\n    }\n    try {\n      setLoading(true);\n      const res = await User.getSeller();\n      Sentry.setUser({\n        username: res.sellerId.toUpperCase(),\n        email: res.email,\n      });\n      setUser(res);\n    } catch (e) {\n      console.error(e);\n      SnackBar.show('something went wrong', 'error');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    refresh();\n  }, [refresh]);\n\n  return [user, refresh, loading];\n}\n"]},"metadata":{},"sourceType":"module"}