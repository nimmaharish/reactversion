{"ast":null,"code":"import { isPlatformSupported, isBrowser, now } from './common/utils';\nimport { patchAll } from './common/patching';\nimport { state } from './state';\nvar enabled = false;\nexport function bootstrap() {\n  if (isPlatformSupported()) {\n    patchAll();\n    bootstrapPerf();\n    state.bootstrapTime = now();\n    enabled = true;\n  } else if (isBrowser) {\n    console.log('[Elastic APM] platform is not supported!');\n  }\n\n  return enabled;\n}\nexport function bootstrapPerf() {\n  if (document.visibilityState === 'hidden') {\n    state.lastHiddenStart = 0;\n  }\n\n  window.addEventListener('visibilitychange', function () {\n    if (document.visibilityState === 'hidden') {\n      state.lastHiddenStart = performance.now();\n    }\n  }, {\n    capture: true\n  });\n}","map":{"version":3,"sources":["/home/harish/windo/phoenix/node_modules/@elastic/apm-rum-core/dist/es/bootstrap.js"],"names":["isPlatformSupported","isBrowser","now","patchAll","state","enabled","bootstrap","bootstrapPerf","bootstrapTime","console","log","document","visibilityState","lastHiddenStart","window","addEventListener","performance","capture"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,SAA9B,EAAyCC,GAAzC,QAAoD,gBAApD;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,IAAIC,OAAO,GAAG,KAAd;AACA,OAAO,SAASC,SAAT,GAAqB;AAC1B,MAAIN,mBAAmB,EAAvB,EAA2B;AACzBG,IAAAA,QAAQ;AACRI,IAAAA,aAAa;AACbH,IAAAA,KAAK,CAACI,aAAN,GAAsBN,GAAG,EAAzB;AACAG,IAAAA,OAAO,GAAG,IAAV;AACD,GALD,MAKO,IAAIJ,SAAJ,EAAe;AACpBQ,IAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACD;;AAED,SAAOL,OAAP;AACD;AACD,OAAO,SAASE,aAAT,GAAyB;AAC9B,MAAII,QAAQ,CAACC,eAAT,KAA6B,QAAjC,EAA2C;AACzCR,IAAAA,KAAK,CAACS,eAAN,GAAwB,CAAxB;AACD;;AAEDC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,kBAAxB,EAA4C,YAAY;AACtD,QAAIJ,QAAQ,CAACC,eAAT,KAA6B,QAAjC,EAA2C;AACzCR,MAAAA,KAAK,CAACS,eAAN,GAAwBG,WAAW,CAACd,GAAZ,EAAxB;AACD;AACF,GAJD,EAIG;AACDe,IAAAA,OAAO,EAAE;AADR,GAJH;AAOD","sourcesContent":["import { isPlatformSupported, isBrowser, now } from './common/utils';\nimport { patchAll } from './common/patching';\nimport { state } from './state';\nvar enabled = false;\nexport function bootstrap() {\n  if (isPlatformSupported()) {\n    patchAll();\n    bootstrapPerf();\n    state.bootstrapTime = now();\n    enabled = true;\n  } else if (isBrowser) {\n    console.log('[Elastic APM] platform is not supported!');\n  }\n\n  return enabled;\n}\nexport function bootstrapPerf() {\n  if (document.visibilityState === 'hidden') {\n    state.lastHiddenStart = 0;\n  }\n\n  window.addEventListener('visibilitychange', function () {\n    if (document.visibilityState === 'hidden') {\n      state.lastHiddenStart = performance.now();\n    }\n  }, {\n    capture: true\n  });\n}"]},"metadata":{},"sourceType":"module"}