{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/analytics/ViewsChart.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Bar, BarChart, Legend, Tooltip, XAxis, YAxis } from 'recharts';\nimport React from 'react';\nimport _ from 'lodash';\nimport { useDesktop } from \"../../contexts\";\nimport moment from 'moment';\n\nconst viewsToList = (users, dates) => _.sortBy(dates.map(date => {\n  var _users$date, _users$date$shop, _users$date2, _users$date2$product;\n\n  return {\n    date: moment(date),\n    shop: ((_users$date = users[date]) === null || _users$date === void 0 ? void 0 : (_users$date$shop = _users$date.shop) === null || _users$date$shop === void 0 ? void 0 : _users$date$shop.screenPageViews) || 0,\n    product: ((_users$date2 = users[date]) === null || _users$date2 === void 0 ? void 0 : (_users$date2$product = _users$date2.product) === null || _users$date2$product === void 0 ? void 0 : _users$date2$product.screenPageViews) || 0\n  };\n}), 'date').map(x => ({ ...x,\n  date: x.date.format('DD/MMM')\n}));\n\nexport function ViewsChart({\n  users,\n  dates,\n  syncId\n}) {\n  _s();\n\n  const list = viewsToList(users, dates);\n  const isDesktop = useDesktop();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isDesktop && /*#__PURE__*/React.createElement(BarChart, {\n    width: window.screen.width - 370,\n    height: window.screen.height * 0.3,\n    data: list,\n    syncId: syncId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    width: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    verticalAlign: \"top\",\n    height: 36,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    name: \"Shop Views\",\n    type: \"monotone\",\n    dataKey: \"shop\",\n    fill: \"#7cb5ec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    name: \"Product Views\",\n    type: \"monotone\",\n    dataKey: \"product\",\n    fill: \"#66bb6a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })), !isDesktop && /*#__PURE__*/React.createElement(BarChart, {\n    width: window.screen.width - 30,\n    height: window.screen.height * 0.3,\n    data: list,\n    syncId: syncId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    width: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    verticalAlign: \"top\",\n    height: 36,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    name: \"Shop Views\",\n    type: \"monotone\",\n    dataKey: \"shop\",\n    fill: \"#7cb5ec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    name: \"Product Views\",\n    type: \"monotone\",\n    dataKey: \"product\",\n    fill: \"#66bb6a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })));\n}\n\n_s(ViewsChart, \"3l4y9eCI8Q4nOrq3yDi/AmhuQWU=\", false, function () {\n  return [useDesktop];\n});\n\n_c = ViewsChart;\nViewsChart.propTypes = {\n  users: PropTypes.object.isRequired,\n  dates: PropTypes.array.isRequired,\n  syncId: PropTypes.string\n};\nViewsChart.defaultProps = {\n  syncId: undefined\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewsChart\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/analytics/ViewsChart.jsx"],"names":["PropTypes","Bar","BarChart","Legend","Tooltip","XAxis","YAxis","React","_","useDesktop","moment","viewsToList","users","dates","sortBy","map","date","shop","screenPageViews","product","x","format","ViewsChart","syncId","list","isDesktop","window","screen","width","height","propTypes","object","isRequired","array","string","defaultProps","undefined"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport {\n  Bar, BarChart, Legend, Tooltip, XAxis, YAxis\n} from 'recharts';\nimport React from 'react';\nimport _ from 'lodash';\nimport { useDesktop } from 'contexts';\nimport moment from 'moment';\n\nconst viewsToList = (users, dates) => _.sortBy(dates.map(date => ({\n  date: moment(date),\n  shop: (users[date]?.shop?.screenPageViews || 0),\n  product: (users[date]?.product?.screenPageViews || 0),\n})), 'date')\n  .map(x => ({\n    ...x,\n    date: x.date.format('DD/MMM')\n  }));\n\nexport function ViewsChart({\n  users,\n  dates,\n  syncId\n}) {\n  const list = viewsToList(users, dates);\n  const isDesktop = useDesktop();\n\n  return (\n    <>\n      {isDesktop && (\n        <BarChart\n          width={window.screen.width - 370}\n          height={window.screen.height * 0.3}\n          data={list}\n          syncId={syncId}\n        >\n          <XAxis dataKey=\"date\" />\n          <YAxis width={25} />\n          <Tooltip />\n          <Legend verticalAlign=\"top\" height={36} />\n          <Bar name=\"Shop Views\" type=\"monotone\" dataKey=\"shop\" fill=\"#7cb5ec\" />\n          <Bar name=\"Product Views\" type=\"monotone\" dataKey=\"product\" fill=\"#66bb6a\" />\n        </BarChart>\n      )}\n      {!isDesktop && (\n        <BarChart\n          width={window.screen.width - 30}\n          height={window.screen.height * 0.3}\n          data={list}\n          syncId={syncId}\n        >\n          <XAxis dataKey=\"date\" />\n          <YAxis width={25} />\n          <Tooltip />\n          <Legend verticalAlign=\"top\" height={36} />\n          <Bar name=\"Shop Views\" type=\"monotone\" dataKey=\"shop\" fill=\"#7cb5ec\" />\n          <Bar name=\"Product Views\" type=\"monotone\" dataKey=\"product\" fill=\"#66bb6a\" />\n        </BarChart>\n      )}\n    </>\n\n  );\n}\n\nViewsChart.propTypes = {\n  users: PropTypes.object.isRequired,\n  dates: PropTypes.array.isRequired,\n  syncId: PropTypes.string,\n};\n\nViewsChart.defaultProps = {\n  syncId: undefined,\n};\n"]},"metadata":{},"sourceType":"module"}