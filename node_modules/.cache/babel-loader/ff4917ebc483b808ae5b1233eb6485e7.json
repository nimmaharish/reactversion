{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/profile/shippingModes/ShippingModes.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Drawer } from \"../../../components/shared/Drawer\";\nimport { Clickable } from 'phoenix-components';\nimport { Formik } from 'formik';\nimport { Becca } from \"../../../api\";\nimport Loader from \"../../../services/loader\";\nimport SnackBar from \"../../../services/snackbar\";\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useRefreshShop, useShop } from \"../../../contexts\";\nimport { useDesktop } from \"../../../contexts\";\nimport { SideDrawer } from \"../../../components/shared/SideDrawer\";\nimport { useToggle } from \"../../../hooks/common\";\nimport cx from 'classnames';\nimport plusIcon from \"../../../assets/v2/orders/plus.svg\";\nimport { getInitialValues, schema } from \"./utils\";\nimport Card from \"./Card\";\nimport styles from \"./ShippingModes.module.css\";\nimport { Form } from \"./Form\";\n\nfunction ShippingModes() {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const {\n    delivery: {\n      shippingModes\n    }\n  } = useShop();\n  const refresh = useRefreshShop();\n  const isDesktop = useDesktop();\n  const [openForm, toggleForm] = useToggle(false);\n  const [index, setIndex] = useState(null);\n\n  const onSubmit = async values => {\n    try {\n      var _location$state;\n\n      Loader.show();\n      await Becca.updateShop({\n        shippingModes: values\n      });\n      SnackBar.show('Shipping modes updated successfully', 'success');\n      refresh();\n\n      if (location !== null && location !== void 0 && (_location$state = location.state) !== null && _location$state !== void 0 && _location$state.redirectTo) {\n        history.push(location.state.redirectTo);\n      }\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const Component = isDesktop ? SideDrawer : Drawer;\n\n  const onClose = () => {\n    history.goBack();\n  };\n\n  const onEdit = idx => {\n    toggleForm();\n    setIndex(idx);\n  };\n\n  const props = !isDesktop ? {\n    title: 'Shipping Modes',\n    onClose,\n    className: styles.title\n  } : {\n    title: 'Shipping Modes',\n    className: styles.desktopContainer,\n    onClose,\n    backButton: true\n  };\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: schema,\n      initialValues: getInitialValues(shippingModes),\n      onSubmit: onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, ({\n      values\n    }) => {\n      var _values$custom;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: styles.modesText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, \"Choose Shipping Modes\"), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.box,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        key: \"delivery\",\n        path: \"delivery\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Card, {\n        key: \"pickup\",\n        path: \"pickup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }), values === null || values === void 0 ? void 0 : (_values$custom = values.custom) === null || _values$custom === void 0 ? void 0 : _values$custom.map((item, idx) => /*#__PURE__*/React.createElement(Card, {\n        onEdit: onEdit,\n        idx: idx,\n        path: `custom[${idx}]`,\n        type: \"custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Clickable, {\n        className: cx(styles.marginTop, styles.customBox, styles.w100),\n        onClick: () => {\n          setIndex(null);\n          toggleForm();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: cx(styles.flex),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, \"Add Custom\", /*#__PURE__*/React.createElement(\"img\", {\n        src: plusIcon,\n        alt: \"plus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 19\n        }\n      })))), openForm && /*#__PURE__*/React.createElement(Form, {\n        onClose: toggleForm,\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }));\n    }))\n  );\n}\n\n_s(ShippingModes, \"FIPmQH24lnv2PpTH5BIsYP+x/ik=\", false, function () {\n  return [useHistory, useLocation, useShop, useRefreshShop, useDesktop, useToggle];\n});\n\n_c = ShippingModes;\nexport default ShippingModes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingModes\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/shippingModes/ShippingModes.jsx"],"names":["React","useState","Drawer","Clickable","Formik","Becca","Loader","SnackBar","useHistory","useLocation","useRefreshShop","useShop","useDesktop","SideDrawer","useToggle","cx","getInitialValues","schema","Card","styles","Form","ShippingModes","history","location","delivery","shippingModes","refresh","isDesktop","openForm","toggleForm","index","setIndex","onSubmit","values","show","updateShop","state","redirectTo","push","e","showError","hide","Component","onClose","goBack","onEdit","idx","props","title","className","desktopContainer","backButton","container","modesText","box","custom","map","item","marginTop","customBox","w100","flex","plusIcon"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Drawer } from 'components/shared/Drawer';\nimport { Clickable } from 'phoenix-components';\nimport { Formik } from 'formik';\nimport { Becca } from 'api';\nimport Loader from 'services/loader';\nimport SnackBar from 'services/snackbar';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useRefreshShop, useShop } from 'contexts';\nimport { useDesktop } from 'contexts';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { useToggle } from 'hooks/common';\nimport cx from 'classnames';\nimport plusIcon from 'assets/v2/orders/plus.svg';\nimport { getInitialValues, schema } from './utils';\nimport Card from './Card';\nimport styles from './ShippingModes.module.css';\nimport { Form } from './Form';\n\nfunction ShippingModes() {\n  const history = useHistory();\n  const location = useLocation();\n  const {\n    delivery: { shippingModes },\n  } = useShop();\n  const refresh = useRefreshShop();\n  const isDesktop = useDesktop();\n  const [openForm, toggleForm] = useToggle(false);\n  const [index, setIndex] = useState(null);\n\n  const onSubmit = async (values) => {\n    try {\n      Loader.show();\n      await Becca.updateShop({\n        shippingModes: values,\n      });\n      SnackBar.show('Shipping modes updated successfully', 'success');\n      refresh();\n      if (location?.state?.redirectTo) {\n        history.push(location.state.redirectTo);\n      }\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const Component = isDesktop ? SideDrawer : Drawer;\n\n  const onClose = () => {\n    history.goBack();\n  };\n\n  const onEdit = (idx) => {\n    toggleForm();\n    setIndex(idx);\n  };\n\n  const props = !isDesktop ? {\n    title: 'Shipping Modes',\n    onClose,\n    className: styles.title\n  } : {\n    title: 'Shipping Modes',\n    className: styles.desktopContainer,\n    onClose,\n    backButton: true\n  };\n\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <Component {...props}>\n      <Formik\n        validationSchema={schema}\n        initialValues={getInitialValues(shippingModes)}\n        onSubmit={onSubmit}\n      >\n        {({ values }) => (\n          <div className={styles.container}>\n            <p className={styles.modesText}>Choose Shipping Modes</p>\n            <>\n              <div className={styles.box}>\n                <Card\n                  key=\"delivery\"\n                  path=\"delivery\"\n                />\n                <Card\n                  key=\"pickup\"\n                  path=\"pickup\"\n                />\n                {(values?.custom?.map((item, idx) => (\n                  <Card\n                    onEdit={onEdit}\n                    idx={idx}\n                    path={`custom[${idx}]`}\n                    type=\"custom\"\n                  />\n                )))}\n              </div>\n              <Clickable\n                className={cx(styles.marginTop, styles.customBox, styles.w100)}\n                onClick={() => {\n                  setIndex(null);\n                  toggleForm();\n                }}\n              >\n                <div className={cx(styles.flex)}>\n                  Add Custom\n                  <img\n                    src={plusIcon}\n                    alt=\"plus\"\n                  />\n                </div>\n              </Clickable>\n            </>\n            {openForm && (\n              <Form\n                onClose={toggleForm}\n                index={index}\n              />\n            )}\n          </div>\n        )}\n      </Formik>\n    </Component>\n  );\n}\n\nexport default ShippingModes;\n"]},"metadata":{},"sourceType":"module"}