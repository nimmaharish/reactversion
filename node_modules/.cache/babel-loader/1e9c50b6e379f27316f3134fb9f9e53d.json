{"ast":null,"code":"import moment from 'moment';\nimport momentTz from 'moment-timezone';\nimport { orderBy } from 'lodash';\nconst allTimeZones = ['Europe/Andorra', 'Asia/Dubai', 'Asia/Kabul', 'Europe/Tirane', 'Asia/Yerevan', 'Antarctica/Casey', 'Antarctica/Davis', 'Antarctica/DumontDUrville', 'Antarctica/Mawson', 'Antarctica/Palmer', 'Antarctica/Rothera', 'Antarctica/Syowa', 'Antarctica/Troll', 'Antarctica/Vostok', 'America/Argentina/Buenos_Aires', 'America/Argentina/Cordoba', 'America/Argentina/Salta', 'America/Argentina/Jujuy', 'America/Argentina/Tucuman', 'America/Argentina/Catamarca', 'America/Argentina/La_Rioja', 'America/Argentina/San_Juan', 'America/Argentina/Mendoza', 'America/Argentina/San_Luis', 'America/Argentina/Rio_Gallegos', 'America/Argentina/Ushuaia', 'Pacific/Pago_Pago', 'Europe/Vienna', 'Australia/Lord_Howe', 'Antarctica/Macquarie', 'Australia/Hobart', 'Australia/Currie', 'Australia/Melbourne', 'Australia/Sydney', 'Australia/Broken_Hill', 'Australia/Brisbane', 'Australia/Lindeman', 'Australia/Adelaide', 'Australia/Darwin', 'Australia/Perth', 'Australia/Eucla', 'Asia/Baku', 'America/Barbados', 'Asia/Dhaka', 'Europe/Brussels', 'Europe/Sofia', 'Atlantic/Bermuda', 'Asia/Brunei', 'America/La_Paz', 'America/Noronha', 'America/Belem', 'America/Fortaleza', 'America/Recife', 'America/Araguaina', 'America/Maceio', 'America/Bahia', 'America/Sao_Paulo', 'America/Campo_Grande', 'America/Cuiaba', 'America/Santarem', 'America/Porto_Velho', 'America/Boa_Vista', 'America/Manaus', 'America/Eirunepe', 'America/Rio_Branco', 'America/Nassau', 'Asia/Thimphu', 'Europe/Minsk', 'America/Belize', 'America/St_Johns', 'America/Halifax', 'America/Glace_Bay', 'America/Moncton', 'America/Goose_Bay', 'America/Blanc-Sablon', 'America/Toronto', 'America/Nipigon', 'America/Thunder_Bay', 'America/Iqaluit', 'America/Pangnirtung', 'America/Atikokan', 'America/Winnipeg', 'America/Rainy_River', 'America/Resolute', 'America/Rankin_Inlet', 'America/Regina', 'America/Swift_Current', 'America/Edmonton', 'America/Cambridge_Bay', 'America/Yellowknife', 'America/Inuvik', 'America/Creston', 'America/Dawson_Creek', 'America/Fort_Nelson', 'America/Vancouver', 'America/Whitehorse', 'America/Dawson', 'Indian/Cocos', 'Europe/Zurich', 'Africa/Abidjan', 'Pacific/Rarotonga', 'America/Santiago', 'America/Punta_Arenas', 'Pacific/Easter', 'Asia/Shanghai', 'Asia/Urumqi', 'America/Bogota', 'America/Costa_Rica', 'America/Havana', 'Atlantic/Cape_Verde', 'America/Curacao', 'Indian/Christmas', 'Asia/Nicosia', 'Asia/Famagusta', 'Europe/Prague', 'Europe/Berlin', 'Europe/Copenhagen', 'America/Santo_Domingo', 'Africa/Algiers', 'America/Guayaquil', 'Pacific/Galapagos', 'Europe/Tallinn', 'Africa/Cairo', 'Africa/El_Aaiun', 'Europe/Madrid', 'Africa/Ceuta', 'Atlantic/Canary', 'Europe/Helsinki', 'Pacific/Fiji', 'Atlantic/Stanley', 'Pacific/Chuuk', 'Pacific/Pohnpei', 'Pacific/Kosrae', 'Atlantic/Faroe', 'Europe/Paris', 'Europe/London', 'Asia/Tbilisi', 'America/Cayenne', 'Africa/Accra', 'Europe/Gibraltar', 'America/Godthab', 'America/Danmarkshavn', 'America/Scoresbysund', 'America/Thule', 'Europe/Athens', 'Atlantic/South_Georgia', 'America/Guatemala', 'Pacific/Guam', 'Africa/Bissau', 'America/Guyana', 'Asia/Hong_Kong', 'America/Tegucigalpa', 'America/Port-au-Prince', 'Europe/Budapest', 'Asia/Jakarta', 'Asia/Pontianak', 'Asia/Makassar', 'Asia/Jayapura', 'Europe/Dublin', 'Asia/Jerusalem', 'Asia/Kolkata', 'Indian/Chagos', 'Asia/Baghdad', 'Asia/Tehran', 'Atlantic/Reykjavik', 'Europe/Rome', 'America/Jamaica', 'Asia/Amman', 'Asia/Tokyo', 'Africa/Nairobi', 'Asia/Bishkek', 'Pacific/Tarawa', 'Pacific/Enderbury', 'Pacific/Kiritimati', 'Asia/Pyongyang', 'Asia/Seoul', 'Asia/Almaty', 'Asia/Qyzylorda', 'Asia/Qostanay', 'Asia/Aqtobe', 'Asia/Aqtau', 'Asia/Atyrau', 'Asia/Oral', 'Asia/Beirut', 'Asia/Colombo', 'Africa/Monrovia', 'Europe/Vilnius', 'Europe/Luxembourg', 'Europe/Riga', 'Africa/Tripoli', 'Africa/Casablanca', 'Europe/Monaco', 'Europe/Chisinau', 'Pacific/Majuro', 'Pacific/Kwajalein', 'Asia/Yangon', 'Asia/Ulaanbaatar', 'Asia/Hovd', 'Asia/Choibalsan', 'Asia/Macau', 'America/Martinique', 'Europe/Malta', 'Indian/Mauritius', 'Indian/Maldives', 'America/Mexico_City', 'America/Cancun', 'America/Merida', 'America/Monterrey', 'America/Matamoros', 'America/Mazatlan', 'America/Chihuahua', 'America/Ojinaga', 'America/Hermosillo', 'America/Tijuana', 'America/Bahia_Banderas', 'Asia/Kuala_Lumpur', 'Asia/Kuching', 'Africa/Maputo', 'Africa/Windhoek', 'Pacific/Noumea', 'Pacific/Norfolk', 'Africa/Lagos', 'America/Managua', 'Europe/Amsterdam', 'Europe/Oslo', 'Asia/Kathmandu', 'Pacific/Nauru', 'Pacific/Niue', 'Pacific/Auckland', 'Pacific/Chatham', 'America/Panama', 'America/Lima', 'Pacific/Tahiti', 'Pacific/Marquesas', 'Pacific/Gambier', 'Pacific/Port_Moresby', 'Pacific/Bougainville', 'Asia/Manila', 'Asia/Karachi', 'Europe/Warsaw', 'America/Miquelon', 'Pacific/Pitcairn', 'America/Puerto_Rico', 'Asia/Gaza', 'Asia/Hebron', 'Europe/Lisbon', 'Atlantic/Madeira', 'Atlantic/Azores', 'Pacific/Palau', 'America/Asuncion', 'Asia/Qatar', 'Indian/Reunion', 'Europe/Bucharest', 'Europe/Belgrade', 'Europe/Kaliningrad', 'Europe/Moscow', 'Europe/Simferopol', 'Europe/Kirov', 'Europe/Astrakhan', 'Europe/Volgograd', 'Europe/Saratov', 'Europe/Ulyanovsk', 'Europe/Samara', 'Asia/Yekaterinburg', 'Asia/Omsk', 'Asia/Novosibirsk', 'Asia/Barnaul', 'Asia/Tomsk', 'Asia/Novokuznetsk', 'Asia/Krasnoyarsk', 'Asia/Irkutsk', 'Asia/Chita', 'Asia/Yakutsk', 'Asia/Khandyga', 'Asia/Vladivostok', 'Asia/Ust-Nera', 'Asia/Magadan', 'Asia/Sakhalin', 'Asia/Srednekolymsk', 'Asia/Kamchatka', 'Asia/Anadyr', 'Asia/Riyadh', 'Pacific/Guadalcanal', 'Indian/Mahe', 'Africa/Khartoum', 'Europe/Stockholm', 'Asia/Singapore', 'America/Paramaribo', 'Africa/Juba', 'Africa/Sao_Tome', 'America/El_Salvador', 'Asia/Damascus', 'America/Grand_Turk', 'Africa/Ndjamena', 'Indian/Kerguelen', 'Asia/Bangkok', 'Asia/Dushanbe', 'Pacific/Fakaofo', 'Asia/Dili', 'Asia/Ashgabat', 'Africa/Tunis', 'Pacific/Tongatapu', 'Europe/Istanbul', 'America/Port_of_Spain', 'Pacific/Funafuti', 'Asia/Taipei', 'Europe/Kiev', 'Europe/Uzhgorod', 'Europe/Zaporozhye', 'Pacific/Wake', 'America/New_York', 'America/Detroit', 'America/Kentucky/Louisville', 'America/Kentucky/Monticello', 'America/Indiana/Indianapolis', 'America/Indiana/Vincennes', 'America/Indiana/Winamac', 'America/Indiana/Marengo', 'America/Indiana/Petersburg', 'America/Indiana/Vevay', 'America/Chicago', 'America/Indiana/Tell_City', 'America/Indiana/Knox', 'America/Menominee', 'America/North_Dakota/Center', 'America/North_Dakota/New_Salem', 'America/North_Dakota/Beulah', 'America/Denver', 'America/Boise', 'America/Phoenix', 'America/Los_Angeles', 'America/Anchorage', 'America/Juneau', 'America/Sitka', 'America/Metlakatla', 'America/Yakutat', 'America/Nome', 'America/Adak', 'Pacific/Honolulu', 'America/Montevideo', 'Asia/Samarkand', 'Asia/Tashkent', 'America/Caracas', 'Asia/Ho_Chi_Minh', 'Pacific/Efate', 'Pacific/Wallis', 'Pacific/Apia', 'Africa/Johannesburg'];\nexport const typeOptions = orderBy(allTimeZones.map(x => {\n  const offset = momentTz().tz(x).format('Z');\n  return {\n    label: `${x} ${offset}`,\n    utc: `${offset}`\n  };\n}), ['label'], ['asc']);\n\nconst getAcceptOrderValue = (item = {}) => {\n  const {\n    acceptOrders = true\n  } = item;\n  return acceptOrders;\n};\n\nexport const getInitialValues = (values = {}) => {\n  var _values$storeTimings, _values$storeTimings2, _values$storeTimings3, _values$storeTimings4, _values$storeTimings5, _values$storeTimings6, _values$storeTimings7, _values$storeTimings8, _values$storeTimings9, _values$storeTimings10, _values$storeTimings11, _values$storeTimings12, _values$storeTimings13, _values$storeTimings14, _values$storeTimings15, _values$storeTimings16, _values$storeTimings17, _values$storeTimings18, _values$storeTimings19, _values$storeTimings20, _values$storeTimings21, _values$storeTimings22, _values$storeTimings23, _values$storeTimings24, _values$storeTimings25, _values$storeTimings26, _values$storeTimings27, _values$storeTimings28, _values$storeTimings29, _values$storeTimings30, _values$storeTimings31, _values$storeTimings32, _values$storeTimings33, _values$storeTimings34, _values$storeTimings35, _values$storeTimings36, _values$storeTimings37, _values$storeTimings38, _values$storeTimings39, _values$storeTimings40, _values$storeTimings41, _values$storeTimings42, _values$storeTimings43, _values$storeTimings44, _values$storeTimings45, _values$storeTimings46, _values$storeTimings47, _values$storeTimings48, _values$storeTimings49;\n\n  return {\n    storeTimings: {\n      sunday: {\n        acceptOrders: getAcceptOrderValue(values === null || values === void 0 ? void 0 : (_values$storeTimings = values.storeTimings) === null || _values$storeTimings === void 0 ? void 0 : _values$storeTimings.sunday),\n        opensAt: (values === null || values === void 0 ? void 0 : (_values$storeTimings2 = values.storeTimings) === null || _values$storeTimings2 === void 0 ? void 0 : (_values$storeTimings3 = _values$storeTimings2.sunday) === null || _values$storeTimings3 === void 0 ? void 0 : _values$storeTimings3.opensAt) || '00:00',\n        closesAt: (values === null || values === void 0 ? void 0 : (_values$storeTimings4 = values.storeTimings) === null || _values$storeTimings4 === void 0 ? void 0 : (_values$storeTimings5 = _values$storeTimings4.sunday) === null || _values$storeTimings5 === void 0 ? void 0 : _values$storeTimings5.closesAt) || '24:00',\n        status: (values === null || values === void 0 ? void 0 : (_values$storeTimings6 = values.storeTimings) === null || _values$storeTimings6 === void 0 ? void 0 : (_values$storeTimings7 = _values$storeTimings6.sunday) === null || _values$storeTimings7 === void 0 ? void 0 : _values$storeTimings7.status) || 'live'\n      },\n      monday: {\n        acceptOrders: getAcceptOrderValue(values === null || values === void 0 ? void 0 : (_values$storeTimings8 = values.storeTimings) === null || _values$storeTimings8 === void 0 ? void 0 : _values$storeTimings8.monday),\n        opensAt: (values === null || values === void 0 ? void 0 : (_values$storeTimings9 = values.storeTimings) === null || _values$storeTimings9 === void 0 ? void 0 : (_values$storeTimings10 = _values$storeTimings9.monday) === null || _values$storeTimings10 === void 0 ? void 0 : _values$storeTimings10.opensAt) || '00:00',\n        closesAt: (values === null || values === void 0 ? void 0 : (_values$storeTimings11 = values.storeTimings) === null || _values$storeTimings11 === void 0 ? void 0 : (_values$storeTimings12 = _values$storeTimings11.monday) === null || _values$storeTimings12 === void 0 ? void 0 : _values$storeTimings12.closesAt) || '24:00',\n        status: (values === null || values === void 0 ? void 0 : (_values$storeTimings13 = values.storeTimings) === null || _values$storeTimings13 === void 0 ? void 0 : (_values$storeTimings14 = _values$storeTimings13.monday) === null || _values$storeTimings14 === void 0 ? void 0 : _values$storeTimings14.status) || 'live'\n      },\n      tuesday: {\n        acceptOrders: getAcceptOrderValue(values === null || values === void 0 ? void 0 : (_values$storeTimings15 = values.storeTimings) === null || _values$storeTimings15 === void 0 ? void 0 : _values$storeTimings15.tuesday),\n        opensAt: (values === null || values === void 0 ? void 0 : (_values$storeTimings16 = values.storeTimings) === null || _values$storeTimings16 === void 0 ? void 0 : (_values$storeTimings17 = _values$storeTimings16.tuesday) === null || _values$storeTimings17 === void 0 ? void 0 : _values$storeTimings17.opensAt) || '00:00',\n        closesAt: (values === null || values === void 0 ? void 0 : (_values$storeTimings18 = values.storeTimings) === null || _values$storeTimings18 === void 0 ? void 0 : (_values$storeTimings19 = _values$storeTimings18.tuesday) === null || _values$storeTimings19 === void 0 ? void 0 : _values$storeTimings19.closesAt) || '24:00',\n        status: (values === null || values === void 0 ? void 0 : (_values$storeTimings20 = values.storeTimings) === null || _values$storeTimings20 === void 0 ? void 0 : (_values$storeTimings21 = _values$storeTimings20.tuesday) === null || _values$storeTimings21 === void 0 ? void 0 : _values$storeTimings21.status) || 'live'\n      },\n      wednesday: {\n        acceptOrders: getAcceptOrderValue(values === null || values === void 0 ? void 0 : (_values$storeTimings22 = values.storeTimings) === null || _values$storeTimings22 === void 0 ? void 0 : _values$storeTimings22.wednesday),\n        opensAt: (values === null || values === void 0 ? void 0 : (_values$storeTimings23 = values.storeTimings) === null || _values$storeTimings23 === void 0 ? void 0 : (_values$storeTimings24 = _values$storeTimings23.wednesday) === null || _values$storeTimings24 === void 0 ? void 0 : _values$storeTimings24.opensAt) || '00:00',\n        closesAt: (values === null || values === void 0 ? void 0 : (_values$storeTimings25 = values.storeTimings) === null || _values$storeTimings25 === void 0 ? void 0 : (_values$storeTimings26 = _values$storeTimings25.wednesday) === null || _values$storeTimings26 === void 0 ? void 0 : _values$storeTimings26.closesAt) || '24:00',\n        status: (values === null || values === void 0 ? void 0 : (_values$storeTimings27 = values.storeTimings) === null || _values$storeTimings27 === void 0 ? void 0 : (_values$storeTimings28 = _values$storeTimings27.wednesday) === null || _values$storeTimings28 === void 0 ? void 0 : _values$storeTimings28.status) || 'live'\n      },\n      thursday: {\n        acceptOrders: getAcceptOrderValue(values === null || values === void 0 ? void 0 : (_values$storeTimings29 = values.storeTimings) === null || _values$storeTimings29 === void 0 ? void 0 : _values$storeTimings29.thursday),\n        opensAt: (values === null || values === void 0 ? void 0 : (_values$storeTimings30 = values.storeTimings) === null || _values$storeTimings30 === void 0 ? void 0 : (_values$storeTimings31 = _values$storeTimings30.thursday) === null || _values$storeTimings31 === void 0 ? void 0 : _values$storeTimings31.opensAt) || '00:00',\n        closesAt: (values === null || values === void 0 ? void 0 : (_values$storeTimings32 = values.storeTimings) === null || _values$storeTimings32 === void 0 ? void 0 : (_values$storeTimings33 = _values$storeTimings32.thursday) === null || _values$storeTimings33 === void 0 ? void 0 : _values$storeTimings33.closesAt) || '24:00',\n        status: (values === null || values === void 0 ? void 0 : (_values$storeTimings34 = values.storeTimings) === null || _values$storeTimings34 === void 0 ? void 0 : (_values$storeTimings35 = _values$storeTimings34.thursday) === null || _values$storeTimings35 === void 0 ? void 0 : _values$storeTimings35.status) || 'live'\n      },\n      friday: {\n        acceptOrders: getAcceptOrderValue(values === null || values === void 0 ? void 0 : (_values$storeTimings36 = values.storeTimings) === null || _values$storeTimings36 === void 0 ? void 0 : _values$storeTimings36.friday),\n        opensAt: (values === null || values === void 0 ? void 0 : (_values$storeTimings37 = values.storeTimings) === null || _values$storeTimings37 === void 0 ? void 0 : (_values$storeTimings38 = _values$storeTimings37.friday) === null || _values$storeTimings38 === void 0 ? void 0 : _values$storeTimings38.opensAt) || '00:00',\n        closesAt: (values === null || values === void 0 ? void 0 : (_values$storeTimings39 = values.storeTimings) === null || _values$storeTimings39 === void 0 ? void 0 : (_values$storeTimings40 = _values$storeTimings39.friday) === null || _values$storeTimings40 === void 0 ? void 0 : _values$storeTimings40.closesAt) || '24:00',\n        status: (values === null || values === void 0 ? void 0 : (_values$storeTimings41 = values.storeTimings) === null || _values$storeTimings41 === void 0 ? void 0 : (_values$storeTimings42 = _values$storeTimings41.friday) === null || _values$storeTimings42 === void 0 ? void 0 : _values$storeTimings42.status) || 'live'\n      },\n      saturday: {\n        acceptOrders: getAcceptOrderValue(values === null || values === void 0 ? void 0 : (_values$storeTimings43 = values.storeTimings) === null || _values$storeTimings43 === void 0 ? void 0 : _values$storeTimings43.saturday),\n        opensAt: (values === null || values === void 0 ? void 0 : (_values$storeTimings44 = values.storeTimings) === null || _values$storeTimings44 === void 0 ? void 0 : (_values$storeTimings45 = _values$storeTimings44.saturday) === null || _values$storeTimings45 === void 0 ? void 0 : _values$storeTimings45.opensAt) || '00:00',\n        closesAt: (values === null || values === void 0 ? void 0 : (_values$storeTimings46 = values.storeTimings) === null || _values$storeTimings46 === void 0 ? void 0 : (_values$storeTimings47 = _values$storeTimings46.saturday) === null || _values$storeTimings47 === void 0 ? void 0 : _values$storeTimings47.closesAt) || '24:00',\n        status: (values === null || values === void 0 ? void 0 : (_values$storeTimings48 = values.storeTimings) === null || _values$storeTimings48 === void 0 ? void 0 : (_values$storeTimings49 = _values$storeTimings48.saturday) === null || _values$storeTimings49 === void 0 ? void 0 : _values$storeTimings49.status) || 'live'\n      }\n    },\n    timezone: (values === null || values === void 0 ? void 0 : values.timezone) || moment().format('Z')\n  };\n};\nexport const timings = () => {\n  const quarterHours = ['00', '30'];\n  const times = [];\n\n  for (let i = 0; i < 24; i++) {\n    for (let j = 0; j < 2; j++) {\n      if (i <= 9) {\n        times.push(`0${i}:${quarterHours[j]}`);\n      } else {\n        times.push(`${i}:${quarterHours[j]}`);\n      }\n    }\n  }\n\n  const timings = times.map(s => ({\n    label: moment(s, ['HH:mm']).format('h:mm A'),\n    value: s\n  }));\n  return timings;\n};\nexport const getCountryFromTimeZone = offset => {\n  const item = typeOptions.filter(x => x.utc === offset);\n\n  if (item.length > 0) {\n    const tZ = momentTz.tz.guess();\n    const oS = momentTz().tz(tZ).format('Z');\n    return `${tZ} (${oS})`;\n  }\n};","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/storeTimings/utils.js"],"names":["moment","momentTz","orderBy","allTimeZones","typeOptions","map","x","offset","tz","format","label","utc","getAcceptOrderValue","item","acceptOrders","getInitialValues","values","storeTimings","sunday","opensAt","closesAt","status","monday","tuesday","wednesday","thursday","friday","saturday","timezone","timings","quarterHours","times","i","j","push","s","value","getCountryFromTimeZone","filter","length","tZ","guess","oS"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport momentTz from 'moment-timezone';\nimport { orderBy } from 'lodash';\n\nconst allTimeZones = ['Europe/Andorra',\n  'Asia/Dubai',\n  'Asia/Kabul',\n  'Europe/Tirane',\n  'Asia/Yerevan',\n  'Antarctica/Casey',\n  'Antarctica/Davis',\n  'Antarctica/DumontDUrville',\n  'Antarctica/Mawson',\n  'Antarctica/Palmer',\n  'Antarctica/Rothera',\n  'Antarctica/Syowa',\n  'Antarctica/Troll',\n  'Antarctica/Vostok',\n  'America/Argentina/Buenos_Aires',\n  'America/Argentina/Cordoba',\n  'America/Argentina/Salta',\n  'America/Argentina/Jujuy',\n  'America/Argentina/Tucuman',\n  'America/Argentina/Catamarca',\n  'America/Argentina/La_Rioja',\n  'America/Argentina/San_Juan',\n  'America/Argentina/Mendoza',\n  'America/Argentina/San_Luis',\n  'America/Argentina/Rio_Gallegos',\n  'America/Argentina/Ushuaia',\n  'Pacific/Pago_Pago',\n  'Europe/Vienna',\n  'Australia/Lord_Howe',\n  'Antarctica/Macquarie',\n  'Australia/Hobart',\n  'Australia/Currie',\n  'Australia/Melbourne',\n  'Australia/Sydney',\n  'Australia/Broken_Hill',\n  'Australia/Brisbane',\n  'Australia/Lindeman',\n  'Australia/Adelaide',\n  'Australia/Darwin',\n  'Australia/Perth',\n  'Australia/Eucla',\n  'Asia/Baku',\n  'America/Barbados',\n  'Asia/Dhaka',\n  'Europe/Brussels',\n  'Europe/Sofia',\n  'Atlantic/Bermuda',\n  'Asia/Brunei',\n  'America/La_Paz',\n  'America/Noronha',\n  'America/Belem',\n  'America/Fortaleza',\n  'America/Recife',\n  'America/Araguaina',\n  'America/Maceio',\n  'America/Bahia',\n  'America/Sao_Paulo',\n  'America/Campo_Grande',\n  'America/Cuiaba',\n  'America/Santarem',\n  'America/Porto_Velho',\n  'America/Boa_Vista',\n  'America/Manaus',\n  'America/Eirunepe',\n  'America/Rio_Branco',\n  'America/Nassau',\n  'Asia/Thimphu',\n  'Europe/Minsk',\n  'America/Belize',\n  'America/St_Johns',\n  'America/Halifax',\n  'America/Glace_Bay',\n  'America/Moncton',\n  'America/Goose_Bay',\n  'America/Blanc-Sablon',\n  'America/Toronto',\n  'America/Nipigon',\n  'America/Thunder_Bay',\n  'America/Iqaluit',\n  'America/Pangnirtung',\n  'America/Atikokan',\n  'America/Winnipeg',\n  'America/Rainy_River',\n  'America/Resolute',\n  'America/Rankin_Inlet',\n  'America/Regina',\n  'America/Swift_Current',\n  'America/Edmonton',\n  'America/Cambridge_Bay',\n  'America/Yellowknife',\n  'America/Inuvik',\n  'America/Creston',\n  'America/Dawson_Creek',\n  'America/Fort_Nelson',\n  'America/Vancouver',\n  'America/Whitehorse',\n  'America/Dawson',\n  'Indian/Cocos',\n  'Europe/Zurich',\n  'Africa/Abidjan',\n  'Pacific/Rarotonga',\n  'America/Santiago',\n  'America/Punta_Arenas',\n  'Pacific/Easter',\n  'Asia/Shanghai',\n  'Asia/Urumqi',\n  'America/Bogota',\n  'America/Costa_Rica',\n  'America/Havana',\n  'Atlantic/Cape_Verde',\n  'America/Curacao',\n  'Indian/Christmas',\n  'Asia/Nicosia',\n  'Asia/Famagusta',\n  'Europe/Prague',\n  'Europe/Berlin',\n  'Europe/Copenhagen',\n  'America/Santo_Domingo',\n  'Africa/Algiers',\n  'America/Guayaquil',\n  'Pacific/Galapagos',\n  'Europe/Tallinn',\n  'Africa/Cairo',\n  'Africa/El_Aaiun',\n  'Europe/Madrid',\n  'Africa/Ceuta',\n  'Atlantic/Canary',\n  'Europe/Helsinki',\n  'Pacific/Fiji',\n  'Atlantic/Stanley',\n  'Pacific/Chuuk',\n  'Pacific/Pohnpei',\n  'Pacific/Kosrae',\n  'Atlantic/Faroe',\n  'Europe/Paris',\n  'Europe/London',\n  'Asia/Tbilisi',\n  'America/Cayenne',\n  'Africa/Accra',\n  'Europe/Gibraltar',\n  'America/Godthab',\n  'America/Danmarkshavn',\n  'America/Scoresbysund',\n  'America/Thule',\n  'Europe/Athens',\n  'Atlantic/South_Georgia',\n  'America/Guatemala',\n  'Pacific/Guam',\n  'Africa/Bissau',\n  'America/Guyana',\n  'Asia/Hong_Kong',\n  'America/Tegucigalpa',\n  'America/Port-au-Prince',\n  'Europe/Budapest',\n  'Asia/Jakarta',\n  'Asia/Pontianak',\n  'Asia/Makassar',\n  'Asia/Jayapura',\n  'Europe/Dublin',\n  'Asia/Jerusalem',\n  'Asia/Kolkata',\n  'Indian/Chagos',\n  'Asia/Baghdad',\n  'Asia/Tehran',\n  'Atlantic/Reykjavik',\n  'Europe/Rome',\n  'America/Jamaica',\n  'Asia/Amman',\n  'Asia/Tokyo',\n  'Africa/Nairobi',\n  'Asia/Bishkek',\n  'Pacific/Tarawa',\n  'Pacific/Enderbury',\n  'Pacific/Kiritimati',\n  'Asia/Pyongyang',\n  'Asia/Seoul',\n  'Asia/Almaty',\n  'Asia/Qyzylorda',\n  'Asia/Qostanay',\n  'Asia/Aqtobe',\n  'Asia/Aqtau',\n  'Asia/Atyrau',\n  'Asia/Oral',\n  'Asia/Beirut',\n  'Asia/Colombo',\n  'Africa/Monrovia',\n  'Europe/Vilnius',\n  'Europe/Luxembourg',\n  'Europe/Riga',\n  'Africa/Tripoli',\n  'Africa/Casablanca',\n  'Europe/Monaco',\n  'Europe/Chisinau',\n  'Pacific/Majuro',\n  'Pacific/Kwajalein',\n  'Asia/Yangon',\n  'Asia/Ulaanbaatar',\n  'Asia/Hovd',\n  'Asia/Choibalsan',\n  'Asia/Macau',\n  'America/Martinique',\n  'Europe/Malta',\n  'Indian/Mauritius',\n  'Indian/Maldives',\n  'America/Mexico_City',\n  'America/Cancun',\n  'America/Merida',\n  'America/Monterrey',\n  'America/Matamoros',\n  'America/Mazatlan',\n  'America/Chihuahua',\n  'America/Ojinaga',\n  'America/Hermosillo',\n  'America/Tijuana',\n  'America/Bahia_Banderas',\n  'Asia/Kuala_Lumpur',\n  'Asia/Kuching',\n  'Africa/Maputo',\n  'Africa/Windhoek',\n  'Pacific/Noumea',\n  'Pacific/Norfolk',\n  'Africa/Lagos',\n  'America/Managua',\n  'Europe/Amsterdam',\n  'Europe/Oslo',\n  'Asia/Kathmandu',\n  'Pacific/Nauru',\n  'Pacific/Niue',\n  'Pacific/Auckland',\n  'Pacific/Chatham',\n  'America/Panama',\n  'America/Lima',\n  'Pacific/Tahiti',\n  'Pacific/Marquesas',\n  'Pacific/Gambier',\n  'Pacific/Port_Moresby',\n  'Pacific/Bougainville',\n  'Asia/Manila',\n  'Asia/Karachi',\n  'Europe/Warsaw',\n  'America/Miquelon',\n  'Pacific/Pitcairn',\n  'America/Puerto_Rico',\n  'Asia/Gaza',\n  'Asia/Hebron',\n  'Europe/Lisbon',\n  'Atlantic/Madeira',\n  'Atlantic/Azores',\n  'Pacific/Palau',\n  'America/Asuncion',\n  'Asia/Qatar',\n  'Indian/Reunion',\n  'Europe/Bucharest',\n  'Europe/Belgrade',\n  'Europe/Kaliningrad',\n  'Europe/Moscow',\n  'Europe/Simferopol',\n  'Europe/Kirov',\n  'Europe/Astrakhan',\n  'Europe/Volgograd',\n  'Europe/Saratov',\n  'Europe/Ulyanovsk',\n  'Europe/Samara',\n  'Asia/Yekaterinburg',\n  'Asia/Omsk',\n  'Asia/Novosibirsk',\n  'Asia/Barnaul',\n  'Asia/Tomsk',\n  'Asia/Novokuznetsk',\n  'Asia/Krasnoyarsk',\n  'Asia/Irkutsk',\n  'Asia/Chita',\n  'Asia/Yakutsk',\n  'Asia/Khandyga',\n  'Asia/Vladivostok',\n  'Asia/Ust-Nera',\n  'Asia/Magadan',\n  'Asia/Sakhalin',\n  'Asia/Srednekolymsk',\n  'Asia/Kamchatka',\n  'Asia/Anadyr',\n  'Asia/Riyadh',\n  'Pacific/Guadalcanal',\n  'Indian/Mahe',\n  'Africa/Khartoum',\n  'Europe/Stockholm',\n  'Asia/Singapore',\n  'America/Paramaribo',\n  'Africa/Juba',\n  'Africa/Sao_Tome',\n  'America/El_Salvador',\n  'Asia/Damascus',\n  'America/Grand_Turk',\n  'Africa/Ndjamena',\n  'Indian/Kerguelen',\n  'Asia/Bangkok',\n  'Asia/Dushanbe',\n  'Pacific/Fakaofo',\n  'Asia/Dili',\n  'Asia/Ashgabat',\n  'Africa/Tunis',\n  'Pacific/Tongatapu',\n  'Europe/Istanbul',\n  'America/Port_of_Spain',\n  'Pacific/Funafuti',\n  'Asia/Taipei',\n  'Europe/Kiev',\n  'Europe/Uzhgorod',\n  'Europe/Zaporozhye',\n  'Pacific/Wake',\n  'America/New_York',\n  'America/Detroit',\n  'America/Kentucky/Louisville',\n  'America/Kentucky/Monticello',\n  'America/Indiana/Indianapolis',\n  'America/Indiana/Vincennes',\n  'America/Indiana/Winamac',\n  'America/Indiana/Marengo',\n  'America/Indiana/Petersburg',\n  'America/Indiana/Vevay',\n  'America/Chicago',\n  'America/Indiana/Tell_City',\n  'America/Indiana/Knox',\n  'America/Menominee',\n  'America/North_Dakota/Center',\n  'America/North_Dakota/New_Salem',\n  'America/North_Dakota/Beulah',\n  'America/Denver',\n  'America/Boise',\n  'America/Phoenix',\n  'America/Los_Angeles',\n  'America/Anchorage',\n  'America/Juneau',\n  'America/Sitka',\n  'America/Metlakatla',\n  'America/Yakutat',\n  'America/Nome',\n  'America/Adak',\n  'Pacific/Honolulu',\n  'America/Montevideo',\n  'Asia/Samarkand',\n  'Asia/Tashkent',\n  'America/Caracas',\n  'Asia/Ho_Chi_Minh',\n  'Pacific/Efate',\n  'Pacific/Wallis',\n  'Pacific/Apia',\n  'Africa/Johannesburg'];\n\nexport const typeOptions = orderBy(allTimeZones.map(x => {\n  const offset = momentTz().tz(x).format('Z');\n  return {\n    label: `${x} ${offset}`,\n    utc: `${offset}`,\n  };\n}), ['label'], ['asc']);\n\nconst getAcceptOrderValue = (item = {}) => {\n  const { acceptOrders = true } = item;\n  return acceptOrders;\n};\n\nexport const getInitialValues = (values = {}) => ({\n  storeTimings: {\n    sunday: {\n      acceptOrders: getAcceptOrderValue(values?.storeTimings?.sunday),\n      opensAt: values?.storeTimings?.sunday?.opensAt || '00:00',\n      closesAt: values?.storeTimings?.sunday?.closesAt || '24:00',\n      status: values?.storeTimings?.sunday?.status || 'live'\n    },\n    monday: {\n      acceptOrders: getAcceptOrderValue(values?.storeTimings?.monday),\n      opensAt: values?.storeTimings?.monday?.opensAt || '00:00',\n      closesAt: values?.storeTimings?.monday?.closesAt || '24:00',\n      status: values?.storeTimings?.monday?.status || 'live'\n    },\n    tuesday: {\n      acceptOrders: getAcceptOrderValue(values?.storeTimings?.tuesday),\n      opensAt: values?.storeTimings?.tuesday?.opensAt || '00:00',\n      closesAt: values?.storeTimings?.tuesday?.closesAt || '24:00',\n      status: values?.storeTimings?.tuesday?.status || 'live'\n    },\n    wednesday: {\n      acceptOrders: getAcceptOrderValue(values?.storeTimings?.wednesday),\n      opensAt: values?.storeTimings?.wednesday?.opensAt || '00:00',\n      closesAt: values?.storeTimings?.wednesday?.closesAt || '24:00',\n      status: values?.storeTimings?.wednesday?.status || 'live'\n    },\n    thursday: {\n      acceptOrders: getAcceptOrderValue(values?.storeTimings?.thursday),\n      opensAt: values?.storeTimings?.thursday?.opensAt || '00:00',\n      closesAt: values?.storeTimings?.thursday?.closesAt || '24:00',\n      status: values?.storeTimings?.thursday?.status || 'live'\n    },\n    friday: {\n      acceptOrders: getAcceptOrderValue(values?.storeTimings?.friday),\n      opensAt: values?.storeTimings?.friday?.opensAt || '00:00',\n      closesAt: values?.storeTimings?.friday?.closesAt || '24:00',\n      status: values?.storeTimings?.friday?.status || 'live'\n    },\n    saturday: {\n      acceptOrders: getAcceptOrderValue(values?.storeTimings?.saturday),\n      opensAt: values?.storeTimings?.saturday?.opensAt || '00:00',\n      closesAt: values?.storeTimings?.saturday?.closesAt || '24:00',\n      status: values?.storeTimings?.saturday?.status || 'live'\n    },\n  },\n  timezone: values?.timezone || moment().format('Z'),\n});\n\nexport const timings = () => {\n  const quarterHours = ['00', '30'];\n  const times = [];\n  for (let i = 0; i < 24; i++) {\n    for (let j = 0; j < 2; j++) {\n      if (i <= 9) {\n        times.push(`0${i}:${quarterHours[j]}`);\n      } else {\n        times.push(`${i}:${quarterHours[j]}`);\n      }\n    }\n  }\n  const timings = times.map(s => ({\n    label: moment(s, ['HH:mm']).format('h:mm A'),\n    value: s,\n  }));\n  return timings;\n};\n\nexport const getCountryFromTimeZone = (offset) => {\n  const item = typeOptions.filter(x => x.utc === offset);\n  if (item.length > 0) {\n    const tZ = momentTz.tz.guess();\n    const oS = momentTz().tz(tZ).format('Z');\n    return `${tZ} (${(oS)})`;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}