{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/profile/areasServed/Zones.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDesktop } from \"../../../contexts\";\nimport { Drawer } from \"../../../components/shared/Drawer\";\nimport PropTypes from 'prop-types';\nimport { Button, Clickable, FormikInput, ReactInput } from 'phoenix-components';\nimport { Switch } from 'phoenix-components/lib/formik';\nimport plusIcon from \"../../../assets/images/areasServed/plus.svg\";\nimport { useField } from 'formik'; // import { DebugValues } from 'components/formik';\n\nimport { BottomDrawer } from \"../../../components/shared/BottomDrawer\";\nimport { SideDrawer } from \"../../../components/shared/SideDrawer\";\nimport _ from 'lodash';\nimport Loader from \"../../../services/loader\";\nimport { Polygon } from \"../../../api\";\nimport SnackBar from \"../../../services/snackbar\";\nimport { Becca } from \"../../../api\";\nimport unCheckedRadioIcon from \"../../../assets/images/areasServed/uncheckedRadio.svg\";\nimport checkedRadioIcon from \"../../../assets/images/areasServed/checkedRadio.svg\";\nimport { useToggle } from \"../../../hooks/common\";\nimport cx from 'classnames';\nimport { DeleteAlert } from \"../../../components/shared/DeleteAlert\";\nimport styles from \"./Zones.module.css\";\n\nfunction Zones({\n  onClose,\n  countryId,\n  zoneId,\n  onSave,\n  isZoneEdit\n}) {\n  _s();\n\n  var _value$pincode3, _value$pincode3$inclu, _Object$values;\n\n  const isDesktop = useDesktop();\n  const [{\n    value: allZones\n  },, {\n    setValue: setAllZones\n  }] = useField(`region.countries[${+countryId}].regions`);\n  const [{\n    value\n  },, {\n    setValue: setPincodes\n  }] = useField(`region.countries[${+countryId}].regions[${+zoneId}]`);\n  const [,, {\n    setValue: setEnabled\n  }] = useField(`region.countries[${+countryId}].regions[${+zoneId}].enabled`);\n  const basePath = `region.countries[${+countryId}].regions[${+zoneId}]`;\n  const [isOpen, setIsOpen] = useState(false);\n  const [deletionType, setDeletionType] = useState('disable');\n  const [deleteAlert, toggleDeleteAlert] = useToggle(false);\n\n  const deleteOnClose = () => {\n    var _value$name, _value$pincode, _value$pincode$includ;\n\n    if ((value === null || value === void 0 ? void 0 : (_value$name = value.name) === null || _value$name === void 0 ? void 0 : _value$name.length) === 0 || (value === null || value === void 0 ? void 0 : (_value$pincode = value.pincode) === null || _value$pincode === void 0 ? void 0 : (_value$pincode$includ = _value$pincode.included) === null || _value$pincode$includ === void 0 ? void 0 : _value$pincode$includ.length) === 0) {\n      setAllZones(allZones.filter((_, index) => index !== +zoneId));\n      onClose(null);\n    } else {\n      onClose(null);\n    }\n\n    return null;\n  };\n\n  const Component = isDesktop ? SideDrawer : Drawer;\n  const props = !isDesktop ? {\n    // eslint-disable-next-line react/destructuring-assignment\n    title: 'Postal code',\n    onClose: () => deleteOnClose()\n  } : {\n    className: styles.desktopContainer,\n    backButton: true,\n    title: 'Include postal codes',\n    onClose: () => deleteOnClose()\n  };\n\n  const addPincodes = e => {\n    const included = e.trim().split(',');\n    const temp = {\n      pincode: {\n        included,\n        type: 'included'\n      }\n    };\n    setPincodes({ ...value,\n      ...temp\n    });\n  };\n\n  const exportPincodes = async () => {\n    try {\n      Loader.show();\n      await Becca.exportPincodes(value._id);\n      SnackBar.show('You will receive an email with the pincode list shortly');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const handleFileUpload = async e => {\n    Loader.show();\n\n    try {\n      var _value$pincode2;\n\n      const payload = new FormData();\n      const file = e.target.files[0];\n      payload.append('pincodes', file);\n      const result = await Polygon.uploadPincodes(payload);\n\n      if (!(result !== null && result !== void 0 && result.length)) {\n        SnackBar.showError('pincodes not found in sheet');\n        return;\n      }\n\n      const temp = {\n        pincode: {\n          included: [...result, ...(value === null || value === void 0 ? void 0 : (_value$pincode2 = value.pincode) === null || _value$pincode2 === void 0 ? void 0 : _value$pincode2.included)],\n          type: 'included'\n        }\n      };\n      setPincodes({ ...value,\n        ...temp\n      });\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onChange = (e, value) => {\n    e.stopPropagation();\n\n    if (value) {\n      setEnabled(value);\n      onSave();\n      return;\n    }\n\n    setIsOpen(true);\n  };\n\n  const onDelete = () => {\n    toggleDeleteAlert();\n  };\n\n  const onDisable = () => {\n    setEnabled(false);\n    onSave();\n  };\n\n  const deleteZone = () => {\n    setAllZones(allZones.filter((_, index) => index !== +zoneId));\n    onSave();\n    onClose(null);\n  };\n\n  if (deleteAlert) {\n    return /*#__PURE__*/React.createElement(DeleteAlert, {\n      title: \"Are you sure about deleting this Zone?\",\n      onCancel: toggleDeleteAlert,\n      onDelete: deleteZone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    });\n  }\n\n  const deleteZonePopUp = () => {\n    const Component = isDesktop ? SideDrawer : BottomDrawer;\n    const props = !isDesktop ? {\n      title: 'Zone Status',\n      onClose: () => setIsOpen(false)\n    } : {\n      title: 'Define Inclusion Zone',\n      onClose: () => setIsOpen(false),\n      closeButton: true\n    };\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.dcontainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Clickable, {\n        onClick: () => setDeletionType('disable'),\n        className: cx(styles.fullwidth, styles.zoneStatus),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }\n      }, \"Disable this zone\", /*#__PURE__*/React.createElement(\"img\", {\n        src: deletionType === 'disable' ? checkedRadioIcon : unCheckedRadioIcon,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Clickable, {\n        onClick: () => setDeletionType('delete'),\n        className: cx(styles.fullwidth, styles.zoneStatus),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }\n      }, \"Delete this Zone\", /*#__PURE__*/React.createElement(\"img\", {\n        src: deletionType === 'delete' ? checkedRadioIcon : unCheckedRadioIcon,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        label: \"Save\",\n        primary: true,\n        onClick: () => deletionType === 'disable' ? onDisable() : onDelete(),\n        className: styles.dbutton,\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }\n      })))\n    );\n  };\n\n  if (isOpen) {\n    return deleteZonePopUp();\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, isZoneEdit && /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.zoneStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, \"Zone Status\", /*#__PURE__*/React.createElement(Switch, {\n      name: `${basePath}.enabled`,\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.zoneTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      label: \"Enter Zone Title\",\n      placeholder: \"Area 1\",\n      type: \"text\",\n      variant: \"outlined\",\n      name: `${basePath}.name`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.zoneTextArea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ReactInput, {\n      value: value.pincode.included.join(','),\n      type: \"textarea\",\n      rows: 12,\n      setValue: e => addPincodes(e),\n      label: \"Enter Eligible Postal Codes\",\n      placeholder: \"e.g. 560085,560086,560087\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.or,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, \"Or\")), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.addCsv,\n      onClick: () => null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: plusIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    }), \"\\xA0 Add CSV File\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: styles.input,\n      hidden: true,\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.subHeading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }\n    }, \"Download sample\", ' ', /*#__PURE__*/React.createElement(\"a\", {\n      className: styles.link,\n      href: \"https://becca-cdn.windo.live/templates/sample-pincodes.csv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }, \"CSV template\")), (value === null || value === void 0 ? void 0 : (_value$pincode3 = value.pincode) === null || _value$pincode3 === void 0 ? void 0 : (_value$pincode3$inclu = _value$pincode3.included) === null || _value$pincode3$inclu === void 0 ? void 0 : _value$pincode3$inclu.length) > 0 && /*#__PURE__*/React.createElement(Clickable, {\n      className: styles.export,\n      onClick: exportPincodes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    }, \"Download All Uploaded\", '  ', /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.csv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 15\n      }\n    }, \"CSV file\")), /*#__PURE__*/React.createElement(Button, {\n      label: \"Save\",\n      fullwidth: true,\n      disabled: !_.isEmpty(value) && (Object === null || Object === void 0 ? void 0 : (_Object$values = Object.values(value)) === null || _Object$values === void 0 ? void 0 : _Object$values.some(x => x === null || x === '')),\n      className: styles.saveButton,\n      variant: \"primary\",\n      onClick: () => {\n        onSave();\n        onClose(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }\n    }))))\n  );\n}\n\n_s(Zones, \"9RCuga90wWs7tqw4PEHoXiDzQ+0=\", false, function () {\n  return [useDesktop, useField, useField, useField, useToggle];\n});\n\n_c = Zones;\nZones.propTypes = {\n  countryId: PropTypes.number.isRequired,\n  onClose: PropTypes.func.isRequired,\n  zoneId: PropTypes.number.isRequired,\n  onSave: PropTypes.func.isRequired,\n  isZoneEdit: PropTypes.bool\n};\nZones.defaultProps = {\n  isZoneEdit: false\n};\nexport default Zones;\n\nvar _c;\n\n$RefreshReg$(_c, \"Zones\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/areasServed/Zones.jsx"],"names":["React","useState","useDesktop","Drawer","PropTypes","Button","Clickable","FormikInput","ReactInput","Switch","useField","BottomDrawer","SideDrawer","_","Loader","Polygon","SnackBar","Becca","useToggle","cx","DeleteAlert","styles","Zones","onClose","countryId","zoneId","onSave","isZoneEdit","isDesktop","value","allZones","setValue","setAllZones","setPincodes","setEnabled","basePath","isOpen","setIsOpen","deletionType","setDeletionType","deleteAlert","toggleDeleteAlert","deleteOnClose","name","length","pincode","included","filter","index","Component","props","title","className","desktopContainer","backButton","addPincodes","e","trim","split","temp","type","exportPincodes","show","_id","showError","hide","handleFileUpload","payload","FormData","file","target","files","append","result","uploadPincodes","onChange","stopPropagation","onDelete","onDisable","deleteZone","deleteZonePopUp","closeButton","dcontainer","fullwidth","zoneStatus","checkedRadioIcon","unCheckedRadioIcon","dbutton","container","zoneTitle","zoneTextArea","join","or","text","addCsv","plusIcon","input","subHeading","link","export","csv","isEmpty","Object","values","some","x","saveButton","propTypes","number","isRequired","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDesktop } from 'contexts';\nimport { Drawer } from 'components/shared/Drawer';\n\nimport PropTypes from 'prop-types';\nimport {\n  Button, Clickable, FormikInput, ReactInput\n} from 'phoenix-components';\nimport { Switch } from 'phoenix-components/lib/formik';\nimport plusIcon from 'assets/images/areasServed/plus.svg';\nimport { useField } from 'formik';\n// import { DebugValues } from 'components/formik';\nimport { BottomDrawer } from 'components/shared/BottomDrawer';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport _ from 'lodash';\nimport Loader from 'services/loader';\nimport { Polygon } from 'api';\nimport SnackBar from 'services/snackbar';\nimport { Becca } from 'api';\nimport unCheckedRadioIcon from 'assets/images/areasServed/uncheckedRadio.svg';\nimport checkedRadioIcon from 'assets/images/areasServed/checkedRadio.svg';\nimport { useToggle } from 'hooks/common';\nimport cx from 'classnames';\nimport { DeleteAlert } from 'components/shared/DeleteAlert';\nimport styles from './Zones.module.css';\n\nfunction Zones({\n  onClose, countryId, zoneId, onSave, isZoneEdit\n}) {\n  const isDesktop = useDesktop();\n  const [{ value: allZones }, , { setValue: setAllZones }] = useField(`region.countries[${+countryId}].regions`);\n\n  const [{ value }, , { setValue: setPincodes }] = useField(`region.countries[${+countryId}].regions[${+zoneId}]`);\n\n  const [,, { setValue: setEnabled }] = useField(`region.countries[${+countryId}].regions[${+zoneId}].enabled`);\n\n  const basePath = `region.countries[${+countryId}].regions[${+zoneId}]`;\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [deletionType, setDeletionType] = useState('disable');\n\n  const [deleteAlert, toggleDeleteAlert] = useToggle(false);\n\n  const deleteOnClose = () => {\n    if (value?.name?.length === 0 || value?.pincode?.included?.length === 0) {\n      setAllZones(allZones.filter((_, index) => index !== +zoneId));\n      onClose(null);\n    } else {\n      onClose(null);\n    }\n    return null;\n  };\n\n  const Component = isDesktop ? SideDrawer : Drawer;\n\n  const props = !isDesktop ? {\n    // eslint-disable-next-line react/destructuring-assignment\n    title: 'Postal code',\n    onClose: () => deleteOnClose(),\n  } : {\n    className: styles.desktopContainer,\n    backButton: true,\n    title: 'Include postal codes',\n    onClose: () => deleteOnClose(),\n  };\n\n  const addPincodes = (e) => {\n    const included = e.trim().split(',');\n    const temp = {\n      pincode: {\n        included,\n        type: 'included',\n      }\n    };\n\n    setPincodes({ ...value, ...temp });\n  };\n\n  const exportPincodes = async () => {\n    try {\n      Loader.show();\n      await Becca.exportPincodes(value._id);\n      SnackBar.show('You will receive an email with the pincode list shortly');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const handleFileUpload = async (e) => {\n    Loader.show();\n    try {\n      const payload = new FormData();\n      const file = e.target.files[0];\n      payload.append('pincodes', file);\n      const result = await Polygon.uploadPincodes(payload);\n      if (!result?.length) {\n        SnackBar.showError('pincodes not found in sheet');\n        return;\n      }\n      const temp = {\n        pincode: {\n          included: [...result, ...value?.pincode?.included],\n          type: 'included',\n        }\n      };\n      setPincodes({ ...value, ...temp });\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onChange = (e, value) => {\n    e.stopPropagation();\n    if (value) {\n      setEnabled(value);\n      onSave();\n      return;\n    }\n    setIsOpen(true);\n  };\n\n  const onDelete = () => {\n    toggleDeleteAlert();\n  };\n\n  const onDisable = () => {\n    setEnabled(false);\n    onSave();\n  };\n\n  const deleteZone = () => {\n    setAllZones(allZones.filter((_, index) => index !== +zoneId));\n    onSave();\n    onClose(null);\n  };\n\n  if (deleteAlert) {\n    return (\n      <DeleteAlert\n        title=\"Are you sure about deleting this Zone?\"\n        onCancel={toggleDeleteAlert}\n        onDelete={deleteZone}\n      />\n    );\n  }\n\n  const deleteZonePopUp = () => {\n    const Component = isDesktop ? SideDrawer : BottomDrawer;\n    const props = !isDesktop ? {\n      title: 'Zone Status',\n      onClose: () => setIsOpen(false),\n    } : {\n      title: 'Define Inclusion Zone',\n      onClose: () => setIsOpen(false),\n      closeButton: true,\n    };\n    return (\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      <Component {...props}>\n        <div className={styles.dcontainer}>\n          <Clickable onClick={() => setDeletionType('disable')} className={cx(styles.fullwidth, styles.zoneStatus)}>\n            Disable this zone\n            <img\n              src={deletionType === 'disable' ? checkedRadioIcon : unCheckedRadioIcon}\n              alt=\"\" />\n          </Clickable>\n          <Clickable onClick={() => setDeletionType('delete')} className={cx(styles.fullwidth, styles.zoneStatus)}>\n            Delete this Zone\n            <img\n              src={deletionType === 'delete' ? checkedRadioIcon : unCheckedRadioIcon}\n              alt=\"\" />\n          </Clickable>\n          <Button\n            label=\"Save\"\n            primary={true}\n            onClick={() => (deletionType === 'disable' ? onDisable() : onDelete())}\n            className={styles.dbutton}\n            fullWidth={true} />\n        </div>\n\n      </Component>\n    );\n  };\n\n  if (isOpen) {\n    return deleteZonePopUp();\n  }\n\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <Component {...props}>\n      <div className={styles.container}>\n        <>\n          {isZoneEdit && (\n            <div className={styles.zoneStatus}>\n              Zone Status\n              <Switch name={`${basePath}.enabled`} onChange={onChange} />\n            </div>\n          )}\n          <div className={styles.zoneTitle}>\n            <FormikInput\n              label=\"Enter Zone Title\"\n              placeholder=\"Area 1\"\n              type=\"text\"\n              variant=\"outlined\"\n              name={`${basePath}.name`}\n            />\n          </div>\n          <div className={styles.zoneTextArea}>\n            <ReactInput\n              value={value.pincode.included.join(',')}\n              type=\"textarea\"\n              rows={12}\n              setValue={(e) => addPincodes(e)}\n              label=\"Enter Eligible Postal Codes\"\n              placeholder=\"e.g. 560085,560086,560087\"\n            />\n          </div>\n          <div className={styles.or}>\n            <span className={styles.text}>Or</span>\n          </div>\n          <label>\n            <div className={styles.addCsv} onClick={() => null}>\n              <img src={plusIcon} alt=\"\" />\n              &nbsp;\n              Add CSV File\n            </div>\n            <input\n              className={styles.input}\n              hidden\n              type=\"file\"\n              accept=\".csv\"\n              onChange={handleFileUpload}\n            />\n          </label>\n          <div className={styles.subHeading}>\n            Download sample\n            {' '}\n            <a\n              className={styles.link}\n              href=\"https://becca-cdn.windo.live/templates/sample-pincodes.csv\"\n            >\n              CSV template\n            </a>\n          </div>\n          {value?.pincode?.included?.length > 0 && (\n            <Clickable className={styles.export} onClick={exportPincodes}>\n              Download All Uploaded\n              {'  '}\n              <span className={styles.csv}>CSV file</span>\n            </Clickable>\n          )}\n          <Button\n            label=\"Save\"\n            fullwidth={true}\n            disabled={(!_.isEmpty(value)) && Object?.values(value)?.some(x => x === null || x === '')}\n            className={styles.saveButton}\n            variant=\"primary\"\n            onClick={() => { onSave(); onClose(null); }} />\n        </>\n      </div>\n    </Component>\n  );\n}\n\nZones.propTypes = {\n  countryId: PropTypes.number.isRequired,\n  onClose: PropTypes.func.isRequired,\n  zoneId: PropTypes.number.isRequired,\n  onSave: PropTypes.func.isRequired,\n  isZoneEdit: PropTypes.bool,\n};\n\nZones.defaultProps = {\n  isZoneEdit: false,\n};\n\nexport default Zones;\n"]},"metadata":{},"sourceType":"module"}