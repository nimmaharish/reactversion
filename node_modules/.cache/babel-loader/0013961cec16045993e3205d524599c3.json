{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/orders/TrackingPopOver.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTrackOrder } from \"../../hooks\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { useOrder } from \"../../contexts/orderContext\";\nimport { useShop } from \"../../contexts\";\nimport WebViewUtils from \"../../services/webviewUtils\";\nimport { Button } from '@material-ui/core';\nimport SnackBar from \"../../services/snackbar\";\nimport { Clickable, Badge } from 'phoenix-components';\nimport copyIcon from \"../../assets/overview/copy1.svg\";\nimport { mapOrderHistory } from \"./utils\";\nimport { addressToArray } from \"./utils\";\nimport styles from \"./TrackingPopOver.module.css\";\nexport function TrackingPopOver({\n  order,\n  groupId\n}) {\n  _s();\n\n  var _rootOrder$shipping, _rootOrder$shipping2, _shop$country, _orderHistory$email;\n\n  const sellerShips = order === null || order === void 0 ? void 0 : order.sellerShips;\n  const rootOrder = useOrder();\n  const shop = useShop();\n  const addressTo = addressToArray((rootOrder === null || rootOrder === void 0 ? void 0 : (_rootOrder$shipping = rootOrder.shipping) === null || _rootOrder$shipping === void 0 ? void 0 : _rootOrder$shipping.to) || {});\n  const addressFrom = addressToArray((rootOrder === null || rootOrder === void 0 ? void 0 : (_rootOrder$shipping2 = rootOrder.shipping) === null || _rootOrder$shipping2 === void 0 ? void 0 : _rootOrder$shipping2.from) || {});\n  const [orderHistory] = useTrackOrder(sellerShips ? undefined : rootOrder._id, groupId);\n  const showReport = (shop === null || shop === void 0 ? void 0 : (_shop$country = shop.country) === null || _shop$country === void 0 ? void 0 : _shop$country.toLowerCase()) === 'india' && (orderHistory === null || orderHistory === void 0 ? void 0 : (_orderHistory$email = orderHistory.email) === null || _orderHistory$email === void 0 ? void 0 : _orderHistory$email.length) > 0;\n  const history = mapOrderHistory(order, orderHistory.history, orderHistory.edd);\n\n  const copyToClipboard = async () => {\n    await navigator.clipboard.writeText(orderHistory === null || orderHistory === void 0 ? void 0 : orderHistory.vendorIdentifier);\n    SnackBar.show('Code Copied !!!');\n  };\n\n  const body = `Hi,\n\nI've an issue with the delivery of order #${orderHistory === null || orderHistory === void 0 ? void 0 : orderHistory.vendorIdentifier} as below,\nplease help me with the resolution at the earliest.\n\n<Your issue here>\n\nPickup Address\n\n${addressFrom.map(x => x.value).join(',')}\n\nDrop Address:\n\n${addressTo.map(x => x.value).join(',')}\n\n`;\n  const url1 = `mailto:${orderHistory === null || orderHistory === void 0 ? void 0 : orderHistory.email}\n  ?subject=Delivery Issue for Order #${order === null || order === void 0 ? void 0 : order.externalId}&body=${encodeURIComponent(body)}&cc=team@windo.live`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, showReport && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexBetween\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Tracking Details\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"Have an issue?\"), /*#__PURE__*/React.createElement(Clickable, {\n    onClick: WebViewUtils.openUrl(url1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    size: \"medium\",\n    rounded: true,\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Report\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.grey1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, `${orderHistory === null || orderHistory === void 0 ? void 0 : orderHistory.partner} : ${orderHistory === null || orderHistory === void 0 ? void 0 : orderHistory.vendorIdentifier}`, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: styles.copyButton,\n    onClick: copyToClipboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: copyIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }))))), !showReport && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Tracking Details\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.statusContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, history.map(s => {\n    var _s$color, _s$color2;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: s.status,\n      className: cx(styles.statusBlock, styles[(_s$color = s.color) !== null && _s$color !== void 0 ? _s$color : 'yellow']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: cx(styles.status, styles[(_s$color2 = s.color) !== null && _s$color2 !== void 0 ? _s$color2 : 'yellow']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, s.status), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, s.note), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, s.date));\n  })));\n}\n\n_s(TrackingPopOver, \"pX2oL3NHEiVYp43wUnlktv2no1g=\", false, function () {\n  return [useOrder, useShop, useTrackOrder];\n});\n\n_c = TrackingPopOver;\nTrackingPopOver.propTypes = {\n  order: PropTypes.string.isRequired,\n  groupId: PropTypes.string\n};\nTrackingPopOver.defaultProps = {\n  groupId: ''\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"TrackingPopOver\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/orders/TrackingPopOver.jsx"],"names":["React","useTrackOrder","cx","PropTypes","useOrder","useShop","WebViewUtils","Button","SnackBar","Clickable","Badge","mapOrderHistory","addressToArray","styles","TrackingPopOver","order","groupId","sellerShips","rootOrder","shop","addressTo","shipping","to","addressFrom","from","orderHistory","undefined","_id","showReport","country","toLowerCase","email","length","history","edd","copyToClipboard","navigator","clipboard","writeText","vendorIdentifier","show","body","map","x","value","join","url1","externalId","encodeURIComponent","container","title","text","openUrl","grey1","partner","copyButton","copyIcon","statusContainer","s","status","statusBlock","color","note","date","propTypes","string","isRequired","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT;AACA,SAASC,OAAT;AACA,OAAOC,YAAP;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,QAAP;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,oBAAjC;;AAEA,SAASC,eAAT;AACA,SAASC,cAAT;AACA,OAAOC,MAAP;AAEA,OAAO,SAASC,eAAT,CAAyB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAzB,EAA6C;AAAA;;AAAA;;AAClD,QAAMC,WAAW,GAAGF,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEE,WAA3B;AACA,QAAMC,SAAS,GAAGd,QAAQ,EAA1B;AACA,QAAMe,IAAI,GAAGd,OAAO,EAApB;AACA,QAAMe,SAAS,GAAGR,cAAc,CAAC,CAAAM,SAAS,SAAT,IAAAA,SAAS,WAAT,mCAAAA,SAAS,CAAEG,QAAX,4EAAqBC,EAArB,KAA2B,EAA5B,CAAhC;AACA,QAAMC,WAAW,GAAGX,cAAc,CAAC,CAAAM,SAAS,SAAT,IAAAA,SAAS,WAAT,oCAAAA,SAAS,CAAEG,QAAX,8EAAqBG,IAArB,KAA6B,EAA9B,CAAlC;AACA,QAAM,CAACC,YAAD,IAAiBxB,aAAa,CAACgB,WAAW,GAAGS,SAAH,GAAeR,SAAS,CAACS,GAArC,EAA0CX,OAA1C,CAApC;AAEA,QAAMY,UAAU,GAAG,CAAAT,IAAI,SAAJ,IAAAA,IAAI,WAAJ,6BAAAA,IAAI,CAAEU,OAAN,gEAAeC,WAAf,QAAiC,OAAjC,IAA4C,CAAAL,YAAY,SAAZ,IAAAA,YAAY,WAAZ,mCAAAA,YAAY,CAAEM,KAAd,4EAAqBC,MAArB,IAA8B,CAA7F;AAEA,QAAMC,OAAO,GAAGtB,eAAe,CAACI,KAAD,EAAQU,YAAY,CAACQ,OAArB,EAA8BR,YAAY,CAACS,GAA3C,CAA/B;;AAEA,QAAMC,eAAe,GAAG,YAAY;AAClC,UAAMC,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8Bb,YAA9B,aAA8BA,YAA9B,uBAA8BA,YAAY,CAAEc,gBAA5C,CAAN;AACA/B,IAAAA,QAAQ,CAACgC,IAAT,CAAc,iBAAd;AACD,GAHD;;AAKA,QAAMC,IAAI,GAAI;AAChB;AACA,4CAA4ChB,YAF7B,aAE6BA,YAF7B,uBAE6BA,YAAY,CAAEc,gBAAiB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,EAAEhB,WAAW,CAACmB,GAAZ,CAAgBC,CAAC,IAAIA,CAAC,CAACC,KAAvB,EAA8BC,IAA9B,CAAmC,GAAnC,CAAwC;AAC1C;AACA;AACA;AACA,EAAEzB,SAAS,CAACsB,GAAV,CAAcC,CAAC,IAAIA,CAAC,CAACC,KAArB,EAA4BC,IAA5B,CAAiC,GAAjC,CAAsC;AACxC;AACA,CAfE;AAiBA,QAAMC,IAAI,GAAI,UAASrB,YAAV,aAAUA,YAAV,uBAAUA,YAAY,CAAEM,KAAM;AAC7C,uCAAuChB,KADxB,aACwBA,KADxB,uBACwBA,KAAK,CAAEgC,UAAW,SAAQC,kBAAkB,CAACP,IAAD,CAAO,qBADxF;AAGA,sBACE;AAAK,IAAA,SAAS,EAAE5B,MAAM,CAACoC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,UAAU,iBACT,uDACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEf,MAAM,CAACqC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAErC,MAAM,CAACsC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAE7C,YAAY,CAAC8C,OAAb,CAAqBN,IAArB,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,MAFT;AAGE,IAAA,OAAO,EAAC,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CAFF,CAFF,CADF,eAkBE;AAAK,IAAA,SAAS,EAAEjC,MAAM,CAACwC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,GAAE5B,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAE6B,OAAQ,MAAK7B,YAA9B,aAA8BA,YAA9B,uBAA8BA,YAAY,CAAEc,gBAAiB,EADhE,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAE1B,MAAM,CAAC0C,UADpB;AAEE,IAAA,OAAO,EAAEpB,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAK,IAAA,GAAG,EAAEqB,QAAV;AAAoB,IAAA,GAAG,EAAC,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CAFF,CAlBF,CAFJ,EAgCG,CAAC5B,UAAD,iBACC;AAAK,IAAA,SAAS,EAAEf,MAAM,CAACqC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAjCJ,eAqCE;AAAK,IAAA,SAAS,EAAErC,MAAM,CAAC4C,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxB,OAAO,CAACS,GAAR,CAAYgB,CAAC;AAAA;;AAAA,wBACZ;AAAK,MAAA,GAAG,EAAEA,CAAC,CAACC,MAAZ;AAAoB,MAAA,SAAS,EAAEzD,EAAE,CAACW,MAAM,CAAC+C,WAAR,EAAqB/C,MAAM,aAAC6C,CAAC,CAACG,KAAH,+CAAY,QAAZ,CAA3B,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAE3D,EAAE,CAACW,MAAM,CAAC8C,MAAR,EAAgB9C,MAAM,cAAC6C,CAAC,CAACG,KAAH,iDAAY,QAAZ,CAAtB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,CAAC,CAACC,MADL,CADF,eAIE;AAAK,MAAA,SAAS,EAAE9C,MAAM,CAACiD,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,CAAC,CAACI,IADL,CAJF,eAOE;AAAK,MAAA,SAAS,EAAEjD,MAAM,CAACkD,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,CAAC,CAACK,IADL,CAPF,CADY;AAAA,GAAb,CADH,CArCF,CADF;AAuDD;;GA5FejD,e;UAEIV,Q,EACLC,O,EAGUJ,a;;;KANTa,e;AA8FhBA,eAAe,CAACkD,SAAhB,GAA4B;AAC1BjD,EAAAA,KAAK,EAAEZ,SAAS,CAAC8D,MAAV,CAAiBC,UADE;AAE1BlD,EAAAA,OAAO,EAAEb,SAAS,CAAC8D;AAFO,CAA5B;AAKAnD,eAAe,CAACqD,YAAhB,GAA+B;AAC7BnD,EAAAA,OAAO,EAAE;AADoB,CAA/B","sourcesContent":["import React from 'react';\nimport { useTrackOrder } from 'hooks';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { useOrder } from 'contexts/orderContext';\nimport { useShop } from 'contexts';\nimport WebViewUtils from 'services/webviewUtils';\nimport { Button } from '@material-ui/core';\nimport SnackBar from 'services/snackbar';\nimport { Clickable, Badge } from 'phoenix-components';\nimport copyIcon from 'assets/overview/copy1.svg';\nimport { mapOrderHistory } from './utils';\nimport { addressToArray } from './utils';\nimport styles from './TrackingPopOver.module.css';\n\nexport function TrackingPopOver({ order, groupId }) {\n  const sellerShips = order?.sellerShips;\n  const rootOrder = useOrder();\n  const shop = useShop();\n  const addressTo = addressToArray(rootOrder?.shipping?.to || {});\n  const addressFrom = addressToArray(rootOrder?.shipping?.from || {});\n  const [orderHistory] = useTrackOrder(sellerShips ? undefined : rootOrder._id, groupId);\n\n  const showReport = shop?.country?.toLowerCase() === 'india' && orderHistory?.email?.length > 0;\n\n  const history = mapOrderHistory(order, orderHistory.history, orderHistory.edd);\n\n  const copyToClipboard = async () => {\n    await navigator.clipboard.writeText(orderHistory?.vendorIdentifier);\n    SnackBar.show('Code Copied !!!');\n  };\n\n  const body = `Hi,\n\nI've an issue with the delivery of order #${orderHistory?.vendorIdentifier} as below,\nplease help me with the resolution at the earliest.\n\n<Your issue here>\n\nPickup Address\n\n${addressFrom.map(x => x.value).join(',')}\n\nDrop Address:\n\n${addressTo.map(x => x.value).join(',')}\n\n`;\n\n  const url1 = `mailto:${orderHistory?.email}\n  ?subject=Delivery Issue for Order #${order?.externalId}&body=${encodeURIComponent(body)}&cc=team@windo.live`;\n\n  return (\n    <div className={styles.container}>\n      {showReport && (\n        <>\n          <div className=\"flexBetween\">\n            <div className={styles.title}>Tracking Details</div>\n            <div className=\"flexCenter\">\n              <span className={styles.text}>Have an issue?</span>\n              <Clickable\n                onClick={WebViewUtils.openUrl(url1)}\n              >\n                <Badge\n                  size=\"medium\"\n                  rounded\n                  variant=\"primary\"\n                >\n                  Report\n                </Badge>\n              </Clickable>\n            </div>\n          </div>\n          <div className={styles.grey1}>\n            {`${orderHistory?.partner} : ${orderHistory?.vendorIdentifier}`}\n            <span>\n              <Button\n                className={styles.copyButton}\n                onClick={copyToClipboard}>\n                <img src={copyIcon} alt=\"\" />\n              </Button>\n            </span>\n          </div>\n        </>\n      )}\n      {!showReport && (\n        <div className={styles.title}>\n          Tracking Details\n        </div>\n      )}\n      <div className={styles.statusContainer}>\n        {history.map(s => (\n          <div key={s.status} className={cx(styles.statusBlock, styles[s.color ?? 'yellow'])}>\n            <div className={cx(styles.status, styles[s.color ?? 'yellow'])}>\n              {s.status}\n            </div>\n            <div className={styles.note}>\n              {s.note}\n            </div>\n            <div className={styles.date}>\n              {s.date}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nTrackingPopOver.propTypes = {\n  order: PropTypes.string.isRequired,\n  groupId: PropTypes.string,\n};\n\nTrackingPopOver.defaultProps = {\n  groupId: '',\n};\n"]},"metadata":{},"sourceType":"module"}