{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/analytics/UsersChart.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Legend, Line, LineChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport React from 'react';\nimport _ from 'lodash';\nimport { useDesktop } from \"../../contexts\";\nimport moment from 'moment';\n\nconst usersToList = (users, dates) => _.sortBy(dates.map(date => {\n  var _users$date, _users$date$shop, _users$date2, _users$date2$product, _users$date3, _users$date3$shop, _users$date4, _users$date4$product, _users$date5, _users$date5$shop, _users$date6, _users$date6$product;\n\n  return {\n    date: moment(date),\n    totalUsers: (((_users$date = users[date]) === null || _users$date === void 0 ? void 0 : (_users$date$shop = _users$date.shop) === null || _users$date$shop === void 0 ? void 0 : _users$date$shop.totalUsers) || 0) + (((_users$date2 = users[date]) === null || _users$date2 === void 0 ? void 0 : (_users$date2$product = _users$date2.product) === null || _users$date2$product === void 0 ? void 0 : _users$date2$product.totalUsers) || 0),\n    newUsers: (((_users$date3 = users[date]) === null || _users$date3 === void 0 ? void 0 : (_users$date3$shop = _users$date3.shop) === null || _users$date3$shop === void 0 ? void 0 : _users$date3$shop.newUsers) || 0) + (((_users$date4 = users[date]) === null || _users$date4 === void 0 ? void 0 : (_users$date4$product = _users$date4.product) === null || _users$date4$product === void 0 ? void 0 : _users$date4$product.newUsers) || 0),\n    sessions: (((_users$date5 = users[date]) === null || _users$date5 === void 0 ? void 0 : (_users$date5$shop = _users$date5.shop) === null || _users$date5$shop === void 0 ? void 0 : _users$date5$shop.newUsers) || 0) + (((_users$date6 = users[date]) === null || _users$date6 === void 0 ? void 0 : (_users$date6$product = _users$date6.product) === null || _users$date6$product === void 0 ? void 0 : _users$date6$product.newUsers) || 0)\n  };\n}), 'date').map(x => ({ ...x,\n  date: x.date.format('DD/MMM')\n}));\n\nexport function UsersChart({\n  users,\n  dates,\n  syncId\n}) {\n  _s();\n\n  const list = usersToList(users, dates);\n  const isDesktop = useDesktop();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isDesktop && /*#__PURE__*/React.createElement(LineChart, {\n    width: window.screen.width - 370,\n    height: window.screen.height * 0.3,\n    data: list,\n    syncId: syncId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    width: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    verticalAlign: \"top\",\n    height: 36,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    name: \"Total Users\",\n    dataKey: \"totalUsers\",\n    stroke: \"#7cb5ec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    name: \"New Users\",\n    type: \"monotone\",\n    dataKey: \"newUsers\",\n    stroke: \"#66bb6a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    name: \"Sessions\",\n    type: \"monotone\",\n    dataKey: \"sessions\",\n    stroke: \"#f7a35c\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), !isDesktop && /*#__PURE__*/React.createElement(LineChart, {\n    width: window.screen.width - 30,\n    height: window.screen.height * 0.3,\n    data: list,\n    syncId: syncId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    width: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    verticalAlign: \"top\",\n    height: 36,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    name: \"Total Users\",\n    dataKey: \"totalUsers\",\n    stroke: \"#7cb5ec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    name: \"New Users\",\n    type: \"monotone\",\n    dataKey: \"newUsers\",\n    stroke: \"#66bb6a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    name: \"Sessions\",\n    type: \"monotone\",\n    dataKey: \"sessions\",\n    stroke: \"#f7a35c\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  })));\n}\n\n_s(UsersChart, \"3l4y9eCI8Q4nOrq3yDi/AmhuQWU=\", false, function () {\n  return [useDesktop];\n});\n\n_c = UsersChart;\nUsersChart.propTypes = {\n  users: PropTypes.object.isRequired,\n  dates: PropTypes.array.isRequired,\n  syncId: PropTypes.string\n};\nUsersChart.defaultProps = {\n  syncId: undefined\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersChart\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/analytics/UsersChart.jsx"],"names":["PropTypes","Legend","Line","LineChart","Tooltip","XAxis","YAxis","React","_","useDesktop","moment","usersToList","users","dates","sortBy","map","date","totalUsers","shop","product","newUsers","sessions","x","format","UsersChart","syncId","list","isDesktop","window","screen","width","height","propTypes","object","isRequired","array","string","defaultProps","undefined"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport {\n  Legend, Line, LineChart, Tooltip, XAxis, YAxis\n} from 'recharts';\nimport React from 'react';\nimport _ from 'lodash';\nimport { useDesktop } from 'contexts';\nimport moment from 'moment';\n\nconst usersToList = (users, dates) => _.sortBy(dates.map(date => ({\n  date: moment(date),\n  totalUsers: (users[date]?.shop?.totalUsers || 0) + (users[date]?.product?.totalUsers || 0),\n  newUsers: (users[date]?.shop?.newUsers || 0) + (users[date]?.product?.newUsers || 0),\n  sessions: (users[date]?.shop?.newUsers || 0) + (users[date]?.product?.newUsers || 0),\n})), 'date')\n  .map(x => ({\n    ...x,\n    date: x.date.format('DD/MMM')\n  }));\n\nexport function UsersChart({ users, dates, syncId }) {\n  const list = usersToList(users, dates);\n  const isDesktop = useDesktop();\n\n  return (\n    <>\n      {isDesktop && (\n        <LineChart\n          width={window.screen.width - 370}\n          height={window.screen.height * 0.3}\n          data={list}\n          syncId={syncId}\n        >\n          <XAxis dataKey=\"date\" />\n          <YAxis width={25} />\n          <Tooltip />\n          <Legend verticalAlign=\"top\" height={36} />\n          <Line name=\"Total Users\" dataKey=\"totalUsers\" stroke=\"#7cb5ec\" />\n          <Line name=\"New Users\" type=\"monotone\" dataKey=\"newUsers\" stroke=\"#66bb6a\" />\n          <Line name=\"Sessions\" type=\"monotone\" dataKey=\"sessions\" stroke=\"#f7a35c\" />\n        </LineChart>\n      )}\n      {!isDesktop && (\n        <LineChart\n          width={window.screen.width - 30}\n          height={window.screen.height * 0.3}\n          data={list}\n          syncId={syncId}\n        >\n          <XAxis dataKey=\"date\" />\n          <YAxis width={25} />\n          <Tooltip />\n          <Legend verticalAlign=\"top\" height={36} />\n          <Line name=\"Total Users\" dataKey=\"totalUsers\" stroke=\"#7cb5ec\" />\n          <Line name=\"New Users\" type=\"monotone\" dataKey=\"newUsers\" stroke=\"#66bb6a\" />\n          <Line name=\"Sessions\" type=\"monotone\" dataKey=\"sessions\" stroke=\"#f7a35c\" />\n        </LineChart>\n      )}\n\n    </>\n  );\n}\n\nUsersChart.propTypes = {\n  users: PropTypes.object.isRequired,\n  dates: PropTypes.array.isRequired,\n  syncId: PropTypes.string,\n};\n\nUsersChart.defaultProps = {\n  syncId: undefined,\n};\n"]},"metadata":{},"sourceType":"module"}