{"ast":null,"code":"import * as Yup from 'yup';\nexport const conditionalChargeSchema = Yup.object().shape({\n  from: Yup.number().min(0).label('min order value').required(),\n  to: Yup.number().positive().moreThan(Yup.ref('from'), 'It should be greater than min order value').label('max order value').required(),\n  charge: Yup.number().min(0).label('delivery charge').required()\n});\nexport const distanceChargeSchema = Yup.object().shape({\n  from: Yup.number().min(0).label('min order value').required(),\n  to: Yup.number().positive().moreThan(Yup.ref('from'), 'It should be greater than min order value').label('max order value').required(),\n  fromDistance: Yup.number().min(0).label('min distance').required(),\n  toDistance: Yup.number().positive().moreThan(Yup.ref('fromDistance'), 'It should be greater than min distance').label('max distance').required(),\n  charge: Yup.number().min(0).label('delivery charge').required()\n});","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/profile/delivery/schema.js"],"names":["Yup","conditionalChargeSchema","object","shape","from","number","min","label","required","to","positive","moreThan","ref","charge","distanceChargeSchema","fromDistance","toDistance"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,OAAO,MAAMC,uBAAuB,GAAGD,GAAG,CAACE,MAAJ,GACpCC,KADoC,CAC9B;AACLC,EAAAA,IAAI,EAAEJ,GAAG,CAACK,MAAJ,GACHC,GADG,CACC,CADD,EAEHC,KAFG,CAEG,iBAFH,EAEsBC,QAFtB,EADD;AAILC,EAAAA,EAAE,EAAET,GAAG,CAACK,MAAJ,GACDK,QADC,GAEDC,QAFC,CAEQX,GAAG,CAACY,GAAJ,CAAQ,MAAR,CAFR,EAEyB,2CAFzB,EAGDL,KAHC,CAGK,iBAHL,EAIDC,QAJC,EAJC;AASLK,EAAAA,MAAM,EAAEb,GAAG,CAACK,MAAJ,GACLC,GADK,CACD,CADC,EAELC,KAFK,CAEC,iBAFD,EAEoBC,QAFpB;AATH,CAD8B,CAAhC;AAeP,OAAO,MAAMM,oBAAoB,GAAGd,GAAG,CAACE,MAAJ,GACjCC,KADiC,CAC3B;AACLC,EAAAA,IAAI,EAAEJ,GAAG,CAACK,MAAJ,GACHC,GADG,CACC,CADD,EAEHC,KAFG,CAEG,iBAFH,EAGHC,QAHG,EADD;AAKLC,EAAAA,EAAE,EAAET,GAAG,CAACK,MAAJ,GACDK,QADC,GAEDC,QAFC,CAEQX,GAAG,CAACY,GAAJ,CAAQ,MAAR,CAFR,EAEyB,2CAFzB,EAGDL,KAHC,CAGK,iBAHL,EAIDC,QAJC,EALC;AAULO,EAAAA,YAAY,EAAEf,GAAG,CAACK,MAAJ,GACXC,GADW,CACP,CADO,EAEXC,KAFW,CAEL,cAFK,EAGXC,QAHW,EAVT;AAcLQ,EAAAA,UAAU,EAAEhB,GAAG,CAACK,MAAJ,GACTK,QADS,GAETC,QAFS,CAEAX,GAAG,CAACY,GAAJ,CAAQ,cAAR,CAFA,EAEyB,wCAFzB,EAGTL,KAHS,CAGH,cAHG,EAITC,QAJS,EAdP;AAmBLK,EAAAA,MAAM,EAAEb,GAAG,CAACK,MAAJ,GACLC,GADK,CACD,CADC,EAELC,KAFK,CAEC,iBAFD,EAGLC,QAHK;AAnBH,CAD2B,CAA7B","sourcesContent":["import * as Yup from 'yup';\n\nexport const conditionalChargeSchema = Yup.object()\n  .shape({\n    from: Yup.number()\n      .min(0)\n      .label('min order value').required(),\n    to: Yup.number()\n      .positive()\n      .moreThan(Yup.ref('from'), 'It should be greater than min order value')\n      .label('max order value')\n      .required(),\n    charge: Yup.number()\n      .min(0)\n      .label('delivery charge').required(),\n  });\n\nexport const distanceChargeSchema = Yup.object()\n  .shape({\n    from: Yup.number()\n      .min(0)\n      .label('min order value')\n      .required(),\n    to: Yup.number()\n      .positive()\n      .moreThan(Yup.ref('from'), 'It should be greater than min order value')\n      .label('max order value')\n      .required(),\n    fromDistance: Yup.number()\n      .min(0)\n      .label('min distance')\n      .required(),\n    toDistance: Yup.number()\n      .positive()\n      .moreThan(Yup.ref('fromDistance'), 'It should be greater than min distance')\n      .label('max distance')\n      .required(),\n    charge: Yup.number()\n      .min(0)\n      .label('delivery charge')\n      .required(),\n  });\n"]},"metadata":{},"sourceType":"module"}