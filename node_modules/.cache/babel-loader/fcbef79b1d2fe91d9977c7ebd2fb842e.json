{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/paymentPartners/KnowMoreDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Drawer } from \"../../components/shared/Drawer\";\nimport { Button, Clickable } from 'phoenix-components';\nimport { useDesktop, useShop } from \"../../contexts\";\nimport { SideDrawer } from \"../../components/shared/SideDrawer\";\nimport WebView from \"../../services/webview\";\nimport Info from \"../../components/info/Info\";\nimport { PAYPAL_SUPPORTED_CURRENCY } from \"./utils\";\nimport styles from \"./KnowMoreDialog.module.css\"; // eslint-disable-next-line max-len\n\nconst paypalNote = 'Paypal doesn\\'t support your currency yet, so your orders will be processed in USD by default during order checkout. Please note that your currency to USD conversion will be calculated in 1 Hour intervals and the effective price in the last hour will be used to calculate the order amount during checkout.';\nexport function KnowMoreDialog({\n  title,\n  list,\n  onAction,\n  description,\n  onBack,\n  heading,\n  url,\n  name\n}) {\n  _s();\n\n  const isDesktop = useDesktop();\n  const {\n    currency\n  } = useShop();\n\n  const openUrl = e => {\n    e.stopPropagation();\n\n    if (WebView.isWebView()) {\n      e.preventDefault();\n      WebView.openUrl(url);\n      return;\n    }\n\n    window.open(url);\n  };\n\n  const body = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.drawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, heading), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, description), /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, list.map(x => /*#__PURE__*/React.createElement(React.Fragment, null, typeof x !== 'string' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n    className: styles.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, `${x.label}`), /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, x.items.map(y => /*#__PURE__*/React.createElement(\"li\", {\n    className: styles.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 39\n    }\n  }, `${y}`)))), typeof x === 'string' && /*#__PURE__*/React.createElement(\"li\", {\n    className: styles.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 39\n    }\n  }, `${x}`)))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.textB,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Don\\u2019t have an account?\", /*#__PURE__*/React.createElement(Clickable, {\n    onClick: openUrl,\n    className: styles.greenLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Create\")), isDesktop ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.buttonD,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onAction,\n    type: \"large\",\n    label: \"Connect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    className: styles.buttonH,\n    bordered: false,\n    onClick: onAction,\n    type: \"large\",\n    label: \"Connect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }))), name === 'paypal' && !PAYPAL_SUPPORTED_CURRENCY.has(currency) && /*#__PURE__*/React.createElement(Info, {\n    text: paypalNote,\n    title: \"Note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }));\n\n  return !isDesktop ? /*#__PURE__*/React.createElement(Drawer, {\n    title: title,\n    onBack: onBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, body()) : /*#__PURE__*/React.createElement(SideDrawer, {\n    backButton: true,\n    onClose: onBack,\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, body());\n}\n\n_s(KnowMoreDialog, \"sGUYkdUMZq/5esKVbxRizm10dZQ=\", false, function () {\n  return [useDesktop, useShop];\n});\n\n_c = KnowMoreDialog;\nKnowMoreDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  heading: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  note: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  list: PropTypes.array.isRequired,\n  onAction: PropTypes.func.isRequired,\n  onBack: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired\n};\nKnowMoreDialog.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"KnowMoreDialog\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/paymentPartners/KnowMoreDialog.jsx"],"names":["React","PropTypes","Drawer","Button","Clickable","useDesktop","useShop","SideDrawer","WebView","Info","PAYPAL_SUPPORTED_CURRENCY","styles","paypalNote","KnowMoreDialog","title","list","onAction","description","onBack","heading","url","name","isDesktop","currency","openUrl","e","stopPropagation","isWebView","preventDefault","window","open","body","drawer","map","x","item","label","items","y","textB","greenLink","buttonD","button","buttonH","has","propTypes","string","isRequired","note","array","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Drawer } from 'components/shared/Drawer';\nimport { Button, Clickable } from 'phoenix-components';\nimport { useDesktop, useShop } from 'contexts';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport WebView from 'services/webview';\nimport Info from 'components/info/Info';\nimport { PAYPAL_SUPPORTED_CURRENCY } from 'containers/paymentPartners/utils';\nimport styles from './KnowMoreDialog.module.css';\n\n// eslint-disable-next-line max-len\nconst paypalNote = 'Paypal doesn\\'t support your currency yet, so your orders will be processed in USD by default during order checkout. Please note that your currency to USD conversion will be calculated in 1 Hour intervals and the effective price in the last hour will be used to calculate the order amount during checkout.';\n\nexport function KnowMoreDialog({\n  title,\n  list,\n  onAction,\n  description,\n  onBack,\n  heading,\n  url,\n  name,\n}) {\n  const isDesktop = useDesktop();\n  const { currency } = useShop();\n\n  const openUrl = (e) => {\n    e.stopPropagation();\n    if (WebView.isWebView()) {\n      e.preventDefault();\n      WebView.openUrl(url);\n      return;\n    }\n    window.open(url);\n  };\n\n  const body = () => (\n    <div className={styles.drawer}>\n      <div className={styles.heading}>{heading}</div>\n      <div>{description}</div>\n      <ul className={styles.list}>\n        {list.map((x) => (\n          <>\n            {typeof x !== 'string' && (\n              <>\n                <li className={styles.item}>{`${x.label}`}</li>\n                <ul className={styles.list}>\n                  {x.items.map((y) => <li className={styles.item}>{`${y}`}</li>)}\n                </ul>\n              </>\n            )}\n            {typeof x === 'string' && <li className={styles.item}>{`${x}`}</li>}\n          </>\n        ))}\n      </ul>\n      <>\n        <div className={styles.textB}>\n          Don’t have an account?\n          <Clickable\n            onClick={openUrl}\n            className={styles.greenLink}>\n            Create\n          </Clickable>\n        </div>\n        {isDesktop ? (\n          <div className={styles.buttonD}>\n            <Button\n              onClick={onAction}\n              type=\"large\"\n              label=\"Connect\"\n            />\n          </div>\n        ) : (\n          <div className={styles.button}>\n            <Button\n              fullWidth\n              className={styles.buttonH}\n              bordered={false}\n              onClick={onAction}\n              type=\"large\"\n              label=\"Connect\"\n            />\n          </div>\n        )}\n      </>\n      {name === 'paypal' && !PAYPAL_SUPPORTED_CURRENCY.has(currency) && (\n        <Info\n          text={paypalNote}\n          title=\"Note\"\n        />\n      )}\n    </div>\n  );\n\n  return !isDesktop ? (\n    <Drawer title={title} onBack={onBack}>\n      {body()}\n    </Drawer>\n  ) : (\n    <SideDrawer\n      backButton={true}\n      onClose={onBack}\n      title={title}\n    >\n      {body()}\n    </SideDrawer>\n  );\n}\n\nKnowMoreDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  heading: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  note: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  list: PropTypes.array.isRequired,\n  onAction: PropTypes.func.isRequired,\n  onBack: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nKnowMoreDialog.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}