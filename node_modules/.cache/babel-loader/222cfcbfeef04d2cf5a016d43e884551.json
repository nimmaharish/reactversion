{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/profile/delivery/ShippingCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { FormikInput } from 'phoenix-components';\nimport { Switch } from 'phoenix-components/lib/formik';\nimport chevUp from \"../../../assets/v2/orders/chevUpPrimary.svg\";\nimport chevDown from \"../../../assets/v2/settings/paymentModes/chevDown.svg\";\nimport { useToggle } from \"../../../hooks/common\";\nimport { useField } from 'formik';\nimport styles from \"./ShippingCard.module.css\";\nexport default function ShippingCard({\n  index\n}) {\n  _s();\n\n  const [{\n    value: mode\n  }] = useField(`[${index}]`);\n  const [viewForm, toggleForm] = useToggle(false);\n  const modeEnabled = mode === null || mode === void 0 ? void 0 : mode.chargeEnabled;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('flexBetween'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.modeTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, mode === null || mode === void 0 ? void 0 : mode.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('flexBetween'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: cx(modeEnabled ? styles.activeText : styles.inActiveText),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, modeEnabled ? 'Active' : 'Inactive'), /*#__PURE__*/React.createElement(Switch, {\n    name: `[${index}].chargeEnabled`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('flexBetween'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.shippingType),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.shippingTypeTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Shipping Type\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.modeType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, mode === null || mode === void 0 ? void 0 : mode.type)), /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.chevIcon,\n    src: viewForm ? chevUp : chevDown,\n    onClick: toggleForm,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), viewForm && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    name: `[${index}].orderValue.min`,\n    label: \"Minimum order value\",\n    type: \"number\",\n    placeholder: \"1000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    name: `[${index}].orderValue.max`,\n    label: \"Max order value\",\n    type: \"number\",\n    placeholder: \"5000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    name: `[${index}].charge`,\n    label: \"Delivery Charge\",\n    type: \"number\",\n    placeholder: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }))));\n}\n\n_s(ShippingCard, \"jHqqrn8Ak2f7EoN5wYJVJTdpoVA=\", false, function () {\n  return [useField, useToggle];\n});\n\n_c = ShippingCard;\nShippingCard.propTypes = {\n  index: PropTypes.number.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingCard\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/profile/delivery/ShippingCard.jsx"],"names":["React","PropTypes","cx","FormikInput","Switch","useToggle","useField","styles","ShippingCard","index","value","mode","viewForm","toggleForm","modeEnabled","chargeEnabled","container","modeTitle","title","activeText","inActiveText","shippingType","shippingTypeTitle","modeType","type","chevIcon","chevUp","chevDown","inputContainer","propTypes","number","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,MAAT,QAAuB,+BAAvB;;;AAGA,SAASC,SAAT;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,MAAP;AAEA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA;AADmC,CAAtB,EAEZ;AAAA;;AACD,QAAM,CAAC;AAAEC,IAAAA,KAAK,EAAEC;AAAT,GAAD,IAAoBL,QAAQ,CAAE,IAAGG,KAAM,GAAX,CAAlC;AACA,QAAM,CAACG,QAAD,EAAWC,UAAX,IAAyBR,SAAS,CAAC,KAAD,CAAxC;AACA,QAAMS,WAAW,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,aAA1B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAER,MAAM,CAACS,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEd,EAAE,CAAC,aAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAEK,MAAM,CAACU,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCN,IAAjC,aAAiCA,IAAjC,uBAAiCA,IAAI,CAAEO,KAAvC,CADF,eAEE;AACE,IAAA,SAAS,EAAEhB,EAAE,CAAC,aAAD,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAG,IAAA,SAAS,EAAEA,EAAE,CAACY,WAAW,GAAGP,MAAM,CAACY,UAAV,GAAuBZ,MAAM,CAACa,YAA1C,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,WAAW,GAAG,QAAH,GAAc,UAD5B,CAHF,eAME,oBAAC,MAAD;AACE,IAAA,IAAI,EAAG,IAAGL,KAAM,iBADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFF,CADF,eAcE;AAAK,IAAA,SAAS,EAAEP,EAAE,CAAC,aAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEA,EAAE,CAACK,MAAM,CAACc,YAAR,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAEd,MAAM,CAACe,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAG,IAAA,SAAS,EAAEf,MAAM,CAACgB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCZ,IAAhC,aAAgCA,IAAhC,uBAAgCA,IAAI,CAAEa,IAAtC,CAFF,CADF,eAKE;AACE,IAAA,SAAS,EAAEjB,MAAM,CAACkB,QADpB;AAEE,IAAA,GAAG,EAAEb,QAAQ,GAAGc,MAAH,GAAYC,QAF3B;AAGE,IAAA,OAAO,EAAEd,UAHX;AAIE,IAAA,GAAG,EAAC,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAdF,EAyBGD,QAAQ,iBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACqB,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAG,IAAGnB,KAAM,kBADlB;AAEE,IAAA,KAAK,EAAC,qBAFR;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,WAAW,EAAC,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eASE;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACqB,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAG,IAAGnB,KAAM,kBADlB;AAEE,IAAA,KAAK,EAAC,iBAFR;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,WAAW,EAAC,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,eAiBE;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACqB,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAG,IAAGnB,KAAM,UADlB;AAEE,IAAA,KAAK,EAAC,iBAFR;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,WAAW,EAAC,GAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBF,CA1BJ,CADF;AAwDD;;GA/DuBD,Y;UAGIF,Q,EACKD,S;;;KAJTG,Y;AAiExBA,YAAY,CAACqB,SAAb,GAAyB;AACvBpB,EAAAA,KAAK,EAAER,SAAS,CAAC6B,MAAV,CAAiBC;AADD,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { FormikInput } from 'phoenix-components';\nimport { Switch } from 'phoenix-components/lib/formik';\nimport chevUp from 'assets/v2/orders/chevUpPrimary.svg';\nimport chevDown from 'assets/v2/settings/paymentModes/chevDown.svg';\nimport { useToggle } from 'hooks/common';\nimport { useField } from 'formik';\nimport styles from './ShippingCard.module.css';\n\nexport default function ShippingCard({\n  index\n}) {\n  const [{ value: mode }] = useField(`[${index}]`);\n  const [viewForm, toggleForm] = useToggle(false);\n  const modeEnabled = mode?.chargeEnabled;\n\n  return (\n    <div className={styles.container}>\n      <div className={cx('flexBetween')}>\n        <p className={styles.modeTitle}>{mode?.title}</p>\n        <div\n          className={cx('flexBetween')}\n        >\n          <p className={cx(modeEnabled ? styles.activeText : styles.inActiveText)}>\n            {modeEnabled ? 'Active' : 'Inactive'}\n          </p>\n          <Switch\n            name={`[${index}].chargeEnabled`}\n          />\n        </div>\n      </div>\n      <div className={cx('flexBetween')}>\n        <div className={cx(styles.shippingType)}>\n          <p className={styles.shippingTypeTitle}>Shipping Type</p>\n          <p className={styles.modeType}>{mode?.type}</p>\n        </div>\n        <img\n          className={styles.chevIcon}\n          src={viewForm ? chevUp : chevDown}\n          onClick={toggleForm}\n          alt=\"\" />\n      </div>\n      {viewForm && (\n        <div>\n          <div className={styles.inputContainer}>\n            <FormikInput\n              name={`[${index}].orderValue.min`}\n              label=\"Minimum order value\"\n              type=\"number\"\n              placeholder=\"1000\"\n            />\n          </div>\n          <div className={styles.inputContainer}>\n            <FormikInput\n              name={`[${index}].orderValue.max`}\n              label=\"Max order value\"\n              type=\"number\"\n              placeholder=\"5000\"\n            />\n          </div>\n          <div className={styles.inputContainer}>\n            <FormikInput\n              name={`[${index}].charge`}\n              label=\"Delivery Charge\"\n              type=\"number\"\n              placeholder=\"0\"\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nShippingCard.propTypes = {\n  index: PropTypes.number.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}