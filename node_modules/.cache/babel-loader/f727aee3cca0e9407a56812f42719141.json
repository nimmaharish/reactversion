{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/cards/Upload/Upload.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport { Button, Grid } from '@material-ui/core';\nimport Snackbar from \"../../../services/snackbar\";\nimport PropTypes from 'prop-types';\nimport { Becca } from \"../../../api\";\nimport cx from 'classnames';\nimport Icon from \"../../../assets/images/products/create/media-del.svg\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Add from \"../../../assets/images/products/create/add.svg\";\nimport { compressImages } from \"../../../utils/image\";\nimport styles from \"./Upload.module.css\";\n\nfunction Upload({\n  onSelect,\n  items,\n  type\n}) {\n  _s();\n\n  const images = items;\n  const [uploading, setUploading] = useState(false);\n  const id = new Date().getUTCMilliseconds();\n\n  const isVideo = item => item.split('.').pop() === 'mp4';\n\n  const uploadAsset = async e => {\n    setUploading(true);\n\n    try {\n      var _e$target;\n\n      const files = e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.files;\n      const nFiles = await compressImages([...files]);\n      const allData = nFiles.map(async x => {\n        const fileName = x === null || x === void 0 ? void 0 : x.name;\n\n        try {\n          const payload = new FormData();\n          const ext = fileName.split('.').pop();\n          const size = Math.round((x === null || x === void 0 ? void 0 : x.size) / 1024);\n\n          if (ext !== 'mp4' && size > 5 * 1024) {\n            Snackbar.show(`${fileName} is too big! Max 5 Mb allowed`, 'error');\n            return;\n          }\n\n          if (ext === 'mp4' && size > 50 * 1024) {\n            Snackbar.show(`${fileName} is too big! Max 50 Mb allowed`, 'error');\n            return;\n          }\n\n          payload.append('name', fileName);\n          payload.append('purpose', 'shop');\n          payload.append('type', 'image');\n          payload.append('file', x);\n          const {\n            url\n          } = await Becca.uploadAsset(payload);\n          const newItems = {\n            url,\n            ext\n          };\n          return newItems; // setImages(newItems);\n        } catch (e) {\n          setUploading(false);\n          Snackbar.show(`${fileName} failed to upload `, 'error');\n        }\n      });\n      const res = await Promise.all(allData);\n      const filtered = res.filter(x => x);\n      const newItems = [...items, ...filtered];\n      onSelect(newItems);\n      setUploading(false);\n    } catch (e) {\n      setUploading(false);\n      Snackbar.show('Upload error, Please retry', 'error');\n    }\n  };\n\n  const deleteImage = index => {\n    const newItems = [...images];\n    newItems.splice(index, 1);\n    onSelect(newItems);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, images.length === 0 && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"image/*, video/mp4\",\n    className: styles.input,\n    onChange: e => {\n      uploadAsset(e);\n    },\n    multiple: true,\n    id: id,\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    component: \"span\",\n    color: \"primary\",\n    disabled: uploading,\n    className: cx(styles.card1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.flex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Upload multiple photo or video of your product\"), uploading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    className: styles.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.addImg,\n    src: Add,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }))))), images.length > 0 && /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    className: \"fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, images.map((x, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, isVideo(x === null || x === void 0 ? void 0 : x.url) && /*#__PURE__*/React.createElement(\"video\", {\n    muted: true,\n    playsInline: true,\n    className: styles.img,\n    src: x.url,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }), !isVideo(x === null || x === void 0 ? void 0 : x.url) && /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.img,\n    src: x.url,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    role: \"none\",\n    onClick: () => deleteImage(i),\n    className: styles.del,\n    src: Icon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"image/*, video/mp4\",\n    className: styles.input,\n    onChange: e => {\n      uploadAsset(e);\n    },\n    multiple: true,\n    id: id,\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    component: \"span\",\n    color: \"primary\",\n    disabled: uploading,\n    className: cx(type !== 'variant' ? styles.card : styles.bg, styles.border),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, uploading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    className: styles.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 30\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: Add,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 81\n    }\n  }))))));\n}\n\n_s(Upload, \"7fSqO2OqLYyCuGUs/ZTqKghpSFk=\");\n\n_c = Upload;\nUpload.propTypes = {\n  items: PropTypes.array.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired\n};\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/cards/Upload/Upload.jsx"],"names":["React","useState","Button","Grid","Snackbar","PropTypes","Becca","cx","CircularProgress","compressImages","styles","Upload","onSelect","items","type","images","uploading","setUploading","id","Date","getUTCMilliseconds","isVideo","item","split","pop","uploadAsset","e","files","target","nFiles","allData","map","x","fileName","name","payload","FormData","ext","size","Math","round","show","append","url","newItems","res","Promise","all","filtered","filter","deleteImage","index","splice","length","input","card1","flex","progress","addImg","Add","i","card","img","del","Icon","bg","border","propTypes","array","isRequired","func","string"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport { Button, Grid } from '@material-ui/core';\nimport Snackbar from 'services/snackbar';\nimport PropTypes from 'prop-types';\nimport { Becca } from 'api/index';\nimport cx from 'classnames';\nimport Icon from 'assets/images/products/create/media-del.svg';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Add from 'assets/images/products/create/add.svg';\nimport { compressImages } from 'utils/image';\nimport styles from './Upload.module.css';\n\nfunction Upload({\n  onSelect,\n  items,\n  type\n}) {\n  const images = items;\n  const [uploading, setUploading] = useState(false);\n  const id = new Date().getUTCMilliseconds();\n\n  const isVideo = (item) => item.split('.').pop() === 'mp4';\n\n  const uploadAsset = async (e) => {\n    setUploading(true);\n    try {\n      const files = e?.target?.files;\n      const nFiles = await compressImages([...files]);\n      const allData = nFiles.map(async (x) => {\n        const fileName = x?.name;\n        try {\n          const payload = new FormData();\n          const ext = fileName.split('.')\n            .pop();\n          const size = Math.round((x?.size / 1024));\n          if (ext !== 'mp4' && size > 5 * 1024) {\n            Snackbar.show(`${fileName} is too big! Max 5 Mb allowed`, 'error');\n            return;\n          }\n          if (ext === 'mp4' && size > 50 * 1024) {\n            Snackbar.show(`${fileName} is too big! Max 50 Mb allowed`, 'error');\n            return;\n          }\n          payload.append('name', fileName);\n          payload.append('purpose', 'shop');\n          payload.append('type', 'image');\n          payload.append('file', x);\n          const { url } = await Becca.uploadAsset(payload);\n          const newItems = {\n            url,\n            ext\n          };\n          return newItems;\n          // setImages(newItems);\n        } catch (e) {\n          setUploading(false);\n          Snackbar.show(`${fileName} failed to upload `, 'error');\n        }\n      });\n      const res = await Promise.all(allData);\n      const filtered = res.filter(x => x);\n      const newItems = [...items, ...filtered];\n      onSelect(newItems);\n      setUploading(false);\n    } catch (e) {\n      setUploading(false);\n      Snackbar.show('Upload error, Please retry', 'error');\n    }\n  };\n\n  const deleteImage = (index) => {\n    const newItems = [...images];\n    newItems.splice(index, 1);\n    onSelect(newItems);\n  };\n\n  return (\n    <Grid container>\n      {images.length === 0 && (\n        <Grid item xs={12}>\n          <input\n            accept=\"image/*, video/mp4\"\n            className={styles.input}\n            onChange={(e) => {\n              uploadAsset(e);\n            }}\n            multiple\n            id={id}\n            type=\"file\"\n          />\n          <label htmlFor={id}>\n            <Button\n              component=\"span\"\n              color=\"primary\"\n              disabled={uploading}\n              className={cx(styles.card1)}\n            >\n              <div className={styles.flex}>\n                <div>\n                  Upload multiple photo or video of your product\n                </div>\n                {uploading\n                  ? <CircularProgress className={styles.progress} />\n                  : <img className={styles.addImg} src={Add} alt=\"\" />}\n              </div>\n            </Button>\n          </label>\n        </Grid>\n      )}\n      {images.length > 0 && (\n        <Grid container spacing={1} className=\"fullWidth\">\n          {images.map((x, i) => (\n            <Grid item xs={4}>\n              <Button className={styles.card}>\n                {isVideo(x?.url) && (\n                  <video\n                    muted\n                    playsInline={true}\n                    className={styles.img}\n                    src={x.url}\n                    alt=\"\"\n                  />\n                )}\n                {!isVideo(x?.url) && (\n                  <img className={styles.img} src={x.url} alt=\"\" />\n                )}\n                <img\n                  role=\"none\"\n                  onClick={() => deleteImage(i)}\n                  className={styles.del}\n                  src={Icon}\n                  alt=\"\" />\n              </Button>\n            </Grid>\n          ))}\n          <Grid item xs={4}>\n            <input\n              accept=\"image/*, video/mp4\"\n              className={styles.input}\n              onChange={(e) => {\n                uploadAsset(e);\n              }}\n              multiple\n              id={id}\n              type=\"file\"\n            />\n            <label htmlFor={id}>\n              <Button\n                component=\"span\"\n                color=\"primary\"\n                disabled={uploading}\n                className={cx(type !== 'variant' ? styles.card : styles.bg, styles.border)}\n              >\n                {uploading ? <CircularProgress className={styles.progress} /> : <img src={Add} alt=\"\" />}\n              </Button>\n            </label>\n          </Grid>\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n\nUpload.propTypes = {\n  items: PropTypes.array.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}