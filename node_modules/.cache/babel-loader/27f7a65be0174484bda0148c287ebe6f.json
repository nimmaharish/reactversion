{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/featureRequests/FeatureRequest.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { Drawer } from \"../../components/shared/Drawer\";\nimport ButtonComponent from \"../profile/ButtonComponent\";\nimport editIcon from \"../../assets/images/featureRequests/requestIcon.svg\";\nimport noRequestsIcon from \"../../assets/images/featureRequests/noRequests.svg\";\nimport { FeatureRequestModal } from \"../../components/featureRequests/FeatureRequestModal\";\nimport { useToggle } from \"../../hooks/common\";\nimport { RequestCard } from \"../../components/featureRequests/RequestCard\";\nimport { useQueryParams } from \"../../hooks\";\nimport { useFeatureRequests } from \"../../hooks/featureRequest\";\nimport { InfiniteLoader, List } from 'react-virtualized';\nimport styles from \"./FeatureRequest.module.css\";\nconst FilterMap = {\n  raised: {\n    status: {\n      $in: ['created', 'processing']\n    }\n  },\n  resolved: {\n    status: 'processed'\n  }\n};\nexport function FeatureRequest() {\n  _s();\n\n  var _top$current, _top$current$getBound;\n\n  const [openModel, toggleModel] = useToggle();\n  const params = useQueryParams(); // const history = useHistory();\n\n  const state = params.get('type') || 'raised';\n  const top = useRef();\n  const [requests, loadMore, hasMore,, refresh] = useFeatureRequests({ ...(FilterMap[state] || FilterMap.raised)\n  }, {\n    updatedAt: -1\n  }); // eslint-disable-next-line react/no-multi-comp\n\n  const renderItem = item => /*#__PURE__*/React.createElement(\"div\", {\n    key: item.key,\n    style: item.style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RequestCard, {\n    data: requests[item.index],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n\n  const onModelClose = () => {\n    toggleModel();\n    refresh();\n  };\n\n  const rowCount = hasMore ? 10000 : (requests === null || requests === void 0 ? void 0 : requests.length) || 0;\n\n  const isLoaded = i => !!requests[i];\n\n  const topBar = (top === null || top === void 0 ? void 0 : (_top$current = top.current) === null || _top$current === void 0 ? void 0 : (_top$current$getBound = _top$current.getBoundingClientRect()) === null || _top$current$getBound === void 0 ? void 0 : _top$current$getBound.top) || 200;\n  const height = window.screen.height - topBar - 16;\n  return /*#__PURE__*/React.createElement(Drawer, {\n    title: \"Feature Request\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, openModel && /*#__PURE__*/React.createElement(FeatureRequestModal, {\n    onClose: onModelClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonComponent, {\n    text: \"Request For Premium Features\",\n    starticon: /*#__PURE__*/React.createElement(\"img\", {\n      className: styles.editIcon,\n      src: editIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }),\n    onclick: toggleModel,\n    fullwidth: true,\n    style: styles.editButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    ref: top,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), (requests === null || requests === void 0 ? void 0 : requests.length) > 0 ? /*#__PURE__*/React.createElement(InfiniteLoader, {\n    loadMoreRows: loadMore,\n    isRowLoaded: isLoaded,\n    rowCount: rowCount,\n    minimumBatchSize: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, ({\n    onRowsRendered,\n    registerChild\n  }) => /*#__PURE__*/React.createElement(List, {\n    height: height,\n    onRowsRendered: onRowsRendered,\n    ref: registerChild,\n    rowCount: requests.length,\n    rowHeight: 136,\n    rowRenderer: renderItem,\n    width: window.screen.width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.noRequests,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: noRequestsIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, state === 'raised' ? 'No requests from you.' : 'No requests are resolved yet.')));\n}\n\n_s(FeatureRequest, \"eLgy/UGdmSt4szo29dldiR1UYJ0=\", false, function () {\n  return [useToggle, useQueryParams, useFeatureRequests];\n});\n\n_c = FeatureRequest;\nFeatureRequest.propTypes = {};\nFeatureRequest.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"FeatureRequest\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/featureRequests/FeatureRequest.jsx"],"names":["React","useRef","Drawer","ButtonComponent","FeatureRequestModal","useToggle","RequestCard","useQueryParams","useFeatureRequests","InfiniteLoader","List","styles","FilterMap","raised","status","$in","resolved","FeatureRequest","openModel","toggleModel","params","state","get","top","requests","loadMore","hasMore","refresh","updatedAt","renderItem","item","key","style","index","onModelClose","rowCount","length","isLoaded","i","topBar","current","getBoundingClientRect","height","window","screen","container","editIcon","editButton","onRowsRendered","registerChild","width","noRequests","noRequestsIcon","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { Drawer } from 'components/shared/Drawer';\nimport ButtonComponent from 'containers/profile/ButtonComponent';\nimport editIcon from 'assets/images/featureRequests/requestIcon.svg';\nimport noRequestsIcon from 'assets/images/featureRequests/noRequests.svg';\nimport { FeatureRequestModal } from 'components/featureRequests/FeatureRequestModal';\nimport { useToggle } from 'hooks/common';\nimport { RequestCard } from 'components/featureRequests/RequestCard';\nimport { useQueryParams } from 'hooks';\nimport { useFeatureRequests } from 'hooks/featureRequest';\nimport { InfiniteLoader, List } from 'react-virtualized';\nimport styles from './FeatureRequest.module.css';\n\nconst FilterMap = {\n  raised: {\n    status: {\n      $in: ['created', 'processing']\n    }\n  },\n  resolved: {\n    status: 'processed',\n  }\n};\n\nexport function FeatureRequest() {\n  const [openModel, toggleModel] = useToggle();\n  const params = useQueryParams();\n  // const history = useHistory();\n  const state = params.get('type') || 'raised';\n  const top = useRef();\n  const [requests, loadMore, hasMore, , refresh] = useFeatureRequests({\n    ...(FilterMap[state] || FilterMap.raised)\n  }, {\n    updatedAt: -1,\n  });\n  // eslint-disable-next-line react/no-multi-comp\n  const renderItem = (item) => (\n    <div key={item.key} style={item.style}>\n      <RequestCard data={requests[item.index]} />\n    </div>\n  );\n\n  const onModelClose = () => {\n    toggleModel();\n    refresh();\n  };\n\n  const rowCount = hasMore ? 10000 : requests?.length || 0;\n\n  const isLoaded = i => !!requests[i];\n  const topBar = top?.current?.getBoundingClientRect()?.top || 200;\n\n  const height = window.screen.height - topBar - 16;\n\n  return (\n    <Drawer title=\"Feature Request\">\n      {openModel && <FeatureRequestModal onClose={onModelClose} />}\n      <div className={styles.container}>\n        <ButtonComponent\n          text=\"Request For Premium Features\"\n          starticon={\n            <img className={styles.editIcon} src={editIcon} alt=\"\" />\n          }\n          onclick={toggleModel}\n          fullwidth={true}\n          style={styles.editButton}\n        />\n      </div>\n      <div ref={top} />\n      {requests?.length > 0 ? (\n        <InfiniteLoader\n          loadMoreRows={loadMore}\n          isRowLoaded={isLoaded}\n          rowCount={rowCount}\n          minimumBatchSize={10}\n        >\n          {({\n            onRowsRendered,\n            registerChild\n          }) => (\n            <List\n              height={height}\n              onRowsRendered={onRowsRendered}\n              ref={registerChild}\n              rowCount={requests.length}\n              rowHeight={136}\n              rowRenderer={renderItem}\n              width={window.screen.width}\n            />\n          )}\n        </InfiniteLoader>\n      ) : (\n        <div className={styles.noRequests}>\n          <img src={noRequestsIcon} alt=\"\" />\n          <div>\n            {state === 'raised' ? 'No requests from you.' : 'No requests are resolved yet.'}\n          </div>\n        </div>\n      )}\n    </Drawer>\n  );\n}\n\nFeatureRequest.propTypes = {};\n\nFeatureRequest.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}