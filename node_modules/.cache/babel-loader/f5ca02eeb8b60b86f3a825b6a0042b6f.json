{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/paymentPartners/Partner.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Drawer } from \"../../components/shared/Drawer\";\nimport { Formik } from 'formik';\nimport { Becca } from \"../../api\";\nimport PropTypes from 'prop-types';\nimport Loader from \"../../services/loader\";\nimport SnackBar from \"../../services/snackbar\";\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useToggle } from \"../../hooks/common\";\nimport { FormikInput, Button, Clickable } from 'phoenix-components';\nimport { Switch } from 'phoenix-components';\nimport { useRefreshShop } from \"../../contexts/userContext\";\nimport PencilIcon from \"../../assets/images/address/edit.svg\";\nimport { useDesktop } from \"../../contexts\";\nimport { SideDrawer } from \"../../components/shared/SideDrawer\";\nimport { usePartner } from \"./hooks.js\";\nimport styles from \"./Partner.module.css\";\nimport { KnowMoreDialog } from \"./KnowMoreDialog\";\nimport { getInitialValues, schema, isEmptyPartner, replaceString, steps, heading, title, drawerTitle, url } from \"./utils\";\n\nfunction Partner({\n  name,\n  partners\n}) {\n  _s();\n\n  var _partners$find2;\n\n  const history = useHistory();\n  const location = useLocation();\n  const [openForm, toggleForm] = useToggle(false);\n  const refreshShop = useRefreshShop();\n  const isDesktop = useDesktop();\n  const [partnerData] = usePartner(name);\n  const isCashFree = name === 'cashfree';\n\n  const onUnlive = async () => {\n    try {\n      var _partners$find, _location$state;\n\n      Loader.show();\n      const value = (_partners$find = partners.find(x => x.name === name)) === null || _partners$find === void 0 ? void 0 : _partners$find.enabled;\n      await Becca.toggleAccount(name, {\n        enabled: !value\n      });\n      SnackBar.show('Partner updated successfully', 'success');\n\n      if (location !== null && location !== void 0 && (_location$state = location.state) !== null && _location$state !== void 0 && _location$state.redirectTo) {\n        history.push(location.state.redirectTo);\n        return;\n      }\n\n      refreshShop();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onSubmit = async values => {\n    try {\n      Loader.show();\n\n      if (!isEmptyPartner(name, partners)) {\n        // eslint-disable-next-line no-debugger\n        await Becca.updateAccount(name, values);\n        SnackBar.show('Partner updated successfully', 'success');\n        refreshShop();\n        toggleForm();\n        return;\n      }\n\n      await Becca.addAccount(name, values);\n      SnackBar.show('Partner added successfully', 'success');\n      refreshShop();\n      toggleForm();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onDisconnect = async () => {\n    try {\n      Loader.show();\n      await Becca.deleteAccount(name);\n      SnackBar.show('Partner disconnected successfully', 'success');\n      refreshShop();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const getInitial = () => {\n    const val = getInitialValues({ ...partnerData,\n      name\n    });\n    return val;\n  };\n\n  const isEnabled = (_partners$find2 = partners.find(x => x.name === name)) === null || _partners$find2 === void 0 ? void 0 : _partners$find2.enabled;\n\n  const onClose = () => history.goBack();\n\n  const sideDrawerAction = () => {\n    if (isEmptyPartner(name, partners)) {\n      toggleForm();\n    } else {\n      onDisconnect();\n    }\n  };\n\n  const body = () => {\n    var _partners$find3, _partnerData$config, _partnerData$config2;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.mainContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }\n    }, isEmptyPartner(name, partners) && /*#__PURE__*/React.createElement(KnowMoreDialog, {\n      onAction: () => {\n        toggleForm();\n      },\n      list: steps[name],\n      heading: heading[name],\n      url: url[name],\n      description: `To integrate ${name} into your windo account, please follow these steps`,\n      title: title[name],\n      onBack: () => history.goBack(),\n      name: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }), !isEmptyPartner(name, partners) && /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.partner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.account,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, \" Account Status \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.switch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: isEnabled ? styles.alive : styles.na,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, isEnabled ? 'Live' : 'Unlive'), /*#__PURE__*/React.createElement(Switch, {\n      active: (_partners$find3 = partners.find(x => x.name === name)) === null || _partners$find3 === void 0 ? void 0 : _partners$find3.enabled,\n      onChange: onUnlive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.details,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fullWidth flexBetween\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.account,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, \" Account Details \"), /*#__PURE__*/React.createElement(Clickable, {\n      onClick: toggleForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: PencilIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fullWidth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, \" key id \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, ' ', replaceString(partnerData === null || partnerData === void 0 ? void 0 : (_partnerData$config = partnerData.config) === null || _partnerData$config === void 0 ? void 0 : _partnerData$config.keyId), ' ')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fullWidth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, \" key secret \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, ' ', replaceString(partnerData === null || partnerData === void 0 ? void 0 : (_partnerData$config2 = partnerData.config) === null || _partnerData$config2 === void 0 ? void 0 : _partnerData$config2.keySecret), ' '))), !isDesktop && /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Disconnect\",\n      size: \"large\",\n      bordered: false,\n      fullWidth: true,\n      onClick: onDisconnect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }))), openForm && !isDesktop && /*#__PURE__*/React.createElement(Drawer, {\n      onClose: toggleForm,\n      closeButton: true,\n      title: drawerTitle[name],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: schema,\n      initialValues: getInitial(),\n      onSubmit: onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }, ({\n      submitForm,\n      values\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      label: !isCashFree ? 'Enter Key ID' : 'Enter App ID',\n      placeholder: \"e.g. XYZ1234\",\n      name: \"keyId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      label: \"Enter Key Secret\",\n      placeholder: \"e.g. XYZ1234\",\n      name: \"keySecret\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      fullWidth: true,\n      bordered: false,\n      label: \"Connect\",\n      size: \"large\",\n      onClick: () => submitForm(values, name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    })))))), openForm && isDesktop && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: schema,\n      initialValues: getInitial(),\n      onSubmit: onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }, ({\n      submitForm,\n      values\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(SideDrawer, {\n      backButton: true,\n      onClick: () => {\n        if (isEmptyPartner(name, partners)) {\n          submitForm(values, name);\n          return;\n        }\n\n        sideDrawerAction();\n      },\n      onClose: toggleForm,\n      title: drawerTitle[name],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      label: \"Enter Key ID\",\n      placeholder: \"e.g. XYZ1234\",\n      name: \"keyId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      label: \"Enter Key Secret\",\n      placeholder: \"e.g. XYZ1234\",\n      name: \"keySecret\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.buttonD,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Connect\",\n      size: \"large\",\n      className: styles.buttonI,\n      onClick: () => submitForm(values, name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 23\n      }\n    }))))))));\n  };\n\n  return !isDesktop ? /*#__PURE__*/React.createElement(Drawer, {\n    title: title[name],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 5\n    }\n  }, body()) : /*#__PURE__*/React.createElement(SideDrawer, {\n    backButton: true,\n    onClick: sideDrawerAction,\n    onClose: onClose,\n    button: !isEmptyPartner(name, partners),\n    btnLabel: isEmptyPartner(name, partners) ? 'Connect' : 'Disconnect',\n    title: title[name],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 5\n    }\n  }, body());\n}\n\n_s(Partner, \"uE5HgvQeE3LdASt3uu4Qoiji0Jg=\", false, function () {\n  return [useHistory, useLocation, useToggle, useRefreshShop, useDesktop, usePartner];\n});\n\n_c = Partner;\nPartner.propTypes = {\n  name: PropTypes.string.isRequired,\n  partners: PropTypes.object.isRequired\n};\nexport default Partner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Partner\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/paymentPartners/Partner.jsx"],"names":["React","Drawer","Formik","Becca","PropTypes","Loader","SnackBar","useHistory","useLocation","useToggle","FormikInput","Button","Clickable","Switch","useRefreshShop","useDesktop","SideDrawer","usePartner","styles","KnowMoreDialog","getInitialValues","schema","isEmptyPartner","replaceString","steps","heading","title","drawerTitle","url","Partner","name","partners","history","location","openForm","toggleForm","refreshShop","isDesktop","partnerData","isCashFree","onUnlive","show","value","find","x","enabled","toggleAccount","state","redirectTo","push","e","showError","hide","onSubmit","values","updateAccount","addAccount","onDisconnect","deleteAccount","getInitial","val","isEnabled","onClose","goBack","sideDrawerAction","body","mainContainer","partner","status","account","switch","alive","na","details","PencilIcon","key","config","keyId","keySecret","button","submitForm","container","main","input","buttonD","buttonI","propTypes","string","isRequired","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Drawer } from 'components/shared/Drawer';\nimport { Formik } from 'formik';\nimport { Becca } from 'api';\nimport PropTypes from 'prop-types';\nimport Loader from 'services/loader';\nimport SnackBar from 'services/snackbar';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useToggle } from 'hooks/common';\nimport { FormikInput, Button, Clickable } from 'phoenix-components';\nimport {\n  Switch\n} from 'phoenix-components';\nimport {\n  useRefreshShop,\n} from 'contexts/userContext';\nimport PencilIcon from 'assets/images/address/edit.svg';\nimport { useDesktop } from 'contexts';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { usePartner } from './hooks.js';\nimport styles from './Partner.module.css';\nimport { KnowMoreDialog } from './KnowMoreDialog';\nimport {\n  getInitialValues,\n  schema,\n  isEmptyPartner,\n  replaceString,\n  steps,\n  heading,\n  title,\n  drawerTitle,\n  url\n} from './utils';\n\nfunction Partner({ name, partners }) {\n  const history = useHistory();\n  const location = useLocation();\n  const [openForm, toggleForm] = useToggle(false);\n  const refreshShop = useRefreshShop();\n  const isDesktop = useDesktop();\n  const [partnerData] = usePartner(name);\n  const isCashFree = name === 'cashfree';\n\n  const onUnlive = async () => {\n    try {\n      Loader.show();\n      const value = partners.find(x => x.name === name)?.enabled;\n      await Becca.toggleAccount(name, { enabled: !value });\n      SnackBar.show('Partner updated successfully', 'success');\n      if (location?.state?.redirectTo) {\n        history.push(location.state.redirectTo);\n        return;\n      }\n      refreshShop();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onSubmit = async (values) => {\n    try {\n      Loader.show();\n      if (!isEmptyPartner(name, partners)) {\n        // eslint-disable-next-line no-debugger\n        await Becca.updateAccount(name, values);\n        SnackBar.show('Partner updated successfully', 'success');\n        refreshShop();\n        toggleForm();\n        return;\n      }\n      await Becca.addAccount(name, values);\n      SnackBar.show('Partner added successfully', 'success');\n      refreshShop();\n      toggleForm();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onDisconnect = async () => {\n    try {\n      Loader.show();\n      await Becca.deleteAccount(name);\n      SnackBar.show('Partner disconnected successfully', 'success');\n      refreshShop();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const getInitial = () => {\n    const val = getInitialValues({ ...partnerData, name });\n    return val;\n  };\n\n  const isEnabled = partners.find(x => x.name === name)?.enabled;\n\n  const onClose = () => history.goBack();\n\n  const sideDrawerAction = () => {\n    if (isEmptyPartner(name, partners)) {\n      toggleForm();\n    } else {\n      onDisconnect();\n    }\n  };\n\n  const body = () => (\n    <div className={styles.mainContainer}>\n      {isEmptyPartner(name, partners) && (\n        <KnowMoreDialog\n          onAction={() => {\n            toggleForm();\n          }}\n          list={steps[name]}\n          heading={heading[name]}\n          url={url[name]}\n          description={`To integrate ${name} into your windo account, please follow these steps`}\n          title={title[name]}\n          onBack={() => history.goBack()}\n          name={name}\n        />\n      )}\n      {!isEmptyPartner(name, partners) && (\n        <div className={styles.partner}>\n          <div className={styles.status}>\n            <div className={styles.account}> Account Status </div>\n            <div className={styles.switch}>\n              <div className={isEnabled ? styles.alive : styles.na}>{isEnabled ? 'Live' : 'Unlive'}</div>\n              <Switch active={partners.find(x => x.name === name)?.enabled} onChange={onUnlive} />\n            </div>\n          </div>\n          <div className={styles.details}>\n            <div className=\"fullWidth flexBetween\">\n              <div className={styles.account}> Account Details </div>\n              <Clickable onClick={toggleForm}>\n                <img src={PencilIcon} alt=\"\" />\n              </Clickable>\n            </div>\n            <div className=\"fullWidth\">\n              <div className={styles.key}> key id </div>\n              <div className={styles.value}>\n                {' '}\n                {replaceString(partnerData?.config?.keyId)}\n                {' '}\n              </div>\n            </div>\n            <div className=\"fullWidth\">\n              <div className={styles.key}> key secret </div>\n              <div className={styles.value}>\n                {' '}\n                {replaceString(partnerData?.config?.keySecret)}\n                {' '}\n              </div>\n            </div>\n          </div>\n          {!isDesktop && (\n            <div className={styles.button}>\n              <Button\n                label=\"Disconnect\"\n                size=\"large\"\n                bordered={false}\n                fullWidth\n                onClick={onDisconnect}\n              >\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n      {openForm && !isDesktop && (\n        <Drawer\n          onClose={toggleForm}\n          closeButton\n          title={drawerTitle[name]}\n        >\n          <Formik\n            validationSchema={schema}\n            initialValues={getInitial()}\n            onSubmit={onSubmit}\n          >\n            {({ submitForm, values }) => (\n              <div className={styles.container}>\n                <div className={styles.main}>\n                  <div className={styles.input}>\n                    <FormikInput\n                      label={!isCashFree ? 'Enter Key ID' : 'Enter App ID'}\n                      placeholder=\"e.g. XYZ1234\"\n                      name=\"keyId\"\n                    />\n                  </div>\n                  <div className={styles.input}>\n                    <FormikInput\n                      label=\"Enter Key Secret\"\n                      placeholder=\"e.g. XYZ1234\"\n                      name=\"keySecret\"\n                    />\n                  </div>\n                  <div className={styles.button}>\n                    <Button\n                      fullWidth\n                      bordered={false}\n                      label=\"Connect\"\n                      size=\"large\"\n                      onClick={() => submitForm(values, name)}\n                    >\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            )}\n          </Formik>\n        </Drawer>\n      )}\n      {openForm && isDesktop && (\n        <>\n          <Formik\n            validationSchema={schema}\n            initialValues={getInitial()}\n            onSubmit={onSubmit}\n          >\n            {({ submitForm, values }) => (\n              <div className={styles.container}>\n                <SideDrawer\n                  backButton={true}\n                  onClick={() => {\n                    if (isEmptyPartner(name, partners)) {\n                      submitForm(values, name);\n                      return;\n                    }\n                    sideDrawerAction();\n                  }}\n                  onClose={toggleForm}\n                  title={drawerTitle[name]}\n                >\n                  <div className={styles.main}>\n                    <div className={styles.input}>\n                      <FormikInput\n                        label=\"Enter Key ID\"\n                        placeholder=\"e.g. XYZ1234\"\n                        name=\"keyId\"\n                      />\n                    </div>\n                    <div className={styles.input}>\n                      <FormikInput\n                        label=\"Enter Key Secret\"\n                        placeholder=\"e.g. XYZ1234\"\n                        name=\"keySecret\"\n                      />\n                    </div>\n                    <div className={styles.buttonD}>\n                      <Button\n                        label=\"Connect\"\n                        size=\"large\"\n                        className={styles.buttonI}\n                        onClick={() => submitForm(values, name)}\n                      >\n                      </Button>\n                    </div>\n                  </div>\n                </SideDrawer>\n              </div>\n            )}\n          </Formik>\n        </>\n      )}\n    </div>\n  );\n\n  return !isDesktop ? (\n    <Drawer title={title[name]}>\n      {body()}\n    </Drawer>\n  ) : (\n    <SideDrawer\n      backButton={true}\n      onClick={sideDrawerAction}\n      onClose={onClose}\n      button={!isEmptyPartner(name, partners)}\n      btnLabel={isEmptyPartner(name, partners) ? 'Connect' : 'Disconnect'}\n      title={title[name]}\n    >\n      {body()}\n    </SideDrawer>\n  );\n}\n\nPartner.propTypes = {\n  name: PropTypes.string.isRequired,\n  partners: PropTypes.object.isRequired,\n};\n\nexport default Partner;\n"]},"metadata":{},"sourceType":"module"}