{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/info/Info.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHeader, CardContent, Typography } from '@material-ui/core';\nimport cx from 'classnames';\nimport InfoIcon from \"../../assets/images/info/info.svg\";\nimport InfoClose from \"../../assets/images/info/close.svg\";\nimport styles from \"./Info.module.css\";\n\nfunction Info({\n  text,\n  title,\n  onClose\n}) {\n  _s();\n\n  const [show, setShow] = useState(true);\n  const newText = text.split('\\n');\n\n  if (!show) {\n    return null;\n  }\n\n  const close = () => {\n    if (onClose) {\n      onClose();\n    }\n\n    setShow(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: cx(styles.card),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    classes: {\n      action: styles.action,\n      avatar: styles.noRightMargin,\n      title: styles.content\n    },\n    className: \"padding0\",\n    avatar: /*#__PURE__*/React.createElement(\"img\", {\n      src: InfoIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }\n    }),\n    action: /*#__PURE__*/React.createElement(\"img\", {\n      src: InfoClose,\n      onClick: close,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }\n    }),\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: \"padding0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, newText.map((x, i) => /*#__PURE__*/React.createElement(Typography, {\n    key: i,\n    className: styles.cardText,\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 34\n    }\n  }, x)))));\n}\n\n_s(Info, \"vfh/DqFDMxhJHyczn42K3OB7AlU=\");\n\n_c = Info;\nInfo.propTypes = {\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  onClose: PropTypes.func\n};\nInfo.defaultProps = {\n  onClose: null\n};\nexport default Info;\n\nvar _c;\n\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/info/Info.jsx"],"names":["React","useState","PropTypes","Card","CardHeader","CardContent","Typography","cx","styles","Info","text","title","onClose","show","setShow","newText","split","close","container","card","action","avatar","noRightMargin","content","InfoIcon","InfoClose","map","x","i","cardText","propTypes","string","isRequired","func","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,UAJF,QAKO,mBALP;AAMA,OAAOC,EAAP,MAAe,YAAf;;;AAGA,OAAOC,MAAP;;AAEA,SAASC,IAAT,CAAc;AACZC,EAAAA,IADY;AACNC,EAAAA,KADM;AACCC,EAAAA;AADD,CAAd,EAEG;AAAA;;AACD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMc,OAAO,GAAGL,IAAI,CAACM,KAAL,CAAW,IAAX,CAAhB;;AACA,MAAI,CAACH,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,QAAMI,KAAK,GAAG,MAAM;AAClB,QAAIL,OAAJ,EAAa;AACXA,MAAAA,OAAO;AACR;;AAEDE,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACU,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEX,EAAE,CAACC,MAAM,CAACW,IAAR,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAEZ,MAAM,CAACY,MADR;AAEPC,MAAAA,MAAM,EAAEb,MAAM,CAACc,aAFR;AAGPX,MAAAA,KAAK,EAAEH,MAAM,CAACe;AAHP,KADX;AAME,IAAA,SAAS,EAAC,UANZ;AAOE,IAAA,MAAM,eAAE;AAAK,MAAA,GAAG,EAAEC,QAAV;AAAoB,MAAA,GAAG,EAAC,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPV;AAQE,IAAA,MAAM,eAAE;AAAK,MAAA,GAAG,EAAEC,SAAV;AAAqB,MAAA,OAAO,EAAER,KAA9B;AAAqC,MAAA,GAAG,EAAC,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARV;AASE,IAAA,KAAK,EAAEN,KATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAYE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,OAAO,CAACW,GAAR,CAAY,CAACC,CAAD,EAAIC,CAAJ,kBAAU,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEA,CAAjB;AAAoB,IAAA,SAAS,EAAEpB,MAAM,CAACqB,QAAtC;AAAgD,IAAA,SAAS,EAAC,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiEF,CAAjE,CAAtB,CADH,CAZF,CADF,CADF;AAoBD;;GArCQlB,I;;KAAAA,I;AAuCTA,IAAI,CAACqB,SAAL,GAAiB;AACfnB,EAAAA,KAAK,EAAET,SAAS,CAAC6B,MAAV,CAAiBC,UADT;AAEftB,EAAAA,IAAI,EAAER,SAAS,CAAC6B,MAAV,CAAiBC,UAFR;AAGfpB,EAAAA,OAAO,EAAEV,SAAS,CAAC+B;AAHJ,CAAjB;AAMAxB,IAAI,CAACyB,YAAL,GAAoB;AAClBtB,EAAAA,OAAO,EAAE;AADS,CAApB;AAIA,eAAeH,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography\n} from '@material-ui/core';\nimport cx from 'classnames';\nimport InfoIcon from 'assets/images/info/info.svg';\nimport InfoClose from 'assets/images/info/close.svg';\nimport styles from './Info.module.css';\n\nfunction Info({\n  text, title, onClose\n}) {\n  const [show, setShow] = useState(true);\n  const newText = text.split('\\n');\n  if (!show) {\n    return null;\n  }\n\n  const close = () => {\n    if (onClose) {\n      onClose();\n    }\n\n    setShow(false);\n  };\n\n  return (\n    <div className={styles.container}>\n      <Card className={cx(styles.card)}>\n        <CardHeader\n          classes={{\n            action: styles.action,\n            avatar: styles.noRightMargin,\n            title: styles.content\n          }}\n          className=\"padding0\"\n          avatar={<img src={InfoIcon} alt=\"\" />}\n          action={<img src={InfoClose} onClick={close} alt=\"\" />}\n          title={title}\n        />\n        <CardContent className=\"padding0\">\n          {newText.map((x, i) => <Typography key={i} className={styles.cardText} component=\"div\">{x}</Typography>)}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nInfo.propTypes = {\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  onClose: PropTypes.func,\n};\n\nInfo.defaultProps = {\n  onClose: null,\n};\n\nexport default Info;\n"]},"metadata":{},"sourceType":"module"}