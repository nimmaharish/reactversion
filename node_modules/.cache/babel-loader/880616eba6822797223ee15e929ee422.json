{"ast":null,"code":"import _ from 'lodash';\nimport moment from 'moment';\nexport const windoCashStates = [{\n  label: 'All',\n  value: 'all'\n}, {\n  label: 'Credits',\n  value: 'credits'\n}, {\n  label: 'Debits',\n  value: 'debits'\n}];\nexport const windoCreditStates = [{\n  label: 'My Rewards',\n  value: 'rewards'\n}, {\n  label: 'Redemptions',\n  value: 'redeem'\n}];\nexport const FilterMap = {\n  rewards: {\n    operation: 'add'\n  },\n  redeem: {\n    operation: 'subtract'\n  },\n  all: {},\n  credits: {\n    operation: 'add'\n  },\n  debits: {\n    operation: 'subtract'\n  }\n};\nexport const isPaymentsActive = shop => {\n  const isOnlineActive = _.get(shop, 'paymentModes.online.enabled', false);\n\n  const isCPActive = _.get(shop, 'paymentModes.online.enabled', false);\n\n  const isCodActive = _.get(shop, 'paymentModes.online.enabled', false);\n\n  return isCPActive || isCodActive || isOnlineActive;\n};\nexport const stateList = [{\n  label: 'All',\n  value: 'all'\n}, {\n  label: 'Today',\n  value: 'today'\n}, {\n  label: 'Yesterday',\n  value: 'yesterday'\n}, {\n  label: 'Last Week',\n  value: 'lastweek'\n}, {\n  label: 'Last Month',\n  value: 'lastmonth'\n}, {\n  label: 'Last 3 Months',\n  value: 'last3mon'\n}, {\n  label: 'Last 6 Months',\n  value: 'last6mon'\n}, {\n  label: 'Last Year',\n  value: 'lastyear'\n}];\nexport const formatDate = (from, to) => {\n  if (from && !to) {\n    return {\n      createdAt: {\n        $gte: from\n      }\n    };\n  }\n\n  if (!from && to) {\n    return {\n      createdAt: {\n        $lte: to\n      }\n    };\n  }\n\n  return {\n    createdAt: {\n      $gte: from,\n      $lte: to\n    }\n  };\n};\nexport const dateFilters = {\n  all: null,\n  today: formatDate(moment().startOf('day')),\n  yesterday: formatDate(moment().startOf('day').add(-1, 'day'), moment().startOf('day')),\n  lastweek: formatDate(moment().add(-1, 'week'), moment().endOf('day')),\n  lastmonth: formatDate(moment().add(-1, 'month'), moment().endOf('day')),\n  last3mon: formatDate(moment().add(-3, 'month'), moment().endOf('day')),\n  last6mon: formatDate(moment().add(-6, 'month'), moment().endOf('day')),\n  lastyear: formatDate(moment().add(-1, 'year'), moment().endOf('day'))\n};\nexport const psFilterList = [{\n  label: 'Paid',\n  value: 'payment_success'\n}, {\n  label: 'Pending',\n  value: 'payment_pending'\n}, {\n  label: 'Failed',\n  value: 'payment_failed'\n}, {\n  label: 'Not Paid',\n  value: 'not_paid'\n}, {\n  label: 'Refund Initiated',\n  value: 'refund_initiated'\n}, {\n  label: 'Refunded',\n  value: 'refunded'\n}, {\n  label: 'Partially Refunded',\n  value: 'partial_refunded'\n}, {\n  label: 'Partial Paid',\n  value: 'payment_partial'\n}];\nexport const psFilterMap = {\n  payment_pending: {\n    status: ['payment pending', 'payment custom', 'payment cod']\n  },\n  payment_success: {\n    status: ['payment successful']\n  },\n  payment_failed: {\n    status: ['payment failed']\n  },\n  not_paid: {\n    status: ['not paid']\n  },\n  refund_initiated: {\n    status: ['refund initiated']\n  },\n  refunded: {\n    status: ['refunded']\n  },\n  partial_refunded: {\n    status: ['partial refunded']\n  }\n};\nexport const psStatusFilters = queryString => {\n  const selected = !_.isEmpty(queryString) ? queryString.split(',') : [];\n  const items = selected.map(y => psFilterMap[y]);\n\n  if (!_.isEmpty(items)) {\n    return {\n      $or: _.flatten(items)\n    };\n  }\n\n  return {};\n};\nexport const pmStatusFilters = (rules, queryString) => {\n  const selected = !_.isEmpty(queryString) ? queryString.split(',') : [];\n  const items = selected.map(y => {\n    const paymentMode = rules.find(x => x.value === y);\n    const isOnline = paymentMode.type === 'online';\n    const isCustomPayment = paymentMode.type === 'customPayment';\n    const filter = {\n      'payments.paymentMode': isCustomPayment ? 'custompayment' : paymentMode.type\n    };\n\n    if (isOnline) {\n      filter['payments.vendor'] = paymentMode.value;\n    }\n\n    if (isCustomPayment) {\n      filter['payments.customPaymentDetails.mode'] = paymentMode.name;\n    }\n\n    return filter;\n  });\n\n  if (!_.isEmpty(items)) {\n    return {\n      $or: items\n    };\n  }\n\n  return {};\n};\nexport const extractPsFilters = filters => {\n  var _filters$$or;\n\n  const items = filters === null || filters === void 0 ? void 0 : (_filters$$or = filters.$or) === null || _filters$$or === void 0 ? void 0 : _filters$$or.map(x => x.status).flat();\n\n  if (items) {\n    return {\n      status: items\n    };\n  }\n\n  return null;\n};\nexport const extractPmFilters = filters => {\n  const items = filters === null || filters === void 0 ? void 0 : filters.$or;\n\n  if (items) {\n    return {\n      modes: items\n    };\n  }\n\n  return null;\n};","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/payments/utils.js"],"names":["_","moment","windoCashStates","label","value","windoCreditStates","FilterMap","rewards","operation","redeem","all","credits","debits","isPaymentsActive","shop","isOnlineActive","get","isCPActive","isCodActive","stateList","formatDate","from","to","createdAt","$gte","$lte","dateFilters","today","startOf","yesterday","add","lastweek","endOf","lastmonth","last3mon","last6mon","lastyear","psFilterList","psFilterMap","payment_pending","status","payment_success","payment_failed","not_paid","refund_initiated","refunded","partial_refunded","psStatusFilters","queryString","selected","isEmpty","split","items","map","y","$or","flatten","pmStatusFilters","rules","paymentMode","find","x","isOnline","type","isCustomPayment","filter","name","extractPsFilters","filters","flat","extractPmFilters","modes"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\n\nexport const windoCashStates = [\n  {\n    label: 'All',\n    value: 'all',\n  },\n  {\n    label: 'Credits',\n    value: 'credits',\n  },\n  {\n    label: 'Debits',\n    value: 'debits',\n  }\n];\n\nexport const windoCreditStates = [\n  {\n    label: 'My Rewards',\n    value: 'rewards',\n  },\n  {\n    label: 'Redemptions',\n    value: 'redeem',\n  }\n];\n\nexport const FilterMap = {\n  rewards: {\n    operation: 'add',\n  },\n  redeem: {\n    operation: 'subtract',\n  },\n  all: {\n  },\n  credits: {\n    operation: 'add',\n  },\n  debits: {\n    operation: 'subtract',\n  },\n};\n\nexport const isPaymentsActive = (shop) => {\n  const isOnlineActive = _.get(shop, 'paymentModes.online.enabled', false);\n  const isCPActive = _.get(shop, 'paymentModes.online.enabled', false);\n  const isCodActive = _.get(shop, 'paymentModes.online.enabled', false);\n  return isCPActive || isCodActive || isOnlineActive;\n};\n\nexport const stateList = [\n  {\n    label: 'All',\n    value: 'all',\n  },\n  {\n    label: 'Today',\n    value: 'today',\n  },\n  {\n    label: 'Yesterday',\n    value: 'yesterday',\n  },\n  {\n    label: 'Last Week',\n    value: 'lastweek',\n  },\n  {\n    label: 'Last Month',\n    value: 'lastmonth',\n  },\n  {\n    label: 'Last 3 Months',\n    value: 'last3mon',\n  },\n  {\n    label: 'Last 6 Months',\n    value: 'last6mon',\n  },\n  {\n    label: 'Last Year',\n    value: 'lastyear',\n  }\n];\n\nexport const formatDate = (from, to) => {\n  if (from && !to) {\n    return { createdAt: { $gte: from } };\n  }\n  if (!from && to) {\n    return { createdAt: { $lte: to } };\n  }\n\n  return { createdAt: { $gte: from, $lte: to } };\n};\n\nexport const dateFilters = {\n  all: null,\n  today: formatDate(moment().startOf('day')),\n  yesterday: formatDate(moment().startOf('day').add(-1, 'day'), moment().startOf('day')),\n  lastweek: formatDate(moment().add(-1, 'week'), moment().endOf('day')),\n  lastmonth: formatDate(moment().add(-1, 'month'), moment().endOf('day')),\n  last3mon: formatDate(moment().add(-3, 'month'), moment().endOf('day')),\n  last6mon: formatDate(moment().add(-6, 'month'), moment().endOf('day')),\n  lastyear: formatDate(moment().add(-1, 'year'), moment().endOf('day')),\n};\n\nexport const psFilterList = [\n  {\n    label: 'Paid',\n    value: 'payment_success',\n  },\n  {\n    label: 'Pending',\n    value: 'payment_pending',\n  },\n  {\n    label: 'Failed',\n    value: 'payment_failed',\n  },\n  {\n    label: 'Not Paid',\n    value: 'not_paid',\n  },\n  {\n    label: 'Refund Initiated',\n    value: 'refund_initiated',\n  },\n  {\n    label: 'Refunded',\n    value: 'refunded',\n  },\n  {\n    label: 'Partially Refunded',\n    value: 'partial_refunded',\n  },\n  {\n    label: 'Partial Paid',\n    value: 'payment_partial',\n  },\n];\n\nexport const psFilterMap = {\n  payment_pending: {\n    status: ['payment pending', 'payment custom', 'payment cod']\n  },\n  payment_success: {\n    status: ['payment successful']\n  },\n  payment_failed: {\n    status: ['payment failed']\n  },\n  not_paid: {\n    status: ['not paid']\n  },\n  refund_initiated: {\n    status: ['refund initiated']\n  },\n  refunded: {\n    status: ['refunded']\n  },\n  partial_refunded: {\n    status: ['partial refunded']\n  },\n};\n\nexport const psStatusFilters = (queryString) => {\n  const selected = !_.isEmpty(queryString) ? queryString.split(',') : [];\n  const items = selected.map(y => psFilterMap[y]);\n  if (!_.isEmpty(items)) {\n    return ({ $or: _.flatten(items) });\n  }\n  return {};\n};\n\nexport const pmStatusFilters = (rules, queryString) => {\n  const selected = !_.isEmpty(queryString) ? queryString.split(',') : [];\n  const items = selected.map(y => {\n    const paymentMode = rules.find(x => x.value === y);\n    const isOnline = paymentMode.type === 'online';\n    const isCustomPayment = paymentMode.type === 'customPayment';\n    const filter = {\n      'payments.paymentMode': isCustomPayment ? 'custompayment' : paymentMode.type,\n    };\n    if (isOnline) {\n      filter['payments.vendor'] = paymentMode.value;\n    }\n    if (isCustomPayment) {\n      filter['payments.customPaymentDetails.mode'] = paymentMode.name;\n    }\n    return filter;\n  });\n  if (!_.isEmpty(items)) {\n    return { $or: items };\n  }\n  return {};\n};\n\nexport const extractPsFilters = (filters) => {\n  const items = filters?.$or?.map(x => x.status).flat();\n  if (items) {\n    return ({ status: items });\n  }\n  return null;\n};\n\nexport const extractPmFilters = (filters) => {\n  const items = filters?.$or;\n  if (items) {\n    return ({ modes: items });\n  }\n  return null;\n};\n"]},"metadata":{},"sourceType":"module"}