{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/common/MediaDrawer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Drawer } from \"../shared/Drawer\";\nimport { usePostsMedia } from \"../../hooks/posts\";\nimport { Button, Clickable } from 'phoenix-components';\nimport viewMoreIcon from \"../../assets/v2/products/viewMore.svg\";\nimport addIcon from \"../../assets/images/products/create/add.svg\";\nimport selectedIcon from \"../../assets/v2/products/selectedPost.svg\";\nimport { useToggle } from \"../../hooks/common\";\nimport { Grid, InfiniteLoader } from 'react-virtualized';\nimport styles from \"./ImagePicker.module.css\";\nexport function MediaDrawer({\n  onClose,\n  posts: initialPosts,\n  accept,\n  isMulti,\n  onImageSelect,\n  images,\n  onChange\n}) {\n  _s();\n\n  const [posts, loadMore, hasMore] = usePostsMedia(initialPosts, 1);\n  const [state, setState] = useState(images);\n  const [open, toggleOpen] = useToggle(false);\n  const rowCount = hasMore ? 10000 : posts.length;\n  const height = window.screen.height - 200;\n  const cellWidth = window.screen.width / 3 - 8;\n\n  const isLoaded = i => !!posts[i];\n\n  const set = new Set(state.map(x => x.url));\n\n  const onAddImage = url => () => {\n    const exists = state.findIndex(s => s.url === url);\n\n    if (exists >= 0) {\n      setState(state.filter((_p, idx) => idx !== exists));\n      return;\n    }\n\n    setState([...state, {\n      url,\n      caption: ''\n    }]);\n  };\n\n  const onSubmit = () => {\n    onChange(state);\n  };\n\n  const onSectionRendered = onRowsRendered => ({\n    columnStartIndex,\n    columnStopIndex,\n    rowStartIndex,\n    rowStopIndex\n  }) => {\n    const startIndex = rowStartIndex * 3 + columnStartIndex;\n    const stopIndex = rowStopIndex * 3 + columnStopIndex;\n    onRowsRendered({\n      startIndex,\n      stopIndex\n    });\n  }; // eslint-disable-next-line react/no-multi-comp\n\n\n  const renderCell = el => {\n    const idx = el.rowIndex * 3 + el.columnIndex;\n\n    if (idx >= posts.length) {\n      return null;\n    }\n\n    const p = posts[idx];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: el.key,\n      style: el.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: idx,\n      className: styles.mediaPostGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Clickable, {\n      onClick: onAddImage(p),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: styles.mediaImage,\n      src: p,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    })), set.has(p) && /*#__PURE__*/React.createElement(\"img\", {\n      src: selectedIcon,\n      className: styles.mediaSelected,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    title: \"Select Images\",\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.mediaContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.mediaHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Choose from library\"), !open && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.mediaPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, posts.slice(0, 8).map((p, idx) => /*#__PURE__*/React.createElement(\"div\", {\n    key: idx,\n    className: styles.mediaPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    onClick: onAddImage(p),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.mediaImage,\n    src: p,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }\n  })), set.has(p) && /*#__PURE__*/React.createElement(\"img\", {\n    src: selectedIcon,\n    className: styles.mediaSelected,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Clickable, {\n    className: styles.mediaPost,\n    onClick: toggleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.mediaViewMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: viewMoreIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, \"View more\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.mediaSeparator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, \"Or\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.mediaSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: styles.addBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: addIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: styles.input,\n    type: \"file\",\n    accept: accept,\n    onChange: onImageSelect,\n    multiple: isMulti,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.mediaSelectLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"Take a photo / choose from gallery\"))), open && /*#__PURE__*/React.createElement(InfiniteLoader, {\n    loadMoreRows: loadMore,\n    isRowLoaded: isLoaded,\n    rowCount: rowCount,\n    minimumBatchSize: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, ({\n    onRowsRendered,\n    registerChild\n  }) => /*#__PURE__*/React.createElement(Grid, {\n    onSectionRendered: onSectionRendered(onRowsRendered),\n    ref: registerChild,\n    cellRenderer: renderCell,\n    columnCount: 3,\n    columnWidth: cellWidth,\n    height: height,\n    rowCount: Math.ceil(rowCount / 3),\n    rowHeight: 124,\n    width: window.screen.width - 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.padNextButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    label: \"Next\",\n    size: \"large\",\n    fullWidth: true,\n    primary: true,\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(MediaDrawer, \"CUEg3qk/l1zaM7uXAKusfn5uffY=\", false, function () {\n  return [usePostsMedia, useToggle];\n});\n\n_c = MediaDrawer;\nMediaDrawer.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  images: PropTypes.array.isRequired,\n  posts: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  accept: PropTypes.string,\n  isMulti: PropTypes.bool,\n  onImageSelect: PropTypes.func.isRequired\n};\nMediaDrawer.defaultProps = {\n  accept: undefined,\n  isMulti: false\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MediaDrawer\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/common/MediaDrawer.jsx"],"names":["React","useState","PropTypes","Drawer","usePostsMedia","Button","Clickable","useToggle","Grid","InfiniteLoader","styles","MediaDrawer","onClose","posts","initialPosts","accept","isMulti","onImageSelect","images","onChange","loadMore","hasMore","state","setState","open","toggleOpen","rowCount","length","height","window","screen","cellWidth","width","isLoaded","i","set","Set","map","x","url","onAddImage","exists","findIndex","s","filter","_p","idx","caption","onSubmit","onSectionRendered","onRowsRendered","columnStartIndex","columnStopIndex","rowStartIndex","rowStopIndex","startIndex","stopIndex","renderCell","el","rowIndex","columnIndex","p","key","style","mediaPostGrid","mediaImage","has","selectedIcon","mediaSelected","mediaContainer","mediaHeading","mediaPosts","slice","mediaPost","mediaViewMore","viewMoreIcon","mediaSeparator","mediaSelect","addBlock","addIcon","input","mediaSelectLabel","registerChild","Math","ceil","padNextButton","propTypes","func","isRequired","array","string","bool","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Drawer } from 'components/shared/Drawer';\nimport { usePostsMedia } from 'hooks/posts';\nimport { Button, Clickable } from 'phoenix-components';\nimport viewMoreIcon from 'assets/v2/products/viewMore.svg';\nimport addIcon from 'assets/images/products/create/add.svg';\nimport selectedIcon from 'assets/v2/products/selectedPost.svg';\nimport { useToggle } from 'hooks/common';\nimport { Grid, InfiniteLoader } from 'react-virtualized';\nimport styles from './ImagePicker.module.css';\n\nexport function MediaDrawer({\n  onClose,\n  posts: initialPosts,\n  accept,\n  isMulti,\n  onImageSelect,\n  images,\n  onChange\n}) {\n  const [posts, loadMore, hasMore] = usePostsMedia(initialPosts, 1);\n  const [state, setState] = useState(images);\n  const [open, toggleOpen] = useToggle(false);\n\n  const rowCount = hasMore ? 10000 : posts.length;\n  const height = window.screen.height - 200;\n  const cellWidth = window.screen.width / 3 - 8;\n  const isLoaded = i => !!posts[i];\n\n  const set = new Set(state.map(x => x.url));\n\n  const onAddImage = (url) => () => {\n    const exists = state.findIndex(s => s.url === url);\n    if (exists >= 0) {\n      setState(state.filter((_p, idx) => idx !== exists));\n      return;\n    }\n    setState([...state, {\n      url,\n      caption: ''\n    }]);\n  };\n\n  const onSubmit = () => {\n    onChange(state);\n  };\n\n  const onSectionRendered = (onRowsRendered) => ({\n    columnStartIndex,\n    columnStopIndex,\n    rowStartIndex,\n    rowStopIndex\n  }) => {\n    const startIndex = rowStartIndex * 3 + columnStartIndex;\n    const stopIndex = rowStopIndex * 3 + columnStopIndex;\n\n    onRowsRendered({\n      startIndex,\n      stopIndex\n    });\n  };\n\n  // eslint-disable-next-line react/no-multi-comp\n  const renderCell = (el) => {\n    const idx = el.rowIndex * 3 + el.columnIndex;\n    if (idx >= posts.length) {\n      return null;\n    }\n    const p = posts[idx];\n    return (\n      <div key={el.key} style={el.style}>\n        <div key={idx} className={styles.mediaPostGrid}>\n          <Clickable onClick={onAddImage(p)}>\n            <img className={styles.mediaImage} src={p} alt=\"\" />\n          </Clickable>\n          {set.has(p) && (\n            <img src={selectedIcon} className={styles.mediaSelected} alt=\"\" />\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Drawer title=\"Select Images\" onClose={onClose}>\n      <div className={styles.mediaContainer}>\n        <div className={styles.mediaHeading}>Choose from library</div>\n        {!open && (\n          <div>\n            <div className={styles.mediaPosts}>\n              {posts.slice(0, 8)\n                .map((p, idx) => (\n                  <div key={idx} className={styles.mediaPost}>\n                    <Clickable onClick={onAddImage(p)}>\n                      <img className={styles.mediaImage} src={p} alt=\"\" />\n                    </Clickable>\n                    {set.has(p) && (\n                      <img src={selectedIcon} className={styles.mediaSelected} alt=\"\" />\n                    )}\n                  </div>\n                ))}\n              <Clickable className={styles.mediaPost} onClick={toggleOpen}>\n                <div className={styles.mediaViewMore}>\n                  <img src={viewMoreIcon} alt=\"\" />\n                  <div>View more</div>\n                </div>\n              </Clickable>\n            </div>\n            <div className={styles.mediaSeparator}>\n              <div />\n              <div>Or</div>\n              <div />\n            </div>\n            <div className={styles.mediaSelect}>\n              <label className={styles.addBlock}>\n                <img src={addIcon} alt=\"\" />\n                <input\n                  className={styles.input}\n                  type=\"file\"\n                  accept={accept}\n                  onChange={onImageSelect}\n                  multiple={isMulti}\n                />\n              </label>\n              <div className={styles.mediaSelectLabel}>\n                Take a photo / choose from gallery\n              </div>\n            </div>\n          </div>\n        )}\n        {open && (\n          <InfiniteLoader\n            loadMoreRows={loadMore}\n            isRowLoaded={isLoaded}\n            rowCount={rowCount}\n            minimumBatchSize={10}\n          >\n            {({\n              onRowsRendered,\n              registerChild\n            }) => (\n              <Grid\n                onSectionRendered={onSectionRendered(onRowsRendered)}\n                ref={registerChild}\n                cellRenderer={renderCell}\n                columnCount={3}\n                columnWidth={cellWidth}\n                height={height}\n                rowCount={Math.ceil(rowCount / 3)}\n                rowHeight={124}\n                width={window.screen.width - 16}\n              />\n            )}\n          </InfiniteLoader>\n        )}\n        <div className={styles.padNextButton} />\n        <Button\n          label=\"Next\"\n          size=\"large\"\n          fullWidth={true}\n          primary={true}\n          onClick={onSubmit}\n        />\n      </div>\n    </Drawer>\n  );\n}\n\nMediaDrawer.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  images: PropTypes.array.isRequired,\n  posts: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  accept: PropTypes.string,\n  isMulti: PropTypes.bool,\n  onImageSelect: PropTypes.func.isRequired,\n};\n\nMediaDrawer.defaultProps = {\n  accept: undefined,\n  isMulti: false,\n};\n"]},"metadata":{},"sourceType":"module"}