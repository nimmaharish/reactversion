{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/profile/paymentMode/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useField } from 'formik';\nimport PropTypes from 'prop-types';\nimport { Button, FormikInput, Card } from 'phoenix-components';\nimport { OnlineMode } from \"../../../components/profile/payments/OnlineMode\";\nimport { FilesUploader } from \"../../../components/common/FilesUploader\";\nimport { Editor } from '@tinymce/tinymce-react';\nimport { ErrorMessage } from 'formik';\nimport { useDesktop } from \"../../../contexts\";\nimport { FooterButton } from \"../../../components/common/FooterButton\";\nimport deleteIcon from \"../../../assets/images/address/delete.svg\";\nimport SnackBar from \"../../../services/snackbar\";\nimport { cssStyle } from \"../../../constants/tinymce\";\nimport styles from \"./Form.module.css\";\n\nfunction Form({\n  index,\n  onSave\n}) {\n  _s();\n\n  var _customPayment$media$, _customPayment$media;\n\n  const prefix = `custompayment.configured[${index}]`;\n  const isDesktop = useDesktop();\n  const [{\n    value: customPayment\n  },, {\n    setValue\n  }] = useField(prefix);\n  const [{\n    value: customPayments\n  },, {\n    setValue: setCustomPayments\n  }] = useField('custompayment.configured');\n  const [,, {\n    setValue: setCpEnabled\n  }] = useField('custompayment.enabled');\n  const isNew = customPayment === null || customPayment === void 0 ? void 0 : customPayment.isNew;\n  const images = (_customPayment$media$ = customPayment === null || customPayment === void 0 ? void 0 : (_customPayment$media = customPayment.media) === null || _customPayment$media === void 0 ? void 0 : _customPayment$media.map((imgUrl, index) => ({\n    index,\n    value: imgUrl,\n    name: ''\n  }))) !== null && _customPayment$media$ !== void 0 ? _customPayment$media$ : [];\n\n  const onDelete = () => {\n    const newValues = customPayments.filter((_v, idx) => idx !== index) || [{\n      mode: '',\n      details: '',\n      receiptsRequired: true,\n      status: 'live',\n      isNew: true,\n      media: []\n    }];\n    setCustomPayments(newValues);\n\n    if (newValues.length === 0) {\n      setCpEnabled(false);\n    }\n\n    onSave();\n  };\n\n  const onImageUpload = links => {\n    customPayment.media = links.map(x => x.value);\n    setValue(customPayment);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !isDesktop && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Enter Payment Method\",\n    placeholder: \"e.g. Bank Transfer, Venmo, UPI etc..\",\n    name: `${prefix}.mode`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.editor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.aboutLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Enter Payment Details\"), /*#__PURE__*/React.createElement(Editor, {\n    value: customPayment === null || customPayment === void 0 ? void 0 : customPayment.details,\n    apiKey: \"jk7y6v6dbe2h16qh13q5klle5sz76ddgevc6ph3v1sa4bgu1\",\n    scriptLoading: {\n      async: true\n    },\n    init: {\n      menubar: false,\n      toolbar: false,\n      height: '100px',\n      width: '100%',\n      placeholder: 'e.g. UPI ID, Venmo ID, Bank Account Number etc..',\n      statusbar: false,\n      branding: false,\n      selector: 'textarea',\n      content_style: cssStyle,\n      paste_data_images: false,\n      plugins: ['paste']\n    },\n    onEditorChange: e => {\n      setValue({ ...customPayment,\n        details: e\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.imgContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Payment Media Upload (optional)\"), /*#__PURE__*/React.createElement(FilesUploader, {\n    label: \"\",\n    onChange: onImageUpload,\n    isMulti: false,\n    files: images,\n    accept: \"image/*\",\n    showClose: true,\n    showImg: true,\n    bottomLabel: \"Upload QR code Image or custom payment Image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: `${prefix}.details`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(OnlineMode, {\n    label: \"Upload Payment Screenshot to Confirm the Order.\",\n    name: `${prefix}.receiptsRequired`,\n    onChange: value => {\n      setValue({ ...customPayment,\n        receiptsRequired: value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), !isNew && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexEnd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: deleteIcon,\n    alt: \"\",\n    onClick: () => onDelete(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FooterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    fullWidth: true,\n    bordered: false,\n    label: \"Save\",\n    onClick: () => {\n      if (!(customPayment !== null && customPayment !== void 0 && customPayment.mode) && !(customPayment !== null && customPayment !== void 0 && customPayment.details)) {\n        SnackBar.show('Please add all required fields', 'error');\n        return;\n      }\n\n      onSave();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }))), isDesktop && /*#__PURE__*/React.createElement(Card, {\n    className: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Details of Custom Payment\"), /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Enter Payment Method\",\n    placeholder: \"e.g. Bank Transfer, Venmo, UPI etc..\",\n    name: `${prefix}.mode`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.editor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.aboutLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, \"Enter Payment Details\"), /*#__PURE__*/React.createElement(Editor, {\n    value: customPayment === null || customPayment === void 0 ? void 0 : customPayment.details,\n    apiKey: \"jk7y6v6dbe2h16qh13q5klle5sz76ddgevc6ph3v1sa4bgu1\",\n    scriptLoading: {\n      async: true\n    },\n    init: {\n      menubar: false,\n      toolbar: false,\n      height: '100px',\n      width: '100%',\n      placeholder: 'e.g. UPI ID, Venmo ID, Bank Account Number etc..',\n      statusbar: false,\n      branding: false,\n      selector: 'textarea',\n      content_style: 'body { font-family: inherit; }' + '.mce-content-body {  margin: 0 } p { margin: 4px 0; } ',\n      paste_data_images: false,\n      plugins: ['paste']\n    },\n    onEditorChange: e => {\n      setValue({ ...customPayment,\n        details: e\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: `${prefix}.details`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.imgContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, \"Payment Media Upload (optional)\"), /*#__PURE__*/React.createElement(FilesUploader, {\n    label: \"\",\n    onChange: onImageUpload,\n    isMulti: false,\n    files: images,\n    accept: \"image/*\",\n    showClose: true,\n    showImg: true,\n    bottomLabel: \"Upload QR code Image or custom payment Image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(OnlineMode, {\n    label: \"Upload Payment Screenshot to Confirm the Order.\",\n    name: `${prefix}.receiptsRequired`,\n    onChange: value => {\n      setValue({ ...customPayment,\n        receiptsRequired: value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }), !isNew && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexEnd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: deleteIcon,\n    alt: \"\",\n    onClick: () => {\n      if (!(customPayment !== null && customPayment !== void 0 && customPayment.mode) && !(customPayment !== null && customPayment !== void 0 && customPayment.details)) {\n        return null;\n      }\n\n      onDelete();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.footer1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    label: \"Save\",\n    onClick: () => {\n      if (!(customPayment !== null && customPayment !== void 0 && customPayment.mode) && !(customPayment !== null && customPayment !== void 0 && customPayment.details)) {\n        SnackBar.show('Please add all required fields', 'error');\n        return;\n      }\n\n      onSave();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  })))));\n}\n\n_s(Form, \"V/ZMXgNqJHzxDZOjZneNKJy4gGE=\", false, function () {\n  return [useDesktop, useField, useField, useField];\n});\n\n_c = Form;\nForm.propTypes = {\n  index: PropTypes.number,\n  onSave: PropTypes.func.isRequired\n};\nForm.defaultProps = {\n  index: -1\n};\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/paymentMode/Form.jsx"],"names":["React","useField","PropTypes","Button","FormikInput","Card","OnlineMode","FilesUploader","Editor","ErrorMessage","useDesktop","FooterButton","SnackBar","cssStyle","styles","Form","index","onSave","prefix","isDesktop","value","customPayment","setValue","customPayments","setCustomPayments","setCpEnabled","isNew","images","media","map","imgUrl","name","onDelete","newValues","filter","_v","idx","mode","details","receiptsRequired","status","length","onImageUpload","links","x","main","editor","aboutLabel","async","menubar","toolbar","height","width","placeholder","statusbar","branding","selector","content_style","paste_data_images","plugins","e","imgContainer","error","deleteIcon","show","card","heading","footer1","propTypes","number","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useField } from 'formik';\nimport PropTypes from 'prop-types';\nimport { Button, FormikInput, Card } from 'phoenix-components';\nimport { OnlineMode } from 'components/profile/payments/OnlineMode';\nimport { FilesUploader } from 'components/common/FilesUploader';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { ErrorMessage } from 'formik';\nimport { useDesktop } from 'contexts';\nimport { FooterButton } from 'components/common/FooterButton';\nimport deleteIcon from 'assets/images/address/delete.svg';\nimport SnackBar from 'services/snackbar';\nimport { cssStyle } from 'constants/tinymce';\nimport styles from './Form.module.css';\n\nfunction Form({ index, onSave }) {\n  const prefix = `custompayment.configured[${index}]`;\n  const isDesktop = useDesktop();\n  const [{ value: customPayment }, , { setValue }] = useField(prefix);\n  const [{ value: customPayments }, , { setValue: setCustomPayments }] = useField('custompayment.configured');\n  const [, , { setValue: setCpEnabled }] = useField('custompayment.enabled');\n  const isNew = customPayment?.isNew;\n  const images = customPayment?.media?.map((imgUrl, index) => ({ index, value: imgUrl, name: '' })) ?? [];\n\n  const onDelete = () => {\n    const newValues = (customPayments.filter((_v, idx) => idx !== index)) || [{\n      mode: '', details: '', receiptsRequired: true, status: 'live', isNew: true, media: []\n    }];\n    setCustomPayments(newValues);\n    if (newValues.length === 0) {\n      setCpEnabled(false);\n    }\n    onSave();\n  };\n\n  const onImageUpload = (links) => {\n    customPayment.media = links.map(x => x.value);\n    setValue(customPayment);\n  };\n\n  return (\n    <>\n      {!isDesktop && (\n        <div className={styles.main}>\n          <FormikInput\n            label=\"Enter Payment Method\"\n            placeholder=\"e.g. Bank Transfer, Venmo, UPI etc..\"\n            name={`${prefix}.mode`}\n          />\n          <div className={styles.editor}>\n            <div className={styles.aboutLabel}>\n              Enter Payment Details\n            </div>\n            <Editor\n              value={customPayment?.details}\n              apiKey=\"jk7y6v6dbe2h16qh13q5klle5sz76ddgevc6ph3v1sa4bgu1\"\n              scriptLoading={{ async: true }}\n              init={{\n                menubar: false,\n                toolbar: false,\n                height: '100px',\n                width: '100%',\n                placeholder: 'e.g. UPI ID, Venmo ID, Bank Account Number etc..',\n                statusbar: false,\n                branding: false,\n                selector: 'textarea',\n                content_style: cssStyle,\n                paste_data_images: false,\n                plugins: [\n                  'paste'\n                ],\n              }}\n              onEditorChange={(e) => {\n                setValue({\n                  ...customPayment,\n                  details: e,\n                });\n              }}\n            />\n          </div>\n          <div className={styles.imgContainer}>\n            <p>Payment Media Upload (optional)</p>\n            <FilesUploader\n              label=\"\"\n              onChange={onImageUpload}\n              isMulti={false}\n              files={images}\n              accept=\"image/*\"\n              showClose={true}\n              showImg={true}\n              bottomLabel=\"Upload QR code Image or custom payment Image\"\n            />\n          </div>\n          <div className={styles.error}>\n            <ErrorMessage name={`${prefix}.details`} />\n          </div>\n          <OnlineMode\n            label=\"Upload Payment Screenshot to Confirm the Order.\"\n            name={`${prefix}.receiptsRequired`}\n            onChange={(value) => {\n              setValue({\n                ...customPayment,\n                receiptsRequired: value,\n              });\n            }}\n          />\n          {!isNew && (\n            <div className=\"flexEnd\">\n              <img src={deleteIcon} alt=\"\" onClick={() => onDelete()} />\n            </div>\n          )}\n          <FooterButton>\n            <Button\n              size=\"large\"\n              fullWidth\n              bordered={false}\n              label=\"Save\"\n              onClick={() => {\n                if (!customPayment?.mode && !customPayment?.details) {\n                  SnackBar.show('Please add all required fields', 'error');\n                  return;\n                }\n                onSave();\n              }}\n            />\n          </FooterButton>\n        </div>\n      )}\n      {isDesktop && (\n        <Card className={styles.card}>\n          <div className={styles.main}>\n            <div className={styles.heading}>Details of Custom Payment</div>\n            <FormikInput\n              label=\"Enter Payment Method\"\n              placeholder=\"e.g. Bank Transfer, Venmo, UPI etc..\"\n              name={`${prefix}.mode`}\n            />\n            <div className={styles.editor}>\n              <div className={styles.aboutLabel}>\n                Enter Payment Details\n              </div>\n              <Editor\n                value={customPayment?.details}\n                apiKey=\"jk7y6v6dbe2h16qh13q5klle5sz76ddgevc6ph3v1sa4bgu1\"\n                scriptLoading={{ async: true }}\n                init={{\n                  menubar: false,\n                  toolbar: false,\n                  height: '100px',\n                  width: '100%',\n                  placeholder: 'e.g. UPI ID, Venmo ID, Bank Account Number etc..',\n                  statusbar: false,\n                  branding: false,\n                  selector: 'textarea',\n                  content_style: 'body { font-family: inherit; }'\n                    + '.mce-content-body {  margin: 0 } p { margin: 4px 0; } ',\n                  paste_data_images: false,\n                  plugins: [\n                    'paste'\n                  ],\n                }}\n                onEditorChange={(e) => {\n                  setValue({\n                    ...customPayment,\n                    details: e,\n                  });\n                }}\n              />\n            </div>\n            <div className={styles.error}>\n              <ErrorMessage name={`${prefix}.details`} />\n            </div>\n            <div className={styles.imgContainer}>\n              <p>Payment Media Upload (optional)</p>\n              <FilesUploader\n                label=\"\"\n                onChange={onImageUpload}\n                isMulti={false}\n                files={images}\n                accept=\"image/*\"\n                showClose={true}\n                showImg={true}\n                bottomLabel=\"Upload QR code Image or custom payment Image\"\n              />\n            </div>\n            <OnlineMode\n              label=\"Upload Payment Screenshot to Confirm the Order.\"\n              name={`${prefix}.receiptsRequired`}\n              onChange={(value) => {\n                setValue({\n                  ...customPayment,\n                  receiptsRequired: value,\n                });\n              }}\n            />\n            {!isNew && (\n              <div className=\"flexEnd\">\n                <img\n                  src={deleteIcon}\n                  alt=\"\"\n                  onClick={() => {\n                    if (!customPayment?.mode && !customPayment?.details) {\n                      return null;\n                    }\n                    onDelete();\n                  }} />\n              </div>\n            )}\n            <div className={styles.footer1}>\n              <Button\n                size=\"large\"\n                label=\"Save\"\n                onClick={() => {\n                  if (!customPayment?.mode && !customPayment?.details) {\n                    SnackBar.show('Please add all required fields', 'error');\n                    return;\n                  }\n                  onSave();\n                }}\n              />\n            </div>\n          </div>\n        </Card>\n      )}\n    </>\n  );\n}\n\nForm.propTypes = {\n  index: PropTypes.number,\n  onSave: PropTypes.func.isRequired\n};\n\nForm.defaultProps = {\n  index: -1,\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}