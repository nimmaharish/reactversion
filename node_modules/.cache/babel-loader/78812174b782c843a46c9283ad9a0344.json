{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/shared/InputAlert.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog } from '@material-ui/core';\nimport { useDesktop } from \"../../contexts\";\nimport closeIcon from \"../../assets/images/orders/list/close.svg\";\nimport { Button, Clickable, ReactInput } from 'phoenix-components';\nimport cx from 'classnames';\nimport styles from \"./InputAlert.module.css\";\nexport function InputAlert({\n  title,\n  onCancel,\n  primary,\n  inputTitle,\n  onSave,\n  type,\n  label,\n  placeholder,\n  defaultValue\n}) {\n  _s();\n\n  const [value, setValue] = useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : '');\n  const isDesktop = useDesktop();\n\n  const onChange = val => {\n    setValue(val);\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    PaperProps: {\n      classes: {\n        root: styles.dialog\n      }\n    },\n    maxWidth: isDesktop ? 'xs' : 'md',\n    open: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, isDesktop && /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('flexEnd', styles.padding),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    onClick: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: closeIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(ReactInput, {\n    inputClass: styles.inputClass,\n    type: type,\n    title: inputTitle,\n    label: label,\n    placeholder: placeholder,\n    value: value,\n    setValue: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: styles.saveButton,\n    size: \"large\",\n    onClick: () => {\n      onSave(value);\n      setValue('');\n    },\n    label: primary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }))));\n}\n\n_s(InputAlert, \"ZtKUpoTvO8MTiMrE9VoKklaPqTA=\", false, function () {\n  return [useDesktop];\n});\n\n_c = InputAlert;\nInputAlert.propTypes = {\n  title: PropTypes.string,\n  inputTitle: PropTypes.string,\n  onSave: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  primary: PropTypes.string,\n  type: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  defaultValue: PropTypes.string\n};\nInputAlert.defaultProps = {\n  title: 'Add Title',\n  inputTitle: '',\n  primary: 'CONTINUE',\n  type: 'text',\n  placeholder: 'Enter input',\n  label: 'Enter input',\n  defaultValue: ''\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"InputAlert\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/shared/InputAlert.jsx"],"names":["React","useState","PropTypes","Dialog","useDesktop","Button","Clickable","ReactInput","cx","styles","InputAlert","title","onCancel","primary","inputTitle","onSave","type","label","placeholder","defaultValue","value","setValue","isDesktop","onChange","val","classes","root","dialog","padding","closeIcon","container","inputClass","buttons","saveButton","propTypes","string","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog } from '@material-ui/core';\nimport { useDesktop } from 'contexts';\nimport closeIcon from 'assets/images/orders/list/close.svg';\nimport { Button, Clickable, ReactInput } from 'phoenix-components';\nimport cx from 'classnames';\nimport styles from './InputAlert.module.css';\n\nexport function InputAlert({\n  title, onCancel, primary, inputTitle, onSave, type, label, placeholder, defaultValue\n}) {\n  const [value, setValue] = useState(defaultValue ?? '');\n  const isDesktop = useDesktop();\n\n  const onChange = (val) => {\n    setValue(val);\n  };\n\n  return (\n    <Dialog\n      PaperProps={{\n        classes: {\n          root: styles.dialog,\n        }\n      }}\n      maxWidth={isDesktop ? 'xs' : 'md'}\n      open={true}\n    >\n      {isDesktop && (\n        <div className={cx('flexEnd', styles.padding)}>\n          <Clickable\n            onClick={onCancel}>\n            <img src={closeIcon} alt=\"\" />\n          </Clickable>\n        </div>\n      )}\n      <div className={styles.container}>\n        <div className={styles.title}>{title}</div>\n        <ReactInput\n          inputClass={styles.inputClass}\n          type={type}\n          title={inputTitle}\n          label={label}\n          placeholder={placeholder}\n          value={value}\n          setValue={onChange}\n        />\n        <div className={styles.buttons}>\n          <Button\n            className={styles.saveButton}\n            size=\"large\"\n            onClick={() => {\n              onSave(value);\n              setValue('');\n            }}\n            label={primary} />\n        </div>\n      </div>\n    </Dialog>\n  );\n}\n\nInputAlert.propTypes = {\n  title: PropTypes.string,\n  inputTitle: PropTypes.string,\n  onSave: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  primary: PropTypes.string,\n  type: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  defaultValue: PropTypes.string,\n};\n\nInputAlert.defaultProps = {\n  title: 'Add Title',\n  inputTitle: '',\n  primary: 'CONTINUE',\n  type: 'text',\n  placeholder: 'Enter input',\n  label: 'Enter input',\n  defaultValue: ''\n};\n"]},"metadata":{},"sourceType":"module"}