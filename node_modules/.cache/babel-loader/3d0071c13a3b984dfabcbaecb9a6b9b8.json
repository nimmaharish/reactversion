{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/orders/Multi/View.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useConfirmedOrders, useOrder, usePendingOrders, useRefresh, useSetIds, useTransformedShippedOrders } from \"../../../contexts/orderContext\";\nimport { useToggle } from \"../../../hooks/common\";\nimport { Factory } from \"../../../api\";\nimport SnackBar from \"../../../services/snackbar\";\nimport Loader from \"../../../services/loader\";\nimport { ShippingModal } from \"../../../components/orders/ShippingModal\";\nimport { OrderCard } from \"../../../components/orders/multi/OrderCard\";\nimport { Button } from 'phoenix-components';\nimport checkedIcon from \"../../../assets/images/orders/multi/check.svg\";\nimport unCheckedIcon from \"../../../assets/images/orders/multi/uncheck.svg\";\nimport Alert from \"../../../components/shared/alert/Alert\";\nimport cx from 'classnames';\nimport EventManager from \"../../../utils/events\";\nimport { useDesktop } from \"../../../contexts\";\nimport { SideDrawer } from \"../../../components/shared/SideDrawer\";\nimport styles from \"./View.module.css\";\n\nfunction View() {\n  _s();\n\n  const refresh = useRefresh();\n  const order = useOrder();\n  const pendingOrders = usePendingOrders();\n  const confirmedOrders = useConfirmedOrders();\n  const shippedOrders = useTransformedShippedOrders();\n  const [checkedPenOrders, setCheckedPenOrders] = useState([]);\n  const [checkedConOrders, setCheckedConOrders] = useState([]);\n  const [grpId, setGrpId] = useState('');\n  const [deliveryForm, setDeliveryForm] = useToggle(false);\n  const [showError, setShowError] = useToggle(false);\n  const setIds = useSetIds();\n  const isDesktop = useDesktop();\n  const emptyIdErr = 'Oops! You haven\\'t ticked the orders you\\'d like to proceed with.';\n\n  const readyToShip = async () => {\n    if (checkedConOrders.length === 0) {\n      setShowError();\n      return;\n    }\n\n    Factory.getShippingMeta(order === null || order === void 0 ? void 0 : order._id, {\n      ids: checkedConOrders\n    }).then(res => {\n      setGrpId(res.groupId);\n      setDeliveryForm(true);\n    }).catch(() => {\n      SnackBar.show('something went wrong', 'error');\n      Loader.hide();\n    });\n  };\n\n  const isCheckedPen = id => checkedPenOrders.includes(id);\n\n  const isCheckedAcc = id => checkedConOrders.includes(id);\n\n  const updatePenSelections = id => {\n    setCheckedPenOrders([]);\n\n    if (isCheckedPen(id)) {\n      const others = checkedPenOrders.filter(x => x !== id);\n      setCheckedPenOrders(others);\n      setIds(others);\n      return;\n    }\n\n    setCheckedPenOrders(checkedPenOrders.concat(id));\n    setIds(checkedPenOrders.concat(id));\n  };\n\n  const onReadyToShipClose = async () => {\n    setCheckedConOrders([]);\n    setDeliveryForm(false);\n    await refresh();\n  };\n\n  const updateConSelections = id => {\n    setCheckedConOrders([]);\n\n    if (isCheckedAcc(id)) {\n      const others = checkedConOrders.filter(x => x !== id);\n      setCheckedConOrders(others);\n      setIds(others);\n      return;\n    }\n\n    setIds(checkedConOrders.concat(id));\n    setCheckedConOrders(checkedConOrders.concat(id));\n  };\n\n  const acceptOrder = async () => {\n    if (checkedPenOrders.length === 0) {\n      setShowError();\n      return;\n    }\n\n    try {\n      Loader.show();\n      await Factory.confirm(order._id, {\n        ids: checkedPenOrders\n      });\n      EventManager.emitEvent('order_accepted', {\n        id: order._id,\n        length: checkedPenOrders.length\n      });\n      await refresh();\n      setCheckedPenOrders([]);\n      setIds([]);\n    } catch (e) {\n      console.error(e);\n      SnackBar.show('Something went wrong', 'error');\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, showError && /*#__PURE__*/React.createElement(Alert, {\n    text: emptyIdErr,\n    textClass: styles.textClass,\n    btnText: \"Ok\",\n    onClick: setShowError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), pendingOrders.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Pending Orders\"), pendingOrders.map(x => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.flex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    onClick: () => updatePenSelections(x._id),\n    src: isCheckedPen(x._id) ? checkedIcon : unCheckedIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(OrderCard, {\n    order: x,\n    type: \"pending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    className: styles.confirmButton,\n    fullWidth: true,\n    label: `Accept Order${checkedPenOrders.length > 1 ? 's' : ''}`,\n    onClick: acceptOrder,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  })), confirmedOrders.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.heading, styles.divider),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"Orders Accepted\"), confirmedOrders.map(x => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.flex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    onClick: () => updateConSelections(x._id),\n    src: isCheckedAcc(x._id) ? checkedIcon : unCheckedIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(OrderCard, {\n    order: x,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    className: styles.confirmButton,\n    fullWidth: true,\n    label: \"Ready To Ship\",\n    onClick: readyToShip,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  })), shippedOrders.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.heading, styles.divider),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, \"Shipped Items\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.shipBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, shippedOrders.map(x => x.items.map(y => /*#__PURE__*/React.createElement(OrderCard, {\n    type: \"shipped\",\n    order: y,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 54\n    }\n  }))))), deliveryForm && (isDesktop ? /*#__PURE__*/React.createElement(SideDrawer, {\n    title: \"Shipping Type\",\n    onClose: onReadyToShipClose,\n    backButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ShippingModal, {\n    groupId: grpId,\n    order: order,\n    onClose: onReadyToShipClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(ShippingModal, {\n    groupId: grpId,\n    order: order,\n    onClose: onReadyToShipClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  })));\n}\n\n_s(View, \"aM4uzwMFiXtN8S+2bPyXg7CBYb8=\", false, function () {\n  return [useRefresh, useOrder, usePendingOrders, useConfirmedOrders, useTransformedShippedOrders, useToggle, useToggle, useSetIds, useDesktop];\n});\n\n_c = View;\nView.propTypes = {// onLogin: PropTypes.func.isRequired,\n};\nexport default View;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/orders/Multi/View.jsx"],"names":["React","useState","useConfirmedOrders","useOrder","usePendingOrders","useRefresh","useSetIds","useTransformedShippedOrders","useToggle","Factory","SnackBar","Loader","ShippingModal","OrderCard","Button","Alert","cx","EventManager","useDesktop","SideDrawer","styles","View","refresh","order","pendingOrders","confirmedOrders","shippedOrders","checkedPenOrders","setCheckedPenOrders","checkedConOrders","setCheckedConOrders","grpId","setGrpId","deliveryForm","setDeliveryForm","showError","setShowError","setIds","isDesktop","emptyIdErr","readyToShip","length","getShippingMeta","_id","ids","then","res","groupId","catch","show","hide","isCheckedPen","id","includes","isCheckedAcc","updatePenSelections","others","filter","x","concat","onReadyToShipClose","updateConSelections","acceptOrder","confirm","emitEvent","e","console","error","container","textClass","heading","map","flex","checkedIcon","unCheckedIcon","confirmButton","divider","shipBlock","items","y","propTypes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  useConfirmedOrders,\n  useOrder,\n  usePendingOrders,\n  useRefresh,\n  useSetIds,\n  useTransformedShippedOrders\n} from 'contexts/orderContext';\nimport { useToggle } from 'hooks/common';\nimport { Factory } from 'api';\nimport SnackBar from 'services/snackbar';\nimport Loader from 'services/loader';\nimport { ShippingModal } from 'components/orders/ShippingModal';\nimport { OrderCard } from 'components/orders/multi/OrderCard';\nimport { Button } from 'phoenix-components';\nimport checkedIcon from 'assets/images/orders/multi/check.svg';\nimport unCheckedIcon from 'assets/images/orders/multi/uncheck.svg';\nimport Alert from 'components/shared/alert/Alert';\nimport cx from 'classnames';\nimport EventManager from 'utils/events';\nimport { useDesktop } from 'contexts/';\nimport { SideDrawer } from '../../../components/shared/SideDrawer';\nimport styles from './View.module.css';\n\nfunction View() {\n  const refresh = useRefresh();\n  const order = useOrder();\n  const pendingOrders = usePendingOrders();\n  const confirmedOrders = useConfirmedOrders();\n  const shippedOrders = useTransformedShippedOrders();\n  const [checkedPenOrders, setCheckedPenOrders] = useState([]);\n  const [checkedConOrders, setCheckedConOrders] = useState([]);\n  const [grpId, setGrpId] = useState('');\n  const [deliveryForm, setDeliveryForm] = useToggle(false);\n  const [showError, setShowError] = useToggle(false);\n  const setIds = useSetIds();\n  const isDesktop = useDesktop();\n  const emptyIdErr = 'Oops! You haven\\'t ticked the orders you\\'d like to proceed with.';\n\n  const readyToShip = async () => {\n    if (checkedConOrders.length === 0) {\n      setShowError();\n      return;\n    }\n    Factory.getShippingMeta(order?._id, { ids: checkedConOrders })\n      .then((res) => {\n        setGrpId(res.groupId);\n        setDeliveryForm(true);\n      })\n      .catch(() => {\n        SnackBar.show('something went wrong', 'error');\n        Loader.hide();\n      });\n  };\n\n  const isCheckedPen = (id) => checkedPenOrders.includes(id);\n  const isCheckedAcc = (id) => checkedConOrders.includes(id);\n\n  const updatePenSelections = (id) => {\n    setCheckedPenOrders([]);\n    if (isCheckedPen(id)) {\n      const others = checkedPenOrders.filter(x => x !== id);\n      setCheckedPenOrders(others);\n      setIds(others);\n      return;\n    }\n    setCheckedPenOrders(checkedPenOrders.concat(id));\n    setIds(checkedPenOrders.concat(id));\n  };\n\n  const onReadyToShipClose = async () => {\n    setCheckedConOrders([]);\n    setDeliveryForm(false);\n    await refresh();\n  };\n\n  const updateConSelections = (id) => {\n    setCheckedConOrders([]);\n    if (isCheckedAcc(id)) {\n      const others = checkedConOrders.filter(x => x !== id);\n      setCheckedConOrders(others);\n      setIds(others);\n      return;\n    }\n    setIds(checkedConOrders.concat(id));\n    setCheckedConOrders(checkedConOrders.concat(id));\n  };\n\n  const acceptOrder = async () => {\n    if (checkedPenOrders.length === 0) {\n      setShowError();\n      return;\n    }\n    try {\n      Loader.show();\n      await Factory.confirm(order._id, { ids: checkedPenOrders });\n      EventManager.emitEvent('order_accepted', {\n        id: order._id,\n        length: checkedPenOrders.length,\n      });\n      await refresh();\n      setCheckedPenOrders([]);\n      setIds([]);\n    } catch (e) {\n      console.error(e);\n      SnackBar.show('Something went wrong', 'error');\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      {showError && (\n        <Alert\n          text={emptyIdErr}\n          textClass={styles.textClass}\n          btnText=\"Ok\"\n          onClick={setShowError}\n        />\n      )}\n      {pendingOrders.length > 0 && (\n        <>\n          <div className={styles.heading}>\n            Pending Orders\n          </div>\n          {pendingOrders.map(x => (\n            <div className={styles.flex}>\n              <img\n                onClick={() => updatePenSelections(x._id)}\n                src={isCheckedPen(x._id) ? checkedIcon : unCheckedIcon}\n                alt=\"\"\n              />\n              <OrderCard order={x} type=\"pending\" />\n            </div>\n          ))}\n          <Button\n            className={styles.confirmButton}\n            fullWidth={true}\n            label={`Accept Order${checkedPenOrders.length > 1 ? 's' : ''}`}\n            onClick={acceptOrder}\n            size=\"large\"\n          />\n        </>\n      )}\n      {confirmedOrders.length > 0 && (\n        <>\n          <div className={cx(styles.heading, styles.divider)}>\n            Orders Accepted\n          </div>\n          {confirmedOrders.map(x => (\n            <div className={styles.flex}>\n              <img\n                onClick={() => updateConSelections(x._id)}\n                src={isCheckedAcc(x._id) ? checkedIcon : unCheckedIcon}\n                alt=\"\"\n              />\n              <div>\n                <OrderCard order={x} />\n              </div>\n            </div>\n          ))}\n          <Button\n            className={styles.confirmButton}\n            fullWidth={true}\n            label=\"Ready To Ship\"\n            onClick={readyToShip}\n            size=\"large\"\n          />\n        </>\n      )}\n      {shippedOrders.length > 0 && (\n        <>\n          <div className={cx(styles.heading, styles.divider)}>\n            Shipped Items\n          </div>\n          <div className={styles.shipBlock}>\n            {shippedOrders.map(x => x.items.map(y => <OrderCard type=\"shipped\" order={y} />))}\n          </div>\n        </>\n      )}\n      {deliveryForm && (isDesktop\n        ? (\n          <SideDrawer\n            title=\"Shipping Type\"\n            onClose={onReadyToShipClose}\n            backButton={true}\n          >\n            <ShippingModal groupId={grpId} order={order} onClose={onReadyToShipClose} />\n          </SideDrawer>\n        ) : <ShippingModal groupId={grpId} order={order} onClose={onReadyToShipClose} />)}\n    </div>\n  );\n}\n\nView.propTypes = {\n  // onLogin: PropTypes.func.isRequired,\n};\n\nexport default View;\n"]},"metadata":{},"sourceType":"module"}