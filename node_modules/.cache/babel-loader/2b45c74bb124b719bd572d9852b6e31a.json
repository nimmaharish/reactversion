{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/payments/PaymentModeWise.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { get, isEmpty } from 'lodash';\nimport { usePaymentStats } from \"../../hooks\";\nimport { useShop } from \"../../contexts/userContext\";\nimport { usePaymentRules } from \"../../contexts/userContext\";\nimport PropTypes from 'prop-types';\nimport Accordion from \"../../components/orders/Accordion\";\nimport { psFilterList } from \"./utils\";\nimport styles from \"./PaymentModeWise.module.css\";\n\nfunction PaymentModeWise({\n  pmFilters\n}) {\n  _s();\n\n  console.log('--->summary pm-->', pmFilters);\n  const {\n    currency\n  } = useShop();\n  const paymentRules = usePaymentRules(true);\n  const {\n    modes,\n    ...others\n  } = pmFilters;\n  const isEmptyFilters = isEmpty(modes);\n  const all = paymentRules.map(x => ({\n    label: x.name,\n    value: x.value\n  }));\n\n  if (isEmptyFilters) {\n    const items = all.map(y => {\n      const paymentMode = paymentRules.find(x => x.value === y.value);\n      const isOnline = paymentMode.type === 'online';\n      const isCustomPayment = paymentMode.type === 'customPayment';\n      const filter = {\n        'payments.paymentMode': isCustomPayment ? 'custompayment' : paymentMode.type\n      };\n\n      if (isOnline) {\n        filter['payments.vendor'] = paymentMode.value;\n      }\n\n      if (isCustomPayment) {\n        filter['payments.customPaymentDetails.mode'] = paymentMode.name;\n      }\n\n      return filter;\n    });\n\n    if (!isEmpty(items)) {\n      pmFilters = {\n        modes: items,\n        ...others\n      };\n    }\n  }\n\n  const [,, summary] = usePaymentStats(null, null, pmFilters);\n\n  const appliedFilterLabels = value => {\n    const pm = all.find(x => x.value === value);\n\n    if (pm) {\n      return pm.label;\n    }\n\n    const ps = psFilterList.find(x => x.value === value);\n\n    if (ps) {\n      return ps.label;\n    }\n\n    return value;\n  };\n\n  const items = item => [{\n    label: 'Total Income',\n    value: get(item, 'total', 0)\n  }, {\n    label: 'Item Total',\n    value: get(item, 'itemTotal', 0)\n  }, {\n    label: 'Shipping Total',\n    value: get(item, 'shippingTotal', 0)\n  }, {\n    label: 'Other Fees Total',\n    value: get(item, 'itemTotal', 0)\n  }, {\n    label: 'Discount Coupons Total',\n    value: get(item, 'discountCoupons', 0)\n  }];\n\n  const detail = x => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.detail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, ' ', x.label, ' '), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, ' ', `${currency} ${x.value}`, ' '));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.head,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \" Payment Mode Wise \"), summary === null || summary === void 0 ? void 0 : summary.map((x, index) => /*#__PURE__*/React.createElement(React.Fragment, null, appliedFilterLabels(x.name) ? /*#__PURE__*/React.createElement(Accordion, {\n    mainStyle: styles.accordionMain,\n    headStyle: styles.accordionHead,\n    bodyStyle: styles.accordionBody,\n    label: appliedFilterLabels(x.name),\n    showDefault: index === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, items(x).map(y => detail(y))) : items(x).map(y => detail(y)))));\n}\n\n_s(PaymentModeWise, \"gg262Ktindbt3Lp7pRQJvWaXh/Q=\", false, function () {\n  return [useShop, usePaymentRules, usePaymentStats];\n});\n\n_c = PaymentModeWise;\nPaymentModeWise.propTypes = {\n  pmFilters: PropTypes.object.isRequired\n};\nPaymentModeWise.defaultProps = {};\nexport default PaymentModeWise;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentModeWise\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/payments/PaymentModeWise.jsx"],"names":["React","get","isEmpty","usePaymentStats","useShop","usePaymentRules","PropTypes","Accordion","psFilterList","styles","PaymentModeWise","pmFilters","console","log","currency","paymentRules","modes","others","isEmptyFilters","all","map","x","label","name","value","items","y","paymentMode","find","isOnline","type","isCustomPayment","filter","summary","appliedFilterLabels","pm","ps","item","detail","key","container","head","index","accordionMain","accordionHead","accordionBody","propTypes","object","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { get, isEmpty } from 'lodash';\nimport { usePaymentStats } from 'hooks';\nimport { useShop } from 'contexts/userContext';\nimport {\n  usePaymentRules\n} from 'contexts/userContext';\nimport PropTypes from 'prop-types';\nimport Accordion from 'components/orders/Accordion';\nimport { psFilterList } from './utils';\nimport styles from './PaymentModeWise.module.css';\n\nfunction PaymentModeWise({ pmFilters }) {\n  console.log('--->summary pm-->', pmFilters);\n  const { currency } = useShop();\n  const paymentRules = usePaymentRules(true);\n  const { modes, ...others } = pmFilters;\n  const isEmptyFilters = isEmpty(modes);\n\n  const all = paymentRules.map(x => ({\n    label: x.name,\n    value: x.value\n  }));\n\n  if (isEmptyFilters) {\n    const items = all.map(y => {\n      const paymentMode = paymentRules.find(x => x.value === y.value);\n      const isOnline = paymentMode.type === 'online';\n      const isCustomPayment = paymentMode.type === 'customPayment';\n      const filter = {\n        'payments.paymentMode': isCustomPayment ? 'custompayment' : paymentMode.type,\n      };\n      if (isOnline) {\n        filter['payments.vendor'] = paymentMode.value;\n      }\n      if (isCustomPayment) {\n        filter['payments.customPaymentDetails.mode'] = paymentMode.name;\n      }\n      return filter;\n    });\n    if (!isEmpty(items)) {\n      pmFilters = { modes: items, ...others };\n    }\n  }\n\n  const [, , summary] = usePaymentStats(null, null, pmFilters);\n\n  const appliedFilterLabels = (value) => {\n    const pm = all.find(x => x.value === value);\n    if (pm) {\n      return pm.label;\n    }\n    const ps = psFilterList.find(x => x.value === value);\n    if (ps) {\n      return ps.label;\n    }\n    return value;\n  };\n\n  const items = (item) => [\n    { label: 'Total Income', value: get(item, 'total', 0) },\n    { label: 'Item Total', value: get(item, 'itemTotal', 0) },\n    { label: 'Shipping Total', value: get(item, 'shippingTotal', 0) },\n    { label: 'Other Fees Total', value: get(item, 'itemTotal', 0) },\n    { label: 'Discount Coupons Total', value: get(item, 'discountCoupons', 0) },\n  ];\n\n  const detail = (x) => (\n    <div className={styles.detail}>\n      <div className={styles.key}>\n        {' '}\n        {x.label}\n        {' '}\n      </div>\n      <div className={styles.value}>\n        {' '}\n        {`${currency} ${x.value}`}\n        {' '}\n      </div>\n    </div>\n  );\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.head}> Payment Mode Wise </div>\n      {summary?.map((x, index) => (\n        <>\n          {appliedFilterLabels(x.name) ? (\n            <Accordion\n              mainStyle={styles.accordionMain}\n              headStyle={styles.accordionHead}\n              bodyStyle={styles.accordionBody}\n              label={appliedFilterLabels(x.name)}\n              showDefault={index === 0}\n            >\n              {items(x).map(y => detail(y))}\n            </Accordion>\n          ) : items(x).map(y => detail(y))}\n        </>\n      ))}\n    </div>\n  );\n}\n\nPaymentModeWise.propTypes = {\n  pmFilters: PropTypes.object.isRequired\n};\n\nPaymentModeWise.defaultProps = {};\n\nexport default PaymentModeWise;\n"]},"metadata":{},"sourceType":"module"}