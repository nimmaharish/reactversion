{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/customerCampaign/Filters.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useToggle } from \"../../hooks/common\";\nimport cx from 'classnames';\nimport { useQueryParams } from \"../../hooks\";\nimport { Button } from '@material-ui/core';\nimport notAppliedIcon from \"../../assets/images/payments/filter.svg\";\nimport appliedIcon from \"../../assets/images/payments/filterSel.svg\";\nimport PropTypes from 'prop-types';\nimport { ProductsDrawer } from \"./ProductsDrawer\";\nimport { OrderValueForm } from \"./OrderValueForm\";\nimport styles from \"./Filters.module.css\";\n\nfunction Filters({\n  setSkuIds,\n  setOrderValue\n}) {\n  _s();\n\n  const params = useQueryParams();\n  const isOrder = params.has('Order value');\n  const isProduct = params.has('Products');\n  const [openProducts, toggleProducts] = useToggle(false);\n  const [openValues, toggleValues] = useToggle();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, openProducts && /*#__PURE__*/React.createElement(ProductsDrawer, {\n    onClose: e => {\n      toggleProducts();\n      setSkuIds(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), openValues && /*#__PURE__*/React.createElement(OrderValueForm, {\n    onClose: toggleValues,\n    onSubmit: e => {\n      setOrderValue(e);\n      toggleValues();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleProducts,\n    className: cx(styles.button, {\n      [styles.btnActive]: isProduct\n    }),\n    endIcon: /*#__PURE__*/React.createElement(\"img\", {\n      src: isProduct ? appliedIcon : notAppliedIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Products\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleValues,\n    className: cx(styles.button, {\n      [styles.btnActive]: isOrder\n    }),\n    endIcon: /*#__PURE__*/React.createElement(\"img\", {\n      src: isOrder ? appliedIcon : notAppliedIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Order value\")));\n}\n\n_s(Filters, \"3fp2k65UC4MW1+QhVEPjxW718xk=\", false, function () {\n  return [useQueryParams, useToggle, useToggle];\n});\n\n_c = Filters;\nFilters.propTypes = {\n  setSkuIds: PropTypes.func.isRequired,\n  setOrderValue: PropTypes.func.isRequired\n};\nexport default Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/customerCampaign/Filters.jsx"],"names":["React","useToggle","cx","useQueryParams","Button","PropTypes","ProductsDrawer","OrderValueForm","styles","Filters","setSkuIds","setOrderValue","params","isOrder","has","isProduct","openProducts","toggleProducts","openValues","toggleValues","e","container","button","btnActive","appliedIcon","notAppliedIcon","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,cAAT;AACA,SAASC,MAAT,QAAuB,mBAAvB;;;AAGA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT;AACA,SAASC,cAAT;AACA,OAAOC,MAAP;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAjB,EAA+C;AAAA;;AAC7C,QAAMC,MAAM,GAAGT,cAAc,EAA7B;AACA,QAAMU,OAAO,GAAGD,MAAM,CAACE,GAAP,CAAW,aAAX,CAAhB;AACA,QAAMC,SAAS,GAAGH,MAAM,CAACE,GAAP,CAAW,UAAX,CAAlB;AACA,QAAM,CAACE,YAAD,EAAeC,cAAf,IAAiChB,SAAS,CAAC,KAAD,CAAhD;AACA,QAAM,CAACiB,UAAD,EAAaC,YAAb,IAA6BlB,SAAS,EAA5C;AAEA,sBACE,0CACGe,YAAY,iBACX,oBAAC,cAAD;AACE,IAAA,OAAO,EAAGI,CAAD,IAAO;AACdH,MAAAA,cAAc;AACdP,MAAAA,SAAS,CAACU,CAAD,CAAT;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EASGF,UAAU,iBACT,oBAAC,cAAD;AACE,IAAA,OAAO,EAAEC,YADX;AAEE,IAAA,QAAQ,EAAGC,CAAD,IAAO;AACfT,MAAAA,aAAa,CAACS,CAAD,CAAb;AACAD,MAAAA,YAAY;AACb,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAkBE;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACa,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEJ,cADX;AAEE,IAAA,SAAS,EAAEf,EAAE,CAACM,MAAM,CAACc,MAAR,EAAgB;AAC3B,OAACd,MAAM,CAACe,SAAR,GAAoBR;AADO,KAAhB,CAFf;AAKE,IAAA,OAAO,eAAE;AAAK,MAAA,GAAG,EAAEA,SAAS,GAAGS,WAAH,GAAiBC,cAApC;AAAoD,MAAA,GAAG,EAAC,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEN,YADX;AAEE,IAAA,SAAS,EAAEjB,EAAE,CAACM,MAAM,CAACc,MAAR,EAAgB;AAC3B,OAACd,MAAM,CAACe,SAAR,GAAoBV;AADO,KAAhB,CAFf;AAKE,IAAA,OAAO,eAAE;AAAK,MAAA,GAAG,EAAEA,OAAO,GAAGW,WAAH,GAAiBC,cAAlC;AAAkD,MAAA,GAAG,EAAC,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVF,CAlBF,CADF;AAyCD;;GAhDQhB,O;UACQN,c,EAGwBF,S,EACJA,S;;;KAL5BQ,O;AAkDTA,OAAO,CAACiB,SAAR,GAAoB;AAClBhB,EAAAA,SAAS,EAAEL,SAAS,CAACsB,IAAV,CAAeC,UADR;AAElBjB,EAAAA,aAAa,EAAEN,SAAS,CAACsB,IAAV,CAAeC;AAFZ,CAApB;AAKA,eAAenB,OAAf","sourcesContent":["import React from 'react';\nimport { useToggle } from 'hooks/common';\nimport cx from 'classnames';\nimport { useQueryParams } from 'hooks';\nimport { Button } from '@material-ui/core';\nimport notAppliedIcon from 'assets/images/payments/filter.svg';\nimport appliedIcon from 'assets/images/payments/filterSel.svg';\nimport PropTypes from 'prop-types';\nimport { ProductsDrawer } from './ProductsDrawer';\nimport { OrderValueForm } from './OrderValueForm';\nimport styles from './Filters.module.css';\n\nfunction Filters({ setSkuIds, setOrderValue }) {\n  const params = useQueryParams();\n  const isOrder = params.has('Order value');\n  const isProduct = params.has('Products');\n  const [openProducts, toggleProducts] = useToggle(false);\n  const [openValues, toggleValues] = useToggle();\n\n  return (\n    <>\n      {openProducts && (\n        <ProductsDrawer\n          onClose={(e) => {\n            toggleProducts();\n            setSkuIds(e);\n          }}\n        />\n      )}\n      {openValues && (\n        <OrderValueForm\n          onClose={toggleValues}\n          onSubmit={(e) => {\n            setOrderValue(e);\n            toggleValues();\n          }}\n        />\n      )}\n      <div className={styles.container}>\n        <Button\n          onClick={toggleProducts}\n          className={cx(styles.button, {\n            [styles.btnActive]: isProduct\n          })}\n          endIcon={<img src={isProduct ? appliedIcon : notAppliedIcon} alt=\"\" />}\n        >\n          Products\n        </Button>\n        <Button\n          onClick={toggleValues}\n          className={cx(styles.button, {\n            [styles.btnActive]: isOrder\n          })}\n          endIcon={<img src={isOrder ? appliedIcon : notAppliedIcon} alt=\"\" />}\n        >\n          Order value\n        </Button>\n      </div>\n    </>\n  );\n}\n\nFilters.propTypes = {\n  setSkuIds: PropTypes.func.isRequired,\n  setOrderValue: PropTypes.func.isRequired,\n};\n\nexport default Filters;\n"]},"metadata":{},"sourceType":"module"}