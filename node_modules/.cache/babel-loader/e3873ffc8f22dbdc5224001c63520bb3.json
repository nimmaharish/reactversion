{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/profile/HelloBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Drawer } from \"../shared/Drawer\";\nimport { useIsHelloBarEnabled, useRefreshShop, useShop } from \"../../contexts/userContext\";\nimport { useDesktop, useOpenPlans } from \"../../contexts\";\nimport { Button, Clickable } from 'phoenix-components';\nimport SnackBar from \"../../services/snackbar\";\nimport Loader from \"../../services/loader\";\nimport cx from 'classnames';\nimport { Becca } from \"../../api\";\nimport { ShopPreview } from \"../common/ShopPreview\";\nimport { Formik } from 'formik';\nimport chevronLeftDesk from \"../../assets/v2/common/chevronPrimaryLeft.svg\";\nimport { useHistory } from 'react-router-dom';\nimport { FooterButton } from \"../common/FooterButton\";\nimport { getInitialValues, marshall, schema } from \"./helloBarUtils\";\nimport { Details } from \"./helloBar/Details\";\nimport { ActionButton } from \"./helloBar/ActionButton\";\nimport { Visibility } from \"./helloBar/Visibility\";\nimport Kbc from \"../knowBaseCards/KnowBaseCards\";\nimport styles from \"./HelloBar.module.css\";\nconst TABS = [{\n  label: 'Details',\n  value: 'details'\n}, {\n  label: 'Action Button',\n  value: 'actionButton'\n}, {\n  label: 'Visibility',\n  value: 'visibility'\n}];\nexport default function HelloBar() {\n  _s();\n\n  const isDesktop = useDesktop();\n  const history = useHistory();\n  const shop = useShop();\n  const refreshShop = useRefreshShop();\n  const openPlans = useOpenPlans(true, 'helloBar');\n  const isHelloBarEnabled = useIsHelloBarEnabled();\n  const [tab, setTab] = useState('details');\n\n  const save = async values => {\n    if (!isHelloBarEnabled) {\n      openPlans();\n      return;\n    }\n\n    Loader.show();\n\n    try {\n      await Becca.updateShop({\n        helloBar: marshall(values || {})\n      });\n      refreshShop();\n      SnackBar.show('Hello Bar saved successfully', 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const Component = isDesktop ? 'div' : Drawer;\n  const props = isDesktop ? {\n    className: styles.containerD\n  } : {\n    title: 'Hello Bar'\n  };\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }\n    }), isDesktop && /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => history.goBack(),\n      className: styles.maintitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: styles.backIconForDesktop,\n      src: chevronLeftDesk,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"\\xA0\"), \"Hello Bar\"), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: getInitialValues(shop === null || shop === void 0 ? void 0 : shop.helloBar),\n      validationSchema: schema,\n      onSubmit: save,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, ({\n      submitForm\n    }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.preview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ShopPreview, {\n      classes: {\n        container: styles.previewShop,\n        iframe: styles.previewShop\n      },\n      name: `${shop.slug}`,\n      from: \"announcements\",\n      text: \"\\xA0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.margin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexCenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.tabs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, TABS.map(t => /*#__PURE__*/React.createElement(Clickable, {\n      onClick: () => setTab(t.value),\n      className: cx(styles.tabContainer, {\n        [styles.active]: t.value === tab\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.tab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 23\n      }\n    }, t.label))))), tab === 'details' && /*#__PURE__*/React.createElement(Details, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 38\n      }\n    }), tab === 'actionButton' && /*#__PURE__*/React.createElement(ActionButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 43\n      }\n    }), tab === 'visibility' && /*#__PURE__*/React.createElement(Visibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.kbc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Kbc, {\n      type: \"helloBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    })), isDesktop ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.btnDesk,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: submitForm,\n      bordered: true,\n      className: styles.dBtn,\n      label: \"save\",\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }))) : /*#__PURE__*/React.createElement(FooterButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: submitForm,\n      fullWidth: true,\n      bordered: false,\n      label: \"save\",\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    })))))\n  );\n}\n\n_s(HelloBar, \"A8wqSyk8xY24nGTLgNRaLXzxKRg=\", false, function () {\n  return [useDesktop, useHistory, useShop, useRefreshShop, useOpenPlans, useIsHelloBarEnabled];\n});\n\n_c = HelloBar;\nHelloBar.propTypes = {};\nHelloBar.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"HelloBar\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/profile/HelloBar.jsx"],"names":["React","useState","Drawer","useIsHelloBarEnabled","useRefreshShop","useShop","useDesktop","useOpenPlans","Button","Clickable","SnackBar","Loader","cx","Becca","ShopPreview","Formik","useHistory","FooterButton","getInitialValues","marshall","schema","Details","ActionButton","Visibility","Kbc","styles","TABS","label","value","HelloBar","isDesktop","history","shop","refreshShop","openPlans","isHelloBarEnabled","tab","setTab","save","values","show","updateShop","helloBar","e","showError","hide","Component","props","className","containerD","title","goBack","maintitle","backIconForDesktop","chevronLeftDesk","submitForm","preview","container","previewShop","iframe","slug","margin","tabs","map","t","tabContainer","active","kbc","btnDesk","dBtn","propTypes","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT;AACA,SAASC,oBAAT,EAA+BC,cAA/B,EAA+CC,OAA/C;AACA,SAASC,UAAT,EAAqBC,YAArB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,oBAAlC;AACA,OAAOC,QAAP;AACA,OAAOC,MAAP;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,KAAT;AACA,SAASC,WAAT;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,YAAT;AACA,SAASC,gBAAT,EAA2BC,QAA3B,EAAqCC,MAArC;AACA,SAASC,OAAT;AACA,SAASC,YAAT;AACA,SAASC,UAAT;AACA,OAAOC,GAAP;AACA,OAAOC,MAAP;AAEA,MAAMC,IAAI,GAAG,CACX;AACEC,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADW,EAKX;AACED,EAAAA,KAAK,EAAE,eADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALW,EASX;AACED,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATW,CAAb;AAeA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,SAAS,GAAGxB,UAAU,EAA5B;AACA,QAAMyB,OAAO,GAAGf,UAAU,EAA1B;AACA,QAAMgB,IAAI,GAAG3B,OAAO,EAApB;AACA,QAAM4B,WAAW,GAAG7B,cAAc,EAAlC;AACA,QAAM8B,SAAS,GAAG3B,YAAY,CAAC,IAAD,EAAO,UAAP,CAA9B;AACA,QAAM4B,iBAAiB,GAAGhC,oBAAoB,EAA9C;AACA,QAAM,CAACiC,GAAD,EAAMC,MAAN,IAAgBpC,QAAQ,CAAC,SAAD,CAA9B;;AAEA,QAAMqC,IAAI,GAAG,MAAOC,MAAP,IAAkB;AAC7B,QAAI,CAACJ,iBAAL,EAAwB;AACtBD,MAAAA,SAAS;AACT;AACD;;AACDvB,IAAAA,MAAM,CAAC6B,IAAP;;AACA,QAAI;AACF,YAAM3B,KAAK,CAAC4B,UAAN,CAAiB;AACrBC,QAAAA,QAAQ,EAAEvB,QAAQ,CAACoB,MAAM,IAAI,EAAX;AADG,OAAjB,CAAN;AAGAN,MAAAA,WAAW;AACXvB,MAAAA,QAAQ,CAAC8B,IAAT,CAAc,8BAAd,EAA8C,SAA9C;AACD,KAND,CAME,OAAOG,CAAP,EAAU;AACVjC,MAAAA,QAAQ,CAACkC,SAAT,CAAmBD,CAAnB;AACD,KARD,SAQU;AACRhC,MAAAA,MAAM,CAACkC,IAAP;AACD;AACF,GAjBD;;AAmBA,QAAMC,SAAS,GAAGhB,SAAS,GAAG,KAAH,GAAW5B,MAAtC;AAEA,QAAM6C,KAAK,GAAGjB,SAAS,GAAG;AAAEkB,IAAAA,SAAS,EAAEvB,MAAM,CAACwB;AAApB,GAAH,GAAsC;AAC3DC,IAAAA,KAAK,EAAE;AADoD,GAA7D;AAIA;AAAA;AACE;AACA,wBAAC,SAAD,oBAAeH,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGjB,SAAS,iBACR;AAAK,MAAA,OAAO,EAAE,MAAMC,OAAO,CAACoB,MAAR,EAApB;AAAsC,MAAA,SAAS,EAAE1B,MAAM,CAAC2B,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAE3B,MAAM,CAAC4B,kBAAvB;AAA2C,MAAA,GAAG,EAAEC,eAAhD;AAAiE,MAAA,GAAG,EAAC,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,cAFJ,eASE,oBAAC,MAAD;AAAQ,MAAA,aAAa,EAAEpC,gBAAgB,CAACc,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEU,QAAP,CAAvC;AAAyD,MAAA,gBAAgB,EAAEtB,MAA3E;AAAmF,MAAA,QAAQ,EAAEkB,IAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEiB,MAAAA;AAAF,KAAD,kBACC,uDACE;AAAK,MAAA,SAAS,EAAE9B,MAAM,CAAC+B,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,OAAO,EAAE;AACPC,QAAAA,SAAS,EAAEhC,MAAM,CAACiC,WADX;AAEPC,QAAAA,MAAM,EAAElC,MAAM,CAACiC;AAFR,OADX;AAKE,MAAA,IAAI,EAAG,GAAE1B,IAAI,CAAC4B,IAAK,EALrB;AAME,MAAA,IAAI,EAAC,eANP;AAOE,MAAA,IAAI,EAAC,MAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAYE;AAAK,MAAA,SAAS,EAAEnC,MAAM,CAACoC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAEpC,MAAM,CAACqC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGpC,IAAI,CAACqC,GAAL,CAASC,CAAC,iBACT,oBAAC,SAAD;AACE,MAAA,OAAO,EAAE,MAAM3B,MAAM,CAAC2B,CAAC,CAACpC,KAAH,CADvB;AAEE,MAAA,SAAS,EAAEhB,EAAE,CAACa,MAAM,CAACwC,YAAR,EAAsB;AAAE,SAACxC,MAAM,CAACyC,MAAR,GAAiBF,CAAC,CAACpC,KAAF,KAAYQ;AAA/B,OAAtB,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAK,MAAA,SAAS,EAAEX,MAAM,CAACW,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG4B,CAAC,CAACrC,KADL,CAJF,CADD,CADH,CADF,CADF,EAeGS,GAAG,KAAK,SAAR,iBAAsB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfzB,EAgBGA,GAAG,KAAK,cAAR,iBAA2B,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhB9B,EAiBGA,GAAG,KAAK,YAAR,iBAAyB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjB5B,CAZF,eA+BE;AAAK,MAAA,SAAS,EAAEX,MAAM,CAAC0C,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA/BF,EAkCGrC,SAAS,gBACR;AAAK,MAAA,SAAS,EAAEL,MAAM,CAAC2C,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAEb,UADX;AAEE,MAAA,QAAQ,EAAE,IAFZ;AAGE,MAAA,SAAS,EAAE9B,MAAM,CAAC4C,IAHpB;AAIE,MAAA,KAAK,EAAC,MAJR;AAKE,MAAA,IAAI,EAAC,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADQ,gBAaR,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAEd,UADX;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,QAAQ,EAAE,KAHZ;AAIE,MAAA,KAAK,EAAC,MAJR;AAKE,MAAA,IAAI,EAAC,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA/CJ,CAFJ,CATF;AAFF;AA2ED;;GA7GuB1B,Q;UACJvB,U,EACFU,U,EACHX,O,EACOD,c,EACFG,Y,EACQJ,oB;;;KANJ0B,Q;AA+GxBA,QAAQ,CAACyC,SAAT,GAAqB,EAArB;AAEAzC,QAAQ,CAAC0C,YAAT,GAAwB,EAAxB","sourcesContent":["import React, { useState } from 'react';\nimport { Drawer } from 'components/shared/Drawer';\nimport { useIsHelloBarEnabled, useRefreshShop, useShop } from 'contexts/userContext';\nimport { useDesktop, useOpenPlans } from 'contexts';\nimport { Button, Clickable } from 'phoenix-components';\nimport SnackBar from 'services/snackbar';\nimport Loader from 'services/loader';\nimport cx from 'classnames';\nimport { Becca } from 'api';\nimport { ShopPreview } from 'components/common/ShopPreview';\nimport { Formik } from 'formik';\nimport chevronLeftDesk from 'assets/v2/common/chevronPrimaryLeft.svg';\nimport { useHistory } from 'react-router-dom';\nimport { FooterButton } from 'components/common/FooterButton';\nimport { getInitialValues, marshall, schema } from 'components/profile/helloBarUtils';\nimport { Details } from 'components/profile/helloBar/Details';\nimport { ActionButton } from 'components/profile/helloBar/ActionButton';\nimport { Visibility } from 'components/profile/helloBar/Visibility';\nimport Kbc from 'components/knowBaseCards/KnowBaseCards';\nimport styles from './HelloBar.module.css';\n\nconst TABS = [\n  {\n    label: 'Details',\n    value: 'details',\n  },\n  {\n    label: 'Action Button',\n    value: 'actionButton',\n  },\n  {\n    label: 'Visibility',\n    value: 'visibility',\n  },\n];\n\nexport default function HelloBar() {\n  const isDesktop = useDesktop();\n  const history = useHistory();\n  const shop = useShop();\n  const refreshShop = useRefreshShop();\n  const openPlans = useOpenPlans(true, 'helloBar');\n  const isHelloBarEnabled = useIsHelloBarEnabled();\n  const [tab, setTab] = useState('details');\n\n  const save = async (values) => {\n    if (!isHelloBarEnabled) {\n      openPlans();\n      return;\n    }\n    Loader.show();\n    try {\n      await Becca.updateShop({\n        helloBar: marshall(values || {}),\n      });\n      refreshShop();\n      SnackBar.show('Hello Bar saved successfully', 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const Component = isDesktop ? 'div' : Drawer;\n\n  const props = isDesktop ? { className: styles.containerD } : {\n    title: 'Hello Bar'\n  };\n\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <Component {...props}>\n      {isDesktop && (\n        <div onClick={() => history.goBack()} className={styles.maintitle}>\n          <img className={styles.backIconForDesktop} src={chevronLeftDesk} alt=\"\" />\n          <div>&nbsp;</div>\n          <div>&nbsp;</div>\n          Hello Bar\n        </div>\n      )}\n      <Formik initialValues={getInitialValues(shop?.helloBar)} validationSchema={schema} onSubmit={save}>\n        {({ submitForm }) => (\n          <>\n            <div className={styles.preview}>\n              <ShopPreview\n                classes={{\n                  container: styles.previewShop,\n                  iframe: styles.previewShop\n                }}\n                name={`${shop.slug}`}\n                from=\"announcements\"\n                text=\"&nbsp;\"\n              />\n            </div>\n            <div className={styles.margin}>\n              <div className=\"flexCenter\">\n                <div className={styles.tabs}>\n                  {TABS.map(t => (\n                    <Clickable\n                      onClick={() => setTab(t.value)}\n                      className={cx(styles.tabContainer, { [styles.active]: t.value === tab })}\n                    >\n                      <div className={styles.tab}>\n                        {t.label}\n                      </div>\n                    </Clickable>\n                  ))}\n                </div>\n              </div>\n              {tab === 'details' && (<Details />)}\n              {tab === 'actionButton' && (<ActionButton />)}\n              {tab === 'visibility' && (<Visibility />)}\n            </div>\n            <div className={styles.kbc}>\n              <Kbc type=\"helloBar\" />\n            </div>\n            {isDesktop ? (\n              <div className={styles.btnDesk}>\n                <div>\n                  <Button\n                    onClick={submitForm}\n                    bordered={true}\n                    className={styles.dBtn}\n                    label=\"save\"\n                    size=\"large\"\n                  />\n                </div>\n              </div>\n            ) : (\n              <FooterButton>\n                <Button\n                  onClick={submitForm}\n                  fullWidth\n                  bordered={false}\n                  label=\"save\"\n                  size=\"large\"\n                />\n              </FooterButton>\n            )}\n          </>\n        )}\n      </Formik>\n    </Component>\n  );\n}\n\nHelloBar.propTypes = {};\n\nHelloBar.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}