{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/shared/alert/Draft/Alert.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/media-has-caption */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog, DialogContent } from '@material-ui/core';\nimport cx from 'classnames';\nimport { useDesktop } from \"../../../../contexts\";\nimport { Button, Clickable } from 'phoenix-components';\nimport closeIcon from \"../../../../assets/images/orders/list/close.svg\";\nimport styles from \"./Alert.module.css\";\n\nfunction Alert({\n  onClick,\n  text,\n  subText,\n  clickText,\n  cancelText,\n  onCancel\n}) {\n  _s();\n\n  const isDesktop = useDesktop();\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: true,\n    onClose: onCancel,\n    fullWidth: true,\n    maxWidth: isDesktop ? 'xs' : 'sm',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    className: cx(styles.container),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, isDesktop && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexEnd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: closeIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.subTitle),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, subText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('flexCenter', styles.btn),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onCancel,\n    label: cancelText,\n    primary: false,\n    size: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: onClick,\n    label: clickText,\n    className: styles.click,\n    primary: true,\n    size: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Alert, \"3l4y9eCI8Q4nOrq3yDi/AmhuQWU=\", false, function () {\n  return [useDesktop];\n});\n\n_c = Alert;\nAlert.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  subText: PropTypes.string.isRequired,\n  clickText: PropTypes.string.isRequired,\n  cancelText: PropTypes.string.isRequired\n};\nAlert.defaultProps = {};\nexport default Alert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/shared/alert/Draft/Alert.jsx"],"names":["React","PropTypes","Dialog","DialogContent","cx","useDesktop","Button","Clickable","styles","Alert","onClick","text","subText","clickText","cancelText","onCancel","isDesktop","container","closeIcon","title","subTitle","btn","click","propTypes","func","isRequired","string","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/media-has-caption */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Dialog, DialogContent\n} from '@material-ui/core';\nimport cx from 'classnames';\nimport { useDesktop } from 'contexts';\nimport { Button, Clickable } from 'phoenix-components';\nimport closeIcon from 'assets/images/orders/list/close.svg';\nimport styles from './Alert.module.css';\n\nfunction Alert({\n  onClick, text, subText, clickText, cancelText, onCancel\n}) {\n  const isDesktop = useDesktop();\n\n  return (\n    <Dialog\n      open={true}\n      onClose={onCancel}\n      fullWidth\n      maxWidth={isDesktop ? 'xs' : 'sm'}\n    >\n      <DialogContent className={cx(styles.container)}>\n        {isDesktop && (\n          <div className=\"flexEnd\">\n            <Clickable\n              onClick={onClick}>\n              <img src={closeIcon} alt=\"\" />\n            </Clickable>\n          </div>\n        )}\n        <div className={cx(styles.title)}>\n          {text}\n        </div>\n        <div className={cx(styles.subTitle)}>\n          {subText}\n        </div>\n      </DialogContent>\n      <div className={cx('flexCenter', styles.btn)}>\n        <Button\n          onClick={onCancel}\n          label={cancelText}\n          primary={false}\n          size=\"medium\"\n        />\n        <Button\n          onClick={onClick}\n          label={clickText}\n          className={styles.click}\n          primary={true}\n          size=\"medium\"\n        />\n      </div>\n    </Dialog>\n  );\n}\n\nAlert.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  subText: PropTypes.string.isRequired,\n  clickText: PropTypes.string.isRequired,\n  cancelText: PropTypes.string.isRequired,\n};\n\nAlert.defaultProps = {\n};\n\nexport default Alert;\n"]},"metadata":{},"sourceType":"module"}