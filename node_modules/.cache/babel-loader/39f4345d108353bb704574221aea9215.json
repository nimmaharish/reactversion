{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/profile/checkout/LoginSettings.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Drawer } from \"../../../components/shared/Drawer\";\nimport { LoginCard } from \"./LoginCard\";\nimport { Formik } from 'formik';\nimport { getInitialValues, LOGIN_DATA } from \"./loginUtils\";\nimport { useDesktop, useRefreshShop, useShop } from \"../../../contexts\";\nimport Loader from \"../../../services/loader\";\nimport SnackBar from \"../../../services/snackbar\";\nimport { Becca } from \"../../../api\";\nimport { Button } from 'phoenix-components';\nimport PropTypes from 'prop-types';\nimport { SideDrawer } from \"../../../components/shared/SideDrawer\";\nimport styles from \"./LoginSettings.module.css\";\n\nfunction LoginSettings({\n  onClose\n}) {\n  _s();\n\n  var _shop$checkout;\n\n  const shop = useShop();\n  const refreshShop = useRefreshShop();\n  const isDesktop = useDesktop();\n\n  const onSave = async login => {\n    try {\n      Loader.show();\n      const data = (shop === null || shop === void 0 ? void 0 : shop.checkout) || {};\n      const types = Object.keys(LOGIN_DATA);\n      const enabled = types.find(type => {\n        var _login$type;\n\n        return !!((_login$type = login[type]) !== null && _login$type !== void 0 && _login$type.enabled);\n      });\n\n      if (!enabled) {\n        SnackBar.show('You must enable atleast one mode of login', 'error');\n        return;\n      }\n\n      data.login = login;\n      await Becca.updateShop({\n        checkout: data\n      });\n      SnackBar.show('Login settings saved successfully', 'success');\n      refreshShop();\n      onClose();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const Component = isDesktop ? SideDrawer : Drawer;\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: getInitialValues(shop === null || shop === void 0 ? void 0 : (_shop$checkout = shop.checkout) === null || _shop$checkout === void 0 ? void 0 : _shop$checkout.login),\n    onSubmit: onSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, ({\n    submitForm\n  }) => /*#__PURE__*/React.createElement(Component, {\n    title: \"Login Settings\",\n    backButton: true,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LoginCard, {\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(LoginCard, {\n    name: \"google\",\n    featured: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(LoginCard, {\n    name: \"whatsapp\",\n    featured: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(LoginCard, {\n    name: \"phone\",\n    featured: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(LoginCard, {\n    name: \"guest\",\n    featured: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"OR\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(LoginCard, {\n    name: \"direct\",\n    featured: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  })), isDesktop ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.buttonD,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"Save\",\n    size: \"large\",\n    bordered: true,\n    onClick: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    label: \"save\",\n    onClick: submitForm,\n    size: \"large\",\n    bordered: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }))));\n}\n\n_s(LoginSettings, \"4NdZOr2Ab91sZavM1zh5BN0Nv88=\", false, function () {\n  return [useShop, useRefreshShop, useDesktop];\n});\n\n_c = LoginSettings;\nLoginSettings.propTypes = {\n  onClose: PropTypes.func.isRequired\n};\nLoginSettings.defaultProps = {};\nexport default LoginSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginSettings\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/checkout/LoginSettings.jsx"],"names":["React","Drawer","LoginCard","Formik","getInitialValues","LOGIN_DATA","useDesktop","useRefreshShop","useShop","Loader","SnackBar","Becca","Button","PropTypes","SideDrawer","styles","LoginSettings","onClose","shop","refreshShop","isDesktop","onSave","login","show","data","checkout","types","Object","keys","enabled","find","type","updateShop","e","showError","hide","Component","submitForm","container","line","text","buttonD","button","propTypes","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Drawer } from 'components/shared/Drawer';\nimport { LoginCard } from 'containers/profile/checkout/LoginCard';\nimport { Formik } from 'formik';\nimport { getInitialValues, LOGIN_DATA } from 'containers/profile/checkout/loginUtils';\nimport { useDesktop, useRefreshShop, useShop } from 'contexts';\nimport Loader from 'services/loader';\nimport SnackBar from 'services/snackbar';\nimport { Becca } from 'api';\nimport { Button } from 'phoenix-components';\nimport PropTypes from 'prop-types';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport styles from './LoginSettings.module.css';\n\nfunction LoginSettings({ onClose }) {\n  const shop = useShop();\n  const refreshShop = useRefreshShop();\n  const isDesktop = useDesktop();\n\n  const onSave = async (login) => {\n    try {\n      Loader.show();\n      const data = shop?.checkout || {};\n      const types = Object.keys(LOGIN_DATA);\n      const enabled = types.find((type) => !!login[type]?.enabled);\n      if (!enabled) {\n        SnackBar.show('You must enable atleast one mode of login', 'error');\n        return;\n      }\n      data.login = login;\n      await Becca.updateShop({ checkout: data });\n      SnackBar.show('Login settings saved successfully', 'success');\n      refreshShop();\n      onClose();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const Component = isDesktop ? SideDrawer : Drawer;\n\n  return (\n    <Formik\n      initialValues={getInitialValues(shop?.checkout?.login)}\n      onSubmit={onSave}\n    >\n      {({ submitForm }) => (\n        <Component\n          title=\"Login Settings\"\n          backButton={true}\n          onClose={onClose}\n        >\n          <div className={styles.container}>\n            <LoginCard name=\"email\" />\n            <LoginCard name=\"google\" featured={true} />\n            <LoginCard name=\"whatsapp\" featured={true} />\n            <LoginCard name=\"phone\" featured={true} />\n            <LoginCard name=\"guest\" featured={true} />\n            <div className=\"flexCenter\">\n              <div className={styles.line}></div>\n              <div className={styles.text}>OR</div>\n              <div className={styles.line}></div>\n            </div>\n            <LoginCard name=\"direct\" featured={true} />\n          </div>\n          {isDesktop ? (\n            <div className={styles.buttonD}>\n              <Button label=\"Save\" size=\"large\" bordered={true} onClick={submitForm} />\n            </div>\n          ) : (\n            <div className={styles.button}>\n              <Button fullWidth label=\"save\" onClick={submitForm} size=\"large\" bordered={false} />\n            </div>\n          )}\n        </Component>\n      )}\n    </Formik>\n  );\n}\n\nLoginSettings.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nLoginSettings.defaultProps = {};\n\nexport default LoginSettings;\n"]},"metadata":{},"sourceType":"module"}