{"ast":null,"code":"import { getInstrumentationFlags, PAGE_LOAD, ERROR, CONFIG_SERVICE, LOGGING_SERVICE, APM_SERVER } from '@elastic/apm-rum-core';\n\nvar ApmBase = function () {\n  function ApmBase(serviceFactory, disable) {\n    this._disable = disable;\n    this.serviceFactory = serviceFactory;\n    this._initialized = false;\n  }\n\n  var _proto = ApmBase.prototype;\n\n  _proto.isEnabled = function isEnabled() {\n    return !this._disable;\n  };\n\n  _proto.isActive = function isActive() {\n    var configService = this.serviceFactory.getService(CONFIG_SERVICE);\n    return this.isEnabled() && this._initialized && configService.get('active');\n  };\n\n  _proto.init = function init(config) {\n    var _this = this;\n\n    if (this.isEnabled() && !this._initialized) {\n      this._initialized = true;\n\n      var _this$serviceFactory$ = this.serviceFactory.getService([CONFIG_SERVICE, LOGGING_SERVICE]),\n          configService = _this$serviceFactory$[0],\n          loggingService = _this$serviceFactory$[1];\n\n      configService.setVersion('5.10.2');\n      this.config(config);\n      var logLevel = configService.get('logLevel');\n      loggingService.setLevel(logLevel);\n      var isConfigActive = configService.get('active');\n\n      if (isConfigActive) {\n        this.serviceFactory.init();\n        var flags = getInstrumentationFlags(configService.get('instrument'), configService.get('disableInstrumentations'));\n        var performanceMonitoring = this.serviceFactory.getService('PerformanceMonitoring');\n        performanceMonitoring.init(flags);\n\n        if (flags[ERROR]) {\n          var errorLogging = this.serviceFactory.getService('ErrorLogging');\n          errorLogging.registerListeners();\n        }\n\n        if (configService.get('session')) {\n          var localConfig = configService.getLocalConfig();\n\n          if (localConfig && localConfig.session) {\n            configService.setConfig({\n              session: localConfig.session\n            });\n          }\n        }\n\n        var sendPageLoad = function sendPageLoad() {\n          return flags[PAGE_LOAD] && _this._sendPageLoadMetrics();\n        };\n\n        if (configService.get('centralConfig')) {\n          this.fetchCentralConfig().then(sendPageLoad);\n        } else {\n          sendPageLoad();\n        }\n      } else {\n        this._disable = true;\n        loggingService.warn('RUM agent is inactive');\n      }\n    }\n\n    return this;\n  };\n\n  _proto.fetchCentralConfig = function fetchCentralConfig() {\n    var _this$serviceFactory$2 = this.serviceFactory.getService([APM_SERVER, LOGGING_SERVICE, CONFIG_SERVICE]),\n        apmServer = _this$serviceFactory$2[0],\n        loggingService = _this$serviceFactory$2[1],\n        configService = _this$serviceFactory$2[2];\n\n    return apmServer.fetchConfig(configService.get('serviceName'), configService.get('environment')).then(function (config) {\n      var transactionSampleRate = config['transaction_sample_rate'];\n\n      if (transactionSampleRate) {\n        transactionSampleRate = Number(transactionSampleRate);\n        var _config2 = {\n          transactionSampleRate: transactionSampleRate\n        };\n\n        var _configService$valida = configService.validate(_config2),\n            invalid = _configService$valida.invalid;\n\n        if (invalid.length === 0) {\n          configService.setConfig(_config2);\n        } else {\n          var _invalid$ = invalid[0],\n              key = _invalid$.key,\n              value = _invalid$.value,\n              allowed = _invalid$.allowed;\n          loggingService.warn(\"invalid value \\\"\" + value + \"\\\" for \" + key + \". Allowed: \" + allowed + \".\");\n        }\n      }\n\n      return config;\n    }).catch(function (error) {\n      loggingService.warn('failed fetching config:', error);\n    });\n  };\n\n  _proto._sendPageLoadMetrics = function _sendPageLoadMetrics() {\n    var tr = this.startTransaction(undefined, PAGE_LOAD, {\n      managed: true,\n      canReuse: true\n    });\n\n    if (!tr) {\n      return;\n    }\n\n    tr.addTask(PAGE_LOAD);\n\n    var sendPageLoadMetrics = function sendPageLoadMetrics() {\n      setTimeout(function () {\n        return tr.removeTask(PAGE_LOAD);\n      });\n    };\n\n    if (document.readyState === 'complete') {\n      sendPageLoadMetrics();\n    } else {\n      window.addEventListener('load', sendPageLoadMetrics);\n    }\n  };\n\n  _proto.observe = function observe(name, fn) {\n    var configService = this.serviceFactory.getService(CONFIG_SERVICE);\n    configService.events.observe(name, fn);\n  };\n\n  _proto.config = function config(_config) {\n    var configService = this.serviceFactory.getService(CONFIG_SERVICE);\n\n    var _configService$valida2 = configService.validate(_config),\n        missing = _configService$valida2.missing,\n        invalid = _configService$valida2.invalid;\n\n    if (missing.length === 0 && invalid.length === 0) {\n      configService.setConfig(_config);\n    } else {\n      var loggingService = this.serviceFactory.getService(LOGGING_SERVICE);\n      var separator = ', ';\n      var message = \"RUM agent isn't correctly configured. \";\n\n      if (missing.length > 0) {\n        message += missing.join(separator) + ' is missing';\n\n        if (invalid.length > 0) {\n          message += separator;\n        }\n      }\n\n      invalid.forEach(function (_ref, index) {\n        var key = _ref.key,\n            value = _ref.value,\n            allowed = _ref.allowed;\n        message += key + \" \\\"\" + value + \"\\\" contains invalid characters! (allowed: \" + allowed + \")\" + (index !== invalid.length - 1 ? separator : '');\n      });\n      loggingService.error(message);\n      configService.setConfig({\n        active: false\n      });\n    }\n  };\n\n  _proto.setUserContext = function setUserContext(userContext) {\n    var configService = this.serviceFactory.getService(CONFIG_SERVICE);\n    configService.setUserContext(userContext);\n  };\n\n  _proto.setCustomContext = function setCustomContext(customContext) {\n    var configService = this.serviceFactory.getService(CONFIG_SERVICE);\n    configService.setCustomContext(customContext);\n  };\n\n  _proto.addLabels = function addLabels(labels) {\n    var configService = this.serviceFactory.getService(CONFIG_SERVICE);\n    configService.addLabels(labels);\n  };\n\n  _proto.setInitialPageLoadName = function setInitialPageLoadName(name) {\n    var configService = this.serviceFactory.getService(CONFIG_SERVICE);\n    configService.setConfig({\n      pageLoadTransactionName: name\n    });\n  };\n\n  _proto.startTransaction = function startTransaction(name, type, options) {\n    if (this.isEnabled()) {\n      var transactionService = this.serviceFactory.getService('TransactionService');\n      return transactionService.startTransaction(name, type, options);\n    }\n  };\n\n  _proto.startSpan = function startSpan(name, type, options) {\n    if (this.isEnabled()) {\n      var transactionService = this.serviceFactory.getService('TransactionService');\n      return transactionService.startSpan(name, type, options);\n    }\n  };\n\n  _proto.getCurrentTransaction = function getCurrentTransaction() {\n    if (this.isEnabled()) {\n      var transactionService = this.serviceFactory.getService('TransactionService');\n      return transactionService.getCurrentTransaction();\n    }\n  };\n\n  _proto.captureError = function captureError(error) {\n    if (this.isEnabled()) {\n      var errorLogging = this.serviceFactory.getService('ErrorLogging');\n      return errorLogging.logError(error);\n    }\n  };\n\n  _proto.addFilter = function addFilter(fn) {\n    var configService = this.serviceFactory.getService(CONFIG_SERVICE);\n    configService.addFilter(fn);\n  };\n\n  return ApmBase;\n}();\n\nexport { ApmBase as default };","map":{"version":3,"sources":["/home/harish/windo/phoenix/node_modules/@elastic/apm-rum/dist/es/apm-base.js"],"names":["getInstrumentationFlags","PAGE_LOAD","ERROR","CONFIG_SERVICE","LOGGING_SERVICE","APM_SERVER","ApmBase","serviceFactory","disable","_disable","_initialized","_proto","prototype","isEnabled","isActive","configService","getService","get","init","config","_this","_this$serviceFactory$","loggingService","setVersion","logLevel","setLevel","isConfigActive","flags","performanceMonitoring","errorLogging","registerListeners","localConfig","getLocalConfig","session","setConfig","sendPageLoad","_sendPageLoadMetrics","fetchCentralConfig","then","warn","_this$serviceFactory$2","apmServer","fetchConfig","transactionSampleRate","Number","_config2","_configService$valida","validate","invalid","length","_invalid$","key","value","allowed","catch","error","tr","startTransaction","undefined","managed","canReuse","addTask","sendPageLoadMetrics","setTimeout","removeTask","document","readyState","window","addEventListener","observe","name","fn","events","_config","_configService$valida2","missing","separator","message","join","forEach","_ref","index","active","setUserContext","userContext","setCustomContext","customContext","addLabels","labels","setInitialPageLoadName","pageLoadTransactionName","type","options","transactionService","startSpan","getCurrentTransaction","captureError","logError","addFilter","default"],"mappings":"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","sourcesContent":["import { getInstrumentationFlags, PAGE_LOAD, ERROR, CONFIG_SERVICE, LOGGING_SERVICE, APM_SERVER } from '@elastic/apm-rum-core';\n\nvar ApmBase = function () {\n  function ApmBase(serviceFactory, disable) {\n    this._disable = disable;\n    this.serviceFactory = serviceFactory;\n    this._initialized = false;\n  }\n\n  var _proto = ApmBase.prototype;\n\n  _proto.isEnabled = function isEnabled() {\n    return !this._disable;\n  };\n\n  _proto.isActive = function isActive() {\n    var configService = this.serviceFactory.getService(CONFIG_SERVICE);\n    return this.isEnabled() && this._initialized && configService.get('active');\n  };\n\n  _proto.init = function init(config) {\n    var _this = this;\n\n    if (this.isEnabled() && !this._initialized) {\n      this._initialized = true;\n\n      var _this$serviceFactory$ = this.serviceFactory.getService([CONFIG_SERVICE, LOGGING_SERVICE]),\n          configService = _this$serviceFactory$[0],\n          loggingService = _this$serviceFactory$[1];\n\n      configService.setVersion('5.10.2');\n      this.config(config);\n      var logLevel = configService.get('logLevel');\n      loggingService.setLevel(logLevel);\n      var isConfigActive = configService.get('active');\n\n      if (isConfigActive) {\n        this.serviceFactory.init();\n        var flags = getInstrumentationFlags(configService.get('instrument'), configService.get('disableInstrumentations'));\n        var performanceMonitoring = this.serviceFactory.getService('PerformanceMonitoring');\n        performanceMonitoring.init(flags);\n\n        if (flags[ERROR]) {\n          var errorLogging = this.serviceFactory.getService('ErrorLogging');\n          errorLogging.registerListeners();\n        }\n\n        if (configService.get('session')) {\n          var localConfig = configService.getLocalConfig();\n\n          if (localConfig && localConfig.session) {\n            configService.setConfig({\n              session: localConfig.session\n            });\n          }\n        }\n\n        var sendPageLoad = function sendPageLoad() {\n          return flags[PAGE_LOAD] && _this._sendPageLoadMetrics();\n        };\n\n        if (configService.get('centralConfig')) {\n          this.fetchCentralConfig().then(sendPageLoad);\n        } else {\n          sendPageLoad();\n        }\n      } else {\n        this._disable = true;\n        loggingService.warn('RUM agent is inactive');\n      }\n    }\n\n    return this;\n  };\n\n  _proto.fetchCentralConfig = function fetchCentralConfig() {\n    var _this$serviceFactory$2 = this.serviceFactory.getService([APM_SERVER, LOGGING_SERVICE, CONFIG_SERVICE]),\n        apmServer = _this$serviceFactory$2[0],\n        loggingService = _this$serviceFactory$2[1],\n        configService = _this$serviceFactory$2[2];\n\n    return apmServer.fetchConfig(configService.get('serviceName'), configService.get('environment')).then(function (config) {\n      var transactionSampleRate = config['transaction_sample_rate'];\n\n      if (transactionSampleRate) {\n        transactionSampleRate = Number(transactionSampleRate);\n        var _config2 = {\n          transactionSampleRate: transactionSampleRate\n        };\n\n        var _configService$valida = configService.validate(_config2),\n            invalid = _configService$valida.invalid;\n\n        if (invalid.length === 0) {\n          configService.setConfig(_config2);\n        } else {\n          var _invalid$ = invalid[0],\n              key = _invalid$.key,\n              value = _invalid$.value,\n              allowed = _invalid$.allowed;\n          loggingService.warn(\"invalid value \\\"\" + value + \"\\\" for \" + key + \". Allowed: \" + allowed + \".\");\n        }\n      }\n\n      return config;\n    }).catch(function (error) {\n      loggingService.warn('failed fetching config:', error);\n    });\n  };\n\n  _proto._sendPageLoadMetrics = function _sendPageLoadMetrics() {\n    var tr = this.startTransaction(undefined, PAGE_LOAD, {\n      managed: true,\n      canReuse: true\n    });\n\n    if (!tr) {\n      return;\n    }\n\n    tr.addTask(PAGE_LOAD);\n\n    var sendPageLoadMetrics = function sendPageLoadMetrics() {\n      setTimeout(function () {\n        return tr.removeTask(PAGE_LOAD);\n      });\n    };\n\n    if (document.readyState === 'complete') {\n      sendPageLoadMetrics();\n    } else {\n      window.addEventListener('load', sendPageLoadMetrics);\n    }\n  };\n\n  _proto.observe = function observe(name, fn) {\n    var configService = this.serviceFactory.getService(CONFIG_SERVICE);\n    configService.events.observe(name, fn);\n  };\n\n  _proto.config = function config(_config) {\n    var configService = this.serviceFactory.getService(CONFIG_SERVICE);\n\n    var _configService$valida2 = configService.validate(_config),\n        missing = _configService$valida2.missing,\n        invalid = _configService$valida2.invalid;\n\n    if (missing.length === 0 && invalid.length === 0) {\n      configService.setConfig(_config);\n    } else {\n      var loggingService = this.serviceFactory.getService(LOGGING_SERVICE);\n      var separator = ', ';\n      var message = \"RUM agent isn't correctly configured. \";\n\n      if (missing.length > 0) {\n        message += missing.join(separator) + ' is missing';\n\n        if (invalid.length > 0) {\n          message += separator;\n        }\n      }\n\n      invalid.forEach(function (_ref, index) {\n        var key = _ref.key,\n            value = _ref.value,\n            allowed = _ref.allowed;\n        message += key + \" \\\"\" + value + \"\\\" contains invalid characters! (allowed: \" + allowed + \")\" + (index !== invalid.length - 1 ? separator : '');\n      });\n      loggingService.error(message);\n      configService.setConfig({\n        active: false\n      });\n    }\n  };\n\n  _proto.setUserContext = function setUserContext(userContext) {\n    var configService = this.serviceFactory.getService(CONFIG_SERVICE);\n    configService.setUserContext(userContext);\n  };\n\n  _proto.setCustomContext = function setCustomContext(customContext) {\n    var configService = this.serviceFactory.getService(CONFIG_SERVICE);\n    configService.setCustomContext(customContext);\n  };\n\n  _proto.addLabels = function addLabels(labels) {\n    var configService = this.serviceFactory.getService(CONFIG_SERVICE);\n    configService.addLabels(labels);\n  };\n\n  _proto.setInitialPageLoadName = function setInitialPageLoadName(name) {\n    var configService = this.serviceFactory.getService(CONFIG_SERVICE);\n    configService.setConfig({\n      pageLoadTransactionName: name\n    });\n  };\n\n  _proto.startTransaction = function startTransaction(name, type, options) {\n    if (this.isEnabled()) {\n      var transactionService = this.serviceFactory.getService('TransactionService');\n      return transactionService.startTransaction(name, type, options);\n    }\n  };\n\n  _proto.startSpan = function startSpan(name, type, options) {\n    if (this.isEnabled()) {\n      var transactionService = this.serviceFactory.getService('TransactionService');\n      return transactionService.startSpan(name, type, options);\n    }\n  };\n\n  _proto.getCurrentTransaction = function getCurrentTransaction() {\n    if (this.isEnabled()) {\n      var transactionService = this.serviceFactory.getService('TransactionService');\n      return transactionService.getCurrentTransaction();\n    }\n  };\n\n  _proto.captureError = function captureError(error) {\n    if (this.isEnabled()) {\n      var errorLogging = this.serviceFactory.getService('ErrorLogging');\n      return errorLogging.logError(error);\n    }\n  };\n\n  _proto.addFilter = function addFilter(fn) {\n    var configService = this.serviceFactory.getService(CONFIG_SERVICE);\n    configService.addFilter(fn);\n  };\n\n  return ApmBase;\n}();\n\nexport { ApmBase as default };"]},"metadata":{},"sourceType":"module"}