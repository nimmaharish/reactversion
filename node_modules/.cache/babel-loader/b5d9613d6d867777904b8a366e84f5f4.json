{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/profile/languages/Accordion.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useToggle } from \"../../../hooks/common\";\nimport PropTypes from 'prop-types';\nimport { useIsFreePlan } from \"../../../contexts/userContext\";\nimport chevUp from \"../../../assets/v2/settings/paymentModes/chevUp.svg\";\nimport chevDown from \"../../../assets/v2/settings/paymentModes/chevDown.svg\";\nimport cx from 'classnames';\nimport featureIcon from \"../../../assets/overview/feature.svg\";\nimport styles from \"./Accordion.module.css\";\n\nfunction Accordion({\n  children,\n  label,\n  labelHelper\n}) {\n  _s();\n\n  const [show, toggleShow] = useToggle(true);\n  const isFree = useIsFreePlan();\n  const chevIcon = show ? chevDown : chevUp;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.head, [styles.noBottomBorder]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.label,\n    onClick: toggleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, label, isFree && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.iconF,\n    src: featureIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    onClick: toggleShow,\n    src: chevIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }))), show && /*#__PURE__*/React.createElement(\"div\", {\n    onClick: toggleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, labelHelper), !show && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, children));\n}\n\n_s(Accordion, \"04FMtzivuyTs6vFxKPDMs5SRaCw=\", false, function () {\n  return [useToggle, useIsFreePlan];\n});\n\n_c = Accordion;\nAccordion.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node.isRequired, PropTypes.arrayOf(PropTypes.node).isRequired]).isRequired,\n  label: PropTypes.string.isRequired,\n  labelHelper: PropTypes.string.isRequired\n};\nexport default Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/languages/Accordion.jsx"],"names":["React","useToggle","PropTypes","useIsFreePlan","cx","styles","Accordion","children","label","labelHelper","show","toggleShow","isFree","chevIcon","chevDown","chevUp","main","head","noBottomBorder","iconF","featureIcon","body","propTypes","oneOfType","node","isRequired","arrayOf","string"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT;;;AAGA,OAAOC,EAAP,MAAe,YAAf;;AAEA,OAAOC,MAAP;;AAEA,SAASC,SAAT,CAAmB;AACjBC,EAAAA,QADiB;AACPC,EAAAA,KADO;AACAC,EAAAA;AADA,CAAnB,EAEG;AAAA;;AACD,QAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBV,SAAS,CAAC,IAAD,CAApC;AACA,QAAMW,MAAM,GAAGT,aAAa,EAA5B;AACA,QAAMU,QAAQ,GAAGH,IAAI,GAAGI,QAAH,GAAcC,MAAnC;AACA,sBACE;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACW,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAEZ,EAAE,CAACC,MAAM,CAACY,IAAR,EACX,CAACZ,MAAM,CAACa,cAAR,CADW,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAK,IAAA,SAAS,EAAEb,MAAM,CAACG,KAAvB;AAA8B,IAAA,OAAO,EAAEG,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KADH,EAEGI,MAAM,iBACL,uDACE;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACc,KAAvB;AAA8B,IAAA,GAAG,EAAEC,WAAnC;AAAgD,IAAA,GAAG,EAAC,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHJ,CAHF,eAWE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,OAAO,EAAET,UAAd;AAA0B,IAAA,GAAG,EAAEE,QAA/B;AAAyC,IAAA,GAAG,EAAC,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CADF,EAgBGH,IAAI,iBACH;AACE,IAAA,OAAO,EAAEC,UADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGF,WAHH,CAjBJ,EAuBG,CAACC,IAAD,iBACC;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACgB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,QADH,CAxBJ,CADF;AA+BD;;GArCQD,S;UAGoBL,S,EACZE,a;;;KAJRG,S;AAuCTA,SAAS,CAACgB,SAAV,GAAsB;AACpBf,EAAAA,QAAQ,EAAEL,SAAS,CAACqB,SAAV,CAAoB,CAC5BrB,SAAS,CAACsB,IAAV,CAAeC,UADa,EAE5BvB,SAAS,CAACwB,OAAV,CAAkBxB,SAAS,CAACsB,IAA5B,EAAkCC,UAFN,CAApB,EAGPA,UAJiB;AAKpBjB,EAAAA,KAAK,EAAEN,SAAS,CAACyB,MAAV,CAAiBF,UALJ;AAMpBhB,EAAAA,WAAW,EAAEP,SAAS,CAACyB,MAAV,CAAiBF;AANV,CAAtB;AASA,eAAenB,SAAf","sourcesContent":["import React from 'react';\nimport { useToggle } from 'hooks/common';\nimport PropTypes from 'prop-types';\nimport { useIsFreePlan } from 'contexts/userContext';\nimport chevUp from 'assets/v2/settings/paymentModes/chevUp.svg';\nimport chevDown from 'assets/v2/settings/paymentModes/chevDown.svg';\nimport cx from 'classnames';\nimport featureIcon from 'assets/overview/feature.svg';\nimport styles from './Accordion.module.css';\n\nfunction Accordion({\n  children, label, labelHelper,\n}) {\n  const [show, toggleShow] = useToggle(true);\n  const isFree = useIsFreePlan();\n  const chevIcon = show ? chevDown : chevUp;\n  return (\n    <div className={styles.main}>\n      <div\n        className={cx(styles.head,\n          [styles.noBottomBorder])}>\n        <div className={styles.label} onClick={toggleShow}>\n          {label}\n          {isFree && (\n            <>\n              <img className={styles.iconF} src={featureIcon} alt=\"\" />\n            </>\n          )}\n        </div>\n        <div className=\"flexCenter\">\n          <img onClick={toggleShow} src={chevIcon} alt=\"\" />\n        </div>\n      </div>\n      {show && (\n        <div\n          onClick={toggleShow}\n        >\n          {labelHelper}\n        </div>\n      )}\n      {!show && (\n        <div className={styles.body}>\n          {children}\n        </div>\n      )}\n    </div>\n  );\n}\n\nAccordion.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node.isRequired,\n    PropTypes.arrayOf(PropTypes.node).isRequired\n  ]).isRequired,\n  label: PropTypes.string.isRequired,\n  labelHelper: PropTypes.string.isRequired,\n};\n\nexport default Accordion;\n"]},"metadata":{},"sourceType":"module"}