{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/profile/marketingBanners/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { Drawer } from \"../../shared/Drawer\";\nimport PropTypes from 'prop-types';\nimport { FormikInput, Button } from 'phoenix-components';\nimport tagIcon from \"../../../assets/v2/settings/tag.svg\";\nimport tagGreenIcon from \"../../../assets/v2/settings/greenTag.svg\";\nimport cx from 'classnames'; // import { Select } from 'phoenix-components/lib/formik';\n\nimport { Formik } from 'formik';\nimport { useToggle } from \"../../../hooks/common\";\nimport { Becca } from \"../../../api\";\nimport { get } from 'lodash';\nimport Header from \"../../../containers/products/Header\";\nimport Loader from \"../../../services/loader\";\nimport SnackBar from \"../../../services/snackbar\";\nimport { useRefreshTemplates } from \"../../../contexts\";\nimport { ProductsDrawer } from \"../../shared/ProductsDrawer\";\nimport Catalog from \"../../../containers/products/Catalog/List\";\nimport { DeleteAlert } from \"../../shared/DeleteAlert\";\nimport { useIsBannersEnabled } from \"../../../contexts/userContext\";\nimport { useHistory } from 'react-router-dom';\nimport { useQueryParams } from \"../../../hooks\";\nimport { useDesktop } from \"../../../contexts\";\nimport { SideDrawer } from \"../../shared/SideDrawer\";\nimport { Dialog } from '@material-ui/core';\nimport { Card } from \"./Card\";\nimport styles from \"./Form.module.css\";\nimport { getInitialValues, schema } from \"./utils\";\nimport ProductsPopUp from \"../../../containers/products/Drawers/ProductPopUp\";\n\nfunction Form({\n  onClose,\n  values\n}) {\n  _s();\n\n  const refresh = useRefreshTemplates();\n  const history = useHistory();\n  const params = useQueryParams();\n  const [open, setOpen] = useToggle(false);\n  const [unTagSkus, toggleUnTagSkusModal] = useToggle(false);\n  const [unTagCats, toggleUnTagCatsModal] = useToggle(false);\n  const [openCatalog, toggleOpenCatalog] = useToggle(false);\n  const [liveClicked, toggleClicked] = useToggle(false);\n  const isEdit = get(values, '_id', false);\n  const inputRef = useRef();\n  const isBannerConfig = useIsBannersEnabled();\n  const isDesktop = useDesktop();\n\n  const onSubmit = async payload => {\n    if (liveClicked) {\n      payload.status = 'live';\n    }\n\n    if (!isBannerConfig) {\n      params.set('openPlans', 'generic');\n      history.push({\n        search: params.toString()\n      });\n      return;\n    }\n\n    try {\n      Loader.show();\n\n      if (isEdit) {\n        await Becca.patchTemplate(values._id, payload);\n      } else {\n        await Becca.addTemplate(payload);\n      }\n\n      refresh();\n      onClose();\n      const successText = isEdit ? 'Template Updated Successfully' : 'Template Added Successfully';\n      SnackBar.show(successText, 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const uploadAsset = async (e, setValue) => {\n    try {\n      var _e$target;\n\n      Loader.show();\n      const files = e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.files;\n      const file = files && files[0];\n      const payload = new FormData();\n      payload.append('name', file.name);\n      payload.append('purpose', 'shop-marketing-template');\n      payload.append('type', 'image');\n      payload.append('file', file);\n      const {\n        url\n      } = await Becca.uploadAsset(payload);\n      setValue('image', url);\n      SnackBar.show('upload success');\n    } catch (e) {\n      SnackBar.show('upload failed', 'error');\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onDrawerClose = setField => ids => {\n    setField('type', 'sku');\n    setField('items', ids);\n    setOpen();\n  };\n\n  const onCatalogDrawerClose = setField => ids => {\n    setField('type', 'catalog');\n    setField('items', ids);\n  };\n\n  const getLabelProducts = values => {\n    const {\n      type,\n      items\n    } = values;\n\n    if (type === 'sku') {\n      return items.length > 0 ? `Tagged ${items.length} Products` : '';\n    }\n  };\n\n  const getLabelCatalogs = values => {\n    const {\n      type,\n      items\n    } = values;\n\n    if (type === 'catalog') {\n      return items.length > 0 ? `Tagged ${items.length} Catalogs` : '';\n    }\n  };\n\n  if (isDesktop) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: schema,\n      initialValues: getInitialValues(values),\n      onSubmit: onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, ({\n      values,\n      errors,\n      touched,\n      setFieldValue,\n      submitForm\n    }) => {\n      var _getLabelProducts, _getLabelProducts2, _getLabelCatalogs, _getLabelCatalogs2;\n\n      return /*#__PURE__*/React.createElement(SideDrawer, {\n        backButton: true,\n        title: \"Select Collection\",\n        onClose: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.container1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }\n      }, open && /*#__PURE__*/React.createElement(ProductsPopUp, {\n        title: \"Tag Products\",\n        initial: values.type === 'sku' ? values.items : [],\n        onClose: onDrawerClose(setFieldValue),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      }), openCatalog && /*#__PURE__*/React.createElement(Dialog, {\n        open: true,\n        onClose: toggleOpenCatalog,\n        maxWidth: \"md\",\n        PaperProps: {\n          classes: {\n            root: styles.dialog\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Catalog, {\n        from: \"product\",\n        selected: values.type === 'catalog' ? values.items : [],\n        onSelect: onCatalogDrawerClose(setFieldValue),\n        onHide: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flexCenter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        label: `Tag ${values.items.length > 0 ? values.items.length : ''} Catalog`,\n        onClick: toggleOpenCatalog,\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.formik,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.firstDiv,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormikInput, {\n        label: \"Title (Optional)\",\n        name: \"title\",\n        placeholder: \"Enter Title Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 23\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.formik2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.firstDiv,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormikInput, {\n        type: \"textarea\",\n        rows: 5,\n        label: \"Description (Optional)\",\n        name: \"description\",\n        placeholder: \"Type here\",\n        className: styles.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 23\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.customImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        ref: inputRef,\n        accept: \"image/*\",\n        hidden: true,\n        id: \"icon-button-file\",\n        type: \"file\",\n        onChange: e => {\n          uploadAsset(e, setFieldValue);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"icon-button-file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"medium\",\n        label: \"Browse Custom Image\",\n        primary: false,\n        onClick: () => {\n          var _inputRef$current;\n\n          // eslint-disable-next-line no-unused-expressions\n          inputRef === null || inputRef === void 0 ? void 0 : (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.click();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.head,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 19\n        }\n      }, \"Banner Preview\"), /*#__PURE__*/React.createElement(Card, {\n        title: values === null || values === void 0 ? void 0 : values.title,\n        description: values === null || values === void 0 ? void 0 : values.description,\n        image: values === null || values === void 0 ? void 0 : values.image,\n        showEdit: false,\n        onClick: () => {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 19\n        }\n      }), unTagSkus && /*#__PURE__*/React.createElement(DeleteAlert, {\n        title: \"You can tag either catalogs or products at a time, untag products to tag the catalogs\",\n        onCancel: toggleUnTagSkusModal,\n        primary: \"Untag\",\n        secondary: \"Cancel\",\n        onDelete: () => {\n          setFieldValue('items', []);\n          toggleUnTagSkusModal();\n          toggleOpenCatalog();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }\n      }), unTagCats && /*#__PURE__*/React.createElement(DeleteAlert, {\n        title: \"You can tag either catalogs or products at a time, untag catalogs to tag products\",\n        onCancel: toggleUnTagCatsModal,\n        primary: \"Untag\",\n        secondary: \"Cancel\",\n        onDelete: () => {\n          setFieldValue('items', []);\n          toggleUnTagCatsModal();\n          setOpen();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.tag,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        startIcon: ((_getLabelProducts = getLabelProducts(values)) === null || _getLabelProducts === void 0 ? void 0 : _getLabelProducts.length) > 0 ? tagGreenIcon : tagIcon,\n        className: cx(styles.tagBtn, {\n          [styles.tagActive]: ((_getLabelProducts2 = getLabelProducts(values)) === null || _getLabelProducts2 === void 0 ? void 0 : _getLabelProducts2.length) > 0\n        }),\n        label: getLabelProducts(values) || 'Tag Products',\n        size: \"medium\",\n        primary: false,\n        onClick: () => {\n          var _values$items;\n\n          if ((values === null || values === void 0 ? void 0 : values.type) === 'sku' || (values === null || values === void 0 ? void 0 : (_values$items = values.items) === null || _values$items === void 0 ? void 0 : _values$items.length) === 0) {\n            setOpen();\n            return;\n          }\n\n          toggleUnTagCatsModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        startIcon: ((_getLabelCatalogs = getLabelCatalogs(values)) === null || _getLabelCatalogs === void 0 ? void 0 : _getLabelCatalogs.length) > 0 ? tagGreenIcon : tagIcon,\n        className: cx(styles.tagBtn, {\n          [styles.tagActive]: ((_getLabelCatalogs2 = getLabelCatalogs(values)) === null || _getLabelCatalogs2 === void 0 ? void 0 : _getLabelCatalogs2.length) > 0\n        }),\n        label: getLabelCatalogs(values) || 'Tag Catalogs',\n        primary: false,\n        size: \"medium\",\n        onClick: () => {\n          var _values$items2;\n\n          if (values.type === 'catalog' || (values === null || values === void 0 ? void 0 : (_values$items2 = values.items) === null || _values$items2 === void 0 ? void 0 : _values$items2.length) === 0) {\n            toggleOpenCatalog();\n            return;\n          }\n\n          toggleUnTagSkusModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }\n      })), (errors === null || errors === void 0 ? void 0 : errors.items) && (touched === null || touched === void 0 ? void 0 : touched.items) && /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }\n      }, \"Tag atleast one product / catalog\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.info,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 19\n        }\n      }, \"On click of the banner, customer will be shown the tagged products/catalogs on your shop website\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.buttonContainerD,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        label: \"Save\",\n        size: \"large\",\n        className: styles.noBorder,\n        primary: false,\n        onClick: () => submitForm(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        label: \"Save & Apply\",\n        size: \"large\",\n        onClick: async () => {\n          await toggleClicked();\n          submitForm();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }\n      })))));\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    hideHeader: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    title: \"Marketing Banner\",\n    onBack: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Formik, {\n    validationSchema: schema,\n    initialValues: getInitialValues(values),\n    enableReinitialize: true,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    setFieldValue,\n    submitForm\n  }) => {\n    var _getLabelProducts3, _getLabelProducts4, _getLabelCatalogs3, _getLabelCatalogs4;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 13\n      }\n    }, open && /*#__PURE__*/React.createElement(ProductsDrawer, {\n      title: \"Tag Products\",\n      initial: values.type === 'sku' ? values.items : [],\n      onClose: onDrawerClose(setFieldValue),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }\n    }), openCatalog && /*#__PURE__*/React.createElement(Drawer, {\n      title: \"Tag Catalogs\",\n      onClose: toggleOpenCatalog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Catalog, {\n      from: \"product\",\n      selected: values.type === 'catalog' ? values.items : [],\n      onSelect: onCatalogDrawerClose(setFieldValue),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexCenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: `Tag ${values.items.length > 0 ? values.items.length : ''} Catalog`,\n      onClick: toggleOpenCatalog,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.formik,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.firstDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      label: \"Title (Optional)\",\n      name: \"title\",\n      placeholder: \"Enter Title Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.formik2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.firstDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      type: \"textarea\",\n      rows: 5,\n      label: \"Description (Optional)\",\n      name: \"description\",\n      placeholder: \"Type here\",\n      className: styles.input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.customImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: inputRef,\n      accept: \"image/*\",\n      hidden: true,\n      id: \"icon-button-file\",\n      type: \"file\",\n      onChange: e => {\n        uploadAsset(e, setFieldValue);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"icon-button-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"medium\",\n      label: \"Browse Custom Image\",\n      primary: false,\n      onClick: () => {\n        var _inputRef$current2;\n\n        // eslint-disable-next-line no-unused-expressions\n        inputRef === null || inputRef === void 0 ? void 0 : (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.click();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.head,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 15\n      }\n    }, \"Banner Preview\"), /*#__PURE__*/React.createElement(Card, {\n      title: values === null || values === void 0 ? void 0 : values.title,\n      description: values === null || values === void 0 ? void 0 : values.description,\n      image: values === null || values === void 0 ? void 0 : values.image,\n      showEdit: false,\n      onClick: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 15\n      }\n    }), unTagSkus && /*#__PURE__*/React.createElement(DeleteAlert, {\n      title: \"You can tag either catalogs or products at a time, untag products to tag the catalogs\",\n      onCancel: toggleUnTagSkusModal,\n      primary: \"Untag\",\n      secondary: \"Cancel\",\n      onDelete: () => {\n        setFieldValue('items', []);\n        toggleUnTagSkusModal();\n        toggleOpenCatalog();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 17\n      }\n    }), unTagCats && /*#__PURE__*/React.createElement(DeleteAlert, {\n      title: \"You can tag either catalogs or products at a time, untag catalogs to tag products\",\n      onCancel: toggleUnTagCatsModal,\n      primary: \"Untag\",\n      secondary: \"Cancel\",\n      onDelete: () => {\n        setFieldValue('items', []);\n        toggleUnTagCatsModal();\n        setOpen();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      startIcon: ((_getLabelProducts3 = getLabelProducts(values)) === null || _getLabelProducts3 === void 0 ? void 0 : _getLabelProducts3.length) > 0 ? tagGreenIcon : tagIcon,\n      className: cx(styles.tagBtn, {\n        [styles.tagActive]: ((_getLabelProducts4 = getLabelProducts(values)) === null || _getLabelProducts4 === void 0 ? void 0 : _getLabelProducts4.length) > 0\n      }),\n      label: getLabelProducts(values) || 'Tag Products',\n      size: \"medium\",\n      primary: false,\n      onClick: () => {\n        var _values$items3;\n\n        if ((values === null || values === void 0 ? void 0 : values.type) === 'sku' || (values === null || values === void 0 ? void 0 : (_values$items3 = values.items) === null || _values$items3 === void 0 ? void 0 : _values$items3.length) === 0) {\n          setOpen();\n          return;\n        }\n\n        toggleUnTagCatsModal();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      startIcon: ((_getLabelCatalogs3 = getLabelCatalogs(values)) === null || _getLabelCatalogs3 === void 0 ? void 0 : _getLabelCatalogs3.length) > 0 ? tagGreenIcon : tagIcon,\n      className: cx(styles.tagBtn, {\n        [styles.tagActive]: ((_getLabelCatalogs4 = getLabelCatalogs(values)) === null || _getLabelCatalogs4 === void 0 ? void 0 : _getLabelCatalogs4.length) > 0\n      }),\n      label: getLabelCatalogs(values) || 'Tag Catalogs',\n      primary: false,\n      size: \"medium\",\n      onClick: () => {\n        var _values$items4;\n\n        if (values.type === 'catalog' || (values === null || values === void 0 ? void 0 : (_values$items4 = values.items) === null || _values$items4 === void 0 ? void 0 : _values$items4.length) === 0) {\n          toggleOpenCatalog();\n          return;\n        }\n\n        toggleUnTagSkusModal();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 17\n      }\n    })), (errors === null || errors === void 0 ? void 0 : errors.items) && (touched === null || touched === void 0 ? void 0 : touched.items) && /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 17\n      }\n    }, \"Tag atleast one product / catalog\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.info,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 15\n      }\n    }, \"On click of the banner, customer will be shown the tagged products/catalogs on your shop website\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.buttonContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Save\",\n      size: \"large\",\n      className: styles.noBorder,\n      bordered: false,\n      fullWidth: true,\n      primary: false,\n      onClick: () => submitForm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      label: \"Save & Apply\",\n      size: \"large\",\n      bordered: false,\n      fullWidth: true,\n      onClick: async () => {\n        await toggleClicked();\n        submitForm();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 15\n      }\n    })));\n  }));\n}\n\n_s(Form, \"RD6q6BlKVzw1mWI7itHA+8DRPdU=\", false, function () {\n  return [useRefreshTemplates, useHistory, useQueryParams, useToggle, useToggle, useToggle, useToggle, useToggle, useIsBannersEnabled, useDesktop];\n});\n\n_c = Form;\nForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  values: PropTypes.object.isRequired\n};\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/profile/marketingBanners/Form.jsx"],"names":["React","useRef","Drawer","PropTypes","FormikInput","Button","cx","Formik","useToggle","Becca","get","Header","Loader","SnackBar","useRefreshTemplates","ProductsDrawer","Catalog","DeleteAlert","useIsBannersEnabled","useHistory","useQueryParams","useDesktop","SideDrawer","Dialog","Card","styles","getInitialValues","schema","ProductsPopUp","Form","onClose","values","refresh","history","params","open","setOpen","unTagSkus","toggleUnTagSkusModal","unTagCats","toggleUnTagCatsModal","openCatalog","toggleOpenCatalog","liveClicked","toggleClicked","isEdit","inputRef","isBannerConfig","isDesktop","onSubmit","payload","status","set","push","search","toString","show","patchTemplate","_id","addTemplate","successText","e","showError","hide","uploadAsset","setValue","files","target","file","FormData","append","name","url","onDrawerClose","setField","ids","onCatalogDrawerClose","getLabelProducts","type","items","length","getLabelCatalogs","errors","touched","setFieldValue","submitForm","container","container1","classes","root","dialog","formik","firstDiv","formik2","input","customImage","current","click","head","title","description","image","tag","tagGreenIcon","tagIcon","tagBtn","tagActive","error","info","buttonContainerD","noBorder","buttonContainer","propTypes","func","isRequired","object"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { Drawer } from 'components/shared/Drawer';\nimport PropTypes from 'prop-types';\nimport { FormikInput, Button } from 'phoenix-components';\nimport tagIcon from 'assets/v2/settings/tag.svg';\nimport tagGreenIcon from 'assets/v2/settings/greenTag.svg';\nimport cx from 'classnames';\n// import { Select } from 'phoenix-components/lib/formik';\nimport { Formik } from 'formik';\nimport { useToggle } from 'hooks/common';\nimport { Becca } from 'api';\nimport { get } from 'lodash';\nimport Header from 'containers/products/Header';\nimport Loader from 'services/loader';\nimport SnackBar from 'services/snackbar';\nimport { useRefreshTemplates } from 'contexts';\nimport { ProductsDrawer } from 'components/shared/ProductsDrawer';\nimport Catalog from 'containers/products/Catalog/List';\nimport { DeleteAlert } from 'components/shared/DeleteAlert';\nimport {\n  useIsBannersEnabled\n} from 'contexts/userContext';\nimport { useHistory } from 'react-router-dom';\nimport { useQueryParams } from 'hooks';\nimport { useDesktop } from 'contexts';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport {\n  Dialog\n} from '@material-ui/core';\nimport { Card } from './Card';\nimport styles from './Form.module.css';\nimport { getInitialValues, schema } from './utils';\nimport ProductsPopUp from '../../../containers/products/Drawers/ProductPopUp';\n\nfunction Form({ onClose, values }) {\n  const refresh = useRefreshTemplates();\n  const history = useHistory();\n  const params = useQueryParams();\n  const [open, setOpen] = useToggle(false);\n  const [unTagSkus, toggleUnTagSkusModal] = useToggle(false);\n  const [unTagCats, toggleUnTagCatsModal] = useToggle(false);\n  const [openCatalog, toggleOpenCatalog] = useToggle(false);\n  const [liveClicked, toggleClicked] = useToggle(false);\n  const isEdit = get(values, '_id', false);\n  const inputRef = useRef();\n  const isBannerConfig = useIsBannersEnabled();\n  const isDesktop = useDesktop();\n\n  const onSubmit = async (payload) => {\n    if (liveClicked) {\n      payload.status = 'live';\n    }\n    if (!isBannerConfig) {\n      params.set('openPlans', 'generic');\n      history.push({\n        search: params.toString(),\n      });\n      return;\n    }\n    try {\n      Loader.show();\n      if (isEdit) {\n        await Becca.patchTemplate(values._id, payload);\n      } else {\n        await Becca.addTemplate(payload);\n      }\n      refresh();\n      onClose();\n      const successText = isEdit ? 'Template Updated Successfully' : 'Template Added Successfully';\n      SnackBar.show(successText, 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const uploadAsset = async (e, setValue) => {\n    try {\n      Loader.show();\n      const files = e?.target?.files;\n      const file = files && files[0];\n      const payload = new FormData();\n      payload.append('name', file.name);\n      payload.append('purpose', 'shop-marketing-template');\n      payload.append('type', 'image');\n      payload.append('file', file);\n      const { url } = await Becca.uploadAsset(payload);\n      setValue('image', url);\n      SnackBar.show('upload success');\n    } catch (e) {\n      SnackBar.show('upload failed', 'error');\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onDrawerClose = (setField) => (ids) => {\n    setField('type', 'sku');\n    setField('items', ids);\n    setOpen();\n  };\n\n  const onCatalogDrawerClose = (setField) => (ids) => {\n    setField('type', 'catalog');\n    setField('items', ids);\n  };\n\n  const getLabelProducts = (values) => {\n    const { type, items } = values;\n    if (type === 'sku') {\n      return items.length > 0 ? `Tagged ${items.length} Products` : '';\n    }\n  };\n\n  const getLabelCatalogs = (values) => {\n    const { type, items } = values;\n    if (type === 'catalog') {\n      return items.length > 0 ? `Tagged ${items.length} Catalogs` : '';\n    }\n  };\n\n  if (isDesktop) {\n    return (\n      <>\n        <Formik\n          validationSchema={schema}\n          initialValues={getInitialValues(values)}\n          onSubmit={onSubmit}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            setFieldValue,\n            submitForm,\n          }) => (\n            <SideDrawer\n              backButton={true}\n              title=\"Select Collection\"\n              onClose={onClose}\n            >\n              <div className={styles.container}>\n                <div className={styles.container1}>\n                  {open && (\n                    <ProductsPopUp\n                      title=\"Tag Products\"\n                      initial={values.type === 'sku' ? values.items : []}\n                      onClose={onDrawerClose(setFieldValue)}\n                    />\n                  )}\n                  {openCatalog && (\n                    <Dialog\n                      open={true}\n                      onClose={toggleOpenCatalog}\n                      maxWidth=\"md\"\n                      PaperProps={{\n                        classes: {\n                          root: styles.dialog,\n                        }\n                      }}\n                    >\n                      <Catalog\n                        from=\"product\"\n                        selected={values.type === 'catalog' ? values.items : []}\n                        onSelect={onCatalogDrawerClose(setFieldValue)}\n                        onHide={true}\n                      />\n                      <div className=\"flexCenter\">\n                        <Button\n                          label={`Tag ${values.items.length > 0 ? values.items.length : ''} Catalog`}\n                          onClick={toggleOpenCatalog}\n                          size=\"large\"\n                        />\n                      </div>\n                    </Dialog>\n                  )}\n                  <div className={styles.formik}>\n                    <div className={styles.firstDiv}>\n                      <FormikInput\n                        label=\"Title (Optional)\"\n                        name=\"title\"\n                        placeholder=\"Enter Title Name\"\n                      />\n                    </div>\n                  </div>\n                  <div className={styles.formik2}>\n                    <div className={styles.firstDiv}>\n                      <FormikInput\n                        type=\"textarea\"\n                        rows={5}\n                        label=\"Description (Optional)\"\n                        name=\"description\"\n                        placeholder=\"Type here\"\n                        className={styles.input}\n                      />\n                    </div>\n                  </div>\n                  <div className={styles.customImage}>\n                    <div className=\"relative\">\n                      <input\n                        ref={inputRef}\n                        accept=\"image/*\"\n                        hidden\n                        id=\"icon-button-file\"\n                        type=\"file\"\n                        onChange={(e) => {\n                          uploadAsset(e, setFieldValue);\n                        }} />\n                      <label htmlFor=\"icon-button-file\">\n                        <Button\n                          size=\"medium\"\n                          label=\"Browse Custom Image\"\n                          primary={false}\n                          onClick={() => {\n                        // eslint-disable-next-line no-unused-expressions\n                        inputRef?.current?.click();\n                          }}\n                        />\n                      </label>\n                    </div>\n                  </div>\n                  <div className={styles.head}>\n                    Banner Preview\n                  </div>\n                  <Card\n                    title={values?.title}\n                    description={values?.description}\n                    image={values?.image}\n                    showEdit={false}\n                    onClick={() => {}}\n                  />\n                  {unTagSkus && (\n                    <DeleteAlert\n                      title=\"You can tag either catalogs or products at a time, untag products to tag the catalogs\"\n                      onCancel={toggleUnTagSkusModal}\n                      primary=\"Untag\"\n                      secondary=\"Cancel\"\n                      onDelete={() => {\n                        setFieldValue('items', []);\n                        toggleUnTagSkusModal();\n                        toggleOpenCatalog();\n                      }}\n                    />\n                  )}\n                  {unTagCats && (\n                    <DeleteAlert\n                      title=\"You can tag either catalogs or products at a time, untag catalogs to tag products\"\n                      onCancel={toggleUnTagCatsModal}\n                      primary=\"Untag\"\n                      secondary=\"Cancel\"\n                      onDelete={() => {\n                        setFieldValue('items', []);\n                        toggleUnTagCatsModal();\n                        setOpen();\n                      }}\n                    />\n                  )}\n                  <div className={styles.tag}>\n                    <Button\n                      startIcon={getLabelProducts(values)?.length > 0 ? tagGreenIcon : tagIcon}\n                      className={cx(styles.tagBtn, { [styles.tagActive]: getLabelProducts(values)?.length > 0 })}\n                      label={getLabelProducts(values) || 'Tag Products'}\n                      size=\"medium\"\n                      primary={false}\n                      onClick={() => {\n                        if (values?.type === 'sku' || values?.items?.length === 0) {\n                          setOpen();\n                          return;\n                        }\n                        toggleUnTagCatsModal();\n                      }}\n                    />\n                    <Button\n                      startIcon={getLabelCatalogs(values)?.length > 0 ? tagGreenIcon : tagIcon}\n                      className={cx(styles.tagBtn, { [styles.tagActive]: getLabelCatalogs(values)?.length > 0 })}\n                      label={getLabelCatalogs(values) || 'Tag Catalogs'}\n                      primary={false}\n                      size=\"medium\"\n                      onClick={() => {\n                        if (values.type === 'catalog' || values?.items?.length === 0) {\n                          toggleOpenCatalog();\n                          return;\n                        }\n                        toggleUnTagSkusModal();\n                      }}\n                    />\n                  </div>\n                  {errors?.items && touched?.items && (\n                    <div className={styles.error}>\n                      Tag atleast one product / catalog\n                    </div>\n                  )}\n                  <div className={styles.info}>\n                    On click of the banner, customer will be shown the tagged\n                    products/catalogs on your shop website\n                  </div>\n                  {/* <div className={styles.button}>\n                    <Button\n                      label=\"Save\"\n                      size=\"large\"\n                      className={styles.buttonD}\n                      bordered={true}\n                      primary={true}\n                      onClick={() => submitForm()}\n                    />\n                  </div> */}\n                  <div className={styles.buttonContainerD}>\n                    <Button\n                      label=\"Save\"\n                      size=\"large\"\n                      className={styles.noBorder}\n                      primary={false}\n                      onClick={() => submitForm()}\n                    />\n                    <Button\n                      label=\"Save & Apply\"\n                      size=\"large\"\n                      onClick={async () => {\n                        await toggleClicked();\n                        submitForm();\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </SideDrawer>\n          )}\n        </Formik>\n      </>\n    );\n  }\n\n  return (\n    <Drawer hideHeader={true}>\n      <Header title=\"Marketing Banner\" onBack={onClose} />\n      <Formik\n        validationSchema={schema}\n        initialValues={getInitialValues(values)}\n        enableReinitialize={true}\n        onSubmit={onSubmit}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          setFieldValue,\n          submitForm,\n        }) => (\n          <div className={styles.container}>\n            <div className={styles.container1}>\n              {open && (\n                <ProductsDrawer\n                  title=\"Tag Products\"\n                  initial={values.type === 'sku' ? values.items : []}\n                  onClose={onDrawerClose(setFieldValue)}\n                />\n              )}\n              {openCatalog && (\n                <Drawer title=\"Tag Catalogs\" onClose={toggleOpenCatalog}>\n                  <Catalog\n                    from=\"product\"\n                    selected={values.type === 'catalog' ? values.items : []}\n                    onSelect={onCatalogDrawerClose(setFieldValue)}\n                  />\n                  <div className=\"flexCenter\">\n                    <Button\n                      label={`Tag ${values.items.length > 0 ? values.items.length : ''} Catalog`}\n                      onClick={toggleOpenCatalog}\n                      size=\"large\"\n                    />\n                  </div>\n                </Drawer>\n              )}\n              <div className={styles.formik}>\n                <div className={styles.firstDiv}>\n                  <FormikInput\n                    label=\"Title (Optional)\"\n                    name=\"title\"\n                    placeholder=\"Enter Title Name\"\n                  />\n                </div>\n              </div>\n              <div className={styles.formik2}>\n                <div className={styles.firstDiv}>\n                  <FormikInput\n                    type=\"textarea\"\n                    rows={5}\n                    label=\"Description (Optional)\"\n                    name=\"description\"\n                    placeholder=\"Type here\"\n                    className={styles.input}\n                  />\n                </div>\n              </div>\n              <div className={styles.customImage}>\n                <div className=\"relative\">\n                  <input\n                    ref={inputRef}\n                    accept=\"image/*\"\n                    hidden\n                    id=\"icon-button-file\"\n                    type=\"file\"\n                    onChange={(e) => {\n                      uploadAsset(e, setFieldValue);\n                    }} />\n                  <label htmlFor=\"icon-button-file\">\n                    <Button\n                      size=\"medium\"\n                      label=\"Browse Custom Image\"\n                      primary={false}\n                      onClick={() => {\n                        // eslint-disable-next-line no-unused-expressions\n                        inputRef?.current?.click();\n                      }}\n                    />\n                  </label>\n                </div>\n              </div>\n              <div className={styles.head}>\n                Banner Preview\n              </div>\n              <Card\n                title={values?.title}\n                description={values?.description}\n                image={values?.image}\n                showEdit={false}\n                onClick={() => {}}\n              />\n              {unTagSkus && (\n                <DeleteAlert\n                  title=\"You can tag either catalogs or products at a time, untag products to tag the catalogs\"\n                  onCancel={toggleUnTagSkusModal}\n                  primary=\"Untag\"\n                  secondary=\"Cancel\"\n                  onDelete={() => {\n                    setFieldValue('items', []);\n                    toggleUnTagSkusModal();\n                    toggleOpenCatalog();\n                  }}\n                />\n              )}\n              {unTagCats && (\n                <DeleteAlert\n                  title=\"You can tag either catalogs or products at a time, untag catalogs to tag products\"\n                  onCancel={toggleUnTagCatsModal}\n                  primary=\"Untag\"\n                  secondary=\"Cancel\"\n                  onDelete={() => {\n                    setFieldValue('items', []);\n                    toggleUnTagCatsModal();\n                    setOpen();\n                  }}\n                />\n              )}\n              <div className={styles.tag}>\n                <Button\n                  startIcon={getLabelProducts(values)?.length > 0 ? tagGreenIcon : tagIcon}\n                  className={cx(styles.tagBtn, { [styles.tagActive]: getLabelProducts(values)?.length > 0 })}\n                  label={getLabelProducts(values) || 'Tag Products'}\n                  size=\"medium\"\n                  primary={false}\n                  onClick={() => {\n                    if (values?.type === 'sku' || values?.items?.length === 0) {\n                      setOpen();\n                      return;\n                    }\n                    toggleUnTagCatsModal();\n                  }}\n                />\n                <Button\n                  startIcon={getLabelCatalogs(values)?.length > 0 ? tagGreenIcon : tagIcon}\n                  className={cx(styles.tagBtn, { [styles.tagActive]: getLabelCatalogs(values)?.length > 0 })}\n                  label={getLabelCatalogs(values) || 'Tag Catalogs'}\n                  primary={false}\n                  size=\"medium\"\n                  onClick={() => {\n                    if (values.type === 'catalog' || values?.items?.length === 0) {\n                      toggleOpenCatalog();\n                      return;\n                    }\n                    toggleUnTagSkusModal();\n                  }}\n                />\n              </div>\n              {errors?.items && touched?.items && (\n                <div className={styles.error}>\n                  Tag atleast one product / catalog\n                </div>\n              )}\n              <div className={styles.info}>\n                On click of the banner, customer will be shown the tagged\n                products/catalogs on your shop website\n              </div>\n            </div>\n            <div className={styles.buttonContainer}>\n              <Button\n                label=\"Save\"\n                size=\"large\"\n                className={styles.noBorder}\n                bordered={false}\n                fullWidth\n                primary={false}\n                onClick={() => submitForm()}\n              />\n              <Button\n                label=\"Save & Apply\"\n                size=\"large\"\n                bordered={false}\n                fullWidth\n                onClick={async () => {\n                  await toggleClicked();\n                  submitForm();\n                }}\n              />\n            </div>\n          </div>\n        )}\n      </Formik>\n    </Drawer>\n\n  );\n}\n\nForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  values: PropTypes.object.isRequired,\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}