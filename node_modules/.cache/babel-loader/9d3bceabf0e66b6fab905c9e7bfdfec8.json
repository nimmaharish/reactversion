{"ast":null,"code":"import Span from './span';\nimport { RESOURCE_INITIATOR_TYPES, MAX_SPAN_DURATION, USER_TIMING_THRESHOLD, PAGE_LOAD, RESOURCE, MEASURE } from '../common/constants';\nimport { stripQueryStringFromUrl, PERF, isPerfTimelineSupported } from '../common/utils';\nimport { state } from '../state';\nvar eventPairs = [['domainLookupStart', 'domainLookupEnd', 'Domain lookup'], ['connectStart', 'connectEnd', 'Making a connection to the server'], ['requestStart', 'responseEnd', 'Requesting and receiving the document'], ['domLoading', 'domInteractive', 'Parsing the document, executing sync. scripts'], ['domContentLoadedEventStart', 'domContentLoadedEventEnd', 'Fire \"DOMContentLoaded\" event'], ['loadEventStart', 'loadEventEnd', 'Fire \"load\" event']];\n\nfunction shouldCreateSpan(start, end, trStart, trEnd, baseTime) {\n  if (baseTime === void 0) {\n    baseTime = 0;\n  }\n\n  return typeof start === 'number' && typeof end === 'number' && start >= baseTime && end > start && start - baseTime >= trStart && end - baseTime <= trEnd && end - start < MAX_SPAN_DURATION && start - baseTime < MAX_SPAN_DURATION && end - baseTime < MAX_SPAN_DURATION;\n}\n\nfunction createNavigationTimingSpans(timings, baseTime, trStart, trEnd) {\n  var spans = [];\n\n  for (var i = 0; i < eventPairs.length; i++) {\n    var start = timings[eventPairs[i][0]];\n    var end = timings[eventPairs[i][1]];\n\n    if (!shouldCreateSpan(start, end, trStart, trEnd, baseTime)) {\n      continue;\n    }\n\n    var span = new Span(eventPairs[i][2], 'hard-navigation.browser-timing');\n    var data = null;\n\n    if (eventPairs[i][0] === 'requestStart') {\n      span.pageResponse = true;\n      data = {\n        url: location.origin\n      };\n    }\n\n    span._start = start - baseTime;\n    span.end(end - baseTime, data);\n    spans.push(span);\n  }\n\n  return spans;\n}\n\nfunction createResourceTimingSpan(resourceTimingEntry) {\n  var name = resourceTimingEntry.name,\n      initiatorType = resourceTimingEntry.initiatorType,\n      startTime = resourceTimingEntry.startTime,\n      responseEnd = resourceTimingEntry.responseEnd;\n  var kind = 'resource';\n\n  if (initiatorType) {\n    kind += '.' + initiatorType;\n  }\n\n  var spanName = stripQueryStringFromUrl(name);\n  var span = new Span(spanName, kind);\n  span._start = startTime;\n  span.end(responseEnd, {\n    url: name,\n    entry: resourceTimingEntry\n  });\n  return span;\n}\n\nfunction isCapturedByPatching(resourceStartTime, requestPatchTime) {\n  return requestPatchTime != null && resourceStartTime > requestPatchTime;\n}\n\nfunction isIntakeAPIEndpoint(url) {\n  return /intake\\/v\\d+\\/rum\\/events/.test(url);\n}\n\nfunction createResourceTimingSpans(entries, requestPatchTime, trStart, trEnd) {\n  var spans = [];\n\n  for (var i = 0; i < entries.length; i++) {\n    var _entries$i = entries[i],\n        initiatorType = _entries$i.initiatorType,\n        name = _entries$i.name,\n        startTime = _entries$i.startTime,\n        responseEnd = _entries$i.responseEnd;\n\n    if (RESOURCE_INITIATOR_TYPES.indexOf(initiatorType) === -1 || name == null) {\n      continue;\n    }\n\n    if ((initiatorType === 'xmlhttprequest' || initiatorType === 'fetch') && (isIntakeAPIEndpoint(name) || isCapturedByPatching(startTime, requestPatchTime))) {\n      continue;\n    }\n\n    if (shouldCreateSpan(startTime, responseEnd, trStart, trEnd)) {\n      spans.push(createResourceTimingSpan(entries[i]));\n    }\n  }\n\n  return spans;\n}\n\nfunction createUserTimingSpans(entries, trStart, trEnd) {\n  var userTimingSpans = [];\n\n  for (var i = 0; i < entries.length; i++) {\n    var _entries$i2 = entries[i],\n        name = _entries$i2.name,\n        startTime = _entries$i2.startTime,\n        duration = _entries$i2.duration;\n    var end = startTime + duration;\n\n    if (duration <= USER_TIMING_THRESHOLD || !shouldCreateSpan(startTime, end, trStart, trEnd)) {\n      continue;\n    }\n\n    var kind = 'app';\n    var span = new Span(name, kind);\n    span._start = startTime;\n    span.end(end);\n    userTimingSpans.push(span);\n  }\n\n  return userTimingSpans;\n}\n\nvar NAVIGATION_TIMING_MARKS = ['fetchStart', 'domainLookupStart', 'domainLookupEnd', 'connectStart', 'connectEnd', 'requestStart', 'responseStart', 'responseEnd', 'domLoading', 'domInteractive', 'domContentLoadedEventStart', 'domContentLoadedEventEnd', 'domComplete', 'loadEventStart', 'loadEventEnd'];\nvar COMPRESSED_NAV_TIMING_MARKS = ['fs', 'ls', 'le', 'cs', 'ce', 'qs', 'rs', 're', 'dl', 'di', 'ds', 'de', 'dc', 'es', 'ee'];\n\nfunction getNavigationTimingMarks(timing) {\n  var fetchStart = timing.fetchStart,\n      navigationStart = timing.navigationStart,\n      responseStart = timing.responseStart,\n      responseEnd = timing.responseEnd;\n\n  if (fetchStart >= navigationStart && responseStart >= fetchStart && responseEnd >= responseStart) {\n    var marks = {};\n    NAVIGATION_TIMING_MARKS.forEach(function (timingKey) {\n      var m = timing[timingKey];\n\n      if (m && m >= fetchStart) {\n        marks[timingKey] = parseInt(m - fetchStart);\n      }\n    });\n    return marks;\n  }\n\n  return null;\n}\n\nfunction getPageLoadMarks(timing) {\n  var marks = getNavigationTimingMarks(timing);\n\n  if (marks == null) {\n    return null;\n  }\n\n  return {\n    navigationTiming: marks,\n    agent: {\n      timeToFirstByte: marks.responseStart,\n      domInteractive: marks.domInteractive,\n      domComplete: marks.domComplete\n    }\n  };\n}\n\nfunction captureNavigation(transaction) {\n  if (!transaction.captureTimings) {\n    return;\n  }\n\n  var trEnd = transaction._end;\n\n  if (transaction.type === PAGE_LOAD) {\n    if (transaction.marks && transaction.marks.custom) {\n      var customMarks = transaction.marks.custom;\n      Object.keys(customMarks).forEach(function (key) {\n        customMarks[key] += transaction._start;\n      });\n    }\n\n    var trStart = 0;\n    transaction._start = trStart;\n    var timings = PERF.timing;\n    createNavigationTimingSpans(timings, timings.fetchStart, trStart, trEnd).forEach(function (span) {\n      span.traceId = transaction.traceId;\n      span.sampled = transaction.sampled;\n\n      if (span.pageResponse && transaction.options.pageLoadSpanId) {\n        span.id = transaction.options.pageLoadSpanId;\n      }\n\n      transaction.spans.push(span);\n    });\n    transaction.addMarks(getPageLoadMarks(timings));\n  }\n\n  if (isPerfTimelineSupported()) {\n    var _trStart = transaction._start;\n    var resourceEntries = PERF.getEntriesByType(RESOURCE);\n    createResourceTimingSpans(resourceEntries, state.bootstrapTime, _trStart, trEnd).forEach(function (span) {\n      return transaction.spans.push(span);\n    });\n    var userEntries = PERF.getEntriesByType(MEASURE);\n    createUserTimingSpans(userEntries, _trStart, trEnd).forEach(function (span) {\n      return transaction.spans.push(span);\n    });\n  }\n}\n\nexport { getPageLoadMarks, captureNavigation, createNavigationTimingSpans, createResourceTimingSpans, createUserTimingSpans, NAVIGATION_TIMING_MARKS, COMPRESSED_NAV_TIMING_MARKS };","map":{"version":3,"sources":["/home/harish/windo/phoenix/node_modules/@elastic/apm-rum-core/dist/es/performance-monitoring/capture-navigation.js"],"names":["Span","RESOURCE_INITIATOR_TYPES","MAX_SPAN_DURATION","USER_TIMING_THRESHOLD","PAGE_LOAD","RESOURCE","MEASURE","stripQueryStringFromUrl","PERF","isPerfTimelineSupported","state","eventPairs","shouldCreateSpan","start","end","trStart","trEnd","baseTime","createNavigationTimingSpans","timings","spans","i","length","span","data","pageResponse","url","location","origin","_start","push","createResourceTimingSpan","resourceTimingEntry","name","initiatorType","startTime","responseEnd","kind","spanName","entry","isCapturedByPatching","resourceStartTime","requestPatchTime","isIntakeAPIEndpoint","test","createResourceTimingSpans","entries","_entries$i","indexOf","createUserTimingSpans","userTimingSpans","_entries$i2","duration","NAVIGATION_TIMING_MARKS","COMPRESSED_NAV_TIMING_MARKS","getNavigationTimingMarks","timing","fetchStart","navigationStart","responseStart","marks","forEach","timingKey","m","parseInt","getPageLoadMarks","navigationTiming","agent","timeToFirstByte","domInteractive","domComplete","captureNavigation","transaction","captureTimings","_end","type","custom","customMarks","Object","keys","key","traceId","sampled","options","pageLoadSpanId","id","addMarks","_trStart","resourceEntries","getEntriesByType","bootstrapTime","userEntries"],"mappings":"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","sourcesContent":["import Span from './span';\nimport { RESOURCE_INITIATOR_TYPES, MAX_SPAN_DURATION, USER_TIMING_THRESHOLD, PAGE_LOAD, RESOURCE, MEASURE } from '../common/constants';\nimport { stripQueryStringFromUrl, PERF, isPerfTimelineSupported } from '../common/utils';\nimport { state } from '../state';\nvar eventPairs = [['domainLookupStart', 'domainLookupEnd', 'Domain lookup'], ['connectStart', 'connectEnd', 'Making a connection to the server'], ['requestStart', 'responseEnd', 'Requesting and receiving the document'], ['domLoading', 'domInteractive', 'Parsing the document, executing sync. scripts'], ['domContentLoadedEventStart', 'domContentLoadedEventEnd', 'Fire \"DOMContentLoaded\" event'], ['loadEventStart', 'loadEventEnd', 'Fire \"load\" event']];\n\nfunction shouldCreateSpan(start, end, trStart, trEnd, baseTime) {\n  if (baseTime === void 0) {\n    baseTime = 0;\n  }\n\n  return typeof start === 'number' && typeof end === 'number' && start >= baseTime && end > start && start - baseTime >= trStart && end - baseTime <= trEnd && end - start < MAX_SPAN_DURATION && start - baseTime < MAX_SPAN_DURATION && end - baseTime < MAX_SPAN_DURATION;\n}\n\nfunction createNavigationTimingSpans(timings, baseTime, trStart, trEnd) {\n  var spans = [];\n\n  for (var i = 0; i < eventPairs.length; i++) {\n    var start = timings[eventPairs[i][0]];\n    var end = timings[eventPairs[i][1]];\n\n    if (!shouldCreateSpan(start, end, trStart, trEnd, baseTime)) {\n      continue;\n    }\n\n    var span = new Span(eventPairs[i][2], 'hard-navigation.browser-timing');\n    var data = null;\n\n    if (eventPairs[i][0] === 'requestStart') {\n      span.pageResponse = true;\n      data = {\n        url: location.origin\n      };\n    }\n\n    span._start = start - baseTime;\n    span.end(end - baseTime, data);\n    spans.push(span);\n  }\n\n  return spans;\n}\n\nfunction createResourceTimingSpan(resourceTimingEntry) {\n  var name = resourceTimingEntry.name,\n      initiatorType = resourceTimingEntry.initiatorType,\n      startTime = resourceTimingEntry.startTime,\n      responseEnd = resourceTimingEntry.responseEnd;\n  var kind = 'resource';\n\n  if (initiatorType) {\n    kind += '.' + initiatorType;\n  }\n\n  var spanName = stripQueryStringFromUrl(name);\n  var span = new Span(spanName, kind);\n  span._start = startTime;\n  span.end(responseEnd, {\n    url: name,\n    entry: resourceTimingEntry\n  });\n  return span;\n}\n\nfunction isCapturedByPatching(resourceStartTime, requestPatchTime) {\n  return requestPatchTime != null && resourceStartTime > requestPatchTime;\n}\n\nfunction isIntakeAPIEndpoint(url) {\n  return /intake\\/v\\d+\\/rum\\/events/.test(url);\n}\n\nfunction createResourceTimingSpans(entries, requestPatchTime, trStart, trEnd) {\n  var spans = [];\n\n  for (var i = 0; i < entries.length; i++) {\n    var _entries$i = entries[i],\n        initiatorType = _entries$i.initiatorType,\n        name = _entries$i.name,\n        startTime = _entries$i.startTime,\n        responseEnd = _entries$i.responseEnd;\n\n    if (RESOURCE_INITIATOR_TYPES.indexOf(initiatorType) === -1 || name == null) {\n      continue;\n    }\n\n    if ((initiatorType === 'xmlhttprequest' || initiatorType === 'fetch') && (isIntakeAPIEndpoint(name) || isCapturedByPatching(startTime, requestPatchTime))) {\n      continue;\n    }\n\n    if (shouldCreateSpan(startTime, responseEnd, trStart, trEnd)) {\n      spans.push(createResourceTimingSpan(entries[i]));\n    }\n  }\n\n  return spans;\n}\n\nfunction createUserTimingSpans(entries, trStart, trEnd) {\n  var userTimingSpans = [];\n\n  for (var i = 0; i < entries.length; i++) {\n    var _entries$i2 = entries[i],\n        name = _entries$i2.name,\n        startTime = _entries$i2.startTime,\n        duration = _entries$i2.duration;\n    var end = startTime + duration;\n\n    if (duration <= USER_TIMING_THRESHOLD || !shouldCreateSpan(startTime, end, trStart, trEnd)) {\n      continue;\n    }\n\n    var kind = 'app';\n    var span = new Span(name, kind);\n    span._start = startTime;\n    span.end(end);\n    userTimingSpans.push(span);\n  }\n\n  return userTimingSpans;\n}\n\nvar NAVIGATION_TIMING_MARKS = ['fetchStart', 'domainLookupStart', 'domainLookupEnd', 'connectStart', 'connectEnd', 'requestStart', 'responseStart', 'responseEnd', 'domLoading', 'domInteractive', 'domContentLoadedEventStart', 'domContentLoadedEventEnd', 'domComplete', 'loadEventStart', 'loadEventEnd'];\nvar COMPRESSED_NAV_TIMING_MARKS = ['fs', 'ls', 'le', 'cs', 'ce', 'qs', 'rs', 're', 'dl', 'di', 'ds', 'de', 'dc', 'es', 'ee'];\n\nfunction getNavigationTimingMarks(timing) {\n  var fetchStart = timing.fetchStart,\n      navigationStart = timing.navigationStart,\n      responseStart = timing.responseStart,\n      responseEnd = timing.responseEnd;\n\n  if (fetchStart >= navigationStart && responseStart >= fetchStart && responseEnd >= responseStart) {\n    var marks = {};\n    NAVIGATION_TIMING_MARKS.forEach(function (timingKey) {\n      var m = timing[timingKey];\n\n      if (m && m >= fetchStart) {\n        marks[timingKey] = parseInt(m - fetchStart);\n      }\n    });\n    return marks;\n  }\n\n  return null;\n}\n\nfunction getPageLoadMarks(timing) {\n  var marks = getNavigationTimingMarks(timing);\n\n  if (marks == null) {\n    return null;\n  }\n\n  return {\n    navigationTiming: marks,\n    agent: {\n      timeToFirstByte: marks.responseStart,\n      domInteractive: marks.domInteractive,\n      domComplete: marks.domComplete\n    }\n  };\n}\n\nfunction captureNavigation(transaction) {\n  if (!transaction.captureTimings) {\n    return;\n  }\n\n  var trEnd = transaction._end;\n\n  if (transaction.type === PAGE_LOAD) {\n    if (transaction.marks && transaction.marks.custom) {\n      var customMarks = transaction.marks.custom;\n      Object.keys(customMarks).forEach(function (key) {\n        customMarks[key] += transaction._start;\n      });\n    }\n\n    var trStart = 0;\n    transaction._start = trStart;\n    var timings = PERF.timing;\n    createNavigationTimingSpans(timings, timings.fetchStart, trStart, trEnd).forEach(function (span) {\n      span.traceId = transaction.traceId;\n      span.sampled = transaction.sampled;\n\n      if (span.pageResponse && transaction.options.pageLoadSpanId) {\n        span.id = transaction.options.pageLoadSpanId;\n      }\n\n      transaction.spans.push(span);\n    });\n    transaction.addMarks(getPageLoadMarks(timings));\n  }\n\n  if (isPerfTimelineSupported()) {\n    var _trStart = transaction._start;\n    var resourceEntries = PERF.getEntriesByType(RESOURCE);\n    createResourceTimingSpans(resourceEntries, state.bootstrapTime, _trStart, trEnd).forEach(function (span) {\n      return transaction.spans.push(span);\n    });\n    var userEntries = PERF.getEntriesByType(MEASURE);\n    createUserTimingSpans(userEntries, _trStart, trEnd).forEach(function (span) {\n      return transaction.spans.push(span);\n    });\n  }\n}\n\nexport { getPageLoadMarks, captureNavigation, createNavigationTimingSpans, createResourceTimingSpans, createUserTimingSpans, NAVIGATION_TIMING_MARKS, COMPRESSED_NAV_TIMING_MARKS };"]},"metadata":{},"sourceType":"module"}