{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/profile/delivery/DeliveryByZone.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { Clickable, FormikInput } from 'phoenix-components';\nimport { useToggle } from \"../../../hooks/common\";\nimport { useShop } from \"../../../contexts\";\nimport { Drawer } from \"../../shared/Drawer\";\nimport { useDesktop } from \"../../../contexts\";\nimport rightArrowIcon from \"../../../assets/images/areasServed/rightArrow.svg\";\nimport { Button } from 'phoenix-components';\nimport editIcon from \"../../../assets/images/areasServed/edit.svg\";\nimport cx from 'classnames';\nimport { Becca } from \"../../../api\";\nimport SnackBar from \"../../../services/snackbar\";\nimport Loader from \"../../../services/loader\";\nimport { SideDrawer } from \"../../shared/SideDrawer\";\nimport { useHistory } from 'react-router-dom'; // import { DebugValues } from 'components/formik';\n\nimport pandaIcon from \"../../../assets/images/areasServed/panda.svg\";\nimport { DeliveryByZoneForm } from \"./DeliveryByZoneForm\";\nimport { getChargeConfig } from \"./utils\";\nimport styles from \"./DeliveryByZone.module.css\";\nexport function DeliveryByZone({\n  zones,\n  idx,\n  config,\n  onClose,\n  setIdx,\n  onRefresh\n}) {\n  _s();\n\n  var _zones$data3;\n\n  const history = useHistory();\n  const shop = useShop();\n  const isDesktop = useDesktop();\n  const [showZones, toggleZones] = useToggle();\n  const [selectedZones, setSelectedZones] = useState([]); //   const isConditionalChargesEnabled = useIsConditionalChargesEnabled();\n\n  const onSubmit = async values => {\n    try {\n      Loader.show();\n      const marshalData = selectedZones.map(zone => ({\n        value: zone._id,\n        enabled: true,\n        config: values,\n        type: (zone === null || zone === void 0 ? void 0 : zone.type) || 'pincodeGroup'\n      }));\n\n      if (idx) {\n        config.find(s => s.value === idx).config = values;\n      }\n\n      await Becca.updateChargeConfig({\n        config: [...marshalData, ...config],\n        chargeType: 'area'\n      });\n      SnackBar.show('successfully Updated');\n      onRefresh();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n      onClose();\n    }\n  };\n\n  const Component = isDesktop ? SideDrawer : Drawer;\n  const props = !isDesktop ? {\n    title: 'Delivery Charge by Zone',\n    onClose: () => {\n      setIdx(null);\n      onClose();\n    }\n  } : {\n    title: 'Delivery Charge by Zone',\n    backButton: true,\n    onClose: () => {\n      setIdx(null);\n      onClose();\n    }\n  };\n\n  const onSave = values => {\n    setSelectedZones(values);\n    toggleZones();\n  };\n\n  const getLabel = () => {\n    if (idx) {\n      var _zones$data, _zones$data$map, _zones$data$map$filte, _zones$data$map$filte2, _zones$data2, _zones$data2$find;\n\n      const label = (zones === null || zones === void 0 ? void 0 : (_zones$data = zones.data) === null || _zones$data === void 0 ? void 0 : (_zones$data$map = _zones$data.map(obj => {\n        var _obj$region;\n\n        return obj === null || obj === void 0 ? void 0 : (_obj$region = obj.region) === null || _obj$region === void 0 ? void 0 : _obj$region.find(s => s._id === idx);\n      })) === null || _zones$data$map === void 0 ? void 0 : (_zones$data$map$filte = _zones$data$map.filter(a => a)) === null || _zones$data$map$filte === void 0 ? void 0 : (_zones$data$map$filte2 = _zones$data$map$filte[0]) === null || _zones$data$map$filte2 === void 0 ? void 0 : _zones$data$map$filte2.name) || (zones === null || zones === void 0 ? void 0 : (_zones$data2 = zones.data) === null || _zones$data2 === void 0 ? void 0 : (_zones$data2$find = _zones$data2.find(zone => zone._id === idx)) === null || _zones$data2$find === void 0 ? void 0 : _zones$data2$find.name);\n      return label;\n    }\n\n    if (selectedZones !== null && selectedZones !== void 0 && selectedZones.length) {\n      return selectedZones === null || selectedZones === void 0 ? void 0 : selectedZones.reduce((acc, obj) => [...acc, obj.name], []).toString();\n    }\n\n    return 'Select Zone';\n  };\n\n  const zonesWithChargeArray = config === null || config === void 0 ? void 0 : config.reduce((acc, obj) => [...acc, obj.value], []);\n  const marshalConfig = zones === null || zones === void 0 ? void 0 : (_zones$data3 = zones.data) === null || _zones$data3 === void 0 ? void 0 : _zones$data3.map(obj => {\n    var _obj$region2;\n\n    // eslint-disable-next-line no-prototype-builtins\n    if ((obj === null || obj === void 0 ? void 0 : (_obj$region2 = obj.region) === null || _obj$region2 === void 0 ? void 0 : _obj$region2.length) > 0) {\n      var _obj$region3;\n\n      const newObj = { ...obj\n      };\n      newObj.region = obj === null || obj === void 0 ? void 0 : (_obj$region3 = obj.region) === null || _obj$region3 === void 0 ? void 0 : _obj$region3.filter(region => !zonesWithChargeArray.includes(region._id));\n      return newObj;\n    }\n\n    if (!zonesWithChargeArray.includes(obj._id)) {\n      return obj;\n    }\n\n    return null;\n  }).filter(s => s);\n  const isZonesAvailable = marshalConfig && (marshalConfig === null || marshalConfig === void 0 ? void 0 : marshalConfig.length) > 0;\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, !idx && !isZonesAvailable && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.noData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: pandaIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, \"No active zones in the areas you serve\")), (isZonesAvailable || idx) && /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: getChargeConfig(config, idx),\n      onSubmit: onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, ({\n      submitForm\n    }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.paddingBottom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      name: \"min\",\n      label: \"Minimum order value\",\n      type: \"number\",\n      placeholder: `${shop.currency} 2000`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.paddingBottom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      name: \"max\",\n      label: \"Max order value\",\n      type: \"number\",\n      placeholder: `${shop.currency} 5000`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Clickable, {\n      fullWidth: true,\n      onClick: idx ? null : toggleZones,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: cx(styles.paddingBottom, styles.select),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 23\n      }\n    }, getLabel(), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, (selectedZones === null || selectedZones === void 0 ? void 0 : selectedZones.length) > 0 && /*#__PURE__*/React.createElement(\"img\", {\n      src: editIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: rightArrowIcon,\n      className: styles.icon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.paddingBottom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      name: \"value\",\n      label: \"Delivery Charge\",\n      type: \"number\",\n      placeholder: `${shop.currency} 200`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      label: !isZonesAvailable && !idx ? 'Add Zones' : 'Save',\n      fullwidth: true,\n      className: styles.saveButton,\n      variant: \"primary\",\n      onClick: () => !isZonesAvailable && !idx ? history.push('/manage/areasServed') : submitForm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }), showZones && /*#__PURE__*/React.createElement(DeliveryByZoneForm, {\n      onClose: toggleZones,\n      zones: marshalConfig,\n      onSave: val => onSave(val),\n      selectedZones: selectedZones,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }))))))\n  );\n}\n\n_s(DeliveryByZone, \"5+T+DXlb+Wz9MhvMkSKNGZ5v4/8=\", false, function () {\n  return [useHistory, useShop, useDesktop, useToggle];\n});\n\n_c = DeliveryByZone;\nDeliveryByZone.propTypes = {\n  zones: PropTypes.array.isRequired,\n  idx: PropTypes.number.isRequired,\n  config: PropTypes.array.isRequired,\n  onClose: PropTypes.func.isRequired,\n  setIdx: PropTypes.func.isRequired,\n  onRefresh: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliveryByZone\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/profile/delivery/DeliveryByZone.jsx"],"names":["React","useState","PropTypes","Formik","Clickable","FormikInput","useToggle","useShop","Drawer","useDesktop","Button","cx","Becca","SnackBar","Loader","SideDrawer","useHistory","DeliveryByZoneForm","getChargeConfig","styles","DeliveryByZone","zones","idx","config","onClose","setIdx","onRefresh","history","shop","isDesktop","showZones","toggleZones","selectedZones","setSelectedZones","onSubmit","values","show","marshalData","map","zone","value","_id","enabled","type","find","s","updateChargeConfig","chargeType","e","showError","hide","Component","props","title","backButton","onSave","getLabel","label","data","obj","region","filter","a","name","length","reduce","acc","toString","zonesWithChargeArray","marshalConfig","newObj","includes","isZonesAvailable","container","noData","pandaIcon","text","card","submitForm","paddingBottom","currency","select","editIcon","rightArrowIcon","icon","saveButton","push","val","propTypes","array","isRequired","number","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,oBAAvC;AACA,SAASC,SAAT;AACA,SAASC,OAAT;AACA,SAASC,MAAT;AACA,SAASC,UAAT;;AAEA,SAASC,MAAT,QAAuB,oBAAvB;;AAEA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,KAAT;AACA,OAAOC,QAAP;AACA,OAAOC,MAAP;AACA,SAASC,UAAT;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;;AAEA,SAASC,kBAAT;AACA,SAASC,eAAT;AACA,OAAOC,MAAP;AAEA,OAAO,SAASC,cAAT,CAAwB;AAC7BC,EAAAA,KAD6B;AACtBC,EAAAA,GADsB;AACjBC,EAAAA,MADiB;AACTC,EAAAA,OADS;AACAC,EAAAA,MADA;AACQC,EAAAA;AADR,CAAxB,EAEJ;AAAA;;AAAA;;AACD,QAAMC,OAAO,GAAGX,UAAU,EAA1B;AACA,QAAMY,IAAI,GAAGrB,OAAO,EAApB;AACA,QAAMsB,SAAS,GAAGpB,UAAU,EAA5B;AACA,QAAM,CAACqB,SAAD,EAAYC,WAAZ,IAA2BzB,SAAS,EAA1C;AACA,QAAM,CAAC0B,aAAD,EAAgBC,gBAAhB,IAAoChC,QAAQ,CAAC,EAAD,CAAlD,CALC,CAMD;;AAEA,QAAMiC,QAAQ,GAAG,MAAOC,MAAP,IAAkB;AACjC,QAAI;AACFrB,MAAAA,MAAM,CAACsB,IAAP;AACA,YAAMC,WAAW,GAAGL,aAAa,CAACM,GAAd,CAAkBC,IAAI,KAAK;AAC7CC,QAAAA,KAAK,EAAED,IAAI,CAACE,GADiC;AAE7CC,QAAAA,OAAO,EAAE,IAFoC;AAG7CnB,QAAAA,MAAM,EAAEY,MAHqC;AAI7CQ,QAAAA,IAAI,EAAE,CAAAJ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEI,IAAN,KAAc;AAJyB,OAAL,CAAtB,CAApB;;AAMA,UAAIrB,GAAJ,EAAS;AACPC,QAAAA,MAAM,CAACqB,IAAP,CAAYC,CAAC,IAAIA,CAAC,CAACL,KAAF,KAAYlB,GAA7B,EAAkCC,MAAlC,GAA2CY,MAA3C;AACD;;AACD,YAAMvB,KAAK,CAACkC,kBAAN,CAAyB;AAAEvB,QAAAA,MAAM,EAAE,CAAC,GAAGc,WAAJ,EAAiB,GAAGd,MAApB,CAAV;AAAuCwB,QAAAA,UAAU,EAAE;AAAnD,OAAzB,CAAN;AACAlC,MAAAA,QAAQ,CAACuB,IAAT,CAAc,sBAAd;AACAV,MAAAA,SAAS;AACV,KAdD,CAcE,OAAOsB,CAAP,EAAU;AACVnC,MAAAA,QAAQ,CAACoC,SAAT,CAAmBD,CAAnB;AACD,KAhBD,SAgBU;AACRlC,MAAAA,MAAM,CAACoC,IAAP;AACA1B,MAAAA,OAAO;AACR;AACF,GArBD;;AAuBA,QAAM2B,SAAS,GAAGtB,SAAS,GAAGd,UAAH,GAAgBP,MAA3C;AACA,QAAM4C,KAAK,GAAG,CAACvB,SAAD,GAAa;AACzBwB,IAAAA,KAAK,EAAE,yBADkB;AAEzB7B,IAAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,MAAM,CAAC,IAAD,CAAN;AACAD,MAAAA,OAAO;AACR;AALwB,GAAb,GAMV;AACF6B,IAAAA,KAAK,EAAE,yBADL;AAEFC,IAAAA,UAAU,EAAE,IAFV;AAGF9B,IAAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,MAAM,CAAC,IAAD,CAAN;AACAD,MAAAA,OAAO;AACR;AANC,GANJ;;AAeA,QAAM+B,MAAM,GAAIpB,MAAD,IAAY;AACzBF,IAAAA,gBAAgB,CAACE,MAAD,CAAhB;AACAJ,IAAAA,WAAW;AACZ,GAHD;;AAKA,QAAMyB,QAAQ,GAAG,MAAM;AACrB,QAAIlC,GAAJ,EAAS;AAAA;;AACP,YAAMmC,KAAK,GAAG,CAAApC,KAAK,SAAL,IAAAA,KAAK,WAAL,2BAAAA,KAAK,CAAEqC,IAAP,+EAAapB,GAAb,CAAiBqB,GAAG;AAAA;;AAAA,eAAIA,GAAJ,aAAIA,GAAJ,sCAAIA,GAAG,CAAEC,MAAT,gDAAI,YAAahB,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACJ,GAAF,KAAUnB,GAAjC,CAAJ;AAAA,OAApB,8FAAgEuC,MAAhE,CAAuEC,CAAC,IAAIA,CAA5E,2GAAiF,CAAjF,mFAAqFC,IAArF,MACX1C,KADW,aACXA,KADW,uCACXA,KAAK,CAAEqC,IADI,sEACX,aAAad,IAAb,CAAkBL,IAAI,IAAIA,IAAI,CAACE,GAAL,KAAanB,GAAvC,CADW,sDACX,kBAA6CyC,IADlC,CAAd;AAEA,aAAON,KAAP;AACD;;AACD,QAAIzB,aAAJ,aAAIA,aAAJ,eAAIA,aAAa,CAAEgC,MAAnB,EAA2B;AACzB,aAAOhC,aAAP,aAAOA,aAAP,uBAAOA,aAAa,CAAEiC,MAAf,CAAsB,CAACC,GAAD,EAAMP,GAAN,KAAc,CAAC,GAAGO,GAAJ,EAASP,GAAG,CAACI,IAAb,CAApC,EAAwD,EAAxD,EAA4DI,QAA5D,EAAP;AACD;;AACD,WAAO,aAAP;AACD,GAVD;;AAYA,QAAMC,oBAAoB,GAAG7C,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAE0C,MAAR,CAAe,CAACC,GAAD,EAAMP,GAAN,KAAc,CAAC,GAAGO,GAAJ,EAASP,GAAG,CAACnB,KAAb,CAA7B,EAAkD,EAAlD,CAA7B;AAEA,QAAM6B,aAAa,GAAGhD,KAAH,aAAGA,KAAH,uCAAGA,KAAK,CAAEqC,IAAV,iDAAG,aAAapB,GAAb,CAAiBqB,GAAG,IAAI;AAAA;;AAC5C;AACA,QAAI,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,4BAAAA,GAAG,CAAEC,MAAL,8DAAaI,MAAb,IAAsB,CAA1B,EAA6B;AAAA;;AAC3B,YAAMM,MAAM,GAAG,EAAE,GAAGX;AAAL,OAAf;AACAW,MAAAA,MAAM,CAACV,MAAP,GAAgBD,GAAhB,aAAgBA,GAAhB,uCAAgBA,GAAG,CAAEC,MAArB,iDAAgB,aAAaC,MAAb,CAAoBD,MAAM,IAAI,CAACQ,oBAAoB,CAACG,QAArB,CAA8BX,MAAM,CAACnB,GAArC,CAA/B,CAAhB;AACA,aAAO6B,MAAP;AACD;;AACD,QAAI,CAACF,oBAAoB,CAACG,QAArB,CAA8BZ,GAAG,CAAClB,GAAlC,CAAL,EAA6C;AAC3C,aAAOkB,GAAP;AACD;;AACD,WAAO,IAAP;AACD,GAXqB,EAWnBE,MAXmB,CAWZhB,CAAC,IAAIA,CAXO,CAAtB;AAaA,QAAM2B,gBAAgB,GAAGH,aAAa,IAAI,CAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEL,MAAf,IAAwB,CAAlE;AAEA;AAAA;AACE;AACA,wBAAC,SAAD,oBAAeZ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACE;AAAK,MAAA,SAAS,EAAEjC,MAAM,CAACsD,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACnD,GAAD,IAAQ,CAACkD,gBAAT,iBACC,uDACE;AAAK,MAAA,SAAS,EAAErD,MAAM,CAACuD,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEC,SAAV;AAAqB,MAAA,GAAG,EAAC,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAExD,MAAM,CAACyD,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAJF,CAFJ,EAWG,CAACJ,gBAAgB,IAAIlD,GAArB,kBACC;AAAK,MAAA,SAAS,EAAEH,MAAM,CAAC0D,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,aAAa,EAAE3D,eAAe,CAACK,MAAD,EAASD,GAAT,CADhC;AAEE,MAAA,QAAQ,EAAEY,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,CAAC;AAAE4C,MAAAA;AAAF,KAAD,kBACC,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAE3D,MAAM,CAAC4D,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,KAAK,EAAC,qBAFR;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,WAAW,EAAG,GAAEnD,IAAI,CAACoD,QAAS,OAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eASE;AAAK,MAAA,SAAS,EAAE7D,MAAM,CAAC4D,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,KAAK,EAAC,iBAFR;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,WAAW,EAAG,GAAEnD,IAAI,CAACoD,QAAS,OAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,eAiBE,oBAAC,SAAD;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,OAAO,EAAE1D,GAAG,GAAG,IAAH,GAAUS,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAEpB,EAAE,CAACQ,MAAM,CAAC4D,aAAR,EAAuB5D,MAAM,CAAC8D,MAA9B,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGzB,QAAQ,EADX,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAAxB,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEgC,MAAf,IAAwB,CAAxB,iBAA6B;AAAK,MAAA,GAAG,EAAEkB,QAAV;AAAoB,MAAA,GAAG,EAAC,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhC,eAEE;AAAK,MAAA,GAAG,EAAEC,cAAV;AAA0B,MAAA,SAAS,EAAEhE,MAAM,CAACiE,IAA5C;AAAkD,MAAA,GAAG,EAAC,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CADF,CAjBF,eA0BE;AAAK,MAAA,SAAS,EAAEjE,MAAM,CAAC4D,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAC,iBAFR;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,WAAW,EAAG,GAAEnD,IAAI,CAACoD,QAAS,MAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA1BF,CADF,eAoCE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,CAACR,gBAAD,IAAqB,CAAClD,GAAtB,GAA4B,WAA5B,GAA0C,MADnD;AAEE,MAAA,SAAS,EAAE,IAFb;AAGE,MAAA,SAAS,EAAEH,MAAM,CAACkE,UAHpB;AAIE,MAAA,OAAO,EAAC,SAJV;AAKE,MAAA,OAAO,EAAE,MAAO,CAACb,gBAAD,IAAqB,CAAClD,GAAtB,GACZK,OAAO,CAAC2D,IAAR,CAAa,qBAAb,CADY,GAC0BR,UAAU,EANtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApCF,EA4CGhD,SAAS,iBACR,oBAAC,kBAAD;AACE,MAAA,OAAO,EAAEC,WADX;AAEE,MAAA,KAAK,EAAEsC,aAFT;AAGE,MAAA,MAAM,EAAGkB,GAAD,IAAShC,MAAM,CAACgC,GAAD,CAHzB;AAIE,MAAA,aAAa,EAAEvD,aAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7CJ,CALJ,CADF,CAZJ,CADF;AAFF;AAgFD;;GAnKeZ,c;UAGEJ,U,EACHT,O,EACKE,U,EACeH,S;;;KANnBc,c;AAqKhBA,cAAc,CAACoE,SAAf,GAA2B;AACzBnE,EAAAA,KAAK,EAAEnB,SAAS,CAACuF,KAAV,CAAgBC,UADE;AAEzBpE,EAAAA,GAAG,EAAEpB,SAAS,CAACyF,MAAV,CAAiBD,UAFG;AAGzBnE,EAAAA,MAAM,EAAErB,SAAS,CAACuF,KAAV,CAAgBC,UAHC;AAIzBlE,EAAAA,OAAO,EAAEtB,SAAS,CAAC0F,IAAV,CAAeF,UAJC;AAKzBjE,EAAAA,MAAM,EAAEvB,SAAS,CAAC0F,IAAV,CAAeF,UALE;AAMzBhE,EAAAA,SAAS,EAAExB,SAAS,CAAC0F,IAAV,CAAeF;AAND,CAA3B","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { Clickable, FormikInput } from 'phoenix-components';\nimport { useToggle } from 'hooks/common';\nimport { useShop } from 'contexts';\nimport { Drawer } from 'components/shared/Drawer';\nimport { useDesktop } from 'contexts';\nimport rightArrowIcon from 'assets/images/areasServed/rightArrow.svg';\nimport { Button } from 'phoenix-components';\nimport editIcon from 'assets/images/areasServed/edit.svg';\nimport cx from 'classnames';\nimport { Becca } from 'api';\nimport SnackBar from 'services/snackbar';\nimport Loader from 'services/loader';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { useHistory } from 'react-router-dom';\n// import { DebugValues } from 'components/formik';\nimport pandaIcon from 'assets/images/areasServed/panda.svg';\nimport { DeliveryByZoneForm } from './DeliveryByZoneForm';\nimport { getChargeConfig } from './utils';\nimport styles from './DeliveryByZone.module.css';\n\nexport function DeliveryByZone({\n  zones, idx, config, onClose, setIdx, onRefresh\n}) {\n  const history = useHistory();\n  const shop = useShop();\n  const isDesktop = useDesktop();\n  const [showZones, toggleZones] = useToggle();\n  const [selectedZones, setSelectedZones] = useState([]);\n  //   const isConditionalChargesEnabled = useIsConditionalChargesEnabled();\n\n  const onSubmit = async (values) => {\n    try {\n      Loader.show();\n      const marshalData = selectedZones.map(zone => ({\n        value: zone._id,\n        enabled: true,\n        config: values,\n        type: zone?.type || 'pincodeGroup'\n      }));\n      if (idx) {\n        config.find(s => s.value === idx).config = values;\n      }\n      await Becca.updateChargeConfig({ config: [...marshalData, ...config], chargeType: 'area' });\n      SnackBar.show('successfully Updated');\n      onRefresh();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n      onClose();\n    }\n  };\n\n  const Component = isDesktop ? SideDrawer : Drawer;\n  const props = !isDesktop ? {\n    title: 'Delivery Charge by Zone',\n    onClose: () => {\n      setIdx(null);\n      onClose();\n    }\n  } : {\n    title: 'Delivery Charge by Zone',\n    backButton: true,\n    onClose: () => {\n      setIdx(null);\n      onClose();\n    }\n  };\n\n  const onSave = (values) => {\n    setSelectedZones(values);\n    toggleZones();\n  };\n\n  const getLabel = () => {\n    if (idx) {\n      const label = zones?.data?.map(obj => obj?.region?.find(s => s._id === idx))?.filter(a => a)?.[0]?.name\n      || zones?.data?.find(zone => zone._id === idx)?.name;\n      return label;\n    }\n    if (selectedZones?.length) {\n      return selectedZones?.reduce((acc, obj) => [...acc, obj.name], []).toString();\n    }\n    return 'Select Zone';\n  };\n\n  const zonesWithChargeArray = config?.reduce((acc, obj) => [...acc, obj.value], []);\n\n  const marshalConfig = zones?.data?.map(obj => {\n    // eslint-disable-next-line no-prototype-builtins\n    if (obj?.region?.length > 0) {\n      const newObj = { ...obj };\n      newObj.region = obj?.region?.filter(region => !zonesWithChargeArray.includes(region._id));\n      return newObj;\n    }\n    if (!zonesWithChargeArray.includes(obj._id)) {\n      return obj;\n    }\n    return null;\n  }).filter(s => s);\n\n  const isZonesAvailable = marshalConfig && marshalConfig?.length > 0;\n\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <Component {...props}>\n      <div className={styles.container}>\n        {!idx && !isZonesAvailable && (\n          <>\n            <div className={styles.noData}>\n              <img src={pandaIcon} alt=\"\" />\n            </div>\n            <div className={styles.text}>\n              No active zones in the areas you serve\n            </div>\n          </>\n        )}\n        {(isZonesAvailable || idx) && (\n          <div className={styles.card}>\n            <Formik\n              initialValues={getChargeConfig(config, idx)}\n              onSubmit={onSubmit}\n            >\n              {({ submitForm }) => (\n                <>\n                  <div>\n                    <div className={styles.paddingBottom}>\n                      <FormikInput\n                        name=\"min\"\n                        label=\"Minimum order value\"\n                        type=\"number\"\n                        placeholder={`${shop.currency} 2000`}\n                      />\n                    </div>\n                    <div className={styles.paddingBottom}>\n                      <FormikInput\n                        name=\"max\"\n                        label=\"Max order value\"\n                        type=\"number\"\n                        placeholder={`${shop.currency} 5000`}\n                      />\n                    </div>\n                    <Clickable fullWidth onClick={idx ? null : toggleZones}>\n                      <div className={cx(styles.paddingBottom, styles.select)}>\n                        {getLabel()}\n                        <div>\n                          {selectedZones?.length > 0 && <img src={editIcon} alt=\"\" /> }\n                          <img src={rightArrowIcon} className={styles.icon} alt=\"\" />\n                        </div>\n                      </div>\n                    </Clickable>\n                    <div className={styles.paddingBottom}>\n                      <FormikInput\n                        name=\"value\"\n                        label=\"Delivery Charge\"\n                        type=\"number\"\n                        placeholder={`${shop.currency} 200`}\n                      />\n                    </div>\n                  </div>\n                  <Button\n                    label={!isZonesAvailable && !idx ? 'Add Zones' : 'Save'}\n                    fullwidth={true}\n                    className={styles.saveButton}\n                    variant=\"primary\"\n                    onClick={() => (!isZonesAvailable && !idx\n                      ? history.push('/manage/areasServed') : submitForm())} />\n\n                  {showZones && (\n                    <DeliveryByZoneForm\n                      onClose={toggleZones}\n                      zones={marshalConfig}\n                      onSave={(val) => onSave(val)}\n                      selectedZones={selectedZones} />\n                  )}\n                </>\n              )}\n            </Formik>\n          </div>\n        )}\n      </div>\n    </Component>\n  );\n}\n\nDeliveryByZone.propTypes = {\n  zones: PropTypes.array.isRequired,\n  idx: PropTypes.number.isRequired,\n  config: PropTypes.array.isRequired,\n  onClose: PropTypes.func.isRequired,\n  setIdx: PropTypes.func.isRequired,\n  onRefresh: PropTypes.func.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}