{"ast":null,"code":"import { KEYWORD_LIMIT } from './constants';\nvar METADATA_MODEL = {\n  service: {\n    name: [KEYWORD_LIMIT, true],\n    version: true,\n    agent: {\n      version: [KEYWORD_LIMIT, true]\n    },\n    environment: true\n  },\n  labels: {\n    '*': true\n  }\n};\nvar RESPONSE_MODEL = {\n  '*': true,\n  headers: {\n    '*': true\n  }\n};\nvar DESTINATION_MODEL = {\n  address: [KEYWORD_LIMIT],\n  service: {\n    '*': [KEYWORD_LIMIT, true]\n  }\n};\nvar CONTEXT_MODEL = {\n  user: {\n    id: true,\n    email: true,\n    username: true\n  },\n  tags: {\n    '*': true\n  },\n  http: {\n    response: RESPONSE_MODEL\n  },\n  destination: DESTINATION_MODEL,\n  response: RESPONSE_MODEL\n};\nvar SPAN_MODEL = {\n  name: [KEYWORD_LIMIT, true],\n  type: [KEYWORD_LIMIT, true],\n  id: [KEYWORD_LIMIT, true],\n  trace_id: [KEYWORD_LIMIT, true],\n  parent_id: [KEYWORD_LIMIT, true],\n  transaction_id: [KEYWORD_LIMIT, true],\n  subtype: true,\n  action: true,\n  context: CONTEXT_MODEL\n};\nvar TRANSACTION_MODEL = {\n  name: true,\n  parent_id: true,\n  type: [KEYWORD_LIMIT, true],\n  id: [KEYWORD_LIMIT, true],\n  trace_id: [KEYWORD_LIMIT, true],\n  span_count: {\n    started: [KEYWORD_LIMIT, true]\n  },\n  context: CONTEXT_MODEL\n};\nvar ERROR_MODEL = {\n  id: [KEYWORD_LIMIT, true],\n  trace_id: true,\n  transaction_id: true,\n  parent_id: true,\n  culprit: true,\n  exception: {\n    type: true\n  },\n  transaction: {\n    type: true\n  },\n  context: CONTEXT_MODEL\n};\n\nfunction truncate(value, limit, required, placeholder) {\n  if (limit === void 0) {\n    limit = KEYWORD_LIMIT;\n  }\n\n  if (required === void 0) {\n    required = false;\n  }\n\n  if (placeholder === void 0) {\n    placeholder = 'N/A';\n  }\n\n  if (required && isEmpty(value)) {\n    value = placeholder;\n  }\n\n  if (typeof value === 'string') {\n    return value.substring(0, limit);\n  }\n\n  return value;\n}\n\nfunction isEmpty(value) {\n  return value == null || value === '' || typeof value === 'undefined';\n}\n\nfunction replaceValue(target, key, currModel) {\n  var value = truncate(target[key], currModel[0], currModel[1]);\n\n  if (isEmpty(value)) {\n    delete target[key];\n    return;\n  }\n\n  target[key] = value;\n}\n\nfunction truncateModel(model, target, childTarget) {\n  if (model === void 0) {\n    model = {};\n  }\n\n  if (childTarget === void 0) {\n    childTarget = target;\n  }\n\n  var keys = Object.keys(model);\n  var emptyArr = [];\n\n  var _loop = function _loop(i) {\n    var currKey = keys[i];\n    var currModel = model[currKey] === true ? emptyArr : model[currKey];\n\n    if (!Array.isArray(currModel)) {\n      truncateModel(currModel, target, childTarget[currKey]);\n    } else {\n      if (currKey === '*') {\n        Object.keys(childTarget).forEach(function (key) {\n          return replaceValue(childTarget, key, currModel);\n        });\n      } else {\n        replaceValue(childTarget, currKey, currModel);\n      }\n    }\n  };\n\n  for (var i = 0; i < keys.length; i++) {\n    _loop(i);\n  }\n\n  return target;\n}\n\nexport { truncate, truncateModel, SPAN_MODEL, TRANSACTION_MODEL, ERROR_MODEL, METADATA_MODEL, RESPONSE_MODEL };","map":{"version":3,"sources":["/home/harish/windo/phoenix/node_modules/@elastic/apm-rum-core/dist/es/common/truncate.js"],"names":["KEYWORD_LIMIT","METADATA_MODEL","service","name","version","agent","environment","labels","RESPONSE_MODEL","headers","DESTINATION_MODEL","address","CONTEXT_MODEL","user","id","email","username","tags","http","response","destination","SPAN_MODEL","type","trace_id","parent_id","transaction_id","subtype","action","context","TRANSACTION_MODEL","span_count","started","ERROR_MODEL","culprit","exception","transaction","truncate","value","limit","required","placeholder","isEmpty","substring","replaceValue","target","key","currModel","truncateModel","model","childTarget","keys","Object","emptyArr","_loop","i","currKey","Array","isArray","forEach","length"],"mappings":"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","sourcesContent":["import { KEYWORD_LIMIT } from './constants';\nvar METADATA_MODEL = {\n  service: {\n    name: [KEYWORD_LIMIT, true],\n    version: true,\n    agent: {\n      version: [KEYWORD_LIMIT, true]\n    },\n    environment: true\n  },\n  labels: {\n    '*': true\n  }\n};\nvar RESPONSE_MODEL = {\n  '*': true,\n  headers: {\n    '*': true\n  }\n};\nvar DESTINATION_MODEL = {\n  address: [KEYWORD_LIMIT],\n  service: {\n    '*': [KEYWORD_LIMIT, true]\n  }\n};\nvar CONTEXT_MODEL = {\n  user: {\n    id: true,\n    email: true,\n    username: true\n  },\n  tags: {\n    '*': true\n  },\n  http: {\n    response: RESPONSE_MODEL\n  },\n  destination: DESTINATION_MODEL,\n  response: RESPONSE_MODEL\n};\nvar SPAN_MODEL = {\n  name: [KEYWORD_LIMIT, true],\n  type: [KEYWORD_LIMIT, true],\n  id: [KEYWORD_LIMIT, true],\n  trace_id: [KEYWORD_LIMIT, true],\n  parent_id: [KEYWORD_LIMIT, true],\n  transaction_id: [KEYWORD_LIMIT, true],\n  subtype: true,\n  action: true,\n  context: CONTEXT_MODEL\n};\nvar TRANSACTION_MODEL = {\n  name: true,\n  parent_id: true,\n  type: [KEYWORD_LIMIT, true],\n  id: [KEYWORD_LIMIT, true],\n  trace_id: [KEYWORD_LIMIT, true],\n  span_count: {\n    started: [KEYWORD_LIMIT, true]\n  },\n  context: CONTEXT_MODEL\n};\nvar ERROR_MODEL = {\n  id: [KEYWORD_LIMIT, true],\n  trace_id: true,\n  transaction_id: true,\n  parent_id: true,\n  culprit: true,\n  exception: {\n    type: true\n  },\n  transaction: {\n    type: true\n  },\n  context: CONTEXT_MODEL\n};\n\nfunction truncate(value, limit, required, placeholder) {\n  if (limit === void 0) {\n    limit = KEYWORD_LIMIT;\n  }\n\n  if (required === void 0) {\n    required = false;\n  }\n\n  if (placeholder === void 0) {\n    placeholder = 'N/A';\n  }\n\n  if (required && isEmpty(value)) {\n    value = placeholder;\n  }\n\n  if (typeof value === 'string') {\n    return value.substring(0, limit);\n  }\n\n  return value;\n}\n\nfunction isEmpty(value) {\n  return value == null || value === '' || typeof value === 'undefined';\n}\n\nfunction replaceValue(target, key, currModel) {\n  var value = truncate(target[key], currModel[0], currModel[1]);\n\n  if (isEmpty(value)) {\n    delete target[key];\n    return;\n  }\n\n  target[key] = value;\n}\n\nfunction truncateModel(model, target, childTarget) {\n  if (model === void 0) {\n    model = {};\n  }\n\n  if (childTarget === void 0) {\n    childTarget = target;\n  }\n\n  var keys = Object.keys(model);\n  var emptyArr = [];\n\n  var _loop = function _loop(i) {\n    var currKey = keys[i];\n    var currModel = model[currKey] === true ? emptyArr : model[currKey];\n\n    if (!Array.isArray(currModel)) {\n      truncateModel(currModel, target, childTarget[currKey]);\n    } else {\n      if (currKey === '*') {\n        Object.keys(childTarget).forEach(function (key) {\n          return replaceValue(childTarget, key, currModel);\n        });\n      } else {\n        replaceValue(childTarget, currKey, currModel);\n      }\n    }\n  };\n\n  for (var i = 0; i < keys.length; i++) {\n    _loop(i);\n  }\n\n  return target;\n}\n\nexport { truncate, truncateModel, SPAN_MODEL, TRANSACTION_MODEL, ERROR_MODEL, METADATA_MODEL, RESPONSE_MODEL };"]},"metadata":{},"sourceType":"module"}