{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/profile/shippingModes/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormikInput, Button } from 'phoenix-components';\nimport { useDesktop, useShop } from \"../../../contexts\";\nimport { SideDrawer } from \"../../../components/shared/SideDrawer\";\nimport { Drawer } from \"../../../components/shared/Drawer\";\nimport { Formik, useFormikContext } from 'formik';\nimport { Select } from 'phoenix-components/lib/formik';\nimport SnackBar from \"../../../services/snackbar\";\nimport { useHistory } from 'react-router-dom';\nimport styles from \"./Form.module.css\";\nimport { getIntitalCustomValues, typeOptions, shippingSchema } from \"./utils\";\nexport function Form({\n  onClose,\n  index\n}) {\n  _s();\n\n  const isDesktop = useDesktop();\n  const Component = isDesktop ? SideDrawer : Drawer;\n  const {\n    values,\n    submitForm: parentSubmit,\n    setValues\n  } = useFormikContext();\n  const {\n    addresses = []\n  } = useShop();\n  const history = useHistory();\n  const props = !isDesktop ? {\n    title: 'Add Custom',\n    onClose\n  } : {\n    title: 'Add Custom',\n    onClose,\n    backButton: true\n  };\n\n  const onSubmit = async value => {\n    if (index === null) {\n      values.custom.push(value);\n    } else {\n      values.custom[index] = value;\n    }\n\n    setValues({ ...values\n    });\n    parentSubmit();\n  };\n\n  return /*#__PURE__*/React.createElement(Component, Object.assign({\n    classes: isDesktop ? undefined : {\n      heading: styles.bottomDrawerContainer\n    },\n    closeButton: !isDesktop // eslint-disable-next-line react/jsx-props-no-spreading\n\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: getIntitalCustomValues(index, values),\n    validationSchema: shippingSchema,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    setFieldValue,\n    submitForm\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormikInput, {\n    name: \"title\",\n    fullWidth: true,\n    label: \"Shipping Title\",\n    placeholder: \"Title Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.spacer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    label: \"Choose Shipping Type,\",\n    name: \"type\",\n    onChange: val => {\n      if (val.value === 'pickup' && addresses.length === 0) {\n        SnackBar.show('please add shop address', 'error');\n        history.push('/manage/address', {\n          redirectTo: '/manage/shippingModes'\n        });\n      }\n\n      setFieldValue('type', val.value);\n    },\n    options: typeOptions,\n    value: typeOptions.find(x => x.value === (values === null || values === void 0 ? void 0 : values.type)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    label: \"Save\",\n    fullwidth: true,\n    className: styles.saveButton,\n    variant: \"primary\",\n    onClick: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  })))));\n}\n\n_s(Form, \"LlQXQxB4i3aPujyMZk4s5gfHVGc=\", false, function () {\n  return [useDesktop, useFormikContext, useShop, useHistory];\n});\n\n_c = Form;\nForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  index: PropTypes.number\n};\nForm.defaultProps = {\n  index: null\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/shippingModes/Form.jsx"],"names":["React","PropTypes","FormikInput","Button","useDesktop","useShop","SideDrawer","Drawer","Formik","useFormikContext","Select","SnackBar","useHistory","styles","getIntitalCustomValues","typeOptions","shippingSchema","Form","onClose","index","isDesktop","Component","values","submitForm","parentSubmit","setValues","addresses","history","props","title","backButton","onSubmit","value","custom","push","undefined","heading","bottomDrawerContainer","container","setFieldValue","spacer","val","length","show","redirectTo","find","x","type","saveButton","propTypes","func","isRequired","number","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormikInput, Button } from 'phoenix-components';\nimport { useDesktop, useShop } from 'contexts';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { Drawer } from 'components/shared/Drawer';\nimport { Formik, useFormikContext } from 'formik';\nimport { Select } from 'phoenix-components/lib/formik';\nimport SnackBar from 'services/snackbar';\nimport { useHistory } from 'react-router-dom';\nimport styles from './Form.module.css';\nimport { getIntitalCustomValues, typeOptions, shippingSchema } from './utils';\n\nexport function Form({\n  onClose, index\n}) {\n  const isDesktop = useDesktop();\n  const Component = isDesktop ? SideDrawer : Drawer;\n  const { values, submitForm: parentSubmit, setValues } = useFormikContext();\n  const {\n    addresses = []\n  } = useShop();\n\n  const history = useHistory();\n\n  const props = !isDesktop ? {\n    title: 'Add Custom',\n    onClose,\n  } : {\n    title: 'Add Custom',\n    onClose,\n    backButton: true\n  };\n\n  const onSubmit = async (value) => {\n    if (index === null) {\n      values.custom.push(value);\n    } else {\n      values.custom[index] = value;\n    }\n    setValues({ ...values });\n    parentSubmit();\n  };\n\n  return (\n    <Component\n      classes={isDesktop ? undefined : {\n        heading: styles.bottomDrawerContainer,\n      }}\n      closeButton={!isDesktop}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...props}>\n      <div className={styles.container}>\n        <Formik\n          initialValues={getIntitalCustomValues(index, values)}\n          validationSchema={shippingSchema}\n          onSubmit={onSubmit}\n        >\n          {({ values, setFieldValue, submitForm }) => (\n            <>\n              <FormikInput\n                name=\"title\"\n                fullWidth\n                label=\"Shipping Title\"\n                placeholder=\"Title Name\"\n              />\n              <div className={styles.spacer} />\n              <Select\n                label=\"Choose Shipping Type,\"\n                name=\"type\"\n                onChange={(val) => {\n                  if (val.value === 'pickup' && addresses.length === 0) {\n                    SnackBar.show('please add shop address', 'error');\n                    history.push('/manage/address', {\n                      redirectTo: '/manage/shippingModes',\n                    });\n                  }\n                  setFieldValue('type', val.value);\n                }}\n                options={typeOptions}\n                value={typeOptions.find(x => x.value === values?.type)}\n              />\n              <br />\n              <Button\n                label=\"Save\"\n                fullwidth={true}\n                className={styles.saveButton}\n                variant=\"primary\"\n                onClick={submitForm}\n              />\n            </>\n          )}\n        </Formik>\n      </div>\n    </Component>\n  );\n}\n\nForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  index: PropTypes.number,\n};\n\nForm.defaultProps = {\n  index: null,\n};\n"]},"metadata":{},"sourceType":"module"}