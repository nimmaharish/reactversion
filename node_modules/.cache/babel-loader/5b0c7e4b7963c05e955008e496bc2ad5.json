{"ast":null,"code":"import free from \"../../assets/images/subscriptions/free.png\";\nimport plus from \"../../assets/images/subscriptions/plus.png\";\nimport premium from \"../../assets/images/subscriptions/premium.png\";\nimport _ from 'lodash';\nexport function convertValidityToString(days) {\n  switch (days) {\n    case 30:\n    case 31:\n      return 'Monthly';\n\n    case 365:\n    case 366:\n      return 'Yearly  (Flat 30% OFF)';\n\n    case 7:\n      return 'Weekly';\n\n    case 1:\n      return 'Daily';\n\n    case -1:\n      return 'Unlimited';\n\n    default:\n      return `${days} Days`;\n  }\n}\nexport function getPlanImg(type) {\n  switch (type === null || type === void 0 ? void 0 : type.toLowerCase()) {\n    case 'free':\n      return free;\n\n    case 'plus':\n      return plus;\n\n    case 'premium':\n      return premium;\n\n    default:\n      return free;\n  }\n}\nexport function getFeatures(plan, plans) {\n  var _plan$features;\n\n  if (!(plan !== null && plan !== void 0 && plan.features)) {\n    return [];\n  }\n\n  const idx = plans.findIndex(x => x.name === plan.name);\n  const prevPlans = plans.slice(0, idx);\n  const set = new Set([]);\n  prevPlans.forEach(p => ((p === null || p === void 0 ? void 0 : p.features) || []).forEach(f => {\n    if (f.enabled) {\n      set.add(f.name);\n    }\n  }));\n  return _.orderBy(plan === null || plan === void 0 ? void 0 : (_plan$features = plan.features) === null || _plan$features === void 0 ? void 0 : _plan$features.filter(x => !(x.enabled && set.has(x.name))), ['enabled'], ['desc']);\n}","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/subscriptions/utils.js"],"names":["free","plus","premium","_","convertValidityToString","days","getPlanImg","type","toLowerCase","getFeatures","plan","plans","features","idx","findIndex","x","name","prevPlans","slice","set","Set","forEach","p","f","enabled","add","orderBy","filter","has"],"mappings":"AAAA,OAAOA,IAAP;AACA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,SAASC,uBAAT,CAAiCC,IAAjC,EAAuC;AAC5C,UAAQA,IAAR;AACE,SAAK,EAAL;AACA,SAAK,EAAL;AACE,aAAO,SAAP;;AACF,SAAK,GAAL;AACA,SAAK,GAAL;AACE,aAAO,wBAAP;;AACF,SAAK,CAAL;AACE,aAAO,QAAP;;AACF,SAAK,CAAL;AACE,aAAO,OAAP;;AACF,SAAK,CAAC,CAAN;AACE,aAAO,WAAP;;AACF;AACE,aAAQ,GAAEA,IAAK,OAAf;AAdJ;AAgBD;AAED,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,UAAQA,IAAR,aAAQA,IAAR,uBAAQA,IAAI,CAAEC,WAAN,EAAR;AACE,SAAK,MAAL;AACE,aAAOR,IAAP;;AACF,SAAK,MAAL;AACE,aAAOC,IAAP;;AACF,SAAK,SAAL;AACE,aAAOC,OAAP;;AACF;AACE,aAAOF,IAAP;AARJ;AAUD;AAED,OAAO,SAASS,WAAT,CAAqBC,IAArB,EAA2BC,KAA3B,EAAkC;AAAA;;AACvC,MAAI,EAACD,IAAD,aAACA,IAAD,eAACA,IAAI,CAAEE,QAAP,CAAJ,EAAqB;AACnB,WAAO,EAAP;AACD;;AAED,QAAMC,GAAG,GAAGF,KAAK,CAACG,SAAN,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWN,IAAI,CAACM,IAArC,CAAZ;AACA,QAAMC,SAAS,GAAGN,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAeL,GAAf,CAAlB;AACA,QAAMM,GAAG,GAAG,IAAIC,GAAJ,CAAQ,EAAR,CAAZ;AACAH,EAAAA,SAAS,CAACI,OAAV,CAAkBC,CAAC,IAAI,CAAC,CAAAA,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEV,QAAH,KAAe,EAAhB,EAAoBS,OAApB,CAA4BE,CAAC,IAAI;AACtD,QAAIA,CAAC,CAACC,OAAN,EAAe;AACbL,MAAAA,GAAG,CAACM,GAAJ,CAAQF,CAAC,CAACP,IAAV;AACD;AACF,GAJsB,CAAvB;AAMA,SAAOb,CAAC,CAACuB,OAAF,CAAUhB,IAAV,aAAUA,IAAV,yCAAUA,IAAI,CAAEE,QAAhB,mDAAU,eAAgBe,MAAhB,CAAuBZ,CAAC,IAAI,EAAEA,CAAC,CAACS,OAAF,IAAaL,GAAG,CAACS,GAAJ,CAAQb,CAAC,CAACC,IAAV,CAAf,CAA5B,CAAV,EAAwE,CAAC,SAAD,CAAxE,EAAqF,CAAC,MAAD,CAArF,CAAP;AACD","sourcesContent":["import free from 'assets/images/subscriptions/free.png';\nimport plus from 'assets/images/subscriptions/plus.png';\nimport premium from 'assets/images/subscriptions/premium.png';\nimport _ from 'lodash';\n\nexport function convertValidityToString(days) {\n  switch (days) {\n    case 30:\n    case 31:\n      return 'Monthly';\n    case 365:\n    case 366:\n      return 'Yearly  (Flat 30% OFF)';\n    case 7:\n      return 'Weekly';\n    case 1:\n      return 'Daily';\n    case -1:\n      return 'Unlimited';\n    default:\n      return `${days} Days`;\n  }\n}\n\nexport function getPlanImg(type) {\n  switch (type?.toLowerCase()) {\n    case 'free':\n      return free;\n    case 'plus':\n      return plus;\n    case 'premium':\n      return premium;\n    default:\n      return free;\n  }\n}\n\nexport function getFeatures(plan, plans) {\n  if (!plan?.features) {\n    return [];\n  }\n\n  const idx = plans.findIndex(x => x.name === plan.name);\n  const prevPlans = plans.slice(0, idx);\n  const set = new Set([]);\n  prevPlans.forEach(p => (p?.features || []).forEach(f => {\n    if (f.enabled) {\n      set.add(f.name);\n    }\n  }));\n\n  return _.orderBy(plan?.features?.filter(x => !(x.enabled && set.has(x.name))), ['enabled'], ['desc']);\n}\n"]},"metadata":{},"sourceType":"module"}