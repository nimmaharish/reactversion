{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/profile/theme/Step1.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid } from '@material-ui/core';\nimport newIcon from \"../../../assets/images/theme/new.svg\";\nimport { Button } from 'phoenix-components';\nimport { useQueryParams } from \"../../../hooks\"; // import { useToggle } from 'hooks/common';\n\nimport { useHistory } from 'react-router-dom';\nimport { Becca } from \"../../../api\";\nimport cx from 'classnames';\nimport SnackBar from \"../../../services/snackbar\";\nimport { StatusSelectionBar } from \"../../../components/shared/StatusSelectionBar\";\nimport Loader from \"../../../services/loader\";\nimport { useDesktop, usePlan } from \"../../../contexts\";\nimport { useShop, useRefreshShop, useOpenPlans } from \"../../../contexts\";\nimport { useIsFreePlan } from \"../../../contexts/userContext\";\nimport appliedIcon from \"../../../assets/themes/selected.svg\";\nimport featureIcon from \"../../../assets/v2/overview/feature.svg\";\nimport Kbc from \"../../../components/knowBaseCards/KnowBaseCards\";\nimport { useLayoutConfig } from \"../../../hooks/common\";\nimport { themes } from \"./utils\";\nimport Layout from \"./customThemes/Layout\";\nimport { desktopThemes } from \"./desktopUtils\";\nimport styles from \"./Step1.module.css\";\nimport CustomTheme from \"./customThemes/List\";\n\nfunction Step1() {\n  _s();\n\n  const history = useHistory();\n  const params = useQueryParams();\n  const shop = useShop();\n  const refresh = useRefreshShop();\n  const {\n    config: {\n      themeName = 'celosia'\n    }\n  } = shop;\n  const isDesktop = useDesktop();\n  const isFreePlan = useIsFreePlan();\n  const isCustomTheme = params.get('customTheme');\n  const currentPlan = usePlan();\n  const isPremium = currentPlan.name === 'premium';\n  const openPlans = useOpenPlans(true, 'generic', 'premium');\n  const items = isDesktop ? desktopThemes : themes;\n  const isActive = useLayoutConfig();\n\n  const morph = () => {\n    const appliedTheme = items.filter(x => x.name === themeName);\n    const otherThemes = items.filter(x => x.name !== themeName);\n    return appliedTheme.concat(otherThemes);\n  };\n\n  const type = params.has('tab') ? params.get('tab') : isActive ? 'themes' : 'layoutCustomization';\n  const stateList = [{\n    label: 'Themes',\n    value: 'themes'\n  }, {\n    label: 'Layout Customization',\n    value: 'layoutCustomization'\n  }];\n\n  const onStateChange = val => {\n    params.set('tab', val);\n    history.push({\n      search: params.toString()\n    });\n  };\n\n  const isApplied = name => name === themeName;\n\n  const onSave = async themeName => {\n    const isFeatureTheme = items.find(x => x.name === themeName).feature;\n\n    if (isFeatureTheme && isFreePlan) {\n      params.set('openPlans', 'generic');\n      history.push({\n        search: params.toString()\n      });\n      return;\n    }\n\n    Loader.show();\n\n    try {\n      await Becca.updateShop({\n        config: { ...(shop.config || {}),\n          themeName\n        }\n      });\n      refresh();\n      SnackBar.show('Theme saved successfully!', 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  if (isCustomTheme) {\n    return /*#__PURE__*/React.createElement(CustomTheme, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.themesSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StatusSelectionBar, {\n    seperator: true,\n    active: type,\n    tabClassName: styles.tabClassName,\n    items: stateList,\n    onChange: onStateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), type === 'layoutCustomization' && /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 42\n    }\n  }), type === 'themes' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, morph().map(x => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.card, {\n      [styles.bgnCarnation]: x.title === 'Carnation',\n      [styles.bgnCelosia]: x.title === 'Celosia',\n      [styles.bgnDaffodil]: x.title === 'Daffodil',\n      [styles.bgnCalathea]: x.title === 'Calathea',\n      [styles.bgnLilac]: x.title === 'Lilac',\n      [styles.bgnOwnTheme]: x.title === 'Build Your Own Theme'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, x.new && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.new,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: newIcon,\n    alt: \"new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 23\n    }\n  })), isApplied(x.name) && /*#__PURE__*/React.createElement(\"img\", {\n    src: appliedIcon,\n    className: styles.icon1,\n    alt: \"applied\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 42\n    }\n  }), x.feature && isFreePlan && /*#__PURE__*/React.createElement(\"img\", {\n    src: featureIcon,\n    className: styles.icon2,\n    alt: \"applied\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 48\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, x.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, x.description), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: x.image,\n    alt: x.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    primary: false,\n    size: \"medium\",\n    onClick: () => {\n      if (x.name === 'custom') {\n        if (!isPremium) {\n          openPlans();\n          return;\n        }\n\n        params.set('customTheme', true);\n        history.push({\n          search: params.toString()\n        });\n        return;\n      }\n\n      params.set('step', '2');\n      params.set('theme', x.name);\n      history.push({\n        search: params.toString()\n      });\n    },\n    label: \"Details\",\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: \"medium\",\n    primary: true,\n    onClick: () => {\n      if (x.name === 'custom') {\n        if (!isPremium) {\n          openPlans();\n          return;\n        }\n\n        params.set('customTheme', true);\n        history.push({\n          search: params.toString()\n        });\n        return;\n      }\n\n      onSave(x.name);\n    },\n    label: isApplied(x.name) ? 'CUSTOMIZE' : 'APPLY',\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }))))), isDesktop ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.kbcDesk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Kbc, {\n    type: \"shopThemeSettings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.kbc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Kbc, {\n    type: \"shopThemeSettings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }))));\n}\n\n_s(Step1, \"2gWPOWEuW/ak/xiwnLNmeukInz8=\", false, function () {\n  return [useHistory, useQueryParams, useShop, useRefreshShop, useDesktop, useIsFreePlan, usePlan, useOpenPlans, useLayoutConfig];\n});\n\n_c = Step1;\nexport default Step1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step1\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/theme/Step1.jsx"],"names":["React","Grid","Button","useQueryParams","useHistory","Becca","cx","SnackBar","StatusSelectionBar","Loader","useDesktop","usePlan","useShop","useRefreshShop","useOpenPlans","useIsFreePlan","Kbc","useLayoutConfig","themes","Layout","desktopThemes","styles","CustomTheme","Step1","history","params","shop","refresh","config","themeName","isDesktop","isFreePlan","isCustomTheme","get","currentPlan","isPremium","name","openPlans","items","isActive","morph","appliedTheme","filter","x","otherThemes","concat","type","has","stateList","label","value","onStateChange","val","set","push","search","toString","isApplied","onSave","isFeatureTheme","find","feature","show","updateShop","e","showError","hide","themesSection","tabClassName","map","card","bgnCarnation","title","bgnCelosia","bgnDaffodil","bgnCalathea","bgnLilac","bgnOwnTheme","new","newIcon","appliedIcon","icon1","featureIcon","icon2","description","image","buttons","button","kbcDesk","kbc"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport newIcon from 'assets/images/theme/new.svg';\nimport { Button } from 'phoenix-components';\nimport { useQueryParams } from 'hooks';\n// import { useToggle } from 'hooks/common';\nimport { useHistory } from 'react-router-dom';\nimport { Becca } from 'api';\nimport cx from 'classnames';\nimport SnackBar from 'services/snackbar';\nimport { StatusSelectionBar } from 'components/shared/StatusSelectionBar';\nimport Loader from 'services/loader';\nimport { useDesktop, usePlan } from 'contexts';\nimport { useShop, useRefreshShop, useOpenPlans } from 'contexts';\nimport { useIsFreePlan } from 'contexts/userContext';\nimport appliedIcon from 'assets/themes/selected.svg';\nimport featureIcon from 'assets/v2/overview/feature.svg';\nimport Kbc from 'components/knowBaseCards/KnowBaseCards';\nimport { useLayoutConfig } from 'hooks/common';\nimport { themes } from './utils';\nimport Layout from './customThemes/Layout';\nimport { desktopThemes } from './desktopUtils';\nimport styles from './Step1.module.css';\nimport CustomTheme from './customThemes/List';\n\nfunction Step1() {\n  const history = useHistory();\n  const params = useQueryParams();\n  const shop = useShop();\n  const refresh = useRefreshShop();\n  const { config: { themeName = 'celosia' } } = shop;\n  const isDesktop = useDesktop();\n  const isFreePlan = useIsFreePlan();\n  const isCustomTheme = params.get('customTheme');\n  const currentPlan = usePlan();\n  const isPremium = currentPlan.name === 'premium';\n  const openPlans = useOpenPlans(true, 'generic', 'premium');\n  const items = isDesktop ? desktopThemes : themes;\n  const isActive = useLayoutConfig();\n\n  const morph = () => {\n    const appliedTheme = items.filter(x => x.name === themeName);\n    const otherThemes = items.filter(x => x.name !== themeName);\n    return appliedTheme.concat(otherThemes);\n  };\n  const type = params.has('tab') ? params.get('tab') : isActive ? 'themes' : 'layoutCustomization';\n\n  const stateList = [\n    {\n      label: 'Themes',\n      value: 'themes',\n    },\n    {\n      label: 'Layout Customization',\n      value: 'layoutCustomization',\n    },\n  ];\n\n  const onStateChange = (val) => {\n    params.set('tab', val);\n    history.push({ search: params.toString() });\n  };\n  const isApplied = (name) => name === themeName;\n\n  const onSave = async (themeName) => {\n    const isFeatureTheme = items.find(x => x.name === themeName).feature;\n    if (isFeatureTheme && isFreePlan) {\n      params.set('openPlans', 'generic');\n      history.push({\n        search: params.toString(),\n      });\n      return;\n    }\n    Loader.show();\n    try {\n      await Becca.updateShop({\n        config: {\n          ...(shop.config || {}),\n          themeName,\n        }\n      });\n      refresh();\n      SnackBar.show('Theme saved successfully!', 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  if (isCustomTheme) {\n    return <CustomTheme />;\n  }\n\n  return (\n    <div className={styles.themesSection}>\n      <StatusSelectionBar\n        seperator={true}\n        active={type}\n        tabClassName={styles.tabClassName}\n        items={stateList}\n        onChange={onStateChange}\n      />\n      {type === 'layoutCustomization' && <Layout />}\n      {type === 'themes' && (\n        <>\n          <Grid container>\n            {morph().map(x => (\n              <Grid item xs={12} md={4}>\n                <div\n                  className={cx(styles.card, {\n                    [styles.bgnCarnation]: x.title === 'Carnation',\n                    [styles.bgnCelosia]: x.title === 'Celosia',\n                    [styles.bgnDaffodil]: x.title === 'Daffodil',\n                    [styles.bgnCalathea]: x.title === 'Calathea',\n                    [styles.bgnLilac]: x.title === 'Lilac',\n                    [styles.bgnOwnTheme]: x.title === 'Build Your Own Theme'\n                  })}>\n                  {x.new && (\n                    <div className={styles.new}>\n                      <img src={newIcon} alt=\"new\" />\n                    </div>\n                  )}\n                  {isApplied(x.name) && (<img src={appliedIcon} className={styles.icon1} alt=\"applied\" />)}\n                  {x.feature && isFreePlan && (<img src={featureIcon} className={styles.icon2} alt=\"applied\" />)}\n                  <div className={styles.name}>{x.title}</div>\n                  <div className={styles.description}>{x.description}</div>\n                  <div className={styles.image}>\n                    <img src={x.image} alt={x.description} />\n                  </div>\n                </div>\n                <div className={styles.buttons}>\n                  <Button\n                    primary={false}\n                    size=\"medium\"\n                    onClick={() => {\n                      if (x.name === 'custom') {\n                        if (!isPremium) {\n                          openPlans();\n                          return;\n                        }\n                        params.set('customTheme', true);\n                        history.push({\n                          search: params.toString(),\n                        });\n                        return;\n                      }\n                      params.set('step', '2');\n                      params.set('theme', x.name);\n                      history.push({\n                        search: params.toString(),\n                      });\n                    }}\n                    label=\"Details\"\n                    className={styles.button}\n                  />\n                  <Button\n                    size=\"medium\"\n                    primary={true}\n                    onClick={() => {\n                      if (x.name === 'custom') {\n                        if (!isPremium) {\n                          openPlans();\n                          return;\n                        }\n                        params.set('customTheme', true);\n                        history.push({\n                          search: params.toString(),\n                        });\n                        return;\n                      }\n                      onSave(x.name);\n                    }}\n                    label={isApplied(x.name) ? 'CUSTOMIZE' : 'APPLY'}\n                    className={styles.button}\n                  />\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n          {isDesktop ? (\n            <div className={styles.kbcDesk}>\n              <Kbc type=\"shopThemeSettings\" />\n            </div>\n          ) : (\n            <div className={styles.kbc}>\n              <Kbc type=\"shopThemeSettings\" />\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Step1;\n"]},"metadata":{},"sourceType":"module"}