{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/overview/ProfileProgress.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { LinearProgress } from '@material-ui/core';\nimport { LightBlueTile } from \"../cards\";\nimport { BlackButton } from \"../buttons\";\nimport { useHistory } from 'react-router-dom';\nimport { useQueryParams } from \"../../hooks\";\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { getLabelName } from \"../../constants/profile\";\nimport cx from 'classnames';\nimport { isEmpty } from 'lodash';\nimport Storage from \"../../services/storage\";\nimport moreIcon from \"../../assets/overview/more.svg\";\nimport lessIcon from \"../../assets/overview/less.svg\";\nimport nextIcon from \"../../assets/images/profile/next.svg\";\nimport ButtonComponent from \"../../containers/profile/ButtonComponent\";\nimport styles from \"./ProfileProgress.module.css\";\nexport function ProfileProgress({\n  shop,\n  mini\n}) {\n  _s();\n\n  var _shop$completion$inCo, _shop$completion, _shop$completion2, _shop$country;\n\n  const history = useHistory();\n  const pending = (_shop$completion$inCo = shop === null || shop === void 0 ? void 0 : (_shop$completion = shop.completion) === null || _shop$completion === void 0 ? void 0 : _shop$completion.inCompleteFields) !== null && _shop$completion$inCo !== void 0 ? _shop$completion$inCo : [];\n  const completed = ((shop === null || shop === void 0 ? void 0 : (_shop$completion2 = shop.completion) === null || _shop$completion2 === void 0 ? void 0 : _shop$completion2.percentage) || 1) * 100;\n  const params = useQueryParams();\n  const isIND = (shop === null || shop === void 0 ? void 0 : (_shop$country = shop.country) === null || _shop$country === void 0 ? void 0 : _shop$country.toLowerCase()) === 'india';\n  const isWatchedAlert = Storage.isWatchedOverviewAlert();\n  let conditions = false;\n\n  if (!isWatchedAlert) {\n    if (pending.includes('bank')) {\n      conditions = true;\n    }\n\n    if (pending.includes('address')) {\n      conditions = true;\n    }\n  }\n\n  const [more, setMore] = useState(conditions);\n\n  if (completed === 100) {\n    return null;\n  }\n\n  const keys = {\n    address: 'openAddress',\n    bank: 'openBank',\n    delivery: 'openDD'\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx({\n      [styles.mini]: mini\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx({\n      [styles.heading1]: mini\n    }, styles.heading),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Complete your profile to start accepting orders.\"), /*#__PURE__*/React.createElement(LightBlueTile, {\n    className: cx({\n      [styles.className]: mini\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx({\n      [styles.width100]: mini\n    }, styles.progressContainer),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fs12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Profile\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fs12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, completed.toFixed(0), \"/100\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexBetween\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgress, {\n    color: \"primary\",\n    variant: \"determinate\",\n    value: completed,\n    className: cx({\n      [styles.width100]: mini\n    }, styles.progress),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), !mini && /*#__PURE__*/React.createElement(\"img\", {\n    onClick: () => setMore(!more),\n    src: !more ? moreIcon : lessIcon,\n    alt: \"\",\n    role: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  })), more && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, pending.map(p => /*#__PURE__*/React.createElement(BlackButton, {\n    key: p,\n    id: p,\n    className: styles.button,\n    endIcon: /*#__PURE__*/React.createElement(AddCircleIcon, {\n      className: styles.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 26\n      }\n    }),\n    onClick: () => {\n      const val = keys[p];\n\n      if (val) {\n        if (val === 'openBank') {\n          if (isIND) {\n            history.push('/manage/bank', {\n              redirectTo: '/overview'\n            });\n            return;\n          }\n\n          history.push('/payments?open=2');\n          return;\n        }\n\n        if (val === 'openAddress') {\n          history.push('/manage/address', {\n            redirectTo: '/overview'\n          });\n          return;\n        }\n\n        params.set(val, 'true');\n        history.push({\n          pathname: 'manage',\n          search: params.toString()\n        });\n      } else {\n        history.push({\n          pathname: 'manage/shop'\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, getLabelName(p)))), mini && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textRight fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonComponent, {\n    style: styles.action,\n    text: \"Complete\",\n    color: \"secondary\",\n    onClick: () => {\n      if (!isEmpty(pending)) {\n        if (['categories', 'subCategories'].includes(pending[0])) {\n          history.push('/manage/shop');\n          return;\n        }\n\n        if (pending[0] === 'bank') {\n          if (isIND) {\n            history.push('/manage/bank', {\n              redirectTo: '/overview'\n            });\n            return;\n          }\n\n          history.push('/payments?open=2');\n          return;\n        }\n\n        if (pending[0] === 'address') {\n          history.push('/manage/address', {\n            redirectTo: '/overview'\n          });\n          return;\n        }\n\n        params.set(keys[pending[0]], 'true');\n        history.push({\n          pathname: 'manage',\n          search: params.toString()\n        });\n      }\n    },\n    endIcon: /*#__PURE__*/React.createElement(\"img\", {\n      src: nextIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 24\n      }\n    }),\n    fullwidth: true,\n    id: \"complete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }))));\n}\n\n_s(ProfileProgress, \"5ov9GDGVH8tzbPgMPBmkUltXSEw=\", false, function () {\n  return [useHistory, useQueryParams];\n});\n\n_c = ProfileProgress;\nProfileProgress.propTypes = {\n  shop: PropTypes.object.isRequired,\n  mini: PropTypes.bool\n};\nProfileProgress.defaultProps = {\n  mini: false\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileProgress\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/overview/ProfileProgress.jsx"],"names":["React","useState","PropTypes","LinearProgress","LightBlueTile","BlackButton","useHistory","useQueryParams","AddCircleIcon","getLabelName","cx","isEmpty","Storage","ButtonComponent","styles","ProfileProgress","shop","mini","history","pending","completion","inCompleteFields","completed","percentage","params","isIND","country","toLowerCase","isWatchedAlert","isWatchedOverviewAlert","conditions","includes","more","setMore","keys","address","bank","delivery","heading1","heading","className","width100","progressContainer","toFixed","progress","moreIcon","lessIcon","buttons","map","p","button","icon","val","push","redirectTo","set","pathname","search","toString","action","nextIcon","propTypes","object","isRequired","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { LinearProgress } from '@material-ui/core';\nimport { LightBlueTile } from 'components/cards';\nimport { BlackButton } from 'components/buttons';\nimport { useHistory } from 'react-router-dom';\nimport { useQueryParams } from 'hooks';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { getLabelName } from 'constants/profile';\nimport cx from 'classnames';\nimport { isEmpty } from 'lodash';\nimport Storage from 'services/storage';\nimport moreIcon from 'assets/overview/more.svg';\nimport lessIcon from 'assets/overview/less.svg';\nimport nextIcon from 'assets/images/profile/next.svg';\nimport ButtonComponent from 'containers/profile/ButtonComponent';\nimport styles from './ProfileProgress.module.css';\n\nexport function ProfileProgress({ shop, mini }) {\n  const history = useHistory();\n  const pending = shop?.completion?.inCompleteFields ?? [];\n  const completed = (shop?.completion?.percentage || 1) * 100;\n  const params = useQueryParams();\n  const isIND = shop?.country?.toLowerCase() === 'india';\n  const isWatchedAlert = Storage.isWatchedOverviewAlert();\n  let conditions = false;\n  if (!isWatchedAlert) {\n    if (pending.includes('bank')) {\n      conditions = true;\n    }\n    if (pending.includes('address')) {\n      conditions = true;\n    }\n  }\n  const [more, setMore] = useState(conditions);\n\n  if (completed === 100) {\n    return null;\n  }\n\n  const keys = {\n    address: 'openAddress',\n    bank: 'openBank',\n    delivery: 'openDD'\n  };\n\n  return (\n    <div\n      className={cx({\n        [styles.mini]: mini\n      })}>\n      <div\n        className={cx({\n          [styles.heading1]: mini\n        }, styles.heading)}\n      >\n        Complete your profile to start accepting orders.\n\n      </div>\n      <LightBlueTile\n        className={cx({\n          [styles.className]: mini\n        })}\n      >\n        <div\n          className={cx({\n            [styles.width100]: mini\n          }, styles.progressContainer)}\n        >\n          <div className=\"fs12\">Profile</div>\n          <div className=\"fs12\">\n            {completed.toFixed(0)}\n            /100\n          </div>\n        </div>\n        <div className=\"flexBetween\">\n          <LinearProgress\n            color=\"primary\"\n            variant=\"determinate\"\n            value={completed}\n            className={cx({\n              [styles.width100]: mini\n            }, styles.progress)}\n          />\n          {!mini && <img onClick={() => setMore(!more)} src={!more ? moreIcon : lessIcon} alt=\"\" role=\"none\" />}\n        </div>\n        {more && (\n          <div className={styles.buttons}>\n            {pending.map(p => (\n              <BlackButton\n                key={p}\n                id={p}\n                className={styles.button}\n                endIcon={<AddCircleIcon className={styles.icon} />}\n                onClick={() => {\n                  const val = keys[p];\n                  if (val) {\n                    if (val === 'openBank') {\n                      if (isIND) {\n                        history.push('/manage/bank', {\n                          redirectTo: '/overview',\n                        });\n                        return;\n                      }\n                      history.push('/payments?open=2');\n                      return;\n                    }\n                    if (val === 'openAddress') {\n                      history.push('/manage/address', {\n                        redirectTo: '/overview',\n                      });\n                      return;\n                    }\n                    params.set(val, 'true');\n                    history.push({ pathname: 'manage', search: params.toString() });\n                  } else {\n                    history.push({ pathname: 'manage/shop' });\n                  }\n                }}\n              >\n                {getLabelName(p)}\n              </BlackButton>\n            ))}\n          </div>\n        )}\n        {mini && (\n          <div className=\"textRight fullWidth\">\n            <ButtonComponent\n              style={styles.action}\n              text=\"Complete\"\n              color=\"secondary\"\n              onClick={() => {\n                if (!isEmpty(pending)) {\n                  if (['categories', 'subCategories'].includes(pending[0])) {\n                    history.push('/manage/shop');\n                    return;\n                  }\n                  if (pending[0] === 'bank') {\n                    if (isIND) {\n                      history.push('/manage/bank', {\n                        redirectTo: '/overview',\n                      });\n                      return;\n                    }\n                    history.push('/payments?open=2');\n                    return;\n                  }\n                  if (pending[0] === 'address') {\n                    history.push('/manage/address', {\n                      redirectTo: '/overview',\n                    });\n                    return;\n                  }\n                  params.set(keys[pending[0]], 'true');\n                  history.push({ pathname: 'manage', search: params.toString() });\n                }\n              }}\n              endIcon={<img src={nextIcon} alt=\"\" />}\n              fullwidth={true}\n              id=\"complete\"\n            />\n          </div>\n        )}\n      </LightBlueTile>\n    </div>\n  );\n}\n\nProfileProgress.propTypes = {\n  shop: PropTypes.object.isRequired,\n  mini: PropTypes.bool,\n};\n\nProfileProgress.defaultProps = {\n  mini: false,\n};\n"]},"metadata":{},"sourceType":"module"}