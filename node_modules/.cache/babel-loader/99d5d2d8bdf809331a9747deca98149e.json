{"ast":null,"code":"import * as Yup from 'yup';\nimport { CouponLevel, CouponStatus, DiscountType } from \"../../constants/coupon\";\nexport const couponSchema = Yup.object().shape({\n  code: Yup.string().matches(/^[A-Za-z0-9]*$/, 'coupon code can contain only alphabets and numbers [A-Z][a-z][0-9]').min(4).max(10).required(),\n  description: Yup.string(),\n  level: Yup.string().oneOf(Object.values(CouponLevel)).required(),\n  products: Yup.array().when('level', {\n    is: CouponLevel.PRODUCT,\n    then: Yup.array().of(Yup.string()).min(1).required(),\n    otherwise: Yup.array().nullable()\n  }),\n  type: Yup.string().oneOf(Object.values(DiscountType)),\n  value: Yup.number().when('type', {\n    is: DiscountType.PERCENTAGE,\n    then: Yup.number().positive().lessThan(100).required(),\n    otherwise: Yup.number().positive().required()\n  }),\n  maxValue: Yup.number().when('type', {\n    is: DiscountType.PERCENTAGE,\n    then: Yup.number().positive().moreThan(0).required('Max Value is a required field'),\n    otherwise: Yup.number().nullable()\n  }).transform((_cur, val) => val === '' ? 0 : val),\n  limits: Yup.object().shape({\n    overall: Yup.number().required(),\n    user: Yup.number().positive().required('User Limit Required')\n  }),\n  status: Yup.string().oneOf(Object.values(CouponStatus)).nullable(),\n  expiresAt: Yup.date().required(),\n  minOrderValue: Yup.number().nullable().notRequired(),\n  paymentModes: Yup.object().shape({\n    online: Yup.bool(),\n    cod: Yup.bool(),\n    custompayment: Yup.bool()\n  })\n});","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/coupons/schema.js"],"names":["Yup","CouponLevel","CouponStatus","DiscountType","couponSchema","object","shape","code","string","matches","min","max","required","description","level","oneOf","Object","values","products","array","when","is","PRODUCT","then","of","otherwise","nullable","type","value","number","PERCENTAGE","positive","lessThan","maxValue","moreThan","transform","_cur","val","limits","overall","user","status","expiresAt","date","minOrderValue","notRequired","paymentModes","online","bool","cod","custompayment"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport { CouponLevel, CouponStatus, DiscountType } from 'constants/coupon';\n\nexport const couponSchema = Yup.object()\n  .shape({\n    code: Yup.string()\n      .matches(/^[A-Za-z0-9]*$/, 'coupon code can contain only alphabets and numbers [A-Z][a-z][0-9]')\n      .min(4)\n      .max(10)\n      .required(),\n    description: Yup.string(),\n    level: Yup.string()\n      .oneOf(Object.values(CouponLevel))\n      .required(),\n    products: Yup.array()\n      .when('level', {\n        is: CouponLevel.PRODUCT,\n        then: Yup.array()\n          .of(Yup.string())\n          .min(1)\n          .required(),\n        otherwise: Yup.array()\n          .nullable(),\n      }),\n    type: Yup.string()\n      .oneOf(Object.values(DiscountType)),\n    value: Yup.number()\n      .when('type', {\n        is: DiscountType.PERCENTAGE,\n        then: Yup.number()\n          .positive()\n          .lessThan(100)\n          .required(),\n        otherwise: Yup.number()\n          .positive()\n          .required(),\n      }),\n    maxValue: Yup.number()\n      .when('type', {\n        is: DiscountType.PERCENTAGE,\n        then: Yup.number()\n          .positive()\n          .moreThan(0)\n          .required('Max Value is a required field'),\n        otherwise: Yup.number()\n          .nullable(),\n      })\n      .transform((_cur, val) => (val === '' ? 0 : val)),\n    limits: Yup.object()\n      .shape({\n        overall: Yup.number()\n          .required(),\n        user: Yup.number()\n          .positive()\n          .required('User Limit Required'),\n      }),\n    status: Yup.string()\n      .oneOf(Object.values(CouponStatus))\n      .nullable(),\n    expiresAt: Yup.date()\n      .required(),\n    minOrderValue: Yup.number().nullable().notRequired(),\n    paymentModes: Yup.object()\n      .shape({\n        online: Yup.bool(),\n        cod: Yup.bool(),\n        custompayment: Yup.bool(),\n      }),\n  });\n"]},"metadata":{},"sourceType":"module"}