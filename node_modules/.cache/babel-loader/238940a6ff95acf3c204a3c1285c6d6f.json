{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/profile/languages/Language.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDesktop, useLanguage, useRefreshShop, useSetLanguage, useShop } from \"../../../contexts\";\nimport { useIsFreePlan, useOpenPlans } from \"../../../contexts/userContext\";\nimport { Drawer } from \"../../../components/shared/Drawer\";\nimport { SideDrawer } from \"../../../components/shared/SideDrawer\";\nimport { Button, Select } from 'phoenix-components';\nimport { Becca } from \"../../../api\";\nimport { useHistory } from 'react-router-dom';\nimport Loader from \"../../../services/loader\";\nimport { FooterButton } from \"../../../components/common/FooterButton\";\nimport SnackBar from \"../../../services/snackbar\";\nimport { ALL_LANGUAGES } from \"../../../components/global/translateUtils\";\nimport Kbc from \"../../../components/knowBaseCards/KnowBaseCards\";\nimport cookie from 'react-cookies';\nimport Info from \"../../../components/info/Info\";\nimport Accordion from \"./Accordion\";\nimport styles from \"./Language.module.css\";\nconst languages = ALL_LANGUAGES;\n\nfunction Language() {\n  _s();\n\n  var _shop$config, _shop$config2, _shop$config3;\n\n  const shop = useShop();\n  const language = useLanguage();\n  const setLanguage = useSetLanguage();\n  const refreshShop = useRefreshShop();\n  const isDesktop = useDesktop();\n  const history = useHistory();\n\n  const onBack = () => history.goBack();\n\n  const [lang, setLang] = useState((shop === null || shop === void 0 ? void 0 : (_shop$config = shop.config) === null || _shop$config === void 0 ? void 0 : _shop$config.lang) || 'en');\n  const [storeLang, setStoreLang] = useState(language || 'en');\n  const selectedLang = languages.find(x => x.value === lang);\n  const storeSelected = ALL_LANGUAGES.find(x => x.value === storeLang);\n  const [userComLang, setUserComLang] = useState((shop === null || shop === void 0 ? void 0 : (_shop$config2 = shop.config) === null || _shop$config2 === void 0 ? void 0 : _shop$config2.userComLang) || 'en');\n  const [storeComLang, setStoreComLang] = useState((shop === null || shop === void 0 ? void 0 : (_shop$config3 = shop.config) === null || _shop$config3 === void 0 ? void 0 : _shop$config3.storeComLang) || 'en');\n  const userComSelected = ALL_LANGUAGES.find(x => x.value === userComLang);\n  const storeComSelected = ALL_LANGUAGES.find(x => x.value === storeComLang);\n  const isFree = useIsFreePlan();\n  const openPlans = useOpenPlans();\n\n  const onSave = async () => {\n    try {\n      Loader.show();\n      const config = shop.config || {};\n      config.lang = lang;\n      config.sellerLang = storeLang;\n      config.userComLang = userComLang;\n      config.storeComLang = storeComLang;\n      await Becca.updateShop({\n        config\n      });\n      refreshShop();\n      SnackBar.show('Language changed successfully!', 'success');\n      history.goBack();\n\n      if (storeLang !== lang) {\n        const {\n          host\n        } = window.location;\n        cookie.remove('googtrans', {\n          domain: host.includes('windo.live') ? '.windo.live' : host.includes('mywindo.shop') ? '.mywindo.shop' : 'localhost'\n        });\n      }\n\n      setLanguage(storeLang);\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onComLanguageChange = type => ({\n    value\n  }) => {\n    if (isFree) {\n      openPlans();\n      return;\n    }\n\n    if (type === 'user') {\n      setUserComLang(value);\n      return;\n    }\n\n    if (type === 'store') {\n      setStoreComLang(value);\n    }\n  };\n\n  const Component = isDesktop ? SideDrawer : Drawer;\n  return /*#__PURE__*/React.createElement(Component, {\n    title: \"Shop Language\",\n    backButton: true,\n    onClose: onBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Shop Website Language\"), /*#__PURE__*/React.createElement(\"div\", {\n    translate: \"no\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: languages,\n    label: \"Select Language\",\n    onChange: val => setLang(val.value),\n    value: selectedLang,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.hint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Above language will be set as default for your shop's website\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"WINDO App Language\"), /*#__PURE__*/React.createElement(\"div\", {\n    translate: \"no\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: ALL_LANGUAGES,\n    label: \"Select Language\",\n    onChange: val => setStoreLang(val.value),\n    value: storeSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Info, {\n    title: \"Note\",\n    text: `Please note that the app translation is powered by google translate and might not be accurate.\n             The App is best used in English.`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Accordion, {\n    label: \"Advanced Settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Shop Communication Language\"), /*#__PURE__*/React.createElement(\"div\", {\n    translate: \"no\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: languages,\n    label: \"Select Language\",\n    onChange: onComLanguageChange('user'),\n    value: userComSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.hint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"Above language will be set as default for your customers e-mail communication\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"App Communication Language\"), /*#__PURE__*/React.createElement(\"div\", {\n    translate: \"no\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: ALL_LANGUAGES,\n    label: \"Select Language\",\n    onChange: onComLanguageChange('store'),\n    value: storeComSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.hint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"Above language will be set as default for the e-mails you get from windo\")), !isDesktop && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.kbc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Kbc, {\n    type: \"langSetting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  })), isDesktop ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexCenter fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Kbc, {\n    type: \"langSetting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.containerB,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    label: \"Save\",\n    primary: true,\n    className: styles.button,\n    onClick: onSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(FooterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    bordered: false,\n    label: \"Save\",\n    primary: true,\n    size: \"large\",\n    onClick: onSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  })))));\n}\n\n_s(Language, \"0JDrFTjeV9QNZ10aQ9DYHZuFL8o=\", false, function () {\n  return [useShop, useLanguage, useSetLanguage, useRefreshShop, useDesktop, useHistory, useIsFreePlan, useOpenPlans];\n});\n\n_c = Language;\nexport default Language;\n\nvar _c;\n\n$RefreshReg$(_c, \"Language\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/languages/Language.jsx"],"names":["React","useState","useDesktop","useLanguage","useRefreshShop","useSetLanguage","useShop","useIsFreePlan","useOpenPlans","Drawer","SideDrawer","Button","Select","Becca","useHistory","Loader","FooterButton","SnackBar","ALL_LANGUAGES","Kbc","cookie","Info","Accordion","styles","languages","Language","shop","language","setLanguage","refreshShop","isDesktop","history","onBack","goBack","lang","setLang","config","storeLang","setStoreLang","selectedLang","find","x","value","storeSelected","userComLang","setUserComLang","storeComLang","setStoreComLang","userComSelected","storeComSelected","isFree","openPlans","onSave","show","sellerLang","updateShop","host","window","location","remove","domain","includes","e","showError","hide","onComLanguageChange","type","Component","container","heading","val","hint","kbc","containerB","button"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,UADF,EACcC,WADd,EAC2BC,cAD3B,EAC2CC,cAD3C,EAC2DC,OAD3D;AAGA,SAASC,aAAT,EAAwBC,YAAxB;AACA,SAASC,MAAT;AACA,SAASC,UAAT;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,oBAA/B;AACA,SAASC,KAAT;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP;AACA,SAASC,YAAT;AACA,OAAOC,QAAP;AACA,SAASC,aAAT;AACA,OAAOC,GAAP;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,IAAP;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;AAEA,MAAMC,SAAS,GAAGN,aAAlB;;AAEA,SAASO,QAAT,GAAoB;AAAA;;AAAA;;AAClB,QAAMC,IAAI,GAAGpB,OAAO,EAApB;AACA,QAAMqB,QAAQ,GAAGxB,WAAW,EAA5B;AACA,QAAMyB,WAAW,GAAGvB,cAAc,EAAlC;AACA,QAAMwB,WAAW,GAAGzB,cAAc,EAAlC;AACA,QAAM0B,SAAS,GAAG5B,UAAU,EAA5B;AACA,QAAM6B,OAAO,GAAGjB,UAAU,EAA1B;;AACA,QAAMkB,MAAM,GAAG,MAAMD,OAAO,CAACE,MAAR,EAArB;;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlC,QAAQ,CAAC,CAAAyB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,4BAAAA,IAAI,CAAEU,MAAN,8DAAcF,IAAd,KAAsB,IAAvB,CAAhC;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BrC,QAAQ,CAAC0B,QAAQ,IAAI,IAAb,CAA1C;AACA,QAAMY,YAAY,GAAGf,SAAS,CAACgB,IAAV,CAAeC,CAAC,IAAIA,CAAC,CAACC,KAAF,KAAYR,IAAhC,CAArB;AACA,QAAMS,aAAa,GAAGzB,aAAa,CAACsB,IAAd,CAAmBC,CAAC,IAAIA,CAAC,CAACC,KAAF,KAAYL,SAApC,CAAtB;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgC5C,QAAQ,CAAC,CAAAyB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,6BAAAA,IAAI,CAAEU,MAAN,gEAAcQ,WAAd,KAA6B,IAA9B,CAA9C;AACA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkC9C,QAAQ,CAAC,CAAAyB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,6BAAAA,IAAI,CAAEU,MAAN,gEAAcU,YAAd,KAA8B,IAA/B,CAAhD;AACA,QAAME,eAAe,GAAG9B,aAAa,CAACsB,IAAd,CAAmBC,CAAC,IAAIA,CAAC,CAACC,KAAF,KAAYE,WAApC,CAAxB;AACA,QAAMK,gBAAgB,GAAG/B,aAAa,CAACsB,IAAd,CAAmBC,CAAC,IAAIA,CAAC,CAACC,KAAF,KAAYI,YAApC,CAAzB;AACA,QAAMI,MAAM,GAAG3C,aAAa,EAA5B;AACA,QAAM4C,SAAS,GAAG3C,YAAY,EAA9B;;AAEA,QAAM4C,MAAM,GAAG,YAAY;AACzB,QAAI;AACFrC,MAAAA,MAAM,CAACsC,IAAP;AACA,YAAMjB,MAAM,GAAGV,IAAI,CAACU,MAAL,IAAe,EAA9B;AACAA,MAAAA,MAAM,CAACF,IAAP,GAAcA,IAAd;AACAE,MAAAA,MAAM,CAACkB,UAAP,GAAoBjB,SAApB;AACAD,MAAAA,MAAM,CAACQ,WAAP,GAAqBA,WAArB;AACAR,MAAAA,MAAM,CAACU,YAAP,GAAsBA,YAAtB;AACA,YAAMjC,KAAK,CAAC0C,UAAN,CAAiB;AAAEnB,QAAAA;AAAF,OAAjB,CAAN;AACAP,MAAAA,WAAW;AACXZ,MAAAA,QAAQ,CAACoC,IAAT,CAAc,gCAAd,EAAgD,SAAhD;AACAtB,MAAAA,OAAO,CAACE,MAAR;;AACA,UAAII,SAAS,KAAKH,IAAlB,EAAwB;AACtB,cAAM;AAAEsB,UAAAA;AAAF,YAAWC,MAAM,CAACC,QAAxB;AACAtC,QAAAA,MAAM,CAACuC,MAAP,CAAc,WAAd,EAA2B;AACzBC,UAAAA,MAAM,EAAEJ,IAAI,CAACK,QAAL,CAAc,YAAd,IACJ,aADI,GACYL,IAAI,CAACK,QAAL,CAAc,cAAd,IAAgC,eAAhC,GAAkD;AAF7C,SAA3B;AAID;;AACDjC,MAAAA,WAAW,CAACS,SAAD,CAAX;AACD,KAnBD,CAmBE,OAAOyB,CAAP,EAAU;AACV7C,MAAAA,QAAQ,CAAC8C,SAAT,CAAmBD,CAAnB;AACD,KArBD,SAqBU;AACR/C,MAAAA,MAAM,CAACiD,IAAP;AACD;AACF,GAzBD;;AA2BA,QAAMC,mBAAmB,GAAIC,IAAD,IAAU,CAAC;AAAExB,IAAAA;AAAF,GAAD,KAAe;AACnD,QAAIQ,MAAJ,EAAY;AACVC,MAAAA,SAAS;AACT;AACD;;AAED,QAAIe,IAAI,KAAK,MAAb,EAAqB;AACnBrB,MAAAA,cAAc,CAACH,KAAD,CAAd;AACA;AACD;;AACD,QAAIwB,IAAI,KAAK,OAAb,EAAsB;AACpBnB,MAAAA,eAAe,CAACL,KAAD,CAAf;AACD;AACF,GAbD;;AAeA,QAAMyB,SAAS,GAAGrC,SAAS,GAAGpB,UAAH,GAAgBD,MAA3C;AAEA,sBAEE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,OAAO,EAAEuB,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,uDAEE;AAAK,IAAA,SAAS,EAAET,MAAM,CAAC6C,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAE7C,MAAM,CAAC8C,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAIE;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE7C,SADX;AAEE,IAAA,KAAK,EAAC,iBAFR;AAGE,IAAA,QAAQ,EAAG8C,GAAD,IAASnC,OAAO,CAACmC,GAAG,CAAC5B,KAAL,CAH5B;AAIE,IAAA,KAAK,EAAEH,YAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,eAYE;AAAK,IAAA,SAAS,EAAEhB,MAAM,CAACgD,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEAZF,eAeE;AAAK,IAAA,SAAS,EAAEhD,MAAM,CAAC8C,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAfF,eAkBE;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEnD,aADX;AAEE,IAAA,KAAK,EAAC,iBAFR;AAGE,IAAA,QAAQ,EAAGoD,GAAD,IAAShC,YAAY,CAACgC,GAAG,CAAC5B,KAAL,CAHjC;AAIE,IAAA,KAAK,EAAEC,aAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlBF,eA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,eA2BE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,IAAI,EAAG;AACnB,8CAHU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,eAgCE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,mBADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAK,IAAA,SAAS,EAAEpB,MAAM,CAAC8C,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAHF,eAME;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE7C,SADX;AAEE,IAAA,KAAK,EAAC,iBAFR;AAGE,IAAA,QAAQ,EAAEyC,mBAAmB,CAAC,MAAD,CAH/B;AAIE,IAAA,KAAK,EAAEjB,eAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,eAcE;AAAK,IAAA,SAAS,EAAEzB,MAAM,CAACgD,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFAdF,eAiBE;AAAK,IAAA,SAAS,EAAEhD,MAAM,CAAC8C,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAjBF,eAoBE;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEnD,aADX;AAEE,IAAA,KAAK,EAAC,iBAFR;AAGE,IAAA,QAAQ,EAAE+C,mBAAmB,CAAC,OAAD,CAH/B;AAIE,IAAA,KAAK,EAAEhB,gBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApBF,eA4BE;AAAK,IAAA,SAAS,EAAE1B,MAAM,CAACgD,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFA5BF,CAhCF,EAgEG,CAACzC,SAAD,iBACC;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACiD,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjEJ,EAqEG1C,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAKE;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACkD,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,OAAO,EAAE,IAHX;AAIE,IAAA,SAAS,EAAElD,MAAM,CAACmD,MAJpB;AAKE,IAAA,OAAO,EAAEtB,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADQ,gBAiBR,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,QAAQ,EAAE,KAFZ;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,OAAO,EAAE,IAJX;AAKE,IAAA,IAAI,EAAC,OALP;AAME,IAAA,OAAO,EAAEA,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtFJ,CAFF,CALF,CAFF;AA+GD;;GA9KQ3B,Q;UACMnB,O,EACIH,W,EACGE,c,EACAD,c,EACFF,U,EACFY,U,EAUDP,a,EACGC,Y;;;KAjBXiB,Q;AAgLT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport {\n  useDesktop, useLanguage, useRefreshShop, useSetLanguage, useShop\n} from 'contexts';\nimport { useIsFreePlan, useOpenPlans } from 'contexts/userContext';\nimport { Drawer } from 'components/shared/Drawer';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { Button, Select } from 'phoenix-components';\nimport { Becca } from 'api';\nimport { useHistory } from 'react-router-dom';\nimport Loader from 'services/loader';\nimport { FooterButton } from 'components/common/FooterButton';\nimport SnackBar from 'services/snackbar';\nimport { ALL_LANGUAGES } from 'components/global/translateUtils';\nimport Kbc from 'components/knowBaseCards/KnowBaseCards';\nimport cookie from 'react-cookies';\nimport Info from 'components/info/Info';\nimport Accordion from './Accordion';\nimport styles from './Language.module.css';\n\nconst languages = ALL_LANGUAGES;\n\nfunction Language() {\n  const shop = useShop();\n  const language = useLanguage();\n  const setLanguage = useSetLanguage();\n  const refreshShop = useRefreshShop();\n  const isDesktop = useDesktop();\n  const history = useHistory();\n  const onBack = () => history.goBack();\n  const [lang, setLang] = useState(shop?.config?.lang || 'en');\n  const [storeLang, setStoreLang] = useState(language || 'en');\n  const selectedLang = languages.find(x => x.value === lang);\n  const storeSelected = ALL_LANGUAGES.find(x => x.value === storeLang);\n  const [userComLang, setUserComLang] = useState(shop?.config?.userComLang || 'en');\n  const [storeComLang, setStoreComLang] = useState(shop?.config?.storeComLang || 'en');\n  const userComSelected = ALL_LANGUAGES.find(x => x.value === userComLang);\n  const storeComSelected = ALL_LANGUAGES.find(x => x.value === storeComLang);\n  const isFree = useIsFreePlan();\n  const openPlans = useOpenPlans();\n\n  const onSave = async () => {\n    try {\n      Loader.show();\n      const config = shop.config || {};\n      config.lang = lang;\n      config.sellerLang = storeLang;\n      config.userComLang = userComLang;\n      config.storeComLang = storeComLang;\n      await Becca.updateShop({ config });\n      refreshShop();\n      SnackBar.show('Language changed successfully!', 'success');\n      history.goBack();\n      if (storeLang !== lang) {\n        const { host } = window.location;\n        cookie.remove('googtrans', {\n          domain: host.includes('windo.live')\n            ? '.windo.live' : host.includes('mywindo.shop') ? '.mywindo.shop' : 'localhost',\n        });\n      }\n      setLanguage(storeLang);\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onComLanguageChange = (type) => ({ value }) => {\n    if (isFree) {\n      openPlans();\n      return;\n    }\n\n    if (type === 'user') {\n      setUserComLang(value);\n      return;\n    }\n    if (type === 'store') {\n      setStoreComLang(value);\n    }\n  };\n\n  const Component = isDesktop ? SideDrawer : Drawer;\n\n  return (\n\n    <Component\n      title=\"Shop Language\"\n      backButton\n      onClose={onBack}\n    >\n      <>\n\n        <div className={styles.container}>\n          <div className={styles.heading}>\n            Shop Website Language\n          </div>\n          <div translate=\"no\">\n            <Select\n              options={languages}\n              label=\"Select Language\"\n              onChange={(val) => setLang(val.value)}\n              value={selectedLang}\n            />\n          </div>\n          <div className={styles.hint}>\n            Above language will be set as default for your shop's website\n          </div>\n          <div className={styles.heading}>\n            WINDO App Language\n          </div>\n          <div translate=\"no\">\n            <Select\n              options={ALL_LANGUAGES}\n              label=\"Select Language\"\n              onChange={(val) => setStoreLang(val.value)}\n              value={storeSelected}\n            />\n          </div>\n          <br />\n          <Info\n            title=\"Note\"\n            text={`Please note that the app translation is powered by google translate and might not be accurate.\n             The App is best used in English.`}\n          />\n          <Accordion\n            label=\"Advanced Settings\"\n          >\n            <div className={styles.heading}>\n              Shop Communication Language\n            </div>\n            <div translate=\"no\">\n              <Select\n                options={languages}\n                label=\"Select Language\"\n                onChange={onComLanguageChange('user')}\n                value={userComSelected}\n              />\n            </div>\n            <div className={styles.hint}>\n              Above language will be set as default for your customers e-mail communication\n            </div>\n            <div className={styles.heading}>\n              App Communication Language\n            </div>\n            <div translate=\"no\">\n              <Select\n                options={ALL_LANGUAGES}\n                label=\"Select Language\"\n                onChange={onComLanguageChange('store')}\n                value={storeComSelected}\n              />\n            </div>\n            <div className={styles.hint}>\n              Above language will be set as default for the e-mails you get from windo\n            </div>\n          </Accordion>\n          {!isDesktop && (\n            <div className={styles.kbc}>\n              <Kbc type=\"langSetting\" />\n            </div>\n          )}\n          {isDesktop ? (\n            <div>\n\n              <div className=\"flexCenter fullWidth\">\n                <Kbc type=\"langSetting\" />\n              </div>\n              <div className={styles.containerB}>\n                <Button\n                  size=\"large\"\n                  label=\"Save\"\n                  primary={true}\n                  className={styles.button}\n                  onClick={onSave}\n                />\n              </div>\n            </div>\n          ) : (\n            <FooterButton>\n              <Button\n                fullWidth\n                bordered={false}\n                label=\"Save\"\n                primary={true}\n                size=\"large\"\n                onClick={onSave}\n              >\n              </Button>\n            </FooterButton>\n          )}\n        </div>\n      </>\n    </Component>\n  );\n}\n\nexport default Language;\n"]},"metadata":{},"sourceType":"module"}