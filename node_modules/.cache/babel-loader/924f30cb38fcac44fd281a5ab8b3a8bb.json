{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/customerCampaign/ProductsDrawer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Drawer } from '@material-ui/core';\nimport { useInfiniteProducts } from \"../../hooks\";\nimport { Grid, InfiniteLoader } from 'react-virtualized';\nimport { LightBlueTile } from \"../cards\";\nimport { SideDrawer } from \"../shared/SideDrawer\";\nimport { useDesktop } from \"../../contexts\";\nimport { Button } from 'phoenix-components';\nimport Header from \"../../containers/products/Header\";\nimport emptyProducts from \"../../assets/overview/products.svg\";\nimport styles from \"../shared/ProductsDrawer.module.css\";\nimport checkIcon from \"../../assets/v2/products/checked.svg\";\nimport uncheckIcon from \"../../assets/v2/products/unchecked.svg\";\nexport function ProductsDrawer({\n  initial = [],\n  onClose,\n  filters = {},\n  btnText,\n  allowCheck\n}) {\n  _s();\n\n  const [products, setProducts] = useState(initial);\n  const [productList = [], loadMore, hasMore] = useInfiniteProducts(filters);\n  const productSet = new Set(products);\n  const isDesktop = useDesktop();\n  const rowCount = hasMore ? 10000 : productList.length;\n\n  const isLoaded = i => !!productList[i];\n\n  const height = window.screen.height - 136 - 16;\n  const cellWidth = (window.screen.width - 32) / 2;\n\n  const tagProduct = product => e => {\n    const id = product._id;\n    e.stopPropagation();\n\n    if (productSet.has(id)) {\n      productSet.delete(id);\n      setProducts([...productSet]);\n      return;\n    }\n\n    productSet.add(id);\n    setProducts([...productSet]);\n  };\n\n  const onSectionRendered = onRowsRendered => ({\n    columnStartIndex,\n    columnStopIndex,\n    rowStartIndex,\n    rowStopIndex\n  }) => {\n    const startIndex = rowStartIndex * 3 + columnStartIndex;\n    const stopIndex = rowStopIndex * 3 + columnStopIndex;\n    onRowsRendered({\n      startIndex,\n      stopIndex\n    });\n  };\n\n  const tagProducts = () => {\n    onClose([...productSet]);\n  };\n\n  useEffect(() => {\n    const container = document.getElementById('resize');\n\n    function handleResize() {\n      if (container) {\n        container.style.height = `${window.innerHeight - 115}px`;\n      }\n    }\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    if (container) {\n      setTimeout(() => {\n        container.scrollTo({\n          top: container.scrollHeight,\n          behavior: 'smooth'\n        });\n      }, 500);\n    }\n  }); // eslint-disable-next-line react/no-multi-comp\n\n  const renderCell = el => {\n    const idx = el.rowIndex * 2 + el.columnIndex;\n\n    if (idx >= productList.length) {\n      return null;\n    }\n\n    const product = productList[idx];\n    const [image] = product.images || [];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: el.key,\n      onClick: tagProduct(product),\n      style: el.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LightBlueTile, {\n      className: styles.block,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.img,\n      style: {\n        backgroundImage: `url(${image === null || image === void 0 ? void 0 : image.url})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.checkBoxContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, allowCheck && /*#__PURE__*/React.createElement(\"img\", {\n      src: productSet.has(product._id) ? checkIcon : uncheckIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, product.title.length > 30 ? `${product.title.slice(0, 30)}...` : product.title)));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !isDesktop && /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"bottom\",\n    open: true,\n    onClose: () => onClose(initial),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    onBack: () => onClose(initial),\n    title: \"Select Products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.overflow,\n    id: \"resize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, (productList === null || productList === void 0 ? void 0 : productList.length) > 0 ? /*#__PURE__*/React.createElement(InfiniteLoader, {\n    loadMoreRows: loadMore,\n    isRowLoaded: isLoaded,\n    rowCount: rowCount,\n    minimumBatchSize: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, ({\n    onRowsRendered,\n    registerChild\n  }) => /*#__PURE__*/React.createElement(Grid, {\n    onSectionRendered: onSectionRendered(onRowsRendered),\n    ref: registerChild,\n    cellRenderer: renderCell,\n    columnCount: 2,\n    columnWidth: cellWidth,\n    height: height,\n    rowCount: Math.ceil(rowCount / 2),\n    rowHeight: 176,\n    style: {\n      display: 'flex'\n    },\n    width: window.screen.width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.emptyProducts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: emptyProducts,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.emptyProductText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, \"No recently added products\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.tagButtonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, allowCheck && /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    fullWidth: true,\n    bordered: false,\n    onClick: tagProducts,\n    label: btnText.length > 0 ? btnText : `Filter ${productSet.size} Products`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  })))), isDesktop && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SideDrawer, {\n    backButton: true,\n    onClose: () => onClose(initial),\n    title: \"Select Products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.overflow,\n    id: \"resize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, (productList === null || productList === void 0 ? void 0 : productList.length) > 0 ? /*#__PURE__*/React.createElement(InfiniteLoader, {\n    loadMoreRows: loadMore,\n    isRowLoaded: isLoaded,\n    rowCount: rowCount,\n    minimumBatchSize: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }, ({\n    onRowsRendered,\n    registerChild\n  }) => /*#__PURE__*/React.createElement(Grid, {\n    onSectionRendered: onSectionRendered(onRowsRendered),\n    ref: registerChild,\n    cellRenderer: renderCell,\n    columnCount: 2,\n    columnWidth: cellWidth,\n    height: height,\n    rowCount: Math.ceil(rowCount / 2),\n    rowHeight: 176,\n    style: {\n      display: 'flex'\n    },\n    width: window.screen.width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 23\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.emptyProducts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: emptyProducts,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.emptyProductText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, \"No recently added products\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.tagButtonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, allowCheck && /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    onClick: tagProducts,\n    label: btnText.length > 0 ? btnText : `Filter ${productSet.size} Products`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 19\n    }\n  }))))));\n}\n\n_s(ProductsDrawer, \"o6vCeQYNDJR0TiU7pD9qVj9SudE=\", false, function () {\n  return [useInfiniteProducts, useDesktop];\n});\n\n_c = ProductsDrawer;\nProductsDrawer.propTypes = {\n  initial: PropTypes.array,\n  onClose: PropTypes.func.isRequired,\n  filters: PropTypes.object,\n  btnText: PropTypes.string,\n  allowCheck: PropTypes.bool\n};\nProductsDrawer.defaultProps = {\n  filters: {},\n  initial: [],\n  btnText: '',\n  allowCheck: true\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsDrawer\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/customerCampaign/ProductsDrawer.jsx"],"names":["React","useState","useEffect","PropTypes","Drawer","useInfiniteProducts","Grid","InfiniteLoader","LightBlueTile","SideDrawer","useDesktop","Button","Header","styles","ProductsDrawer","initial","onClose","filters","btnText","allowCheck","products","setProducts","productList","loadMore","hasMore","productSet","Set","isDesktop","rowCount","length","isLoaded","i","height","window","screen","cellWidth","width","tagProduct","product","e","id","_id","stopPropagation","has","delete","add","onSectionRendered","onRowsRendered","columnStartIndex","columnStopIndex","rowStartIndex","rowStopIndex","startIndex","stopIndex","tagProducts","container","document","getElementById","handleResize","style","innerHeight","addEventListener","setTimeout","scrollTo","top","scrollHeight","behavior","renderCell","el","idx","rowIndex","columnIndex","image","images","key","block","img","backgroundImage","url","checkBoxContainer","checkIcon","uncheckIcon","title","slice","overflow","registerChild","Math","ceil","display","emptyProducts","emptyProductText","tagButtonContainer","size","propTypes","array","func","isRequired","object","string","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Drawer } from '@material-ui/core';\nimport { useInfiniteProducts } from 'hooks';\nimport { Grid, InfiniteLoader } from 'react-virtualized';\nimport { LightBlueTile } from 'components/cards';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { useDesktop } from 'contexts';\nimport { Button } from 'phoenix-components';\nimport Header from 'containers/products/Header';\nimport emptyProducts from 'assets/overview/products.svg';\nimport styles from 'components/shared/ProductsDrawer.module.css';\nimport checkIcon from 'assets/v2/products/checked.svg';\nimport uncheckIcon from 'assets/v2/products/unchecked.svg';\n\nexport function ProductsDrawer({\n  initial = [],\n  onClose,\n  filters = {},\n  btnText,\n  allowCheck,\n}) {\n  const [products, setProducts] = useState(initial);\n  const [productList = [], loadMore, hasMore] = useInfiniteProducts(filters);\n  const productSet = new Set(products);\n  const isDesktop = useDesktop();\n  const rowCount = hasMore ? 10000 : productList.length;\n  const isLoaded = i => !!productList[i];\n\n  const height = window.screen.height - 136 - 16;\n  const cellWidth = (window.screen.width - 32) / 2;\n\n  const tagProduct = product => e => {\n    const id = product._id;\n    e.stopPropagation();\n    if (productSet.has(id)) {\n      productSet.delete(id);\n      setProducts([...productSet]);\n      return;\n    }\n    productSet.add(id);\n    setProducts([...productSet]);\n  };\n\n  const onSectionRendered = (onRowsRendered) => ({\n    columnStartIndex,\n    columnStopIndex,\n    rowStartIndex,\n    rowStopIndex\n  }) => {\n    const startIndex = rowStartIndex * 3 + columnStartIndex;\n    const stopIndex = rowStopIndex * 3 + columnStopIndex;\n\n    onRowsRendered({\n      startIndex,\n      stopIndex\n    });\n  };\n\n  const tagProducts = () => {\n    onClose([...productSet]);\n  };\n\n  useEffect(() => {\n    const container = document.getElementById('resize');\n    function handleResize() {\n      if (container) {\n        container.style.height = `${window.innerHeight - 115}px`;\n      }\n    }\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    if (container) {\n      setTimeout(() => {\n        container.scrollTo({\n          top: container.scrollHeight,\n          behavior: 'smooth'\n        });\n      }, 500);\n    }\n  });\n\n  // eslint-disable-next-line react/no-multi-comp\n  const renderCell = (el) => {\n    const idx = el.rowIndex * 2 + el.columnIndex;\n    if (idx >= productList.length) {\n      return null;\n    }\n    const product = productList[idx];\n    const [image] = product.images || [];\n    return (\n      <div key={el.key} onClick={tagProduct(product)} style={el.style}>\n        <LightBlueTile className={styles.block}>\n          <div className={styles.img} style={{ backgroundImage: `url(${image?.url})` }}>\n            <div className={styles.checkBoxContainer}>\n              {allowCheck && (\n                <img src={productSet.has(product._id) ? checkIcon : uncheckIcon} alt=\"\" />\n              )}\n            </div>\n          </div>\n          <div\n            className={styles.title}\n          >\n            {product.title.length > 30 ? `${product.title.slice(0, 30)}...` : product.title}\n          </div>\n        </LightBlueTile>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {!isDesktop && (\n        <Drawer\n          anchor=\"bottom\"\n          open={true}\n          onClose={() => onClose(initial)}\n        >\n          <div className={styles.container}>\n            <Header onBack={() => onClose(initial)} title=\"Select Products\" />\n            <div className={styles.overflow} id=\"resize\">\n              {productList?.length > 0 ? (\n                <InfiniteLoader\n                  loadMoreRows={loadMore}\n                  isRowLoaded={isLoaded}\n                  rowCount={rowCount}\n                  minimumBatchSize={10}\n                >\n                  {({\n                    onRowsRendered,\n                    registerChild\n                  }) => (\n                    <Grid\n                      onSectionRendered={onSectionRendered(onRowsRendered)}\n                      ref={registerChild}\n                      cellRenderer={renderCell}\n                      columnCount={2}\n                      columnWidth={cellWidth}\n                      height={height}\n                      rowCount={Math.ceil(rowCount / 2)}\n                      rowHeight={176}\n                      style={{ display: 'flex' }}\n                      width={window.screen.width}\n                    />\n                  )}\n                </InfiniteLoader>\n              ) : (\n                <div className={styles.emptyProducts}>\n                  <img src={emptyProducts} alt=\"\" />\n                  <div className={styles.emptyProductText}>\n                    No recently added products\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className={styles.tagButtonContainer}>\n              {allowCheck && (\n                <Button\n                  size=\"large\"\n                  fullWidth\n                  bordered={false}\n                  onClick={tagProducts}\n                  label={btnText.length > 0 ? btnText : `Filter ${productSet.size} Products`}\n                />\n              )}\n            </div>\n          </div>\n        </Drawer>\n      )}\n      {isDesktop && (\n        <>\n          <SideDrawer\n            backButton={true}\n            onClose={() => onClose(initial)}\n            title=\"Select Products\"\n          >\n            <div className={styles.container}>\n              <div className={styles.overflow} id=\"resize\">\n                {productList?.length > 0 ? (\n                  <InfiniteLoader\n                    loadMoreRows={loadMore}\n                    isRowLoaded={isLoaded}\n                    rowCount={rowCount}\n                    minimumBatchSize={10}\n                  >\n                    {({\n                      onRowsRendered, registerChild\n                    }) => (\n                      <Grid\n                        onSectionRendered={onSectionRendered(onRowsRendered)}\n                        ref={registerChild}\n                        cellRenderer={renderCell}\n                        columnCount={2}\n                        columnWidth={cellWidth}\n                        height={height}\n                        rowCount={Math.ceil(rowCount / 2)}\n                        rowHeight={176}\n                        style={{ display: 'flex' }}\n                        width={window.screen.width} />\n                    )}\n                  </InfiniteLoader>\n                ) : (\n                  <div className={styles.emptyProducts}>\n                    <img src={emptyProducts} alt=\"\" />\n                    <div className={styles.emptyProductText}>\n                      No recently added products\n                    </div>\n                  </div>\n                )}\n              </div>\n              <div className={styles.tagButtonContainer}>\n                {allowCheck && (\n                  <Button\n                    size=\"large\"\n                    onClick={tagProducts}\n                    label={btnText.length > 0 ? btnText : `Filter ${productSet.size} Products`} />\n                )}\n              </div>\n            </div>\n          </SideDrawer>\n        </>\n      )}\n    </>\n  );\n}\n\nProductsDrawer.propTypes = {\n  initial: PropTypes.array,\n  onClose: PropTypes.func.isRequired,\n  filters: PropTypes.object,\n  btnText: PropTypes.string,\n  allowCheck: PropTypes.bool,\n};\n\nProductsDrawer.defaultProps = {\n  filters: {},\n  initial: [],\n  btnText: '',\n  allowCheck: true,\n};\n"]},"metadata":{},"sourceType":"module"}