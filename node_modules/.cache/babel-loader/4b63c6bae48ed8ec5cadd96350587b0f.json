{"ast":null,"code":"import moment from 'moment';\nimport { isEmpty, get } from 'lodash';\nexport const formatDate = (from, to, createdAt = true) => {\n  const key = createdAt ? 'createdAt' : 'updatedAt';\n\n  if (from && !to) {\n    return {\n      [key]: {\n        $gte: from\n      }\n    };\n  }\n\n  if (!from && to) {\n    return {\n      [key]: {\n        $lte: to\n      }\n    };\n  }\n\n  return {\n    [key]: {\n      $gte: from,\n      $lte: to\n    }\n  };\n};\nexport const dateFilters = {\n  all: null,\n  today: formatDate(moment().startOf('day')),\n  yesterday: formatDate(moment().startOf('day').add(-1, 'day'), moment().startOf('day')),\n  week: formatDate(moment().add(-1, 'week'), moment().endOf('day')),\n  lastweek: formatDate(moment().add(-1, 'week'), moment().endOf('day')),\n  month: formatDate(moment().add(-1, 'month'), moment().endOf('day')),\n  lastmonth: formatDate(moment().add(-1, 'month'), moment().endOf('day')),\n  '3mon': formatDate(moment().add(-3, 'month'), moment().endOf('day')),\n  last3mon: formatDate(moment().add(-3, 'month'), moment().endOf('day')),\n  '6mon': formatDate(moment().add(-6, 'month'), moment().endOf('day')),\n  last6mon: formatDate(moment().add(-6, 'month'), moment().endOf('day')),\n  year: formatDate(moment().add(-1, 'year'), moment().endOf('day')),\n  lastyear: formatDate(moment().add(-1, 'year'), moment().endOf('day'))\n};\nexport const updatedFilters = {\n  all: null,\n  today: formatDate(moment().startOf('day'), moment(), false),\n  yesterday: formatDate(moment().startOf('day').add(-1, 'day'), moment().startOf('day'), false),\n  week: formatDate(moment().add(-1, 'week'), moment().endOf('day'), false),\n  month: formatDate(moment().add(-1, 'month'), moment().endOf('day'), false),\n  '3mon': formatDate(moment().add(-3, 'month'), moment().endOf('day'), false),\n  '6mon': formatDate(moment().add(-6, 'month'), moment().endOf('day'), false),\n  year: formatDate(moment().add(-1, 'year'), moment().endOf('day'), false)\n};\nexport const customDateFilters = (from, to, createdAt = true) => formatDate(moment(from).startOf('day'), moment(to).endOf('day'), createdAt);\nexport const getText = dateRangeFilters => {\n  const isEmptyFrom = isEmpty(dateRangeFilters === null || dateRangeFilters === void 0 ? void 0 : dateRangeFilters.from);\n  const isEmptyTo = isEmpty(dateRangeFilters === null || dateRangeFilters === void 0 ? void 0 : dateRangeFilters.to);\n\n  if (isEmptyFrom && isEmptyTo) {\n    return 'Select Date';\n  }\n\n  if (moment(dateRangeFilters.from).format('MMM D') === moment(dateRangeFilters.to).format('MMM D')) {\n    return moment(dateRangeFilters.to).format('MMM D YYYY');\n  }\n\n  return `${moment(dateRangeFilters.from).format('MMM D')} - ${moment(dateRangeFilters.to).format('MMM D, YYYY')}`;\n};\nexport const getFeatureFromLoad = (shop, key) => {\n  const val = get(shop, `plan.config.${key}`, false);\n  return val;\n};","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/utils.js"],"names":["moment","isEmpty","get","formatDate","from","to","createdAt","key","$gte","$lte","dateFilters","all","today","startOf","yesterday","add","week","endOf","lastweek","month","lastmonth","last3mon","last6mon","year","lastyear","updatedFilters","customDateFilters","getText","dateRangeFilters","isEmptyFrom","isEmptyTo","format","getFeatureFromLoad","shop","val"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport { isEmpty, get } from 'lodash';\n\nexport const formatDate = (from, to, createdAt = true) => {\n  const key = createdAt ? 'createdAt' : 'updatedAt';\n  if (from && !to) {\n    return { [key]: { $gte: from } };\n  }\n  if (!from && to) {\n    return { [key]: { $lte: to } };\n  }\n\n  return { [key]: { $gte: from, $lte: to } };\n};\n\nexport const dateFilters = {\n  all: null,\n  today: formatDate(moment().startOf('day')),\n  yesterday: formatDate(moment().startOf('day').add(-1, 'day'), moment().startOf('day')),\n  week: formatDate(moment().add(-1, 'week'), moment().endOf('day')),\n  lastweek: formatDate(moment().add(-1, 'week'), moment().endOf('day')),\n  month: formatDate(moment().add(-1, 'month'), moment().endOf('day')),\n  lastmonth: formatDate(moment().add(-1, 'month'), moment().endOf('day')),\n  '3mon': formatDate(moment().add(-3, 'month'), moment().endOf('day')),\n  last3mon: formatDate(moment().add(-3, 'month'), moment().endOf('day')),\n  '6mon': formatDate(moment().add(-6, 'month'), moment().endOf('day')),\n  last6mon: formatDate(moment().add(-6, 'month'), moment().endOf('day')),\n  year: formatDate(moment().add(-1, 'year'), moment().endOf('day')),\n  lastyear: formatDate(moment().add(-1, 'year'), moment().endOf('day')),\n};\n\nexport const updatedFilters = {\n  all: null,\n  today: formatDate(moment().startOf('day'), moment(), false),\n  yesterday: formatDate(moment().startOf('day').add(-1, 'day'), moment().startOf('day'), false),\n  week: formatDate(moment().add(-1, 'week'), moment().endOf('day'), false),\n  month: formatDate(moment().add(-1, 'month'), moment().endOf('day'), false),\n  '3mon': formatDate(moment().add(-3, 'month'), moment().endOf('day'), false),\n  '6mon': formatDate(moment().add(-6, 'month'), moment().endOf('day'), false),\n  year: formatDate(moment().add(-1, 'year'), moment().endOf('day'), false),\n};\n\nexport const customDateFilters = (from,\n  to, createdAt = true,) => formatDate(moment(from).startOf('day'), moment(to).endOf('day'), createdAt);\n\nexport const getText = (dateRangeFilters) => {\n  const isEmptyFrom = isEmpty(dateRangeFilters?.from);\n  const isEmptyTo = isEmpty(dateRangeFilters?.to);\n  if (isEmptyFrom && isEmptyTo) {\n    return 'Select Date';\n  }\n  if (moment(dateRangeFilters.from).format('MMM D') === moment(dateRangeFilters.to).format('MMM D')) {\n    return moment(dateRangeFilters.to).format('MMM D YYYY');\n  }\n  return `${moment(dateRangeFilters.from).format('MMM D')} - ${moment(dateRangeFilters.to).format('MMM D, YYYY')}`;\n};\n\nexport const getFeatureFromLoad = (shop, key) => {\n  const val = get(shop, `plan.config.${key}`, false);\n  return val;\n};\n"]},"metadata":{},"sourceType":"module"}