{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/products/CreateProduct.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { lazy, useState } from 'react';\nimport { isEmpty } from 'lodash';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport { Grid } from '@material-ui/core';\nimport { Button, Chip, Clickable, FormikInput, Switch } from 'phoenix-components';\nimport estimateDelivery from \"../../assets/overview/estimateDelivery.svg\";\nimport editIcon from \"../../assets/overview/editIcon.svg\";\nimport { ErrorMessage, Radio } from 'phoenix-components/lib/formik';\nimport { calculateDiscount, calculateTax, getInitialValues, getVideosAndImages, marshallPayload, productSchema, draftSchema } from \"../../components/products/variantUtils\";\nimport { Radio as Rdio } from 'phoenix-components';\nimport { useImagesLength, useShop } from \"../../contexts/userContext\";\nimport { useToggle } from \"../../hooks/common\";\nimport Catalog from \"./Catalog/List\";\nimport { Drawer } from \"../../components/shared/Drawer\";\nimport { OtherButton } from \"../../components/products/OtherButton\";\nimport { ImagePicker } from \"../../components/common/ImagePicker\";\nimport { UnitDrawer } from \"../../components/products/UnitDrawer\";\nimport chevronRight from \"../../assets/v2/common/chevronBlackRight.svg\";\nimport { VariantBlock } from \"../../components/products/VariantBlock\";\nimport Quantity from \"../../components/products/Quantity\";\nimport SnackBar from \"../../services/snackbar\";\nimport Loader from \"../../services/loader\";\nimport { Becca } from \"../../api\";\nimport { useDesktop } from \"../../contexts\";\nimport { useIsRatingsEnabled, useIsFreePlan } from \"../../contexts\";\nimport Header from \"./Header\";\nimport { inParallelWithLimit } from \"../../utils/parallel\";\nimport { useProductDetails } from \"../../components/products/hooks\";\nimport { Loading } from \"../../components/shared/Loading\";\nimport { DescriptionDraw } from \"../../components/products/DescriptionDraw\";\nimport cx from 'classnames';\nimport EventManager from \"../../utils/events\";\nimport chevDown from \"../../assets/v2/settings/paymentModes/chevDown.svg\";\nimport { FooterButton } from \"../../components/common/FooterButton\";\nimport { RatingsShare } from \"../../components/reviewProduct/RatingsShare\";\nimport { DeleteAlert } from \"../../components/shared/DeleteAlert.jsx\";\nimport UploadProduct from \"../../components/products/UploadProduct.jsx\";\nimport { useShopTaxes } from \"../../contexts/userContext\";\nimport Kbc from \"../../components/knowBaseCards/KnowBaseCards.jsx\";\nimport CreateProductDesktop from \"./CreateProductDesktop.jsx\";\nimport { TaxCard } from \"./TaxCard.jsx\";\nimport styles from \"./CreateProduct.module.css\";\nexport const ShippingTime = /*#__PURE__*/lazy(_c = () => import(\n/* webpackChunkName: \"profile\" */\n\"../shippingTime/ShippingTime\"));\n_c2 = ShippingTime;\n\nfunction CreateProduct() {\n  _s();\n\n  const shop = useShop();\n  const isDesktop = useDesktop();\n  const {\n    id\n  } = useParams();\n  const [product] = useProductDetails(id);\n  const history = useHistory();\n  const {\n    state\n  } = useLocation();\n  const isUpdate = !isEmpty(id);\n  const [openCatalog, toggleOpenCatalog] = useToggle(false);\n  const [openDescription, toggleDescription] = useToggle(false);\n  const [isDraft, toggleIsDraft] = useState(false);\n  const [openUnit, toggleUnit] = useToggle(false);\n  const [openShippingTime, toggleShippingTime] = useToggle(false);\n  const [openCustomiz, toggleOpenCustomiz] = useToggle(false);\n  const [openDetails, toggleOpenDetails] = useToggle(false);\n  const isEnabledRatings = useIsRatingsEnabled();\n  const isDraftProduct = product && product.status === 'draft';\n  const taxes = useShopTaxes();\n  const initialValues = getInitialValues({ ...product,\n    ...state\n  }, isUpdate ? [] : taxes);\n  const isFreePlan = useIsFreePlan();\n  const fileLength = useImagesLength(false);\n  const [isDigitalProduct, setIsDigitalProduct] = useState(false);\n  const [openUploadDrawer, setOpenUploadDrawer] = useState(false);\n\n  const onSave = async values => {\n    if (isDraftProduct) {\n      values.status = 'live';\n    }\n\n    const {\n      variants,\n      sku\n    } = marshallPayload(values);\n    Loader.show();\n\n    try {\n      if (sku._id) {\n        await Becca.updateProduct(sku._id, sku);\n        await inParallelWithLimit(variants, 5, async variant => {\n          if (variant._id) {\n            await Becca.updateVariant(variant._id, variant);\n          } else {\n            await Becca.createVariant({\n              skuId: sku._id,\n              ...variant\n            });\n          }\n        });\n      } else {\n        const {\n          _id\n        } = await Becca.createProduct({ ...sku,\n          variants\n        });\n        sku._id = _id;\n        EventManager.emitEvent('product_created', {\n          id: _id,\n          title: values.title\n        });\n      }\n\n      history.goBack();\n      SnackBar.show(`Product ${isUpdate ? 'updated' : 'created'} successfully`, 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onUnitSelect = e => {\n    e.preventDefault();\n    e.target.blur();\n    toggleUnit();\n  };\n\n  const onImageChange = setField => files => {\n    const {\n      videos,\n      images\n    } = getVideosAndImages(files);\n    setField('images', images);\n    setField('videos', videos);\n  };\n\n  const onProductUpload = setField => files => setField('links', files);\n\n  const getSchema = () => {\n    const checkList = ['deleted'];\n\n    if (isUpdate) {\n      if (checkList.includes(product === null || product === void 0 ? void 0 : product.status)) {\n        return draftSchema;\n      }\n\n      return productSchema;\n    }\n\n    if (isDraft) {\n      return draftSchema;\n    }\n\n    return productSchema;\n  };\n\n  if (isUpdate && !product) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isDesktop && /*#__PURE__*/React.createElement(CreateProductDesktop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }), !isDesktop && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    showFaq: !isEnabledRatings,\n    showLogo: false,\n    onBack: history.goBack,\n    showItems: ['products'],\n    title: isUpdate ? 'Update Product' : 'Create Product',\n    showReview: isUpdate && isEnabledRatings,\n    onReviewClick: () => history.push(`/products/rating/${id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSave,\n    validationSchema: getSchema(),\n    enableReinitialize: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, ({\n    values,\n    setFieldValue,\n    submitForm\n  }) => {\n    var _values$variant, _values$variant2, _values$unit, _values$unit2, _values$variant3, _values$plainDescript, _values$variant4, _values$catalogs, _values$variant5, _values$shippingTime, _values$shippingTime$, _values$shippingTime2, _values$shippingTime3, _values$shippingTime4, _values$shippingTime5, _values$shippingTime6, _values$shippingTime7, _values$shippingTime8, _values$shippingTime9;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ImagePicker, {\n      onChange: onImageChange(setFieldValue),\n      isMulti: true,\n      images: [...values.images, ...values.videos],\n      accept: \"image/*,video/mp4,video/x-m4v,video/*\",\n      showCover: true,\n      size: fileLength,\n      videos: !isFreePlan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"images\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 19\n      }\n    }, \"Product Details\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, isDigitalProduct ? /*#__PURE__*/React.createElement(DeleteAlert, {\n      title: \"Enable this option only if you\\u2019re selling digital products like e-books, videos & services.\",\n      subTitle: \"Shipping address for this product will be disabled on your website.\",\n      primary: \"CONTINUE\",\n      secondary: \"Cancel\",\n      onCancel: () => setIsDigitalProduct(!isDigitalProduct),\n      onDelete: () => {\n        setIsDigitalProduct(!isDigitalProduct);\n        setFieldValue('productType', 'digital');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }) : '', /*#__PURE__*/React.createElement(\"div\", {\n      className: values.productType === 'digital' ? styles.activeDigitalProductContainer : styles.digitalProductContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexBetween\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 27\n      }\n    }, \"Digital Product\"), /*#__PURE__*/React.createElement(Switch, {\n      active: values.productType === 'digital',\n      onChange: () => {\n        setIsDigitalProduct(!(values.productType === 'digital'));\n        setFieldValue('productType', 'physical');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 27\n      }\n    })), values.productType === 'digital' ? /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.enableDigitalText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 27\n      }\n    }, \"Enable this option if its a digital Product\") : '')), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      label: \"Product Name\",\n      name: \"title\",\n      placeholder: \"Give your product a stand-out name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      label: \"Price\",\n      name: \"variant.discountedAmount\",\n      placeholder: \"e.g. 160\",\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      label: \"Strike-off Price\",\n      name: \"variant.amount\",\n      placeholder: \"e.g. 200\",\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.optionalText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 23\n      }\n    }, \"(Optional)\")), (values === null || values === void 0 ? void 0 : (_values$variant = values.variant) === null || _values$variant === void 0 ? void 0 : _values$variant.amount) > 0 && (values === null || values === void 0 ? void 0 : (_values$variant2 = values.variant) === null || _values$variant2 === void 0 ? void 0 : _values$variant2.discountedAmount) > 0 && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.helperText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 27\n      }\n    }, \"Price to Customer :\", ' ', `${shop.currency} ${values.variant.discountedAmount}`, ' ', /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.strikeOff,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 29\n      }\n    }, `${shop.currency} ${values.variant.amount}`), ' ', calculateDiscount(values.variant.amount, values.variant.discountedAmount), \"% OFF\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.customInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.left,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      label: \"Product Unit\",\n      name: \"unit.value\",\n      placeholder: \"0\",\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.right,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      label: \"Product Unit\",\n      name: \"unit.type\",\n      placeholder: \"select\",\n      inputClass: styles.readonlyField,\n      inputProps: {\n        onClick: onUnitSelect\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      role: \"none\",\n      className: styles.chevDown,\n      src: chevDown,\n      alt: \"\",\n      onClick: onUnitSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 25\n      }\n    }))), (values === null || values === void 0 ? void 0 : (_values$unit = values.unit) === null || _values$unit === void 0 ? void 0 : _values$unit.value) > 0 && (values === null || values === void 0 ? void 0 : (_values$unit2 = values.unit) === null || _values$unit2 === void 0 ? void 0 : _values$unit2.type) && (values === null || values === void 0 ? void 0 : (_values$variant3 = values.variant) === null || _values$variant3 === void 0 ? void 0 : _values$variant3.discountedAmount) && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.helperText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 27\n      }\n    }, \"Unit :\", ' ', `${shop.currency}. ${values.variant.discountedAmount} `, ' ', \"Per\", ' ', values.unit.value, ' ', values.unit.type)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Clickable, {\n      onClick: toggleDescription,\n      className: styles.descriptionContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.descriptionHeading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 25\n      }\n    }, \"Product Description\"), (values === null || values === void 0 ? void 0 : (_values$plainDescript = values.plainDescription) === null || _values$plainDescript === void 0 ? void 0 : _values$plainDescript.length) > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.descriptionText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 27\n      }\n    }, values.plainDescription.slice(0, 80), values.plainDescription.length > 80 && /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.descriptionLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 31\n      }\n    }, \"more...\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.descriptionPlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 27\n      }\n    }, \"Describe your product in a few lines\"))), values.productType === 'digital' ? /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(OtherButton, {\n      label: values.links.length > 0 ? 'Edit' : 'Upload Product link',\n      onClick: () => {\n        setOpenUploadDrawer(!openUploadDrawer);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 25\n      }\n    }), openUploadDrawer ? /*#__PURE__*/React.createElement(UploadProduct, {\n      onBack: () => {\n        setOpenUploadDrawer(!openUploadDrawer);\n      },\n      onUpload: onProductUpload(setFieldValue),\n      onSave: () => setOpenUploadDrawer(!openUploadDrawer),\n      digitalProducts: values.links,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 27\n      }\n    }) : '') : '', /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.subTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 23\n      }\n    }, \"1. How many units do you have in stock?\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Radio, {\n      name: \"variant.availableType\",\n      value: \"infinite\",\n      label: \"Always in Stock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Radio, {\n      name: \"variant.availableType\",\n      value: \"finite\",\n      label: \"Limited Stock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 27\n      }\n    })))), (values === null || values === void 0 ? void 0 : (_values$variant4 = values.variant) === null || _values$variant4 === void 0 ? void 0 : _values$variant4.availableType) === 'finite' && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      label: \"Availability\",\n      name: \"variant.available\",\n      placeholder: \"0\",\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: cx(styles.helperText, styles.marginTop),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 25\n      }\n    }, \"Your order will be Out of Stock once Available Quantity becomes 0\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.subTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 23\n      }\n    }, \"2. Collections & Variants\"), (values === null || values === void 0 ? void 0 : (_values$catalogs = values.catalogs) === null || _values$catalogs === void 0 ? void 0 : _values$catalogs.length) > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.catalogBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.catalogRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.catalogCol,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.catalogTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 31\n      }\n    }, \"Selected Collections\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.catalogs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 31\n      }\n    }, values.catalogs.map(c => /*#__PURE__*/React.createElement(Chip, {\n      clearIcon: true,\n      label: c,\n      selected: true,\n      onSelect: () => {\n        setFieldValue('catalogs', values.catalogs.filter(x => x !== c));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 35\n      }\n    })))), /*#__PURE__*/React.createElement(Clickable, {\n      onClick: toggleOpenCatalog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: chevronRight,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 31\n      }\n    })))) : /*#__PURE__*/React.createElement(OtherButton, {\n      label: \"Collections\",\n      onClick: toggleOpenCatalog,\n      from: \"create\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(VariantBlock, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.subTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 23\n      }\n    }, \"3. Other Details\"), /*#__PURE__*/React.createElement(OtherButton, {\n      label: \"Customization\",\n      onClick: toggleOpenCustomiz,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.spacer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(OtherButton, {\n      label: \"More details\",\n      onClick: toggleOpenDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.spacer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 23\n      }\n    }), isUpdate && /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.shareSection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(RatingsShare, {\n      shop: shop,\n      product: product,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Kbc, {\n      type: \"productCreation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 23\n      }\n    })), openCustomiz && /*#__PURE__*/React.createElement(Drawer, {\n      title: \"Customization\",\n      onClose: toggleOpenCustomiz,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: styles.subSection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.subTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 27\n      }\n    }, \"Can this be Customized?\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Radio, {\n      name: \"customizable\",\n      value: \"yes\",\n      label: \"Yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Radio, {\n      name: \"customizable\",\n      value: \"no\",\n      label: \"No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 31\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Save\",\n      onClick: toggleOpenCustomiz,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 27\n      }\n    }))), openDetails && /*#__PURE__*/React.createElement(Drawer, {\n      title: \"More details\",\n      onClose: toggleOpenDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: styles.subSection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.subTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 29\n      }\n    }, \"Are taxes included in the price?\"))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      className: styles.subSection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Rdio, {\n      inputProps: {\n        onChange: () => setFieldValue('taxes.inclusive', true)\n      },\n      label: \"Yes\",\n      value: true,\n      selected: values.taxes.inclusive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      className: styles.subSection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Rdio, {\n      inputProps: {\n        onChange: () => setFieldValue('taxes.inclusive', false)\n      },\n      label: \"No\",\n      value: true,\n      selected: !values.taxes.inclusive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 25\n      }\n    }, (values === null || values === void 0 ? void 0 : (_values$variant5 = values.variant) === null || _values$variant5 === void 0 ? void 0 : _values$variant5.discountedAmount) > 0 && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: cx(styles.helperText, 'marginLLeftRight', styles.marginTop),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 31\n      }\n    }, \"Price to Customer :\", ' ', `${shop.currency} ${calculateTax(taxes, values) || 0}`))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: styles.subSection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 27\n      }\n    }, taxes.map(tax => /*#__PURE__*/React.createElement(TaxCard, {\n      tax: tax,\n      key: tax._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 50\n      }\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: styles.subSection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.subTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 29\n      }\n    }, \"Shipping Time\"), (values === null || values === void 0 ? void 0 : (_values$shippingTime = values.shippingTime) === null || _values$shippingTime === void 0 ? void 0 : (_values$shippingTime$ = _values$shippingTime.from) === null || _values$shippingTime$ === void 0 ? void 0 : _values$shippingTime$.value) && /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.est,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: estimateDelivery,\n      alt: \"\",\n      className: styles.img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 33\n      }\n    }, \"Estimated Delivery Time :\", ' ', values === null || values === void 0 ? void 0 : (_values$shippingTime2 = values.shippingTime) === null || _values$shippingTime2 === void 0 ? void 0 : (_values$shippingTime3 = _values$shippingTime2.from) === null || _values$shippingTime3 === void 0 ? void 0 : _values$shippingTime3.value, ' ', \"-\", ' ', values === null || values === void 0 ? void 0 : (_values$shippingTime4 = values.shippingTime) === null || _values$shippingTime4 === void 0 ? void 0 : (_values$shippingTime5 = _values$shippingTime4.to) === null || _values$shippingTime5 === void 0 ? void 0 : _values$shippingTime5.value, ' ', values === null || values === void 0 ? void 0 : (_values$shippingTime6 = values.shippingTime) === null || _values$shippingTime6 === void 0 ? void 0 : (_values$shippingTime7 = _values$shippingTime6.to) === null || _values$shippingTime7 === void 0 ? void 0 : _values$shippingTime7.type), /*#__PURE__*/React.createElement(\"img\", {\n      src: editIcon,\n      alt: \"\",\n      onClick: toggleShippingTime,\n      className: styles.img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 33\n      }\n    })), !(values !== null && values !== void 0 && (_values$shippingTime8 = values.shippingTime) !== null && _values$shippingTime8 !== void 0 && (_values$shippingTime9 = _values$shippingTime8.from) !== null && _values$shippingTime9 !== void 0 && _values$shippingTime9.value) && /*#__PURE__*/React.createElement(Clickable, {\n      className: styles.shippingTime,\n      onClick: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(OtherButton, {\n      onClick: toggleShippingTime,\n      label: \"Shipping Options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Save\",\n      onClick: () => {\n        toggleOpenDetails();\n      },\n      size: \"large\",\n      bordered: false,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.spacing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Quantity, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 27\n      }\n    })), openShippingTime && /*#__PURE__*/React.createElement(Drawer, {\n      title: \"Shipping Time\",\n      onClose: toggleShippingTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(ShippingTime, {\n      isProduct: true,\n      onBack: toggleShippingTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 29\n      }\n    })))), openCatalog && /*#__PURE__*/React.createElement(Drawer, {\n      title: \"Select Collection\",\n      onClose: toggleOpenCatalog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Catalog, {\n      from: \"product\",\n      selected: values.catalogs,\n      onSelect: catalogs => {\n        setFieldValue('catalogs', catalogs);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Save\",\n      bordered: false,\n      fullWidth: true,\n      onClick: toggleOpenCatalog,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 25\n      }\n    }))), !isUpdate && /*#__PURE__*/React.createElement(FooterButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.btns,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Save as Draft\",\n      size: \"large\",\n      primary: false,\n      onClick: async () => {\n        await toggleIsDraft(true);\n        setFieldValue('status', 'draft');\n\n        try {\n          await draftSchema.validateSync(values);\n        } catch (e) {\n          console.log(e);\n          const [err] = (e === null || e === void 0 ? void 0 : e.errors) || [];\n          SnackBar.show(err || 'Please add all required fields', 'error');\n          return;\n        } // submit form to show field errors\n\n\n        submitForm();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      label: \"Add Product\",\n      size: \"large\",\n      onClick: async () => {\n        await toggleIsDraft(false);\n        setFieldValue('status', 'live');\n\n        try {\n          await productSchema.validateSync(values);\n        } catch (e) {\n          const [err] = (e === null || e === void 0 ? void 0 : e.errors) || [];\n          SnackBar.show(err || 'Please add all required fields', 'error');\n          return;\n        } // submit form to show field errors\n\n\n        submitForm();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 25\n      }\n    }))), isUpdate && (product === null || product === void 0 ? void 0 : product.status) !== 'deleted' && /*#__PURE__*/React.createElement(FooterButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.btnsUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Update Product\",\n      size: \"large\",\n      fullWidth: true,\n      onClick: async () => {\n        const cL = ['live', 'created', 'out of stock', 'draft'];\n\n        if (!cL.includes(product === null || product === void 0 ? void 0 : product.status)) {\n          submitForm();\n          return;\n        }\n\n        await toggleIsDraft(false);\n\n        try {\n          await productSchema.validateSync(values);\n        } catch (e) {\n          const [err] = (e === null || e === void 0 ? void 0 : e.errors) || [];\n          SnackBar.show(err || 'Please add all required fields', 'error');\n          return;\n        } // submit form to show field errors\n\n\n        submitForm();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 25\n      }\n    }))), openUnit && /*#__PURE__*/React.createElement(UnitDrawer, {\n      prefix: \"unit.type\",\n      onClose: toggleUnit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 21\n      }\n    }), openDescription && /*#__PURE__*/React.createElement(DescriptionDraw, {\n      title: \"Add Description\",\n      placeholder: \"Describe your product and what makes it special\",\n      onClose: toggleDescription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 21\n      }\n    }));\n  }))));\n}\n\n_s(CreateProduct, \"N+DuyOuku6xUNyWWMk1nlxGsx5Y=\", false, function () {\n  return [useShop, useDesktop, useParams, useProductDetails, useHistory, useLocation, useToggle, useToggle, useToggle, useToggle, useToggle, useToggle, useIsRatingsEnabled, useShopTaxes, useIsFreePlan, useImagesLength];\n});\n\n_c3 = CreateProduct;\nCreateProduct.propTypes = {};\nCreateProduct.defaultProps = {};\nexport default CreateProduct;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ShippingTime$lazy\");\n$RefreshReg$(_c2, \"ShippingTime\");\n$RefreshReg$(_c3, \"CreateProduct\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/products/CreateProduct.jsx"],"names":["React","lazy","useState","isEmpty","useHistory","useParams","useLocation","Formik","Grid","Button","Chip","Clickable","FormikInput","Switch","ErrorMessage","Radio","calculateDiscount","calculateTax","getInitialValues","getVideosAndImages","marshallPayload","productSchema","draftSchema","Rdio","useImagesLength","useShop","useToggle","Catalog","Drawer","OtherButton","ImagePicker","UnitDrawer","VariantBlock","Quantity","SnackBar","Loader","Becca","useDesktop","useIsRatingsEnabled","useIsFreePlan","Header","inParallelWithLimit","useProductDetails","Loading","DescriptionDraw","cx","EventManager","FooterButton","RatingsShare","DeleteAlert","UploadProduct","useShopTaxes","Kbc","CreateProductDesktop","TaxCard","styles","ShippingTime","CreateProduct","shop","isDesktop","id","product","history","state","isUpdate","openCatalog","toggleOpenCatalog","openDescription","toggleDescription","isDraft","toggleIsDraft","openUnit","toggleUnit","openShippingTime","toggleShippingTime","openCustomiz","toggleOpenCustomiz","openDetails","toggleOpenDetails","isEnabledRatings","isDraftProduct","status","taxes","initialValues","isFreePlan","fileLength","isDigitalProduct","setIsDigitalProduct","openUploadDrawer","setOpenUploadDrawer","onSave","values","variants","sku","show","_id","updateProduct","variant","updateVariant","createVariant","skuId","createProduct","emitEvent","title","goBack","e","showError","hide","onUnitSelect","preventDefault","target","blur","onImageChange","setField","files","videos","images","onProductUpload","getSchema","checkList","includes","section","push","setFieldValue","submitForm","main","productType","activeDigitalProductContainer","digitalProductContainer","enableDigitalText","optionalText","amount","discountedAmount","helperText","currency","strikeOff","customInput","left","right","readonlyField","onClick","chevDown","unit","value","type","descriptionContainer","descriptionHeading","plainDescription","length","descriptionText","slice","descriptionLink","descriptionPlaceholder","links","subTitle","availableType","marginTop","catalogs","catalogBox","catalogRow","catalogCol","catalogTitle","map","c","filter","x","chevronRight","spacer","shareSection","subSection","button","onChange","inclusive","tax","shippingTime","from","est","estimateDelivery","img","to","editIcon","spacing","btns","validateSync","console","log","err","errors","btnsUpdate","cL","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { lazy, useState } from 'react';\nimport { isEmpty } from 'lodash';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport { Grid } from '@material-ui/core';\nimport {\n  Button,\n  Chip,\n  Clickable,\n  FormikInput,\n  Switch,\n} from 'phoenix-components';\nimport estimateDelivery from 'assets/overview/estimateDelivery.svg';\nimport editIcon from 'assets/overview/editIcon.svg';\nimport { ErrorMessage, Radio } from 'phoenix-components/lib/formik';\nimport {\n  calculateDiscount,\n  calculateTax,\n  getInitialValues,\n  getVideosAndImages,\n  marshallPayload,\n  productSchema,\n  draftSchema,\n} from 'components/products/variantUtils';\nimport { Radio as Rdio } from 'phoenix-components';\nimport { useImagesLength, useShop } from 'contexts/userContext';\nimport { useToggle } from 'hooks/common';\nimport Catalog from 'containers/products/Catalog/List';\nimport { Drawer } from 'components/shared/Drawer';\nimport { OtherButton } from 'components/products/OtherButton';\nimport { ImagePicker } from 'components/common/ImagePicker';\nimport { UnitDrawer } from 'components/products/UnitDrawer';\nimport chevronRight from 'assets/v2/common/chevronBlackRight.svg';\nimport { VariantBlock } from 'components/products/VariantBlock';\nimport Quantity from 'components/products/Quantity';\nimport SnackBar from 'services/snackbar';\nimport Loader from 'services/loader';\nimport { Becca } from 'api';\nimport { useDesktop } from 'contexts';\nimport { useIsRatingsEnabled, useIsFreePlan } from 'contexts';\nimport Header from 'containers/products/Header';\nimport { inParallelWithLimit } from 'utils/parallel';\nimport { useProductDetails } from 'components/products/hooks';\nimport { Loading } from 'components/shared/Loading';\nimport { DescriptionDraw } from 'components/products/DescriptionDraw';\nimport cx from 'classnames';\nimport EventManager from 'utils/events';\nimport chevDown from 'assets/v2/settings/paymentModes/chevDown.svg';\nimport { FooterButton } from 'components/common/FooterButton';\nimport { RatingsShare } from 'components/reviewProduct/RatingsShare';\nimport { DeleteAlert } from 'components/shared/DeleteAlert.jsx';\nimport UploadProduct from 'components/products/UploadProduct.jsx';\nimport {\n  useShopTaxes,\n} from 'contexts/userContext';\nimport Kbc from 'components/knowBaseCards/KnowBaseCards.jsx';\nimport CreateProductDesktop from './CreateProductDesktop.jsx';\nimport { TaxCard } from './TaxCard.jsx';\nimport styles from './CreateProduct.module.css';\n\nexport const ShippingTime = lazy(() => import(\n  /* webpackChunkName: \"profile\" */\n  'containers/shippingTime/ShippingTime'\n));\n\nfunction CreateProduct() {\n  const shop = useShop();\n  const isDesktop = useDesktop();\n  const { id } = useParams();\n  const [product] = useProductDetails(id);\n  const history = useHistory();\n  const { state } = useLocation();\n  const isUpdate = !isEmpty(id);\n  const [openCatalog, toggleOpenCatalog] = useToggle(false);\n  const [openDescription, toggleDescription] = useToggle(false);\n  const [isDraft, toggleIsDraft] = useState(false);\n  const [openUnit, toggleUnit] = useToggle(false);\n  const [openShippingTime, toggleShippingTime] = useToggle(false);\n  const [openCustomiz, toggleOpenCustomiz] = useToggle(false);\n  const [openDetails, toggleOpenDetails] = useToggle(false);\n  const isEnabledRatings = useIsRatingsEnabled();\n  const isDraftProduct = product && product.status === 'draft';\n  const taxes = useShopTaxes();\n  const initialValues = getInitialValues({ ...product, ...state }, isUpdate ? [] : taxes);\n  const isFreePlan = useIsFreePlan();\n  const fileLength = useImagesLength(false);\n  const [isDigitalProduct, setIsDigitalProduct] = useState(false);\n  const [openUploadDrawer, setOpenUploadDrawer] = useState(false);\n\n  const onSave = async (values) => {\n    if (isDraftProduct) {\n      values.status = 'live';\n    }\n    const { variants, sku } = marshallPayload(values);\n    Loader.show();\n    try {\n      if (sku._id) {\n        await Becca.updateProduct(sku._id, sku);\n        await inParallelWithLimit(variants, 5, async (variant) => {\n          if (variant._id) {\n            await Becca.updateVariant(variant._id, variant);\n          } else {\n            await Becca.createVariant({\n              skuId: sku._id,\n              ...variant,\n            });\n          }\n        });\n      } else {\n        const { _id } = await Becca.createProduct({\n          ...sku,\n          variants,\n        });\n        sku._id = _id;\n        EventManager.emitEvent('product_created', {\n          id: _id,\n          title: values.title,\n        });\n      }\n      history.goBack();\n      SnackBar.show(\n        `Product ${isUpdate ? 'updated' : 'created'} successfully`,\n        'success',\n      );\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onUnitSelect = (e) => {\n    e.preventDefault();\n    e.target.blur();\n    toggleUnit();\n  };\n\n  const onImageChange = (setField) => (files) => {\n    const { videos, images } = getVideosAndImages(files);\n    setField('images', images);\n    setField('videos', videos);\n  };\n\n  const onProductUpload = (setField) => (files) => setField('links', files);\n\n  const getSchema = () => {\n    const checkList = ['deleted'];\n    if (isUpdate) {\n      if (checkList.includes(product?.status)) {\n        return draftSchema;\n      }\n      return productSchema;\n    }\n    if (isDraft) {\n      return draftSchema;\n    }\n    return productSchema;\n  };\n\n  if (isUpdate && !product) {\n    return <Loading />;\n  }\n\n  return (\n    <>\n      {isDesktop && <CreateProductDesktop />}\n      {!isDesktop && (\n        <>\n          <div className={styles.section}>\n            <Header\n              showFaq={!isEnabledRatings}\n              showLogo={false}\n              onBack={history.goBack}\n              showItems={['products']}\n              title={isUpdate ? 'Update Product' : 'Create Product'}\n              showReview={isUpdate && isEnabledRatings}\n              onReviewClick={() => history.push(`/products/rating/${id}`)}\n            />\n            <Formik\n              initialValues={initialValues}\n              onSubmit={onSave}\n              validationSchema={getSchema()}\n              enableReinitialize={true}\n            >\n              {({ values, setFieldValue, submitForm }) => (\n                <div className={styles.main}>\n                  <ImagePicker\n                    onChange={onImageChange(setFieldValue)}\n                    isMulti={true}\n                    images={[...values.images, ...values.videos]}\n                    accept=\"image/*,video/mp4,video/x-m4v,video/*\"\n                    showCover={true}\n                    size={fileLength}\n                    videos={!isFreePlan}\n                  />\n                  <ErrorMessage name=\"images\" />\n                  <div className={styles.title}>Product Details</div>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                      {isDigitalProduct ? (\n                        <DeleteAlert\n                          title=\"Enable this option only if you’re selling digital\n                            products like e-books, videos & services.\"\n                          subTitle=\"Shipping address for this product will be disabled\n                            on your website.\"\n                          primary=\"CONTINUE\"\n                          secondary=\"Cancel\"\n                          onCancel={() => setIsDigitalProduct(!isDigitalProduct)}\n                          onDelete={() => {\n                            setIsDigitalProduct(!isDigitalProduct);\n                            setFieldValue('productType', 'digital');\n                          }}\n                        />\n                      ) : ''}\n                      <div\n                        className={\n                          values.productType === 'digital'\n                            ? styles.activeDigitalProductContainer\n                            : styles.digitalProductContainer\n                        }\n                      >\n                        <div className=\"flexBetween\">\n                          <p>Digital Product</p>\n                          <Switch\n                            active={values.productType === 'digital'}\n                            onChange={() => {\n                              setIsDigitalProduct(!(values.productType === 'digital'));\n                              setFieldValue(\n                                'productType',\n                                'physical',\n                              );\n                            }}\n                          />\n                        </div>\n                        {values.productType === 'digital' ? (\n                          <p className={styles.enableDigitalText}>\n                            Enable this option if its a digital Product\n                          </p>\n                        ) : (\n                          ''\n                        )}\n                      </div>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <FormikInput\n                        label=\"Product Name\"\n                        name=\"title\"\n                        placeholder=\"Give your product a stand-out name\"\n                      />\n                    </Grid>\n                    <Grid item xs={6}>\n                      <FormikInput\n                        label=\"Price\"\n                        name=\"variant.discountedAmount\"\n                        placeholder=\"e.g. 160\"\n                        type=\"number\"\n                      />\n                    </Grid>\n                    <Grid item xs={6}>\n                      <FormikInput\n                        label=\"Strike-off Price\"\n                        name=\"variant.amount\"\n                        placeholder=\"e.g. 200\"\n                        type=\"number\"\n                      />\n                      <div className={styles.optionalText}>(Optional)</div>\n                    </Grid>\n                    {values?.variant?.amount > 0\n                      && values?.variant?.discountedAmount > 0 && (\n                        <Grid item xs={12}>\n                          <div className={styles.helperText}>\n                            Price to Customer :\n                            {' '}\n                            {`${shop.currency} ${values.variant.discountedAmount}`}\n                            {' '}\n                            <span className={styles.strikeOff}>\n                              {`${shop.currency} ${values.variant.amount}`}\n                            </span>\n                            {' '}\n                            {calculateDiscount(\n                              values.variant.amount,\n                              values.variant.discountedAmount,\n                            )}\n                            % OFF\n                          </div>\n                        </Grid>\n                      )}\n                    <div className={styles.customInput}>\n                      <div className={styles.left}>\n                        <FormikInput\n                          label=\"Product Unit\"\n                          name=\"unit.value\"\n                          placeholder=\"0\"\n                          type=\"number\"\n                        />\n                      </div>\n                      <div className={styles.right}>\n                        <FormikInput\n                          label=\"Product Unit\"\n                          name=\"unit.type\"\n                          placeholder=\"select\"\n                          inputClass={styles.readonlyField}\n                          inputProps={{\n                            onClick: onUnitSelect,\n                          }}\n                        />\n                        <img\n                          role=\"none\"\n                          className={styles.chevDown}\n                          src={chevDown}\n                          alt=\"\"\n                          onClick={onUnitSelect}\n                        />\n                      </div>\n                    </div>\n                    {values?.unit?.value > 0\n                      && values?.unit?.type\n                      && values?.variant?.discountedAmount && (\n                        <Grid item xs={12}>\n                          <div className={styles.helperText}>\n                            Unit :\n                            {' '}\n                            {`${shop.currency}. ${values.variant.discountedAmount} `}\n                            {' '}\n                            Per\n                            {' '}\n                            {values.unit.value}\n                            {' '}\n                            {values.unit.type}\n                          </div>\n                        </Grid>\n                      )}\n                    <Grid item xs={12}>\n                      <Clickable\n                        onClick={toggleDescription}\n                        className={styles.descriptionContainer}\n                      >\n                        <div className={styles.descriptionHeading}>\n                          Product Description\n                        </div>\n                        {values?.plainDescription?.length > 0 ? (\n                          <div className={styles.descriptionText}>\n                            {values.plainDescription.slice(0, 80)}\n                            {values.plainDescription.length > 80 && (\n                              <span className={styles.descriptionLink}>\n                                more...\n                              </span>\n                            )}\n                          </div>\n                        ) : (\n                          <div className={styles.descriptionPlaceholder}>\n                            Describe your product in a few lines\n                          </div>\n                        )}\n                      </Clickable>\n                    </Grid>\n                    {values.productType === 'digital' ? (\n                      <Grid item xs={12}>\n                        <OtherButton\n                          label={values.links.length > 0 ? 'Edit' : 'Upload Product link'}\n                          onClick={() => {\n                            setOpenUploadDrawer(!openUploadDrawer);\n                          }}\n                        />\n                        {openUploadDrawer ? (\n                          <UploadProduct\n                            onBack={() => {\n                              setOpenUploadDrawer(!openUploadDrawer);\n                            }}\n                            onUpload={onProductUpload(setFieldValue)}\n                            onSave={() => setOpenUploadDrawer(!openUploadDrawer)}\n                            digitalProducts={values.links}\n                          />\n                        ) : ''}\n                      </Grid>\n                    ) : (\n                      ''\n                    )}\n                    <Grid item xs={12}>\n                      <div className={styles.subTitle}>\n                        1. How many units do you have in stock?\n                      </div>\n                      <Grid container spacing={2}>\n                        <Grid item xs={5}>\n                          <Radio\n                            name=\"variant.availableType\"\n                            value=\"infinite\"\n                            label=\"Always in Stock\"\n                          />\n                        </Grid>\n                        <Grid item xs={5}>\n                          <Radio\n                            name=\"variant.availableType\"\n                            value=\"finite\"\n                            label=\"Limited Stock\"\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    {values?.variant?.availableType === 'finite' && (\n                      <Grid item xs={12}>\n                        <FormikInput\n                          label=\"Availability\"\n                          name=\"variant.available\"\n                          placeholder=\"0\"\n                          type=\"number\"\n                        />\n                        <div\n                          className={cx(styles.helperText, styles.marginTop)}\n                        >\n                          Your order will be Out of Stock once Available\n                          Quantity becomes 0\n                        </div>\n                      </Grid>\n                    )}\n                    <Grid item xs={12}>\n                      <div className={styles.subTitle}>\n                        2. Collections & Variants\n                      </div>\n                      {values?.catalogs?.length > 0 ? (\n                        <div className={styles.catalogBox}>\n                          <div className={styles.catalogRow}>\n                            <div className={styles.catalogCol}>\n                              <div className={styles.catalogTitle}>\n                                Selected Collections\n                              </div>\n                              <div className={styles.catalogs}>\n                                {values.catalogs.map((c) => (\n                                  <Chip\n                                    clearIcon\n                                    label={c}\n                                    selected={true}\n                                    onSelect={() => {\n                                      setFieldValue(\n                                        'catalogs',\n                                        values.catalogs.filter((x) => x !== c),\n                                      );\n                                    }}\n                                  />\n                                ))}\n                              </div>\n                            </div>\n                            <Clickable onClick={toggleOpenCatalog}>\n                              <img src={chevronRight} alt=\"\" />\n                            </Clickable>\n                          </div>\n                        </div>\n                      ) : (\n                        <OtherButton\n                          label=\"Collections\"\n                          onClick={toggleOpenCatalog}\n                          from=\"create\"\n                        />\n                      )}\n                      <VariantBlock />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <div className={styles.subTitle}>3. Other Details</div>\n                      <OtherButton\n                        label=\"Customization\"\n                        onClick={toggleOpenCustomiz}\n                      />\n                      <div className={styles.spacer} />\n                      <OtherButton\n                        label=\"More details\"\n                        onClick={toggleOpenDetails}\n                      />\n                      <div className={styles.spacer} />\n                      {isUpdate && (\n                        <div className={styles.shareSection}>\n                          <RatingsShare shop={shop} product={product} />\n                        </div>\n                      )}\n                      <Kbc\n                        type=\"productCreation\"\n                      />\n                    </Grid>\n                    {openCustomiz && (\n                      <Drawer\n                        title=\"Customization\"\n                        onClose={toggleOpenCustomiz}\n                      >\n                        <Grid item xs={12} className={styles.subSection}>\n                          <div className={styles.subTitle}>\n                            Can this be Customized?\n                          </div>\n                          <Grid container spacing={2}>\n                            <Grid item xs={4}>\n                              <Radio\n                                name=\"customizable\"\n                                value=\"yes\"\n                                label=\"Yes\"\n                              />\n                            </Grid>\n                            <Grid item xs={4}>\n                              <Radio\n                                name=\"customizable\"\n                                value=\"no\"\n                                label=\"No\"\n                              />\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                        <div className={styles.button}>\n                          <Button\n                            label=\"Save\"\n                            onClick={toggleOpenCustomiz}\n                            size=\"large\"\n                          />\n                        </div>\n                      </Drawer>\n                    )}\n                    {openDetails && (\n                      <Drawer title=\"More details\" onClose={toggleOpenDetails}>\n                        <Grid container>\n                          <Grid item xs={12} className={styles.subSection}>\n                            <div className={styles.subTitle}>Are taxes included in the price?</div>\n                          </Grid>\n                        </Grid>\n                        <Grid container>\n                          <Grid item xs={6} className={styles.subSection}>\n                            <Rdio\n                              inputProps={{\n                                onChange: () => setFieldValue('taxes.inclusive', true),\n                              }}\n                              label=\"Yes\"\n                              value={true}\n                              selected={values.taxes.inclusive}\n                            />\n                            {/* <Radio name=\"taxes.inclusive\" value=\"true\" label=\"Yes\" /> */}\n                          </Grid>\n                          <Grid item xs={6} className={styles.subSection}>\n                            <Rdio\n                              inputProps={{\n                                onChange: () => setFieldValue('taxes.inclusive', false),\n                              }}\n                              label=\"No\"\n                              value={true}\n                              selected={!values.taxes.inclusive}\n                            />\n                            {/* <Radio name=\"taxes.inclusive\" value=\"false\" label=\"No\" /> */}\n                          </Grid>\n                        </Grid>\n                        <Grid container>\n                          {values?.variant?.discountedAmount > 0 && (\n                            <Grid item xs={12}>\n                              <div className={cx(styles.helperText, 'marginLLeftRight', styles.marginTop)}>\n                                Price to Customer :\n                                {' '}\n                                {`${shop.currency} ${calculateTax(taxes, values) || 0}`}\n                              </div>\n                            </Grid>\n                          )}\n                        </Grid>\n                        <Grid container>\n                          <Grid item xs={12} className={styles.subSection}>\n                            {taxes.map((tax) => (<TaxCard tax={tax} key={tax._id} />))}\n                          </Grid>\n                        </Grid>\n                        <Grid container>\n                          <Grid item xs={12} className={styles.subSection}>\n                            <div className={styles.subTitle}>Shipping Time</div>\n                            {values?.shippingTime?.from?.value && (\n                              <div className={styles.est}>\n                                <img\n                                  src={estimateDelivery}\n                                  alt=\"\"\n                                  className={styles.img}\n                                />\n                                <div>\n                                  { }\n                                  Estimated Delivery Time :\n                                  {' '}\n                                  {values?.shippingTime?.from?.value}\n                                  {' '}\n                                  -\n                                  {' '}\n                                  {values?.shippingTime?.to?.value}\n                                  {' '}\n                                  {values?.shippingTime?.to?.type}\n                                </div>\n                                <img\n                                  src={editIcon}\n                                  alt=\"\"\n                                  onClick={toggleShippingTime}\n                                  className={styles.img}\n                                />\n                              </div>\n                            )}\n                            {!values?.shippingTime?.from?.value && (\n                              <Clickable\n                                className={styles.shippingTime}\n                                onClick={() => { }}\n                              >\n                                <OtherButton\n                                  onClick={toggleShippingTime}\n                                  label=\"Shipping Options\"\n                                />\n                              </Clickable>\n                            )}\n                          </Grid>\n                          <div className={styles.button}>\n                            <Button\n                              label=\"Save\"\n                              onClick={() => {\n                                toggleOpenDetails();\n                              }}\n                              size=\"large\"\n                              bordered={false}\n                              fullWidth\n                            />\n                          </div>\n                        </Grid>\n                        <div className={styles.spacing}></div>\n                        <Grid container>\n                          <Quantity />\n                        </Grid>\n                        {openShippingTime && (\n                          <Drawer\n                            title=\"Shipping Time\"\n                            onClose={toggleShippingTime}\n                          >\n                            <ShippingTime\n                              isProduct={true}\n                              onBack={toggleShippingTime}\n                            />\n                          </Drawer>\n                        )}\n                      </Drawer>\n                    )}\n                  </Grid>\n                  {openCatalog && (\n                    <Drawer\n                      title=\"Select Collection\"\n                      onClose={toggleOpenCatalog}\n                    >\n                      <Catalog\n                        from=\"product\"\n                        selected={values.catalogs}\n                        onSelect={(catalogs) => {\n                          setFieldValue('catalogs', catalogs);\n                        }}\n                      />\n                      <div className={styles.button}>\n                        <Button\n                          label=\"Save\"\n                          bordered={false}\n                          fullWidth\n                          onClick={toggleOpenCatalog}\n                          size=\"large\"\n                        />\n                      </div>\n                    </Drawer>\n                  )}\n                  {!isUpdate && (\n                    <FooterButton>\n                      <div className={styles.btns}>\n                        <Button\n                          label=\"Save as Draft\"\n                          size=\"large\"\n                          primary={false}\n                          onClick={async () => {\n                            await toggleIsDraft(true);\n                            setFieldValue('status', 'draft');\n                            try {\n                              await draftSchema.validateSync(values);\n                            } catch (e) {\n                              console.log(e);\n                              const [err] = e?.errors || [];\n                              SnackBar.show(\n                                err || 'Please add all required fields',\n                                'error',\n                              );\n                              return;\n                            }\n                            // submit form to show field errors\n                            submitForm();\n                          }}\n                        />\n                        <Button\n                          label=\"Add Product\"\n                          size=\"large\"\n                          onClick={async () => {\n                            await toggleIsDraft(false);\n                            setFieldValue('status', 'live');\n                            try {\n                              await productSchema.validateSync(values);\n                            } catch (e) {\n                              const [err] = e?.errors || [];\n                              SnackBar.show(\n                                err || 'Please add all required fields',\n                                'error',\n                              );\n                              return;\n                            }\n                            // submit form to show field errors\n                            submitForm();\n                          }}\n                        />\n                      </div>\n                    </FooterButton>\n                  )}\n                  {isUpdate && product?.status !== 'deleted' && (\n                    <FooterButton>\n                      <div className={styles.btnsUpdate}>\n                        <Button\n                          label=\"Update Product\"\n                          size=\"large\"\n                          fullWidth\n                          onClick={async () => {\n                            const cL = [\n                              'live',\n                              'created',\n                              'out of stock',\n                              'draft',\n                            ];\n                            if (!cL.includes(product?.status)) {\n                              submitForm();\n                              return;\n                            }\n                            await toggleIsDraft(false);\n                            try {\n                              await productSchema.validateSync(values);\n                            } catch (e) {\n                              const [err] = e?.errors || [];\n                              SnackBar.show(\n                                err || 'Please add all required fields',\n                                'error',\n                              );\n                              return;\n                            }\n                            // submit form to show field errors\n                            submitForm();\n                          }}\n                        />\n                      </div>\n                    </FooterButton>\n                  )}\n                  {openUnit && (\n                    <UnitDrawer prefix=\"unit.type\" onClose={toggleUnit} />\n                  )}\n                  {openDescription && (\n                    <DescriptionDraw\n                      title=\"Add Description\"\n                      placeholder=\"Describe your product and what makes it special\"\n                      onClose={toggleDescription}\n                    />\n                  )}\n                </div>\n              )}\n            </Formik>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nCreateProduct.propTypes = {};\n\nCreateProduct.defaultProps = {};\n\nexport default CreateProduct;\n"]},"metadata":{},"sourceType":"module"}