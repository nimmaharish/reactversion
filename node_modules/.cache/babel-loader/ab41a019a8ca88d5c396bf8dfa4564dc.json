{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/profile/checkout/PaymentRuleCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField } from 'formik';\nimport { Switch } from 'phoenix-components/lib/formik';\nimport { Clickable, FormikInput } from 'phoenix-components';\nimport { useToggle } from \"../../../hooks/common\";\nimport { useShop } from \"../../../contexts\";\nimport cx from 'classnames';\nimport chevUpIcon from \"../../../assets/v2/settings/paymentModes/chevUp.svg\";\nimport chevDownIcon from \"../../../assets/v2/settings/paymentModes/chevDown.svg\";\nimport styles from \"./PaymentRuleCard.module.css\";\nimport { FEE_TYPES, getRuleSubString, VALUE_TYPES } from \"./paymentRuleUtils\";\nexport function PaymentRuleCard({\n  index,\n  partial\n}) {\n  _s();\n\n  const shop = useShop();\n  const [{\n    value\n  }] = useField(`[${index}]`);\n  const [,, {\n    setValue: setEnabled\n  }] = useField(`[${index}].enabled`);\n  const [{\n    value: feeType\n  },, {\n    setValue: setFeeType\n  }] = useField(`[${index}].advanced.feeType`);\n  const [{\n    value: type\n  },, {\n    setValue: setType\n  }] = useField(`[${index}].advanced.type`);\n  const [open, toggleOpen] = useToggle();\n  const [openAccordion, toggleAccordion] = useToggle();\n  const [openPartialCODAccordion, togglePartialCODAccordion] = useToggle();\n\n  const onChange = (e, value) => {\n    e.stopPropagation();\n    setEnabled(value);\n\n    if (!open && value) {\n      toggleOpen();\n    }\n  };\n\n  const subStr = getRuleSubString(shop.currency, value);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    className: styles.top,\n    onClick: toggleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.titleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, value.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.subTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, subStr)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    name: `[${index}].enabled`,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.chevron,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: open ? chevUpIcon : chevDownIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })))), open && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.subContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    name: `[${index}].cartValue.min`,\n    label: \"Minimum Cart Value (Optional)\",\n    placeholder: `e.g. ${shop.currency} 1000`,\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormikInput, {\n    name: `[${index}].cartValue.max`,\n    label: \"Maximum Cart Value (Optional)\",\n    placeholder: `e.g. ${shop.currency} 5000`,\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.accordion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    className: styles.accordionTop,\n    onClick: toggleAccordion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Advanced Rules\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: openAccordion ? chevUpIcon : chevDownIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  })), openAccordion && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.column,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, FEE_TYPES.map(fee => /*#__PURE__*/React.createElement(Clickable, {\n    key: fee.value,\n    className: cx(styles.tabLined, {\n      [styles.active]: feeType === fee.value\n    }),\n    onClick: () => setFeeType(fee.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 23\n    }\n  }, fee.name))), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.row, styles.row2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, VALUE_TYPES.map(val => /*#__PURE__*/React.createElement(Clickable, {\n    key: val.value,\n    className: cx(styles.tabBlocked, {\n      [styles.active]: type === val.value\n    }),\n    onClick: () => setType(val.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 23\n    }\n  }, val.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.margin12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    name: `[${index}].advanced.value`,\n    label: type === 'percentage' ? 'Percentage Value' : 'Amount',\n    placeholder: type === 'percentage' ? 'e.g. 5%' : 'e.g. 50',\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }), type === 'percentage' && /*#__PURE__*/React.createElement(FormikInput, {\n    name: `[${index}].advanced.maxValue`,\n    label: \"Maximum Amount\",\n    placeholder: \"e.g. 50\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  })))), partial && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.accordion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    className: styles.accordionTop,\n    onClick: togglePartialCODAccordion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"Partial Advance Amount\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: openPartialCODAccordion ? chevUpIcon : chevDownIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  })), openPartialCODAccordion && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.marginTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.margin12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    name: `[${index}].partial.value`,\n    label: \"Percentage Value\",\n    placeholder: \"e.g. 5%\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormikInput, {\n    name: `[${index}].partial.maxValue`,\n    label: \"Maximum Amount (optional)\",\n    placeholder: \"e.g. 50\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }))))));\n}\n\n_s(PaymentRuleCard, \"wPObUmTMalJQtpN8l6AXeQ0s+rQ=\", false, function () {\n  return [useShop, useField, useField, useField, useField, useToggle, useToggle, useToggle];\n});\n\n_c = PaymentRuleCard;\nPaymentRuleCard.propTypes = {\n  index: PropTypes.number.isRequired,\n  partial: PropTypes.bool\n};\nPaymentRuleCard.defaultProps = {\n  partial: false\n};\nPaymentRuleCard.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentRuleCard\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/checkout/PaymentRuleCard.jsx"],"names":["React","PropTypes","useField","Switch","Clickable","FormikInput","useToggle","useShop","cx","styles","FEE_TYPES","getRuleSubString","VALUE_TYPES","PaymentRuleCard","index","partial","shop","value","setValue","setEnabled","feeType","setFeeType","type","setType","open","toggleOpen","openAccordion","toggleAccordion","openPartialCODAccordion","togglePartialCODAccordion","onChange","e","stopPropagation","subStr","currency","container","top","titleContainer","title","name","subTitle","chevron","chevUpIcon","chevDownIcon","subContainer","accordion","accordionTop","heading","column","row","map","fee","tabLined","active","row2","val","tabBlocked","margin12","marginTop","propTypes","number","isRequired","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField } from 'formik';\nimport { Switch } from 'phoenix-components/lib/formik';\nimport { Clickable, FormikInput } from 'phoenix-components';\nimport { useToggle } from 'hooks/common';\nimport { useShop } from 'contexts';\nimport cx from 'classnames';\nimport chevUpIcon from 'assets/v2/settings/paymentModes/chevUp.svg';\nimport chevDownIcon from 'assets/v2/settings/paymentModes/chevDown.svg';\nimport styles from './PaymentRuleCard.module.css';\nimport { FEE_TYPES, getRuleSubString, VALUE_TYPES } from './paymentRuleUtils';\n\nexport function PaymentRuleCard({ index, partial }) {\n  const shop = useShop();\n  const [{ value }] = useField(`[${index}]`);\n  const [,, { setValue: setEnabled }] = useField(`[${index}].enabled`);\n  const [{ value: feeType }, , { setValue: setFeeType }] = useField(`[${index}].advanced.feeType`);\n  const [{ value: type }, , { setValue: setType }] = useField(`[${index}].advanced.type`);\n  const [open, toggleOpen] = useToggle();\n  const [openAccordion, toggleAccordion] = useToggle();\n  const [openPartialCODAccordion, togglePartialCODAccordion] = useToggle();\n\n  const onChange = (e, value) => {\n    e.stopPropagation();\n    setEnabled(value);\n    if (!open && value) {\n      toggleOpen();\n    }\n  };\n\n  const subStr = getRuleSubString(shop.currency, value);\n\n  return (\n    <div className={styles.container}>\n      <Clickable className={styles.top} onClick={toggleOpen}>\n        <div className={styles.titleContainer}>\n          <div className={styles.title}>\n            {value.name}\n          </div>\n          <div className={styles.subTitle}>\n            {subStr}\n          </div>\n        </div>\n        <div>\n          <Switch name={`[${index}].enabled`} onChange={onChange} />\n          <div className={styles.chevron}>\n            <img src={open ? chevUpIcon : chevDownIcon} alt=\"\" />\n          </div>\n        </div>\n      </Clickable>\n      {open && (\n        <>\n          <div className={styles.subContainer}>\n            <FormikInput\n              name={`[${index}].cartValue.min`}\n              label=\"Minimum Cart Value (Optional)\"\n              placeholder={`e.g. ${shop.currency} 1000`}\n              type=\"number\"\n            />\n            <FormikInput\n              name={`[${index}].cartValue.max`}\n              label=\"Maximum Cart Value (Optional)\"\n              placeholder={`e.g. ${shop.currency} 5000`}\n              type=\"number\"\n            />\n          </div>\n          <div className={styles.accordion}>\n            <Clickable className={styles.accordionTop} onClick={toggleAccordion}>\n              <div className={styles.heading}>Advanced Rules</div>\n              <img src={openAccordion ? chevUpIcon : chevDownIcon} alt=\"\" />\n            </Clickable>\n            {openAccordion && (\n              <div>\n                <div className={styles.column}>\n                  <div className={styles.row}>\n                    {FEE_TYPES.map(fee => (\n                      <Clickable\n                        key={fee.value}\n                        className={cx(styles.tabLined, { [styles.active]: feeType === fee.value })}\n                        onClick={() => setFeeType(fee.value)}\n                      >\n                        {fee.name}\n                      </Clickable>\n                    ))}\n                  </div>\n                  <div className={cx(styles.row, styles.row2)}>\n                    {VALUE_TYPES.map(val => (\n                      <Clickable\n                        key={val.value}\n                        className={cx(styles.tabBlocked, { [styles.active]: type === val.value })}\n                        onClick={() => setType(val.value)}\n                      >\n                        {val.name}\n                      </Clickable>\n                    ))}\n                  </div>\n                </div>\n                <div className={styles.margin12}>\n                  <FormikInput\n                    name={`[${index}].advanced.value`}\n                    label={type === 'percentage' ? 'Percentage Value' : 'Amount'}\n                    placeholder={type === 'percentage' ? 'e.g. 5%' : 'e.g. 50'}\n                    type=\"number\"\n                  />\n                  {type === 'percentage' && (\n                    <FormikInput\n                      name={`[${index}].advanced.maxValue`}\n                      label=\"Maximum Amount\"\n                      placeholder=\"e.g. 50\"\n                      type=\"number\"\n                    />\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n          {partial && (\n            <div className={styles.accordion}>\n              <Clickable className={styles.accordionTop} onClick={togglePartialCODAccordion}>\n                <div className={styles.heading}>Partial Advance Amount</div>\n                <img src={openPartialCODAccordion ? chevUpIcon : chevDownIcon} alt=\"\" />\n              </Clickable>\n              {openPartialCODAccordion && (\n                <div className={styles.marginTop}>\n                  <div className={styles.margin12}>\n                    <FormikInput\n                      name={`[${index}].partial.value`}\n                      label=\"Percentage Value\"\n                      placeholder=\"e.g. 5%\"\n                      type=\"number\"\n                    />\n                    <FormikInput\n                      name={`[${index}].partial.maxValue`}\n                      label=\"Maximum Amount (optional)\"\n                      placeholder=\"e.g. 50\"\n                      type=\"number\"\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nPaymentRuleCard.propTypes = {\n  index: PropTypes.number.isRequired,\n  partial: PropTypes.bool,\n};\n\nPaymentRuleCard.defaultProps = {\n  partial: false\n};\n\nPaymentRuleCard.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}