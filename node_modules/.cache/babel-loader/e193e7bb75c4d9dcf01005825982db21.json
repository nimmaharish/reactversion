{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/tax/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, useFormikContext } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { Drawer } from \"../shared/Drawer\";\nimport { SideDrawer } from \"../shared/SideDrawer\";\nimport { useDesktop } from \"../../contexts\";\nimport PropTypes from 'prop-types';\nimport { Button, FormikInput } from 'phoenix-components';\nimport { getInitialValues, schema } from \"./utils\";\nimport styles from \"./List.module.css\";\nexport default function Form({\n  onClose,\n  index\n}) {\n  _s();\n\n  const isDesktop = useDesktop();\n  const history = useHistory();\n  const Component = isDesktop ? SideDrawer : Drawer;\n  const {\n    values: {\n      taxes = []\n    },\n    submitForm: submit\n  } = useFormikContext();\n\n  const closeDraw = () => {\n    history.push('/settings/tax');\n  };\n\n  const onSubmit = async values => {\n    if (index === -1) {\n      taxes.push(values);\n    } else {\n      taxes[index] = values;\n    }\n\n    submit();\n  };\n\n  return /*#__PURE__*/React.createElement(Component, {\n    title: \"Enter Tax Details\",\n    backButton: true,\n    onClose: onClose || closeDraw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    validationSchema: schema,\n    initialValues: getInitialValues(taxes, index),\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, ({\n    submitForm\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    name: \"title\",\n    label: \"Tax Title\",\n    placeholder: \"e.g. GST\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"marginMTopBottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormikInput, {\n    name: \"identifier\",\n    label: \"Tax Identification Number (optional)\",\n    placeholder: \"Mention your unique tax ID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"marginMTopBottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormikInput, {\n    name: \"value\",\n    type: \"number\",\n    label: \"Tax Percentage\",\n    placeholder: \"e.g. 18.5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  })), isDesktop ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.buttonForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    bordered: true,\n    label: \"Save\",\n    size: \"large\",\n    onClick: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.buttonForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    bordered: false,\n    label: \"Save\",\n    size: \"large\",\n    onClick: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  })))));\n}\n\n_s(Form, \"vgBOctJvYa+wZK3DrY2USZRPcLg=\", false, function () {\n  return [useDesktop, useHistory, useFormikContext];\n});\n\n_c = Form;\nForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired\n};\nForm.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/tax/Form.jsx"],"names":["React","Formik","useFormikContext","useHistory","Drawer","SideDrawer","useDesktop","PropTypes","Button","FormikInput","getInitialValues","schema","styles","Form","onClose","index","isDesktop","history","Component","values","taxes","submitForm","submit","closeDraw","push","onSubmit","container","buttonForm","propTypes","func","isRequired","number","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, useFormikContext } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { Drawer } from 'components/shared/Drawer';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { useDesktop } from 'contexts';\nimport PropTypes from 'prop-types';\nimport { Button, FormikInput } from 'phoenix-components';\nimport { getInitialValues, schema } from './utils';\nimport styles from './List.module.css';\n\nexport default function Form({ onClose, index }) {\n  const isDesktop = useDesktop();\n  const history = useHistory();\n  const Component = isDesktop ? SideDrawer : Drawer;\n  const { values: { taxes = [] }, submitForm: submit } = useFormikContext();\n  const closeDraw = () => {\n    history.push('/settings/tax');\n  };\n\n  const onSubmit = async (values) => {\n    if (index === -1) {\n      taxes.push(values);\n    } else {\n      taxes[index] = values;\n    }\n    submit();\n  };\n\n  return (\n    <Component\n      title=\"Enter Tax Details\"\n      backButton={true}\n      onClose={onClose || closeDraw}\n    >\n      <Formik\n        validationSchema={schema}\n        initialValues={getInitialValues(taxes, index)}\n        onSubmit={onSubmit}\n      >\n        {({ submitForm }) => (\n          <>\n            <div className={styles.container}>\n              <FormikInput\n                name=\"title\"\n                label=\"Tax Title\"\n                placeholder=\"e.g. GST\" />\n              <div className=\"marginMTopBottom\"></div>\n              <FormikInput\n                name=\"identifier\"\n                label=\"Tax Identification Number (optional)\"\n                placeholder=\"Mention your unique tax ID\"\n              />\n              <div className=\"marginMTopBottom\"></div>\n              <FormikInput\n                name=\"value\"\n                type=\"number\"\n                label=\"Tax Percentage\"\n                placeholder=\"e.g. 18.5\"\n              />\n            </div>\n            {isDesktop ? (\n              <div className={styles.buttonForm}>\n                <Button\n                  bordered={true}\n                  label=\"Save\"\n                  size=\"large\"\n                  onClick={submitForm}\n                />\n              </div>\n            ) : (\n              <div className={styles.buttonForm}>\n                <Button\n                  fullWidth\n                  bordered={false}\n                  label=\"Save\"\n                  size=\"large\"\n                  onClick={submitForm}\n\n                />\n              </div>\n            )}\n          </>\n        )}\n      </Formik>\n    </Component>\n  );\n}\n\nForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nForm.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}