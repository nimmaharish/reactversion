{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/profile/helloBar/ActionButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Clickable, FormikInput } from 'phoenix-components';\nimport { useToggle } from \"../../../hooks/common\";\nimport { useField } from 'formik';\nimport editIcon from \"../../../assets/overview/edit.svg\";\nimport touchIcon from \"../../../assets/overview/touch.svg\";\nimport { ColorDialog } from \"../../common/ColorDialog\";\nimport addIcon from \"../../../assets/overview/addIcon.svg\";\nimport styles from \"./ActionButton.module.css\";\nexport function ActionButton() {\n  _s();\n\n  const [openColorPicker, toggleColorPicker] = useToggle();\n  const [openBgColorPicker, toggleBgColorPicker] = useToggle();\n  const [{\n    value: color\n  },, {\n    setValue: setColor\n  }] = useField('button.color');\n  const [{\n    value: bgColor\n  },, {\n    setValue: setBgColor\n  }] = useField('button.backgroundColor');\n\n  const setColorValue = value => {\n    setColor(value);\n    toggleColorPicker();\n  };\n\n  const setBgColorValue = value => {\n    setBgColor(value);\n    toggleBgColorPicker();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.hintContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: touchIcon,\n    className: styles.imgH,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.hintText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Add button to your Hello Bar and land your customers directly on the specific products.\")), /*#__PURE__*/React.createElement(FormikInput, {\n    name: \"button.text\",\n    label: \"Button Text\",\n    placeholder: \"e.g. Shop Now\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.textColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Text Color\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Clickable, {\n    onClick: toggleColorPicker,\n    className: \"flexCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, (color === null || color === void 0 ? void 0 : color.length) > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.colorBox,\n    style: {\n      backgroundColor: color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: editIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: addIcon,\n    alt: \"\",\n    className: styles.imgA,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }), \"Pick Color\"))), openColorPicker && /*#__PURE__*/React.createElement(ColorDialog, {\n    onChange: setColorValue,\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.textColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Background Color\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Clickable, {\n    onClick: toggleBgColorPicker,\n    className: \"flexCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, (bgColor === null || bgColor === void 0 ? void 0 : bgColor.length) > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.colorBox,\n    style: {\n      backgroundColor: bgColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: editIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: addIcon,\n    alt: \"\",\n    className: styles.imgA,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }), \"Pick Color\"))), openBgColorPicker && /*#__PURE__*/React.createElement(ColorDialog, {\n    onChange: setBgColorValue,\n    color: bgColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormikInput, {\n    name: \"button.url\",\n    label: \"Link\",\n    placeholder: \"e.g. https://dummytext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(ActionButton, \"0EtNgWJ1apEwD0pKhu0edy2uwzM=\", false, function () {\n  return [useToggle, useToggle, useField, useField];\n});\n\n_c = ActionButton;\nActionButton.propTypes = {};\nActionButton.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"ActionButton\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/profile/helloBar/ActionButton.jsx"],"names":["React","Clickable","FormikInput","useToggle","useField","ColorDialog","styles","ActionButton","openColorPicker","toggleColorPicker","openBgColorPicker","toggleBgColorPicker","value","color","setValue","setColor","bgColor","setBgColor","setColorValue","setBgColorValue","container","hintContainer","touchIcon","imgH","hintText","textColor","title","length","colorBox","backgroundColor","editIcon","addIcon","imgA","inputContainer","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Clickable, FormikInput } from 'phoenix-components';\nimport { useToggle } from 'hooks/common';\nimport { useField } from 'formik';\nimport editIcon from 'assets/overview/edit.svg';\nimport touchIcon from 'assets/overview/touch.svg';\nimport { ColorDialog } from 'components/common/ColorDialog';\nimport addIcon from 'assets/overview/addIcon.svg';\nimport styles from './ActionButton.module.css';\n\nexport function ActionButton() {\n  const [openColorPicker, toggleColorPicker] = useToggle();\n  const [openBgColorPicker, toggleBgColorPicker] = useToggle();\n  const [{ value: color },, { setValue: setColor }] = useField('button.color');\n  const [{ value: bgColor },, { setValue: setBgColor }] = useField('button.backgroundColor');\n\n  const setColorValue = (value) => {\n    setColor(value);\n    toggleColorPicker();\n  };\n  const setBgColorValue = (value) => {\n    setBgColor(value);\n    toggleBgColorPicker();\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.hintContainer}>\n        <img\n          src={touchIcon}\n          className={styles.imgH}\n          alt=\"\" />\n        <div className={styles.hintText}>\n          Add button to your Hello Bar and land your\n          customers directly on the specific products.\n        </div>\n      </div>\n      <FormikInput\n        name=\"button.text\"\n        label=\"Button Text\"\n        placeholder=\"e.g. Shop Now\"\n      />\n      <div className={styles.textColor}>\n        <div className={styles.title}>\n          Text Color\n        </div>\n        <div className=\"spacer\" />\n        <Clickable\n          onClick={toggleColorPicker}\n          className=\"flexCenter\"\n        >\n          {color?.length > 0 ? (\n            <>\n              <div className={styles.colorBox} style={{ backgroundColor: color }} />\n              <img src={editIcon} alt=\"\" />\n            </>\n          ) : (\n            <>\n              <img\n                src={addIcon}\n                alt=\"\"\n                className={styles.imgA}\n              />\n              Pick Color\n            </>\n          )}\n        </Clickable>\n      </div>\n      {openColorPicker && (\n        <ColorDialog onChange={setColorValue} color={color} />\n      )}\n      <div className={styles.textColor}>\n        <div className={styles.title}>\n          Background Color\n        </div>\n        <div className=\"spacer\" />\n        <Clickable\n          onClick={toggleBgColorPicker}\n          className=\"flexCenter\"\n        >\n          {bgColor?.length > 0 ? (\n            <>\n              <div className={styles.colorBox} style={{ backgroundColor: bgColor }} />\n              <img src={editIcon} alt=\"\" />\n            </>\n          ) : (\n            <>\n              <img\n                src={addIcon}\n                alt=\"\"\n                className={styles.imgA}\n              />\n              Pick Color\n            </>\n          )}\n        </Clickable>\n      </div>\n      {openBgColorPicker && (\n        <ColorDialog onChange={setBgColorValue} color={bgColor} />\n      )}\n      <div className={styles.inputContainer}>\n      </div>\n      <FormikInput\n        name=\"button.url\"\n        label=\"Link\"\n        placeholder=\"e.g. https://dummytext\"\n      />\n    </div>\n\n  );\n}\n\nActionButton.propTypes = {};\n\nActionButton.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}