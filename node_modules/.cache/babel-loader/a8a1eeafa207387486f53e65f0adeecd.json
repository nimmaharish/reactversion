{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/layouts/LoggedInWeb.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Loading } from \"../components/shared/Loading\";\nimport { useQueryParams } from \"../hooks\";\nimport { useHistory } from 'react-router-dom';\nimport URL from \"../utils/url\";\nimport Storage from \"../services/storage\";\nimport { WebContext } from \"../contexts/webContext\";\nimport Container from \"../containers/web/Container\";\n\nfunction LoggedInWeb() {\n  _s();\n\n  const params = useQueryParams();\n  const history = useHistory();\n  const [state, setState] = useState(null);\n  useEffect(() => {\n    if (!params.has('token')) {\n      history.replace({\n        search: ''\n      });\n      return;\n    }\n\n    try {\n      const {\n        token,\n        ...data\n      } = URL.getTokenData(params.get('token'));\n\n      if (!token) {\n        return;\n      }\n\n      setState(data);\n\n      if (token !== Storage.getItem('token')) {\n        Storage.setItem('token', token);\n      }\n\n      history.replace({\n        search: ''\n      });\n    } catch (e) {\n      history.replace({\n        search: ''\n      });\n    }\n  }, []);\n\n  if (params.has('token')) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(WebContext.Provider, {\n    value: {\n      data: state\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(LoggedInWeb, \"52jaqO/uylQkB9ROfodBoDk7tRw=\", false, function () {\n  return [useQueryParams, useHistory];\n});\n\n_c = LoggedInWeb;\nLoggedInWeb.propTypes = {};\nLoggedInWeb.defaultProps = {};\nexport default LoggedInWeb;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggedInWeb\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/layouts/LoggedInWeb.jsx"],"names":["React","useEffect","useState","Loading","useQueryParams","useHistory","URL","Storage","WebContext","Container","LoggedInWeb","params","history","state","setState","has","replace","search","token","data","getTokenData","get","getItem","setItem","e","propTypes","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT;AACA,SAASC,cAAT;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,GAAP;AACA,OAAOC,OAAP;AACA,SAASC,UAAT;AACA,OAAOC,SAAP;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAMC,MAAM,GAAGP,cAAc,EAA7B;AACA,QAAMQ,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACU,MAAM,CAACI,GAAP,CAAW,OAAX,CAAL,EAA0B;AACxBH,MAAAA,OAAO,CAACI,OAAR,CAAgB;AACdC,QAAAA,MAAM,EAAE;AADM,OAAhB;AAGA;AACD;;AACD,QAAI;AACF,YAAM;AAAEC,QAAAA,KAAF;AAAS,WAAGC;AAAZ,UAAqBb,GAAG,CAACc,YAAJ,CAAiBT,MAAM,CAACU,GAAP,CAAW,OAAX,CAAjB,CAA3B;;AACA,UAAI,CAACH,KAAL,EAAY;AACV;AACD;;AACDJ,MAAAA,QAAQ,CAACK,IAAD,CAAR;;AACA,UAAID,KAAK,KAAKX,OAAO,CAACe,OAAR,CAAgB,OAAhB,CAAd,EAAwC;AACtCf,QAAAA,OAAO,CAACgB,OAAR,CAAgB,OAAhB,EAAyBL,KAAzB;AACD;;AACDN,MAAAA,OAAO,CAACI,OAAR,CAAgB;AACdC,QAAAA,MAAM,EAAE;AADM,OAAhB;AAGD,KAZD,CAYE,OAAOO,CAAP,EAAU;AACVZ,MAAAA,OAAO,CAACI,OAAR,CAAgB;AACdC,QAAAA,MAAM,EAAE;AADM,OAAhB;AAGD;AACF,GAxBQ,EAwBN,EAxBM,CAAT;;AA0BA,MAAIN,MAAM,CAACI,GAAP,CAAW,OAAX,CAAJ,EAAyB;AACvB,wBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAED,sBACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAEI,MAAAA,IAAI,EAAEN;AAAR,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;GA1CQH,W;UACQN,c,EACCC,U;;;KAFTK,W;AA4CTA,WAAW,CAACe,SAAZ,GAAwB,EAAxB;AAEAf,WAAW,CAACgB,YAAZ,GAA2B,EAA3B;AAEA,eAAehB,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Loading } from 'components/shared/Loading';\nimport { useQueryParams } from 'hooks';\nimport { useHistory } from 'react-router-dom';\nimport URL from 'utils/url';\nimport Storage from 'services/storage';\nimport { WebContext } from 'contexts/webContext';\nimport Container from 'containers/web/Container';\n\nfunction LoggedInWeb() {\n  const params = useQueryParams();\n  const history = useHistory();\n  const [state, setState] = useState(null);\n\n  useEffect(() => {\n    if (!params.has('token')) {\n      history.replace({\n        search: '',\n      });\n      return;\n    }\n    try {\n      const { token, ...data } = URL.getTokenData(params.get('token'));\n      if (!token) {\n        return;\n      }\n      setState(data);\n      if (token !== Storage.getItem('token')) {\n        Storage.setItem('token', token);\n      }\n      history.replace({\n        search: '',\n      });\n    } catch (e) {\n      history.replace({\n        search: '',\n      });\n    }\n  }, []);\n\n  if (params.has('token')) {\n    return (\n      <Loading />\n    );\n  }\n\n  return (\n    <WebContext.Provider value={{ data: state }}>\n      <Container />\n    </WebContext.Provider>\n  );\n}\n\nLoggedInWeb.propTypes = {};\n\nLoggedInWeb.defaultProps = {};\n\nexport default LoggedInWeb;\n"]},"metadata":{},"sourceType":"module"}