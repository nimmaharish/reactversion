{"ast":null,"code":"import moment from 'moment';\nimport _ from 'lodash';\nexport const FilterMap = {\n  all: {\n    status: {\n      $nin: ['cart cancelled']\n    }\n  },\n  active: {\n    status: {\n      $nin: ['cancelled', 'delivered', 'rto delivered', 'cart cancelled', 'payment pending', 'payment custom', 'picked up', 'payment cod']\n    }\n  },\n  cancelled: {\n    status: {\n      $in: ['cart cancelled', 'cancelled']\n    }\n  },\n  delivered: [{\n    status: {\n      $in: ['delivered', 'rto delivered']\n    }\n  }, {\n    'shippingGroups.status': {\n      $in: ['delivered', 'rto delivered']\n    }\n  }],\n  incart: {\n    status: {\n      $in: ['payment pending', 'payment custom', 'payment cod']\n    },\n    paid: {\n      $eq: 0\n    }\n  },\n  confirmed: [{\n    status: {\n      $in: ['confirmed']\n    }\n  }, {\n    'items.status': {\n      $in: ['confirmed']\n    }\n  }],\n  transit: {\n    'shippingGroups.status': {\n      $in: ['in transit', 'rto in transit', 'shipped', 'picked up', 'processing', 'out for delivery']\n    }\n  },\n  payment_pending: {\n    status: {\n      $in: ['payment pending', 'payment custom', 'payment cod']\n    }\n  },\n  payment_success: {\n    status: {\n      $in: ['payment successful']\n    }\n  },\n  payment_cod: {\n    status: {\n      $in: ['payment cod']\n    }\n  },\n  ready_to_ship: {\n    'shippingGroups.status': {\n      $in: ['ready to ship']\n    }\n  }\n};\nexport const placedList = [{\n  label: 'All',\n  value: 'all'\n}, {\n  label: 'Today',\n  value: 'today'\n}, {\n  label: 'Yesterday',\n  value: 'yesterday'\n}, {\n  label: 'Last Week',\n  value: 'week'\n}, {\n  label: 'Last Month',\n  value: 'month'\n}, {\n  label: 'Last 3 Months',\n  value: '3mon'\n}, {\n  label: 'Last 6 Months',\n  value: '6mon'\n}, {\n  label: 'Last Year',\n  value: 'year'\n}];\nexport const formatDate = (from, to) => {\n  if (from && !to) {\n    return {\n      createdAt: {\n        $gte: from\n      }\n    };\n  }\n\n  if (!from && to) {\n    return {\n      createdAt: {\n        $lte: to\n      }\n    };\n  }\n\n  return {\n    createdAt: {\n      $gte: from,\n      $lte: to\n    }\n  };\n};\nexport const dateFilters = {\n  all: null,\n  today: formatDate(moment().startOf('day')),\n  yesterday: formatDate(moment().startOf('day').add(-1, 'day'), moment().startOf('day')),\n  week: formatDate(moment().add(-1, 'week'), moment().endOf('day')),\n  month: formatDate(moment().add(-1, 'month'), moment().endOf('day')),\n  '3mon': formatDate(moment().add(-3, 'month'), moment().endOf('day')),\n  '6mon': formatDate(moment().add(-6, 'month'), moment().endOf('day')),\n  year: formatDate(moment().add(-1, 'year'), moment().endOf('day'))\n};\nexport const orderShippingStatusLabels = [{\n  label: 'Not Shipped',\n  value: 'not_shipped'\n}, {\n  label: 'Dispatch Ready',\n  value: 'dispatch_ready'\n}, {\n  label: 'In Transit',\n  value: 'in_transit'\n}, {\n  label: 'Out for Delivery',\n  value: 'out_for_delivery'\n}, {\n  label: 'Delivery Failed',\n  value: 'failed_delivery'\n}, {\n  label: 'Delivered',\n  value: 'delivered'\n}, {\n  label: 'Returned',\n  value: 'returned'\n}, {\n  label: 'Ready for Pickup',\n  value: 'ready_for_pickup'\n}, {\n  label: 'Customer Picked-up',\n  value: 'customer_picked_up'\n}, {\n  label: 'Pick-up Delayed',\n  value: 'pickup_delayed'\n}, {\n  label: 'Pick-up Failed',\n  value: 'pickup_failed'\n}, {\n  label: 'Pick-up Rescheduled',\n  value: 'pickup_rescheduled'\n}, {\n  label: 'Shipping Rescheduled',\n  value: 'shipping_rescheduled'\n}, {\n  label: 'Shipping Delayed',\n  value: 'shipping_delayed'\n}, {\n  label: 'Shipping Failed',\n  value: 'shipping_pending'\n}];\nexport const orderStatusLabels = [{\n  label: 'Accepted',\n  value: 'confirmed'\n}, {\n  label: 'Received',\n  value: 'created'\n}, {\n  label: 'Rejected',\n  value: 'rejected'\n}, {\n  label: 'Cancelled',\n  value: 'cancelled'\n}, {\n  label: 'In Progress',\n  value: 'in_progress'\n}, {\n  label: 'Completed',\n  value: 'completed'\n}, {\n  label: 'Archived',\n  value: 'archived'\n}];\nexport const paymentStatusLabels = [{\n  label: 'Paid',\n  value: 'payment_successful'\n}, {\n  label: 'Pending',\n  value: 'payment_pending'\n}, {\n  label: 'Not Paid',\n  value: 'not_paid'\n}, {\n  label: 'Failed',\n  value: 'payment_failed'\n}, {\n  label: 'Refund Initiated',\n  value: 'refund_initiated'\n}, {\n  label: 'Refunded',\n  value: 'refunded'\n}, {\n  label: 'Partial Paid',\n  value: 'payment_partial'\n}, {\n  label: 'Partial refunded',\n  value: 'partial_refunded'\n}];\nexport const osFilterMap = {\n  confirmed: ['confirmed'],\n  created: ['created'],\n  rejected: ['rejected'],\n  cancelled: ['cancelled'],\n  in_progress: ['in progress'],\n  completed: ['completed'],\n  archived: ['archived']\n};\nexport const psFilterMap = {\n  payment_successful: ['payment successful'],\n  payment_pending: ['payment custom', 'payment cod', 'payment pending'],\n  not_paid: ['not paid'],\n  payment_failed: ['payment failed'],\n  refund_initiated: ['refund initiated'],\n  refunded: ['refunded'],\n  payment_partial: ['payment partial'],\n  partial_refunded: ['partial refunded']\n};\nexport const ssFilterMap = {\n  not_shipped: ['not shipped'],\n  dispatch_ready: ['dispatch ready'],\n  in_transit: ['in transit'],\n  out_for_delivery: ['out for delivery'],\n  failed_delivery: ['failed delivery'],\n  delivered: ['delivered'],\n  returned: ['returned'],\n  ready_for_pickup: ['ready for pickup'],\n  customer_picked_up: ['customer picked up'],\n  pickup_delayed: ['pickup delayed'],\n  pickup_failed: ['pickup defailedlayed'],\n  pickup_rescheduled: ['pickup rescheduled'],\n  shipping_rescheduled: ['shipping rescheduled'],\n  shipping_delayed: ['shipping delayed'],\n  shipping_pending: ['shipping pending']\n};\nexport const osStatusFilters = queryString => {\n  const selected = !_.isEmpty(queryString) ? queryString.split(',') : [];\n  const items = selected.map(y => osFilterMap[y]);\n\n  if (!_.isEmpty(items)) {\n    return {\n      orderStatus: _.flatten(items)\n    };\n  }\n\n  return {};\n};\nexport const psStatusFilters = queryString => {\n  const selected = !_.isEmpty(queryString) ? queryString.split(',') : [];\n  const items = selected.map(y => psFilterMap[y]);\n\n  if (!_.isEmpty(items)) {\n    return {\n      paymentStatus: _.flatten(items)\n    };\n  }\n\n  return {};\n};\nexport const ssStatusFilters = queryString => {\n  const selected = !_.isEmpty(queryString) ? queryString.split(',') : [];\n  const items = selected.map(y => ssFilterMap[y]);\n\n  if (!_.isEmpty(items)) {\n    return {\n      shippingStatus: _.flatten(items)\n    };\n  }\n\n  return {};\n};","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/orders/utils.js"],"names":["moment","_","FilterMap","all","status","$nin","active","cancelled","$in","delivered","incart","paid","$eq","confirmed","transit","payment_pending","payment_success","payment_cod","ready_to_ship","placedList","label","value","formatDate","from","to","createdAt","$gte","$lte","dateFilters","today","startOf","yesterday","add","week","endOf","month","year","orderShippingStatusLabels","orderStatusLabels","paymentStatusLabels","osFilterMap","created","rejected","in_progress","completed","archived","psFilterMap","payment_successful","not_paid","payment_failed","refund_initiated","refunded","payment_partial","partial_refunded","ssFilterMap","not_shipped","dispatch_ready","in_transit","out_for_delivery","failed_delivery","returned","ready_for_pickup","customer_picked_up","pickup_delayed","pickup_failed","pickup_rescheduled","shipping_rescheduled","shipping_delayed","shipping_pending","osStatusFilters","queryString","selected","isEmpty","split","items","map","y","orderStatus","flatten","psStatusFilters","paymentStatus","ssStatusFilters","shippingStatus"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport _ from 'lodash';\n\nexport const FilterMap = {\n  all: {\n    status: {\n      $nin: ['cart cancelled']\n    }\n  },\n  active: {\n    status: {\n      $nin: ['cancelled',\n        'delivered', 'rto delivered', 'cart cancelled', 'payment pending',\n        'payment custom', 'picked up', 'payment cod']\n    }\n  },\n  cancelled: {\n    status: {\n      $in: ['cart cancelled', 'cancelled']\n    }\n  },\n  delivered: [\n    {\n      status: {\n        $in: ['delivered', 'rto delivered']\n      }\n    },\n    {\n      'shippingGroups.status': {\n        $in: ['delivered', 'rto delivered']\n      }\n    }\n  ],\n  incart: {\n    status: {\n      $in: ['payment pending', 'payment custom', 'payment cod']\n    },\n    paid: {\n      $eq: 0,\n    }\n  },\n  confirmed: [\n    {\n      status: {\n        $in: ['confirmed']\n      }\n    },\n    {\n      'items.status': {\n        $in: ['confirmed']\n      }\n    }\n  ],\n  transit: {\n    'shippingGroups.status': {\n      $in: ['in transit', 'rto in transit', 'shipped', 'picked up', 'processing', 'out for delivery']\n    }\n  },\n  payment_pending: {\n    status: {\n      $in: ['payment pending', 'payment custom', 'payment cod']\n    }\n  },\n  payment_success: {\n    status: {\n      $in: ['payment successful']\n    }\n  },\n  payment_cod: {\n    status: {\n      $in: ['payment cod']\n    }\n  },\n  ready_to_ship: {\n    'shippingGroups.status': {\n      $in: ['ready to ship']\n    }\n  },\n};\n\nexport const placedList = [\n  {\n    label: 'All',\n    value: 'all',\n  },\n  {\n    label: 'Today',\n    value: 'today',\n  },\n  {\n    label: 'Yesterday',\n    value: 'yesterday',\n  },\n  {\n    label: 'Last Week',\n    value: 'week',\n  },\n  {\n    label: 'Last Month',\n    value: 'month',\n  },\n  {\n    label: 'Last 3 Months',\n    value: '3mon',\n  },\n  {\n    label: 'Last 6 Months',\n    value: '6mon',\n  },\n  {\n    label: 'Last Year',\n    value: 'year',\n  }\n];\n\nexport const formatDate = (from, to) => {\n  if (from && !to) {\n    return { createdAt: { $gte: from } };\n  }\n  if (!from && to) {\n    return { createdAt: { $lte: to } };\n  }\n\n  return { createdAt: { $gte: from, $lte: to } };\n};\n\nexport const dateFilters = {\n  all: null,\n  today: formatDate(moment().startOf('day')),\n  yesterday: formatDate(moment().startOf('day').add(-1, 'day'), moment().startOf('day')),\n  week: formatDate(moment().add(-1, 'week'), moment().endOf('day')),\n  month: formatDate(moment().add(-1, 'month'), moment().endOf('day')),\n  '3mon': formatDate(moment().add(-3, 'month'), moment().endOf('day')),\n  '6mon': formatDate(moment().add(-6, 'month'), moment().endOf('day')),\n  year: formatDate(moment().add(-1, 'year'), moment().endOf('day')),\n};\n\nexport const orderShippingStatusLabels = [\n  {\n    label: 'Not Shipped',\n    value: 'not_shipped',\n  },\n  {\n    label: 'Dispatch Ready',\n    value: 'dispatch_ready',\n  },\n  {\n    label: 'In Transit',\n    value: 'in_transit',\n  },\n  {\n    label: 'Out for Delivery',\n    value: 'out_for_delivery',\n  },\n  {\n    label: 'Delivery Failed',\n    value: 'failed_delivery',\n  },\n  {\n    label: 'Delivered',\n    value: 'delivered',\n  },\n  {\n    label: 'Returned',\n    value: 'returned',\n  },\n  {\n    label: 'Ready for Pickup',\n    value: 'ready_for_pickup',\n  },\n  {\n    label: 'Customer Picked-up',\n    value: 'customer_picked_up',\n  },\n  {\n    label: 'Pick-up Delayed',\n    value: 'pickup_delayed',\n  },\n  {\n    label: 'Pick-up Failed',\n    value: 'pickup_failed',\n  },\n  {\n    label: 'Pick-up Rescheduled',\n    value: 'pickup_rescheduled',\n  },\n  {\n    label: 'Shipping Rescheduled',\n    value: 'shipping_rescheduled',\n  },\n  {\n    label: 'Shipping Delayed',\n    value: 'shipping_delayed',\n  },\n  {\n    label: 'Shipping Failed',\n    value: 'shipping_pending',\n  },\n];\n\nexport const orderStatusLabels = [\n  {\n    label: 'Accepted',\n    value: 'confirmed',\n  },\n  {\n    label: 'Received',\n    value: 'created',\n  },\n  {\n    label: 'Rejected',\n    value: 'rejected',\n  },\n  {\n    label: 'Cancelled',\n    value: 'cancelled',\n  },\n  {\n    label: 'In Progress',\n    value: 'in_progress',\n  },\n  {\n    label: 'Completed',\n    value: 'completed',\n  },\n  {\n    label: 'Archived',\n    value: 'archived',\n  },\n];\n\nexport const paymentStatusLabels = [\n  {\n    label: 'Paid',\n    value: 'payment_successful',\n  },\n  {\n    label: 'Pending',\n    value: 'payment_pending',\n  },\n  {\n    label: 'Not Paid',\n    value: 'not_paid',\n  },\n  {\n    label: 'Failed',\n    value: 'payment_failed',\n  },\n  {\n    label: 'Refund Initiated',\n    value: 'refund_initiated',\n  },\n  {\n    label: 'Refunded',\n    value: 'refunded',\n  },\n  {\n    label: 'Partial Paid',\n    value: 'payment_partial',\n  },\n  {\n    label: 'Partial refunded',\n    value: 'partial_refunded',\n  },\n];\n\nexport const osFilterMap = {\n  confirmed: ['confirmed'],\n  created: ['created'],\n  rejected: ['rejected'],\n  cancelled: ['cancelled'],\n  in_progress: ['in progress'],\n  completed: ['completed'],\n  archived: ['archived']\n};\n\nexport const psFilterMap = {\n  payment_successful: ['payment successful'],\n  payment_pending: ['payment custom', 'payment cod', 'payment pending'],\n  not_paid: ['not paid'],\n  payment_failed: ['payment failed'],\n  refund_initiated: ['refund initiated'],\n  refunded: ['refunded'],\n  payment_partial: ['payment partial'],\n  partial_refunded: ['partial refunded'],\n};\n\nexport const ssFilterMap = {\n  not_shipped: ['not shipped'],\n  dispatch_ready: ['dispatch ready'],\n  in_transit: ['in transit'],\n  out_for_delivery: ['out for delivery'],\n  failed_delivery: ['failed delivery'],\n  delivered: ['delivered'],\n  returned: ['returned'],\n  ready_for_pickup: ['ready for pickup'],\n  customer_picked_up: ['customer picked up'],\n  pickup_delayed: ['pickup delayed'],\n  pickup_failed: ['pickup defailedlayed'],\n  pickup_rescheduled: ['pickup rescheduled'],\n  shipping_rescheduled: ['shipping rescheduled'],\n  shipping_delayed: ['shipping delayed'],\n  shipping_pending: ['shipping pending'],\n};\n\nexport const osStatusFilters = (queryString) => {\n  const selected = !_.isEmpty(queryString) ? queryString.split(',') : [];\n  const items = selected.map(y => osFilterMap[y]);\n  if (!_.isEmpty(items)) {\n    return ({ orderStatus: _.flatten(items) });\n  }\n  return {};\n};\n\nexport const psStatusFilters = (queryString) => {\n  const selected = !_.isEmpty(queryString) ? queryString.split(',') : [];\n  const items = selected.map(y => psFilterMap[y]);\n  if (!_.isEmpty(items)) {\n    return ({ paymentStatus: _.flatten(items) });\n  }\n  return {};\n};\n\nexport const ssStatusFilters = (queryString) => {\n  const selected = !_.isEmpty(queryString) ? queryString.split(',') : [];\n  const items = selected.map(y => ssFilterMap[y]);\n  if (!_.isEmpty(items)) {\n    return ({ shippingStatus: _.flatten(items) });\n  }\n  return {};\n};\n"]},"metadata":{},"sourceType":"module"}