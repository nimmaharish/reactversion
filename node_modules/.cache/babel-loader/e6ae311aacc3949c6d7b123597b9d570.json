{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/expressCheckout/ExpressCheckout.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport { SideDrawer } from \"../shared/SideDrawer\";\nimport { Drawer } from \"../shared/Drawer\";\nimport { Loading } from \"../shared/Loading\";\nimport SnackBar from \"../../services/snackbar\";\nimport Loader from \"../../services/loader\";\nimport { useExpressCheckoutSettings } from \"../../hooks/common\";\nimport { useDesktop } from \"../../contexts\";\nimport { Becca } from \"../../api\";\nimport ecIcon from \"../../assets/images/chat/expresscheckouticon.svg\";\nimport cx from 'classnames';\nimport { Switch } from 'phoenix-components/lib/formik';\nimport activecheckout from \"../../assets/v2/common/activecheckoutflow.svg\";\nimport styles from \"./ExpressCheckout.module.css\";\nexport default function ExpressCheckout() {\n  _s();\n\n  const [checkout, loading, refresh] = useExpressCheckoutSettings();\n  const history = useHistory();\n  const isDesktop = useDesktop();\n  const Component = isDesktop ? SideDrawer : Drawer;\n\n  const submitForm = async values => {\n    try {\n      Loader.show();\n      await Becca.updateUiConfig('expressCheckout', values);\n      refresh();\n      SnackBar.show('chat settings updated successfully', 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, {\n    title: \"Checkout Flow\",\n    backButton: true,\n    onClose: () => history.goBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      enabled: checkout.enabled\n    },\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, ({\n    values,\n    submitForm\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.mainContainer, {\n      [styles.enabled]: values.enabled\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: values.enabled ? activecheckout : ecIcon,\n    alt: \"\",\n    className: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Enable Express Checkout\"), /*#__PURE__*/React.createElement(Switch, {\n    name: \"enabled\",\n    onChange: () => {\n      values.enabled = !values.enabled;\n      submitForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.subText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"Enable express checkout for customers for faster checkout.\")))));\n}\n\n_s(ExpressCheckout, \"aBY05ILVqE3SGjVU4filAR2jIio=\", false, function () {\n  return [useExpressCheckoutSettings, useHistory, useDesktop];\n});\n\n_c = ExpressCheckout;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpressCheckout\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/expressCheckout/ExpressCheckout.jsx"],"names":["React","useHistory","Formik","SideDrawer","Drawer","Loading","SnackBar","Loader","useExpressCheckoutSettings","useDesktop","Becca","cx","Switch","styles","ExpressCheckout","checkout","loading","refresh","history","isDesktop","Component","submitForm","values","show","updateUiConfig","e","showError","hide","goBack","enabled","mainContainer","container","row","activecheckout","ecIcon","image","heading","subText"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { Drawer } from 'components/shared/Drawer';\nimport { Loading } from 'components/shared/Loading';\nimport SnackBar from 'services/snackbar';\nimport Loader from 'services/loader';\nimport { useExpressCheckoutSettings } from 'hooks/common';\nimport { useDesktop } from 'contexts';\nimport { Becca } from 'api';\nimport ecIcon from 'assets/images/chat/expresscheckouticon.svg';\nimport cx from 'classnames';\nimport { Switch } from 'phoenix-components/lib/formik';\nimport activecheckout from 'assets/v2/common/activecheckoutflow.svg';\nimport styles from './ExpressCheckout.module.css';\n\nexport default function ExpressCheckout() {\n  const [checkout, loading, refresh] = useExpressCheckoutSettings();\n  const history = useHistory();\n  const isDesktop = useDesktop();\n  const Component = isDesktop ? SideDrawer : Drawer;\n\n  const submitForm = async (values) => {\n    try {\n      Loader.show();\n      await Becca.updateUiConfig('expressCheckout', values);\n      refresh();\n      SnackBar.show('chat settings updated successfully', 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <Component\n      title=\"Checkout Flow\"\n      backButton\n      onClose={() => history.goBack()}\n    >\n      <Formik\n        initialValues={{\n          enabled: checkout.enabled,\n        }}\n        onSubmit={submitForm}\n      >\n        {({ values, submitForm }) => (\n          <div\n            className={cx(styles.mainContainer, {\n              [styles.enabled]: values.enabled,\n            })}\n          >\n            <div className={styles.container}>\n              <div className={styles.row}>\n                <img\n                  src={values.enabled ? activecheckout : ecIcon}\n                  alt=\"\"\n                  className={styles.image}\n                />\n                <div className={styles.heading}>\n                  Enable Express Checkout\n                </div>\n                <Switch\n                  name=\"enabled\"\n                  onChange={() => {\n                    values.enabled = !values.enabled;\n                    submitForm();\n                  }}\n                />\n              </div>\n              <div className={styles.subText}>\n                Enable express checkout for customers for faster checkout.\n              </div>\n            </div>\n          </div>\n        )}\n      </Formik>\n    </Component>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}