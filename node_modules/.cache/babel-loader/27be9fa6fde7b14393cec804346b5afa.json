{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/profile/helloBar/Details.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Clickable, FormikInput } from 'phoenix-components';\nimport { useField } from 'formik';\nimport { useToggle } from \"../../../hooks/common\";\nimport { ColorDialog } from \"../../common/ColorDialog\";\nimport cx from 'classnames';\nimport Pattern from \"./Pattern\";\nimport Color from \"./Color\";\nimport { CustomImage } from \"./CustomImage\";\nimport editIcon from \"../../../assets/overview/edit.svg\";\nimport addIcon from \"../../../assets/overview/addIcon.svg\";\nimport styles from \"./Details.module.css\";\nconst TABS = [{\n  label: 'Background Color',\n  value: 'color'\n}, {\n  label: 'Background Pattern',\n  value: 'pattern'\n}, {\n  label: 'Custom Banner Image',\n  value: 'image'\n}];\nexport function Details() {\n  _s();\n\n  const [{\n    value: color\n  },, {\n    setValue: setColor\n  }] = useField('textColor');\n  const [{\n    value: type\n  },, {\n    setValue: setType\n  }] = useField('background.type');\n  const [,, {\n    setValue: setBgValue\n  }] = useField('background.value');\n  const [openColorPicker, toggleColorPicker] = useToggle();\n\n  const setColorValue = value => {\n    setColor(value);\n    toggleColorPicker();\n  };\n\n  const setTab = value => {\n    setType(value);\n    setBgValue('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    name: \"title\",\n    label: \"Enter Your Hello Bar Text\",\n    placeholder: 'Catch everyone\\'s eye with a snazzy hello bar!',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.textColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Text Color\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Clickable, {\n    onClick: toggleColorPicker,\n    className: \"flexCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, (color === null || color === void 0 ? void 0 : color.length) > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.colorBox,\n    style: {\n      backgroundColor: color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: editIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: addIcon,\n    alt: \"\",\n    className: styles.imgA,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }), \"Pick Color\"))), openColorPicker && /*#__PURE__*/React.createElement(ColorDialog, {\n    onChange: setColorValue,\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.titleH,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Select Background Type\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.tabs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, TABS.map(t => /*#__PURE__*/React.createElement(Clickable, {\n    onClick: () => setTab(t.value),\n    className: cx(styles.tab, {\n      [styles.active]: t.value === type\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, t.label)))), /*#__PURE__*/React.createElement(React.Fragment, null, type === 'pattern' && /*#__PURE__*/React.createElement(Pattern, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }), type === 'color' && /*#__PURE__*/React.createElement(Color, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 31\n    }\n  }), type === 'image' && /*#__PURE__*/React.createElement(CustomImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 31\n    }\n  })));\n}\n\n_s(Details, \"97Um15cVxHUVMMeKqGsvfWKcMGI=\", false, function () {\n  return [useField, useField, useField, useToggle];\n});\n\n_c = Details;\nDetails.propTypes = {};\nDetails.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/profile/helloBar/Details.jsx"],"names":["React","Clickable","FormikInput","useField","useToggle","ColorDialog","cx","Pattern","Color","CustomImage","styles","TABS","label","value","Details","color","setValue","setColor","type","setType","setBgValue","openColorPicker","toggleColorPicker","setColorValue","setTab","container","textColor","title","length","colorBox","backgroundColor","editIcon","addIcon","imgA","titleH","tabs","map","t","tab","active","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Clickable, FormikInput } from 'phoenix-components';\nimport { useField } from 'formik';\nimport { useToggle } from 'hooks/common';\nimport { ColorDialog } from 'components/common/ColorDialog';\nimport cx from 'classnames';\nimport Pattern from 'components/profile/helloBar/Pattern';\nimport Color from 'components/profile/helloBar/Color';\nimport { CustomImage } from 'components/profile/helloBar/CustomImage';\nimport editIcon from 'assets/overview/edit.svg';\nimport addIcon from 'assets/overview/addIcon.svg';\nimport styles from './Details.module.css';\n\nconst TABS = [\n  {\n    label: 'Background Color',\n    value: 'color',\n  },\n  {\n    label: 'Background Pattern',\n    value: 'pattern',\n  },\n  {\n    label: 'Custom Banner Image',\n    value: 'image',\n  },\n];\n\nexport function Details() {\n  const [{ value: color },, { setValue: setColor }] = useField('textColor');\n  const [{ value: type },, { setValue: setType }] = useField('background.type');\n  const [,, { setValue: setBgValue }] = useField('background.value');\n  const [openColorPicker, toggleColorPicker] = useToggle();\n\n  const setColorValue = (value) => {\n    setColor(value);\n    toggleColorPicker();\n  };\n\n  const setTab = (value) => {\n    setType(value);\n    setBgValue('');\n  };\n\n  return (\n    <div className={styles.container}>\n      <FormikInput\n        name=\"title\"\n        label=\"Enter Your Hello Bar Text\"\n        placeholder={'Catch everyone\\'s eye with a snazzy hello bar!'}\n      />\n      <div className={styles.textColor}>\n        <div className={styles.title}>\n          Text Color\n        </div>\n        <div className=\"spacer\" />\n        <Clickable\n          onClick={toggleColorPicker}\n          className=\"flexCenter\"\n        >\n          {color?.length > 0 ? (\n            <>\n              <div className={styles.colorBox} style={{ backgroundColor: color }} />\n              <img src={editIcon} alt=\"\" />\n            </>\n          ) : (\n            <>\n              <img\n                src={addIcon}\n                alt=\"\"\n                className={styles.imgA}\n              />\n              Pick Color\n            </>\n          )}\n        </Clickable>\n      </div>\n      {openColorPicker && (\n        <ColorDialog onChange={setColorValue} color={color} />\n      )}\n      <div className={styles.titleH}>Select Background Type</div>\n      <div className=\"flexCenter\">\n        <div className={styles.tabs}>\n          {TABS.map(t => (\n            <Clickable\n              onClick={() => setTab(t.value)}\n              className={cx(styles.tab, { [styles.active]: t.value === type })}\n            >\n              {t.label}\n            </Clickable>\n          ))}\n        </div>\n      </div>\n      <>\n        {type === 'pattern' && (<Pattern />)}\n        {type === 'color' && (<Color />)}\n        {type === 'image' && (<CustomImage />)}\n      </>\n    </div>\n  );\n}\n\nDetails.propTypes = {};\n\nDetails.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}