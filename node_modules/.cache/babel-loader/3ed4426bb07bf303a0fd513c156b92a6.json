{"ast":null,"code":"const theme = require('../theme');\n\nconst Spacer = require('./Spacer');\n/**\n * @typedef {Object} PageHeaderProps\n * @property {string} [message]\n * @property {string} title\n * @property {string} [topOffset]\n */\n\n/**\n * The header of the overlay.\n * @param {Document} document\n * @param {HTMLElement} root\n * @param {PageHeaderProps} props\n * @returns {void}\n */\n\n\nfunction PageHeader(document, root, props) {\n  const pageHeaderContainer = document.createElement('div');\n  pageHeaderContainer.style.background = '#' + theme.dimgrey;\n  pageHeaderContainer.style.boxShadow = '0 1px 4px rgba(0, 0, 0, 0.3)';\n  pageHeaderContainer.style.color = '#' + theme.white;\n  pageHeaderContainer.style.left = '0';\n  pageHeaderContainer.style.padding = '1rem 1.5rem';\n  pageHeaderContainer.style.position = 'fixed';\n  pageHeaderContainer.style.top = props.topOffset || '0';\n  pageHeaderContainer.style.width = 'calc(100vw - 3rem)';\n  const title = document.createElement('h3');\n  title.innerText = props.title;\n  title.style.color = '#' + theme.red;\n  title.style.fontSize = '1.125rem';\n  title.style.lineHeight = '1.3';\n  title.style.margin = '0';\n  pageHeaderContainer.appendChild(title);\n\n  if (props.message) {\n    title.style.margin = '0 0 0.5rem';\n    const message = document.createElement('span');\n    message.innerText = props.message;\n    message.style.color = '#' + theme.white;\n    message.style.wordBreak = 'break-word';\n    pageHeaderContainer.appendChild(message);\n  }\n\n  root.appendChild(pageHeaderContainer); // This has to run after appending elements to root\n  // because we need to actual mounted height.\n\n  Spacer(document, root, {\n    space: pageHeaderContainer.offsetHeight.toString(10)\n  });\n}\n\nmodule.exports = PageHeader;","map":{"version":3,"sources":["/home/harish/windo/phoenix/node_modules/customize-cra-react-refresh/node_modules/@pmmmwh/react-refresh-webpack-plugin/src/overlay/components/PageHeader.js"],"names":["theme","require","Spacer","PageHeader","document","root","props","pageHeaderContainer","createElement","style","background","dimgrey","boxShadow","color","white","left","padding","position","top","topOffset","width","title","innerText","red","fontSize","lineHeight","margin","appendChild","message","wordBreak","space","offsetHeight","toString","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,UAAT,CAAoBC,QAApB,EAA8BC,IAA9B,EAAoCC,KAApC,EAA2C;AACzC,QAAMC,mBAAmB,GAAGH,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAA5B;AACAD,EAAAA,mBAAmB,CAACE,KAApB,CAA0BC,UAA1B,GAAuC,MAAMV,KAAK,CAACW,OAAnD;AACAJ,EAAAA,mBAAmB,CAACE,KAApB,CAA0BG,SAA1B,GAAsC,8BAAtC;AACAL,EAAAA,mBAAmB,CAACE,KAApB,CAA0BI,KAA1B,GAAkC,MAAMb,KAAK,CAACc,KAA9C;AACAP,EAAAA,mBAAmB,CAACE,KAApB,CAA0BM,IAA1B,GAAiC,GAAjC;AACAR,EAAAA,mBAAmB,CAACE,KAApB,CAA0BO,OAA1B,GAAoC,aAApC;AACAT,EAAAA,mBAAmB,CAACE,KAApB,CAA0BQ,QAA1B,GAAqC,OAArC;AACAV,EAAAA,mBAAmB,CAACE,KAApB,CAA0BS,GAA1B,GAAgCZ,KAAK,CAACa,SAAN,IAAmB,GAAnD;AACAZ,EAAAA,mBAAmB,CAACE,KAApB,CAA0BW,KAA1B,GAAkC,oBAAlC;AAEA,QAAMC,KAAK,GAAGjB,QAAQ,CAACI,aAAT,CAAuB,IAAvB,CAAd;AACAa,EAAAA,KAAK,CAACC,SAAN,GAAkBhB,KAAK,CAACe,KAAxB;AACAA,EAAAA,KAAK,CAACZ,KAAN,CAAYI,KAAZ,GAAoB,MAAMb,KAAK,CAACuB,GAAhC;AACAF,EAAAA,KAAK,CAACZ,KAAN,CAAYe,QAAZ,GAAuB,UAAvB;AACAH,EAAAA,KAAK,CAACZ,KAAN,CAAYgB,UAAZ,GAAyB,KAAzB;AACAJ,EAAAA,KAAK,CAACZ,KAAN,CAAYiB,MAAZ,GAAqB,GAArB;AACAnB,EAAAA,mBAAmB,CAACoB,WAApB,CAAgCN,KAAhC;;AAEA,MAAIf,KAAK,CAACsB,OAAV,EAAmB;AACjBP,IAAAA,KAAK,CAACZ,KAAN,CAAYiB,MAAZ,GAAqB,YAArB;AAEA,UAAME,OAAO,GAAGxB,QAAQ,CAACI,aAAT,CAAuB,MAAvB,CAAhB;AACAoB,IAAAA,OAAO,CAACN,SAAR,GAAoBhB,KAAK,CAACsB,OAA1B;AACAA,IAAAA,OAAO,CAACnB,KAAR,CAAcI,KAAd,GAAsB,MAAMb,KAAK,CAACc,KAAlC;AACAc,IAAAA,OAAO,CAACnB,KAAR,CAAcoB,SAAd,GAA0B,YAA1B;AACAtB,IAAAA,mBAAmB,CAACoB,WAApB,CAAgCC,OAAhC;AACD;;AAEDvB,EAAAA,IAAI,CAACsB,WAAL,CAAiBpB,mBAAjB,EA7ByC,CA+BzC;AACA;;AACAL,EAAAA,MAAM,CAACE,QAAD,EAAWC,IAAX,EAAiB;AACrByB,IAAAA,KAAK,EAAEvB,mBAAmB,CAACwB,YAApB,CAAiCC,QAAjC,CAA0C,EAA1C;AADc,GAAjB,CAAN;AAGD;;AAEDC,MAAM,CAACC,OAAP,GAAiB/B,UAAjB","sourcesContent":["const theme = require('../theme');\nconst Spacer = require('./Spacer');\n\n/**\n * @typedef {Object} PageHeaderProps\n * @property {string} [message]\n * @property {string} title\n * @property {string} [topOffset]\n */\n\n/**\n * The header of the overlay.\n * @param {Document} document\n * @param {HTMLElement} root\n * @param {PageHeaderProps} props\n * @returns {void}\n */\nfunction PageHeader(document, root, props) {\n  const pageHeaderContainer = document.createElement('div');\n  pageHeaderContainer.style.background = '#' + theme.dimgrey;\n  pageHeaderContainer.style.boxShadow = '0 1px 4px rgba(0, 0, 0, 0.3)';\n  pageHeaderContainer.style.color = '#' + theme.white;\n  pageHeaderContainer.style.left = '0';\n  pageHeaderContainer.style.padding = '1rem 1.5rem';\n  pageHeaderContainer.style.position = 'fixed';\n  pageHeaderContainer.style.top = props.topOffset || '0';\n  pageHeaderContainer.style.width = 'calc(100vw - 3rem)';\n\n  const title = document.createElement('h3');\n  title.innerText = props.title;\n  title.style.color = '#' + theme.red;\n  title.style.fontSize = '1.125rem';\n  title.style.lineHeight = '1.3';\n  title.style.margin = '0';\n  pageHeaderContainer.appendChild(title);\n\n  if (props.message) {\n    title.style.margin = '0 0 0.5rem';\n\n    const message = document.createElement('span');\n    message.innerText = props.message;\n    message.style.color = '#' + theme.white;\n    message.style.wordBreak = 'break-word';\n    pageHeaderContainer.appendChild(message);\n  }\n\n  root.appendChild(pageHeaderContainer);\n\n  // This has to run after appending elements to root\n  // because we need to actual mounted height.\n  Spacer(document, root, {\n    space: pageHeaderContainer.offsetHeight.toString(10),\n  });\n}\n\nmodule.exports = PageHeader;\n"]},"metadata":{},"sourceType":"script"}