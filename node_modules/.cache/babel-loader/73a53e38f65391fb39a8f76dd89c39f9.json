{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/shared/Player/Carousel.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/media-has-caption */\nimport React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Hls from 'hls.js';\nimport styles from \"./Carousel.module.css\";\n\nfunction Carousel({\n  item,\n  className,\n  isPreview\n}) {\n  _s();\n\n  var _item$url;\n\n  const videoRef = useRef();\n  const isHls = item === null || item === void 0 ? void 0 : (_item$url = item.url) === null || _item$url === void 0 ? void 0 : _item$url.includes('.m3u8');\n  useEffect(() => {\n    if (isHls) {\n      const hls = new Hls({\n        autoStartLoad: true,\n        maxBufferLength: 10,\n        startFragPrefetch: true\n      });\n      hls.attachMedia(videoRef.current);\n      hls.on(Hls.Events.MEDIA_ATTACHED, () => {\n        hls.loadSource(item.url);\n      });\n    }\n  }, [JSON.stringify(item)]);\n\n  const handleClick = () => {\n    const item = videoRef.current;\n\n    if (item.paused) {\n      item.play();\n    } else {\n      item.pause();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    className: cx(styles.fullWidth, className),\n    src: isHls ? '' : item.url,\n    controls: isPreview,\n    onClick: handleClick,\n    playsInline: true,\n    muted: false,\n    preload: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  });\n}\n\n_s(Carousel, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n\n_c = Carousel;\nCarousel.propTypes = {\n  item: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  isPreview: PropTypes.bool\n};\nCarousel.defaultProps = {\n  className: '',\n  isPreview: true\n};\nexport default Carousel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/shared/Player/Carousel.jsx"],"names":["React","useEffect","useRef","PropTypes","cx","Hls","styles","Carousel","item","className","isPreview","videoRef","isHls","url","includes","hls","autoStartLoad","maxBufferLength","startFragPrefetch","attachMedia","current","on","Events","MEDIA_ATTACHED","loadSource","JSON","stringify","handleClick","paused","play","pause","fullWidth","propTypes","object","isRequired","string","bool","defaultProps"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,MAAP;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAR;AAAmBC,EAAAA;AAAnB,CAAlB,EAAkD;AAAA;;AAAA;;AAChD,QAAMC,QAAQ,GAAGT,MAAM,EAAvB;AAEA,QAAMU,KAAK,GAAGJ,IAAH,aAAGA,IAAH,oCAAGA,IAAI,CAAEK,GAAT,8CAAG,UAAWC,QAAX,CAAoB,OAApB,CAAd;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,KAAJ,EAAW;AACT,YAAMG,GAAG,GAAG,IAAIV,GAAJ,CAAQ;AAClBW,QAAAA,aAAa,EAAE,IADG;AAElBC,QAAAA,eAAe,EAAE,EAFC;AAGlBC,QAAAA,iBAAiB,EAAE;AAHD,OAAR,CAAZ;AAKAH,MAAAA,GAAG,CAACI,WAAJ,CAAgBR,QAAQ,CAACS,OAAzB;AACAL,MAAAA,GAAG,CAACM,EAAJ,CAAOhB,GAAG,CAACiB,MAAJ,CAAWC,cAAlB,EAAkC,MAAM;AACtCR,QAAAA,GAAG,CAACS,UAAJ,CAAehB,IAAI,CAACK,GAApB;AACD,OAFD;AAGD;AACF,GAZQ,EAYN,CAACY,IAAI,CAACC,SAAL,CAAelB,IAAf,CAAD,CAZM,CAAT;;AAcA,QAAMmB,WAAW,GAAG,MAAM;AACxB,UAAMnB,IAAI,GAAGG,QAAQ,CAACS,OAAtB;;AACA,QAAIZ,IAAI,CAACoB,MAAT,EAAiB;AACfpB,MAAAA,IAAI,CAACqB,IAAL;AACD,KAFD,MAEO;AACLrB,MAAAA,IAAI,CAACsB,KAAL;AACD;AACF,GAPD;;AASA,sBACE;AACE,IAAA,GAAG,EAAEnB,QADP;AAEE,IAAA,SAAS,EAAEP,EAAE,CAACE,MAAM,CAACyB,SAAR,EAAmBtB,SAAnB,CAFf;AAGE,IAAA,GAAG,EAAEG,KAAK,GAAG,EAAH,GAAQJ,IAAI,CAACK,GAHzB;AAIE,IAAA,QAAQ,EAAEH,SAJZ;AAKE,IAAA,OAAO,EAAEiB,WALX;AAME,IAAA,WAAW,EAAE,IANf;AAOE,IAAA,KAAK,EAAE,KAPT;AAQE,IAAA,OAAO,EAAC,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAYD;;GAxCQpB,Q;;KAAAA,Q;AA0CTA,QAAQ,CAACyB,SAAT,GAAqB;AACnBxB,EAAAA,IAAI,EAAEL,SAAS,CAAC8B,MAAV,CAAiBC,UADJ;AAEnBzB,EAAAA,SAAS,EAAEN,SAAS,CAACgC,MAFF;AAGnBzB,EAAAA,SAAS,EAAEP,SAAS,CAACiC;AAHF,CAArB;AAMA7B,QAAQ,CAAC8B,YAAT,GAAwB;AACtB5B,EAAAA,SAAS,EAAE,EADW;AAEtBC,EAAAA,SAAS,EAAE;AAFW,CAAxB;AAKA,eAAeH,QAAf","sourcesContent":["/* eslint-disable jsx-a11y/media-has-caption */\nimport React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Hls from 'hls.js';\nimport styles from './Carousel.module.css';\n\nfunction Carousel({ item, className, isPreview }) {\n  const videoRef = useRef();\n\n  const isHls = item?.url?.includes('.m3u8');\n\n  useEffect(() => {\n    if (isHls) {\n      const hls = new Hls({\n        autoStartLoad: true,\n        maxBufferLength: 10,\n        startFragPrefetch: true,\n      });\n      hls.attachMedia(videoRef.current);\n      hls.on(Hls.Events.MEDIA_ATTACHED, () => {\n        hls.loadSource(item.url);\n      });\n    }\n  }, [JSON.stringify(item)]);\n\n  const handleClick = () => {\n    const item = videoRef.current;\n    if (item.paused) {\n      item.play();\n    } else {\n      item.pause();\n    }\n  };\n\n  return (\n    <video\n      ref={videoRef}\n      className={cx(styles.fullWidth, className)}\n      src={isHls ? '' : item.url}\n      controls={isPreview}\n      onClick={handleClick}\n      playsInline={true}\n      muted={false}\n      preload=\"auto\"\n    />\n  );\n}\n\nCarousel.propTypes = {\n  item: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  isPreview: PropTypes.bool,\n};\n\nCarousel.defaultProps = {\n  className: '',\n  isPreview: true,\n};\n\nexport default Carousel;\n"]},"metadata":{},"sourceType":"module"}