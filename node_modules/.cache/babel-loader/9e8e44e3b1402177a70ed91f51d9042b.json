{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/orders/v2/PaymentAmount.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog, DialogContent } from '@material-ui/core';\nimport { Button, Clickable, Radio, ReactInput } from 'phoenix-components';\nimport { useShop } from \"../../../contexts\";\nimport cx from 'classnames';\nimport closeIcon from \"../../../assets/images/orders/list/close.svg\";\nimport styles from \"./PaymentAmount.module.css\";\nconst CHIPS = [{\n  label: '25%',\n  value: 0.25\n}, {\n  label: '50%',\n  value: 0.5\n}, {\n  label: '75%',\n  value: 0.75\n}];\nexport function PaymentAmount({\n  title,\n  onClose,\n  subTitle,\n  amount,\n  onSubmit\n}) {\n  _s();\n\n  const [state, setState] = useState('complete');\n  const [newAmount, setNewAmount] = useState('');\n  const [chip, setChip] = useState('');\n  const {\n    currency\n  } = useShop();\n\n  const onAmountChange = val => {\n    setNewAmount(val);\n    setChip('');\n  };\n\n  const onChipClick = val => {\n    setChip(val.label);\n    setNewAmount(Math.floor(amount * val.value).toString());\n  };\n\n  const onSubmitClick = () => {\n    onSubmit(+(state === 'partial' ? newAmount : amount));\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: true,\n    onClose: onClose,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.topBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(Clickable, {\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: closeIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }))), subTitle && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.subTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, subTitle), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.payments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Radio, {\n    inputProps: {\n      onChange: () => setState('complete')\n    },\n    label: \"Complete Payment\",\n    value: \"complete\",\n    selected: state === 'complete',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Radio, {\n    inputProps: {\n      onChange: () => setState('partial')\n    },\n    label: \"Partial Payments\",\n    value: \"partial\",\n    selected: state === 'partial',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })), state === 'complete' && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, currency, ' ', amount), state === 'partial' && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactInput, {\n    value: newAmount,\n    setValue: onAmountChange,\n    type: \"number\",\n    label: \"Enter Amount\",\n    placeholder: `e.g. ${currency} 100`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.chips,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, CHIPS.map(ch => /*#__PURE__*/React.createElement(Clickable, {\n    key: ch.label,\n    onClick: () => onChipClick(ch),\n    className: cx(styles.chip, {\n      [styles.selected]: ch.label === chip\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, ch.label)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"UPDATE STATUS\",\n    onClick: onSubmitClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  })))));\n}\n\n_s(PaymentAmount, \"mmxmdicchPVHXTd1CHvSm28Pfnk=\", false, function () {\n  return [useShop];\n});\n\n_c = PaymentAmount;\nPaymentAmount.propTypes = {\n  title: PropTypes.string.isRequired,\n  subTitle: PropTypes.string,\n  amount: PropTypes.number.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\nPaymentAmount.defaultProps = {\n  subTitle: null\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentAmount\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/orders/v2/PaymentAmount.jsx"],"names":["React","useState","PropTypes","Dialog","DialogContent","Button","Clickable","Radio","ReactInput","useShop","cx","styles","CHIPS","label","value","PaymentAmount","title","onClose","subTitle","amount","onSubmit","state","setState","newAmount","setNewAmount","chip","setChip","currency","onAmountChange","val","onChipClick","Math","floor","toString","onSubmitClick","container","topBar","closeIcon","payments","onChange","price","chips","map","ch","selected","button","propTypes","string","isRequired","number","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog, DialogContent } from '@material-ui/core';\nimport {\n  Button, Clickable, Radio, ReactInput\n} from 'phoenix-components';\nimport { useShop } from 'contexts';\nimport cx from 'classnames';\nimport closeIcon from 'assets/images/orders/list/close.svg';\nimport styles from './PaymentAmount.module.css';\n\nconst CHIPS = [\n  {\n    label: '25%',\n    value: 0.25\n  },\n  {\n    label: '50%',\n    value: 0.5\n  },\n  {\n    label: '75%',\n    value: 0.75\n  },\n];\n\nexport function PaymentAmount({\n  title,\n  onClose,\n  subTitle,\n  amount,\n  onSubmit,\n}) {\n  const [state, setState] = useState('complete');\n  const [newAmount, setNewAmount] = useState('');\n  const [chip, setChip] = useState('');\n  const { currency } = useShop();\n\n  const onAmountChange = val => {\n    setNewAmount(val);\n    setChip('');\n  };\n\n  const onChipClick = val => {\n    setChip(val.label);\n    setNewAmount((Math.floor(amount * val.value)).toString());\n  };\n\n  const onSubmitClick = () => {\n    onSubmit(+(state === 'partial' ? newAmount : amount));\n  };\n\n  return (\n    <Dialog\n      open={true}\n      onClose={onClose}\n      fullWidth\n      maxWidth=\"sm\"\n    >\n      <DialogContent>\n        <div className={styles.container}>\n          <div className={styles.topBar}>\n            <div className={styles.title}>{title}</div>\n            <Clickable\n              onClick={onClose}>\n              <img src={closeIcon} alt=\"\" />\n            </Clickable>\n          </div>\n          {subTitle && (\n            <div className={styles.subTitle}>{subTitle}</div>\n          )}\n          <div className={styles.payments}>\n            <Radio\n              inputProps={{\n                onChange: () => setState('complete'),\n              }}\n              label=\"Complete Payment\"\n              value=\"complete\"\n              selected={state === 'complete'}\n            />\n            <Radio\n              inputProps={{\n                onChange: () => setState('partial'),\n              }}\n              label=\"Partial Payments\"\n              value=\"partial\"\n              selected={state === 'partial'}\n            />\n          </div>\n          {state === 'complete' && (\n            <div className={styles.price}>\n              {currency}\n              {' '}\n              {amount}\n            </div>\n          )}\n          {state === 'partial' && (\n            <div>\n              <ReactInput\n                value={newAmount}\n                setValue={onAmountChange}\n                type=\"number\"\n                label=\"Enter Amount\"\n                placeholder={`e.g. ${currency} 100`}\n              />\n              <div className={styles.chips}>\n                {CHIPS.map(ch => (\n                  <Clickable\n                    key={ch.label}\n                    onClick={() => onChipClick(ch)}\n                    className={cx(styles.chip, { [styles.selected]: ch.label === chip })}\n                  >\n                    {ch.label}\n                  </Clickable>\n                ))}\n              </div>\n            </div>\n          )}\n          <div className={styles.button}>\n            <Button label=\"UPDATE STATUS\" onClick={onSubmitClick} />\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nPaymentAmount.propTypes = {\n  title: PropTypes.string.isRequired,\n  subTitle: PropTypes.string,\n  amount: PropTypes.number.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nPaymentAmount.defaultProps = {\n  subTitle: null,\n};\n"]},"metadata":{},"sourceType":"module"}