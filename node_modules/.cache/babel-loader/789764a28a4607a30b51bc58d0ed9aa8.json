{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/profile/helloBar/Pattern.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { BottomDrawer } from \"../../shared/BottomDrawer\";\nimport { SideDrawer } from \"../../shared/SideDrawer\";\nimport { useToggle } from \"../../../hooks/common\";\nimport { useDesktop } from \"../../../contexts\";\nimport addIcon from \"../../../assets/overview/addIcon.svg\";\nimport closeIcon from \"../../../assets/overview/close.svg\";\nimport patternIcon1 from \"../../../assets/overview/pattern1.svg\";\nimport patternIcon2 from \"../../../assets/overview/pattern2.svg\";\nimport patternIcon3 from \"../../../assets/overview/pattern3.svg\";\nimport checkedIcon from \"../../../assets/v2/products/coverChecked.svg\";\nimport { Clickable, Button } from 'phoenix-components';\nimport { useField } from 'formik';\nimport styles from \"./Pattern.module.css\";\nconst PATTERNS = [{\n  value: 'pattern1',\n  icon: patternIcon1\n}, {\n  value: 'pattern2',\n  icon: patternIcon2\n}, {\n  value: 'pattern3',\n  icon: patternIcon3\n}];\nexport default function Pattern() {\n  _s();\n\n  const isDesktop = useDesktop();\n  const [openPatternDrawer, togglePatternDrawer] = useToggle();\n  const [{\n    value: pattern\n  },, {\n    setValue: setPattern\n  }] = useField('background.patternValue');\n  const [state, setState] = useState(pattern);\n\n  const onSave = () => {\n    setPattern(state);\n    togglePatternDrawer();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.textColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Banner Pattern\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Clickable, {\n    onClick: togglePatternDrawer,\n    className: \"flexCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, (pattern === null || pattern === void 0 ? void 0 : pattern.length) > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Change\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: closeIcon,\n    alt: \"\",\n    className: styles.imgC,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: addIcon,\n    alt: \"\",\n    className: styles.imgA,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }), \"Select\"))), openPatternDrawer && /*#__PURE__*/React.createElement(React.Fragment, null, isDesktop ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SideDrawer, {\n    title: \"Select Banner Pattern\",\n    backButton: true,\n    onClick: onSave,\n    button: true,\n    onClose: togglePatternDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.containerDesk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, PATTERNS.map(p => /*#__PURE__*/React.createElement(Clickable, {\n    key: pattern.value,\n    onClick: () => setState(p.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.pattern,\n    style: {\n      backgroundImage: `url(${p.icon})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 23\n    }\n  }, state === p.value && /*#__PURE__*/React.createElement(\"img\", {\n    src: checkedIcon,\n    alt: \"\",\n    className: styles.checked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 47\n    }\n  }))))))) : /*#__PURE__*/React.createElement(BottomDrawer, {\n    title: \"Select Banner Pattern\",\n    closeButton: true,\n    onClose: togglePatternDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, PATTERNS.map(p => /*#__PURE__*/React.createElement(Clickable, {\n    key: pattern.value,\n    onClick: () => setState(p.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.pattern,\n    style: {\n      backgroundImage: `url(${p.icon})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, state === p.value && /*#__PURE__*/React.createElement(\"img\", {\n    src: checkedIcon,\n    alt: \"\",\n    className: styles.checked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 45\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.btn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    onClick: onSave,\n    bordered: false,\n    label: \"save\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  })))));\n}\n\n_s(Pattern, \"xwV5H5WK+Mky4dFOwW1CJpvOFxE=\", false, function () {\n  return [useDesktop, useToggle, useField];\n});\n\n_c = Pattern;\nPattern.propTypes = {};\nPattern.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"Pattern\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/profile/helloBar/Pattern.jsx"],"names":["React","useState","BottomDrawer","SideDrawer","useToggle","useDesktop","Clickable","Button","useField","styles","PATTERNS","value","icon","patternIcon1","patternIcon2","patternIcon3","Pattern","isDesktop","openPatternDrawer","togglePatternDrawer","pattern","setValue","setPattern","state","setState","onSave","textColor","title","length","label","closeIcon","imgC","addIcon","imgA","containerDesk","map","p","backgroundImage","checkedIcon","checked","container","btn","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { BottomDrawer } from 'components/shared/BottomDrawer';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { useToggle } from 'hooks/common';\nimport {\n  useDesktop\n} from 'contexts';\nimport addIcon from 'assets/overview/addIcon.svg';\nimport closeIcon from 'assets/overview/close.svg';\nimport patternIcon1 from 'assets/overview/pattern1.svg';\nimport patternIcon2 from 'assets/overview/pattern2.svg';\nimport patternIcon3 from 'assets/overview/pattern3.svg';\nimport checkedIcon from 'assets/v2/products/coverChecked.svg';\nimport { Clickable, Button } from 'phoenix-components';\nimport { useField } from 'formik';\nimport styles from './Pattern.module.css';\n\nconst PATTERNS = [\n  {\n    value: 'pattern1',\n    icon: patternIcon1,\n  },\n  {\n    value: 'pattern2',\n    icon: patternIcon2,\n  },\n  {\n    value: 'pattern3',\n    icon: patternIcon3,\n  }\n];\n\nexport default function Pattern() {\n  const isDesktop = useDesktop();\n  const [openPatternDrawer, togglePatternDrawer] = useToggle();\n  const [{ value: pattern },, { setValue: setPattern }] = useField('background.patternValue');\n  const [state, setState] = useState(pattern);\n\n  const onSave = () => {\n    setPattern(state);\n    togglePatternDrawer();\n  };\n\n  return (\n    <div className={styles.textColor}>\n      <div className={styles.title}>\n        Banner Pattern\n      </div>\n      <div className=\"spacer\" />\n      <Clickable\n        onClick={togglePatternDrawer}\n        className=\"flexCenter\"\n      >\n        <>\n          {pattern?.length > 0 ? (\n            <>\n              <div className={styles.label}>Change</div>\n              <img\n                src={closeIcon}\n                alt=\"\"\n                className={styles.imgC}\n              />\n            </>\n          ) : (\n            <>\n              <img\n                src={addIcon}\n                alt=\"\"\n                className={styles.imgA}\n              />\n              Select\n            </>\n          )}\n        </>\n      </Clickable>\n      {openPatternDrawer && (\n        <>\n          {isDesktop ? (\n            <>\n              <SideDrawer\n                title=\"Select Banner Pattern\"\n                backButton={true}\n                onClick={onSave}\n                button={true}\n                onClose={togglePatternDrawer}\n              >\n                <div className={styles.containerDesk}>\n                  {PATTERNS.map(p => (\n                    <Clickable key={pattern.value} onClick={() => setState(p.value)}>\n                      <div className={styles.pattern} style={{ backgroundImage: `url(${p.icon})` }}>\n                        {state === p.value && <img src={checkedIcon} alt=\"\" className={styles.checked} />}\n                      </div>\n                    </Clickable>\n                  ))}\n                </div>\n              </SideDrawer>\n            </>\n          ) : (\n            <BottomDrawer\n              title=\"Select Banner Pattern\"\n              closeButton={true}\n              onClose={togglePatternDrawer}\n            >\n              <div className={styles.container}>\n                {PATTERNS.map(p => (\n                  <Clickable key={pattern.value} onClick={() => setState(p.value)}>\n                    <div className={styles.pattern} style={{ backgroundImage: `url(${p.icon})` }}>\n                      {state === p.value && <img src={checkedIcon} alt=\"\" className={styles.checked} />}\n                    </div>\n                  </Clickable>\n                ))}\n              </div>\n              <div className={styles.btn}>\n                <Button\n                  fullWidth\n                  onClick={onSave}\n                  bordered={false}\n                  label=\"save\"\n                  size=\"large\" />\n              </div>\n            </BottomDrawer>\n          )}\n        </>\n      )}\n    </div>\n\n  );\n}\nPattern.propTypes = {};\n\nPattern.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}