{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/analytics/OrdersChart.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Legend, Line, LineChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport React from 'react';\nimport _ from 'lodash';\nimport { useDesktop } from \"../../contexts\";\nimport moment from 'moment';\n\nconst orderToList = (orders, dates) => _.sortBy(dates.map(date => {\n  var _orders$date$orders, _orders$date, _orders$date$cart, _orders$date2;\n\n  return {\n    date: moment(date),\n    orders: (_orders$date$orders = (_orders$date = orders[date]) === null || _orders$date === void 0 ? void 0 : _orders$date.orders) !== null && _orders$date$orders !== void 0 ? _orders$date$orders : 0,\n    carts: (_orders$date$cart = (_orders$date2 = orders[date]) === null || _orders$date2 === void 0 ? void 0 : _orders$date2.cart) !== null && _orders$date$cart !== void 0 ? _orders$date$cart : 0\n  };\n}), 'date').map(x => ({ ...x,\n  date: x.date.format('DD/MMM')\n}));\n\nexport function OrdersChart({\n  orders,\n  dates,\n  syncId\n}) {\n  _s();\n\n  const list = orderToList(orders, dates);\n  const isDesktop = useDesktop();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isDesktop && /*#__PURE__*/React.createElement(LineChart, {\n    width: window.screen.width - 370,\n    height: window.screen.height * 0.3,\n    data: list,\n    syncId: syncId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    allowDecimals: false,\n    width: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    verticalAlign: \"top\",\n    height: 36,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    name: \"Orders\",\n    type: \"linear\",\n    dataKey: \"orders\",\n    stroke: \"#66bb6a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    name: \"Carts\",\n    type: \"linear\",\n    dataKey: \"carts\",\n    stroke: \"#CB7E93\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), !isDesktop && /*#__PURE__*/React.createElement(LineChart, {\n    width: window.screen.width - 30,\n    height: window.screen.height * 0.3,\n    data: list,\n    syncId: syncId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    allowDecimals: false,\n    width: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    verticalAlign: \"top\",\n    height: 36,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    name: \"Orders\",\n    type: \"linear\",\n    dataKey: \"orders\",\n    stroke: \"#66bb6a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    name: \"Carts\",\n    type: \"linear\",\n    dataKey: \"carts\",\n    stroke: \"#CB7E93\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })));\n}\n\n_s(OrdersChart, \"3l4y9eCI8Q4nOrq3yDi/AmhuQWU=\", false, function () {\n  return [useDesktop];\n});\n\n_c = OrdersChart;\nOrdersChart.propTypes = {\n  orders: PropTypes.object.isRequired,\n  dates: PropTypes.array.isRequired,\n  syncId: PropTypes.string\n};\nOrdersChart.defaultProps = {\n  syncId: undefined\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersChart\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/analytics/OrdersChart.jsx"],"names":["PropTypes","Legend","Line","LineChart","Tooltip","XAxis","YAxis","React","_","useDesktop","moment","orderToList","orders","dates","sortBy","map","date","carts","cart","x","format","OrdersChart","syncId","list","isDesktop","window","screen","width","height","propTypes","object","isRequired","array","string","defaultProps","undefined"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport {\n  Legend, Line, LineChart, Tooltip, XAxis, YAxis\n} from 'recharts';\nimport React from 'react';\nimport _ from 'lodash';\nimport { useDesktop } from 'contexts';\nimport moment from 'moment';\n\nconst orderToList = (orders, dates) => _.sortBy(dates.map(date => ({\n  date: moment(date),\n  orders: orders[date]?.orders ?? 0,\n  carts: orders[date]?.cart ?? 0,\n})), 'date')\n  .map(x => ({\n    ...x,\n    date: x.date.format('DD/MMM')\n  }));\n\nexport function OrdersChart({ orders, dates, syncId }) {\n  const list = orderToList(orders, dates);\n  const isDesktop = useDesktop();\n\n  return (\n    <>\n      {isDesktop && (\n        <LineChart\n          width={window.screen.width - 370}\n          height={window.screen.height * 0.3}\n          data={list}\n          syncId={syncId}\n        >\n          <XAxis dataKey=\"date\" />\n          <YAxis allowDecimals={false} width={25} />\n          <Tooltip />\n          <Legend verticalAlign=\"top\" height={36} />\n          <Line name=\"Orders\" type=\"linear\" dataKey=\"orders\" stroke=\"#66bb6a\" />\n          <Line name=\"Carts\" type=\"linear\" dataKey=\"carts\" stroke=\"#CB7E93\" />\n        </LineChart>\n      )}\n      {!isDesktop && (\n        <LineChart\n          width={window.screen.width - 30}\n          height={window.screen.height * 0.3}\n          data={list}\n          syncId={syncId}\n        >\n          <XAxis dataKey=\"date\" />\n          <YAxis allowDecimals={false} width={25} />\n          <Tooltip />\n          <Legend verticalAlign=\"top\" height={36} />\n          <Line name=\"Orders\" type=\"linear\" dataKey=\"orders\" stroke=\"#66bb6a\" />\n          <Line name=\"Carts\" type=\"linear\" dataKey=\"carts\" stroke=\"#CB7E93\" />\n        </LineChart>\n      )}\n    </>\n  );\n}\n\nOrdersChart.propTypes = {\n  orders: PropTypes.object.isRequired,\n  dates: PropTypes.array.isRequired,\n  syncId: PropTypes.string,\n};\n\nOrdersChart.defaultProps = {\n  syncId: undefined,\n};\n"]},"metadata":{},"sourceType":"module"}