{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/knowBaseCards/KnowBaseCards.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport WebView from \"../../services/webview\";\nimport chevronRight from \"../../assets/v2/common/chevronGreyRight.svg\";\nimport Loader from \"../../services/loader\";\nimport SnackBar from \"../../services/snackbar\";\nimport styles from \"./KnowBaseCards.module.css\";\nimport { KnowledgeBaseData } from \"./utils\";\n\nfunction Kbc({\n  type\n}) {\n  const {\n    name,\n    content,\n    videoUrl,\n    blogUrl,\n    icon\n  } = KnowledgeBaseData[type];\n\n  const handleRoute = status => {\n    const url = status === 'video' ? videoUrl : blogUrl;\n\n    try {\n      Loader.show();\n\n      if (WebView.isWebView()) {\n        WebView.openUrl(url);\n        return;\n      }\n\n      window.open(url, '_blank');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.main,\n    onClick: handleRoute,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.con1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.hb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: icon,\n    alt: \"\",\n    className: styles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.con2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.hexa,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.cardDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.crdContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, name), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, content, ' ', videoUrl && /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => {\n      handleRoute('video');\n    },\n    className: styles.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"View Video\")))), /*#__PURE__*/React.createElement(\"img\", {\n    src: chevronRight,\n    alt: \"\",\n    className: styles.chevron,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })));\n}\n\n_c = Kbc;\nKbc.propTypes = {\n  type: PropTypes.string.isRequired\n};\nexport default Kbc;\n\nvar _c;\n\n$RefreshReg$(_c, \"Kbc\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/knowBaseCards/KnowBaseCards.jsx"],"names":["React","PropTypes","WebView","Loader","SnackBar","styles","KnowledgeBaseData","Kbc","type","name","content","videoUrl","blogUrl","icon","handleRoute","status","url","show","isWebView","openUrl","window","open","e","showError","hide","main","con1","hb","con2","hexa","cardDetails","crdContent","link","chevronRight","chevron","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport WebView from 'services/webview';\nimport chevronRight from 'assets/v2/common/chevronGreyRight.svg';\nimport Loader from 'services/loader';\nimport SnackBar from 'services/snackbar';\nimport styles from './KnowBaseCards.module.css';\nimport { KnowledgeBaseData } from './utils';\n\nfunction Kbc({\n  type\n}) {\n  const {\n    name, content, videoUrl, blogUrl, icon\n  } = KnowledgeBaseData[type];\n\n  const handleRoute = (status) => {\n    const url = status === 'video' ? videoUrl : blogUrl;\n    try {\n      Loader.show();\n      if (WebView.isWebView()) {\n        WebView.openUrl(url);\n        return;\n      }\n      window.open(url, '_blank');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  return (\n    <div className={styles.main} onClick={handleRoute}>\n      <div className={styles.con1}>\n        <div className={styles.hb} />\n        <img src={icon} alt=\"\" className={styles.icon} />\n      </div>\n      <div className={styles.con2}>\n        <div className={styles.hexa} />\n        <div className={styles.cardDetails}>\n          <div className={styles.crdContent}>\n            <div className={styles.name}>{name}</div>\n            <div className={styles.content}>\n              {content}\n              {' '}\n              {videoUrl && (\n                <span onClick={() => { handleRoute('video'); }} className={styles.link}>\n                  View Video\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n        <img src={chevronRight} alt=\"\" className={styles.chevron} />\n      </div>\n    </div>\n  );\n}\n\nKbc.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default Kbc;\n"]},"metadata":{},"sourceType":"module"}