{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/payments/Payments.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Grid, InfiniteLoader, List } from 'react-virtualized';\nimport { useInfiniteOrders, useQueryParams } from \"../../hooks\";\nimport { Loading } from \"../../components/shared/Loading\";\nimport { OrderCard } from \"../../components/payments/OrderCard\"; // import cx from 'classnames';\n\nimport { Picker } from \"../../components/shared/dateRangePicker/Picker\";\nimport { customDateFilters, getText } from \"../utils\";\nimport { useDesktop } from \"../../contexts\";\nimport { StatusSelectionBar } from \"../../components/shared/StatusSelectionBar\";\nimport { useHistory } from 'react-router-dom';\nimport { usePaymentRules } from \"../../contexts/userContext\";\nimport emptyIcon from \"../../assets/images/payments/empty.svg\";\nimport _ from 'lodash';\nimport { dateFilters, extractPmFilters, extractPsFilters, pmStatusFilters, psStatusFilters, stateList } from \"./utils\";\nimport PaymentModeWise from \"./PaymentModeWise\";\nimport PaymentStatusWise from \"./PaymentStatusWise\";\nimport Summary from \"./Summary\";\nimport styles from \"./Payments.module.css\";\nimport Filters from \"./Filters\";\n\nfunction PaymentsList() {\n  _s();\n\n  const isDesktop = useDesktop();\n  const params = useQueryParams();\n  const history = useHistory();\n  const rules = usePaymentRules(true);\n  const psFilters = psStatusFilters(params.get('ps'));\n  const pmFilters = pmStatusFilters(rules, params.get('pm'));\n  const dateFilter = params.get('dateFilter') || 'all';\n  const [dateRangeFilters, setDateRangeFilters] = useState({\n    from: null,\n    to: null\n  });\n  const isEmptyFrom = dateRangeFilters.from === null;\n  const isEmptyTo = dateRangeFilters.to === null;\n\n  const dateTimeFilters = () => {\n    if (dateFilter !== 'custom') {\n      return dateFilters[dateFilter];\n    }\n\n    if (isEmptyFrom || isEmptyTo) {\n      return {};\n    }\n\n    return customDateFilters(dateRangeFilters.from, dateRangeFilters.to);\n  };\n\n  const paymentStatusFilters = _.get(psFilters, '$or[0].status', []).length ? psFilters.$or[0].status : undefined;\n  const [orders, loadMore, hasMore, loading] = useInfiniteOrders({ ...dateTimeFilters(),\n    ...pmFilters,\n    status: {\n      $nin: ['cart cancelled', 'cancelled']\n    },\n    paymentStatus: paymentStatusFilters\n  }, {\n    createdAt: -1\n  });\n  const rowCount = hasMore ? 10000 : orders.length;\n\n  const isLoaded = i => !!orders[i];\n\n  const height = window.screen.height - isDesktop ? 90 + 50 + 65 + 93 + 34 + 98 + 18 : 76 + 72 + 99 + 57 + 58;\n  const cellWidth = (window.screen.width - 420) / 2;\n  const isEmpty = orders.length === 0 && loading;\n\n  if (isEmpty) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const onStateChange = val => {\n    params.set('dateFilter', val);\n    history.push({\n      search: params.toString()\n    });\n  }; // eslint-disable-next-line react/no-multi-comp\n\n\n  const renderItem = item => /*#__PURE__*/React.createElement(\"div\", {\n    key: item.key,\n    style: { ...item.style,\n      marginBottom: 'var(--l-spacing)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(OrderCard, {\n    order: orders[item.index],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n\n  const renderCell = el => {\n    const idx = el.rowIndex * 2 + el.columnIndex;\n\n    if (idx >= orders.length) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: el.key,\n      style: el.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(OrderCard, {\n      noBorder: idx % 2 === 0,\n      order: orders[idx],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const onSectionRendered = onRowsRendered => ({\n    columnStartIndex,\n    columnStopIndex,\n    rowStartIndex,\n    rowStopIndex\n  }) => {\n    const startIndex = rowStartIndex * 2 + columnStartIndex;\n    const stopIndex = rowStopIndex * 2 + columnStopIndex;\n    onRowsRendered({\n      startIndex,\n      stopIndex\n    });\n  };\n\n  const getEmptyContainer = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.emptyProducts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: emptyIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.emptyText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, \"No Orders !!!\"));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.desktopContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: isDesktop && styles.datePickerForDesktop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.flex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Picker, {\n    label: getText(dateRangeFilters),\n    float: \"left\",\n    onSelect: e => {\n      setDateRangeFilters(e);\n      params.set('dateFilter', 'custom');\n\n      if (Object.keys(e).length === 0) {\n        params.delete('dateFilter');\n      }\n\n      history.push({\n        search: params.toString()\n      });\n    },\n    inputStyle: styles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.flex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(StatusSelectionBar, {\n    tabClassName: styles.tabClassName,\n    className: styles.tabClass,\n    activeClass: styles.tabActive,\n    items: stateList,\n    onChange: onStateChange,\n    active: dateFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Filters, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.nestedContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Summary, {\n    dateFilters: { ...dateTimeFilters(),\n      ...extractPsFilters(psFilters),\n      ...pmFilters\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PaymentStatusWise, {\n    psFilters: { ...dateTimeFilters(),\n      ...extractPsFilters(psFilters),\n      ...pmFilters\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PaymentModeWise, {\n    pmFilters: { ...dateTimeFilters(),\n      ...extractPsFilters(psFilters),\n      ...extractPmFilters(pmFilters)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.orderHead,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, \"Order List\"), orders.length > 0 ? !isDesktop ? /*#__PURE__*/React.createElement(InfiniteLoader, {\n    loadMoreRows: loadMore,\n    isRowLoaded: isLoaded,\n    rowCount: rowCount,\n    minimumBatchSize: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, ({\n    onRowsRendered,\n    registerChild\n  }) => /*#__PURE__*/React.createElement(List, {\n    height: height,\n    onRowsRendered: onRowsRendered,\n    ref: registerChild,\n    rowCount: orders.length,\n    rowHeight: 130,\n    rowRenderer: renderItem,\n    className: styles.list,\n    width: window.screen.width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.marginLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteLoader, {\n    loadMoreRows: loadMore,\n    isRowLoaded: isLoaded,\n    rowCount: rowCount,\n    minimumBatchSize: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, ({\n    onRowsRendered,\n    registerChild\n  }) => /*#__PURE__*/React.createElement(Grid, {\n    onSectionRendered: onSectionRendered(onRowsRendered),\n    ref: registerChild,\n    cellRenderer: renderCell,\n    columnCount: 2,\n    columnWidth: cellWidth,\n    height: height,\n    rowCount: Math.ceil(rowCount / 2),\n    rowHeight: 120,\n    width: window.screen.width - 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }))) : getEmptyContainer()));\n}\n\n_s(PaymentsList, \"TfNhfPrKvkgYw4/63rPEg1+sDfs=\", false, function () {\n  return [useDesktop, useQueryParams, useHistory, usePaymentRules, useInfiniteOrders];\n});\n\n_c = PaymentsList;\nexport default PaymentsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentsList\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/payments/Payments.jsx"],"names":["React","useState","Grid","InfiniteLoader","List","useInfiniteOrders","useQueryParams","Loading","OrderCard","Picker","customDateFilters","getText","useDesktop","StatusSelectionBar","useHistory","usePaymentRules","_","dateFilters","extractPmFilters","extractPsFilters","pmStatusFilters","psStatusFilters","stateList","PaymentModeWise","PaymentStatusWise","Summary","styles","Filters","PaymentsList","isDesktop","params","history","rules","psFilters","get","pmFilters","dateFilter","dateRangeFilters","setDateRangeFilters","from","to","isEmptyFrom","isEmptyTo","dateTimeFilters","paymentStatusFilters","length","$or","status","undefined","orders","loadMore","hasMore","loading","$nin","paymentStatus","createdAt","rowCount","isLoaded","i","height","window","screen","cellWidth","width","isEmpty","onStateChange","val","set","push","search","toString","renderItem","item","key","style","marginBottom","index","renderCell","el","idx","rowIndex","columnIndex","onSectionRendered","onRowsRendered","columnStartIndex","columnStopIndex","rowStartIndex","rowStopIndex","startIndex","stopIndex","getEmptyContainer","emptyProducts","emptyIcon","emptyText","container","desktopContainer","datePickerForDesktop","flex","e","Object","keys","delete","input","tabClassName","tabClass","tabActive","nestedContainer","orderHead","registerChild","list","marginLeft","Math","ceil"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Grid, InfiniteLoader, List } from 'react-virtualized';\nimport { useInfiniteOrders, useQueryParams, } from 'hooks';\nimport { Loading } from 'components/shared/Loading';\nimport { OrderCard } from 'components/payments/OrderCard';\n// import cx from 'classnames';\nimport { Picker } from 'components/shared/dateRangePicker/Picker';\nimport { customDateFilters, getText } from 'containers/utils';\nimport { useDesktop } from 'contexts';\nimport { StatusSelectionBar } from 'components/shared/StatusSelectionBar';\nimport { useHistory } from 'react-router-dom';\nimport { usePaymentRules } from 'contexts/userContext';\nimport emptyIcon from 'assets/images/payments/empty.svg';\n\nimport _ from 'lodash';\nimport {\n  dateFilters, extractPmFilters, extractPsFilters, pmStatusFilters, psStatusFilters, stateList\n} from './utils';\nimport PaymentModeWise from './PaymentModeWise';\nimport PaymentStatusWise from './PaymentStatusWise';\nimport Summary from './Summary';\nimport styles from './Payments.module.css';\nimport Filters from './Filters';\n\nfunction PaymentsList() {\n  const isDesktop = useDesktop();\n  const params = useQueryParams();\n  const history = useHistory();\n  const rules = usePaymentRules(true);\n\n  const psFilters = psStatusFilters(params.get('ps'));\n  const pmFilters = pmStatusFilters(rules, params.get('pm'));\n\n  const dateFilter = params.get('dateFilter') || 'all';\n  const [dateRangeFilters, setDateRangeFilters] = useState({\n    from: null,\n    to: null\n  });\n\n  const isEmptyFrom = dateRangeFilters.from === null;\n  const isEmptyTo = dateRangeFilters.to === null;\n\n  const dateTimeFilters = () => {\n    if (dateFilter !== 'custom') {\n      return dateFilters[dateFilter];\n    }\n    if (isEmptyFrom || isEmptyTo) {\n      return {};\n    }\n    return customDateFilters(dateRangeFilters.from, dateRangeFilters.to);\n  };\n\n  const paymentStatusFilters = _.get(psFilters, '$or[0].status', []).length ? psFilters.$or[0].status : undefined;\n\n  const [orders, loadMore, hasMore, loading] = useInfiniteOrders(\n    {\n      ...dateTimeFilters(),\n      ...pmFilters,\n      status: { $nin: ['cart cancelled', 'cancelled'] },\n      paymentStatus: paymentStatusFilters,\n    },\n    {\n      createdAt: -1,\n    }\n  );\n\n  const rowCount = hasMore ? 10000 : orders.length;\n\n  const isLoaded = i => !!orders[i];\n\n  const height = window.screen.height - isDesktop ? (90 + 50 + 65 + 93 + 34 + 98 + 18) : (76 + 72 + 99 + 57 + 58);\n\n  const cellWidth = (window.screen.width - 420) / 2;\n\n  const isEmpty = orders.length === 0 && loading;\n\n  if (isEmpty) {\n    return <Loading />;\n  }\n\n  const onStateChange = (val) => {\n    params.set('dateFilter', val);\n    history.push({ search: params.toString() });\n  };\n\n  // eslint-disable-next-line react/no-multi-comp\n  const renderItem = (item) => (\n    <div\n      key={item.key}\n      style={{\n        ...item.style,\n        marginBottom: 'var(--l-spacing)'\n      }}>\n      <OrderCard order={orders[item.index]} />\n    </div>\n  );\n\n  const renderCell = (el) => {\n    const idx = el.rowIndex * 2 + el.columnIndex;\n    if (idx >= orders.length) {\n      return null;\n    }\n    return (\n      <div key={el.key} style={el.style}>\n        <OrderCard noBorder={(idx % 2 === 0)} order={orders[idx]} />\n      </div>\n    );\n  };\n\n  const onSectionRendered = (onRowsRendered) => ({\n    columnStartIndex,\n    columnStopIndex,\n    rowStartIndex,\n    rowStopIndex\n  }) => {\n    const startIndex = rowStartIndex * 2 + columnStartIndex;\n    const stopIndex = rowStopIndex * 2 + columnStopIndex;\n\n    onRowsRendered({\n      startIndex,\n      stopIndex\n    });\n  };\n\n  const getEmptyContainer = () => (\n    <div className={styles.emptyProducts}>\n      <img src={emptyIcon} alt=\"\" />\n      <div className={styles.emptyText}>\n        No Orders !!!\n      </div>\n    </div>\n  );\n\n  return (\n    <div className={styles.container}>\n      <>\n        <div className={styles.desktopContainer}>\n          <div className={isDesktop && styles.datePickerForDesktop}>\n            <div className={styles.flex}>\n              <Picker\n                label={getText(dateRangeFilters)}\n                float=\"left\"\n                onSelect={(e) => {\n                  setDateRangeFilters(e);\n                  params.set('dateFilter', 'custom');\n                  if (Object.keys(e).length === 0) {\n                    params.delete('dateFilter');\n                  }\n                  history.push({ search: params.toString() });\n                }}\n                inputStyle={styles.input}\n              />\n              <div className={styles.flex}></div>\n            </div>\n          </div>\n          <StatusSelectionBar\n            tabClassName={styles.tabClassName}\n            className={styles.tabClass}\n            activeClass={styles.tabActive}\n            items={stateList}\n            onChange={onStateChange}\n            active={dateFilter}\n          />\n          <Filters />\n          <div className={styles.nestedContainer}>\n            <Summary\n              dateFilters={{ ...dateTimeFilters(), ...extractPsFilters(psFilters), ...pmFilters }}\n            />\n            <PaymentStatusWise\n              psFilters={{ ...dateTimeFilters(), ...extractPsFilters(psFilters), ...pmFilters }}\n            />\n            <PaymentModeWise\n              pmFilters={{ ...dateTimeFilters(), ...extractPsFilters(psFilters), ...extractPmFilters(pmFilters) }}\n            />\n          </div>\n        </div>\n        <div className={styles.orderHead}>\n          Order List\n        </div>\n        {orders.length > 0 ? (\n          !isDesktop ? (\n            <InfiniteLoader\n              loadMoreRows={loadMore}\n              isRowLoaded={isLoaded}\n              rowCount={rowCount}\n              minimumBatchSize={10}\n            >\n              {({\n                onRowsRendered,\n                registerChild\n              }) => (\n                <List\n                  height={height}\n                  onRowsRendered={onRowsRendered}\n                  ref={registerChild}\n                  rowCount={orders.length}\n                  rowHeight={130}\n                  rowRenderer={renderItem}\n                  className={styles.list}\n                  width={window.screen.width}\n                />\n              )}\n            </InfiniteLoader>\n          )\n            : (\n              <div\n                className={styles.marginLeft}\n              >\n                <InfiniteLoader\n                  loadMoreRows={loadMore}\n                  isRowLoaded={isLoaded}\n                  rowCount={rowCount}\n                  minimumBatchSize={10}\n                >\n                  {({\n                    onRowsRendered,\n                    registerChild\n                  }) => (\n                    <Grid\n                      onSectionRendered={onSectionRendered(onRowsRendered)}\n                      ref={registerChild}\n                      cellRenderer={renderCell}\n                      columnCount={2}\n                      columnWidth={cellWidth}\n                      height={height}\n                      rowCount={Math.ceil(rowCount / 2)}\n                      rowHeight={120}\n                      width={window.screen.width - 400}\n                    />\n                  )}\n                </InfiniteLoader>\n              </div>\n            )\n        ) : getEmptyContainer()}\n      </>\n    </div>\n  );\n}\n\nexport default PaymentsList;\n"]},"metadata":{},"sourceType":"module"}