{"ast":null,"code":"const debounce = require('lodash.debounce');\n\nconst RuntimeErrorFooter = require('./components/RuntimeErrorFooter');\n\nconst RuntimeErrorHeader = require('./components/RuntimeErrorHeader');\n\nconst CompileErrorContainer = require('./containers/CompileErrorContainer');\n\nconst RuntimeErrorContainer = require('./containers/RuntimeErrorContainer');\n\nconst theme = require('./theme');\n\nconst removeAllChildren = require('./utils/removeAllChildren');\n/**\n * @callback RenderFn\n * @returns {void}\n */\n\n/* ===== Cached elements for DOM manipulations ===== */\n\n/**\n * The iframe that contains the overlay.\n * @type {HTMLIFrameElement}\n */\n\n\nlet iframeRoot = null;\n/**\n * The document object from the iframe root, used to create and render elements.\n * @type {Document}\n */\n\nlet rootDocument = null;\n/**\n * The root div elements will attach to.\n * @type {HTMLDivElement}\n */\n\nlet root = null;\n/**\n * A Cached function to allow deferred render.\n * @type {RenderFn | null}\n */\n\nlet scheduledRenderFn = null;\n/* ===== Overlay State ===== */\n\n/**\n * The latest error message from Webpack compilation.\n * @type {string}\n */\n\nlet currentCompileErrorMessage = '';\n/**\n * Index of the error currently shown by the overlay.\n * @type {number}\n */\n\nlet currentRuntimeErrorIndex = 0;\n/**\n * The latest runtime error objects.\n * @type {Error[]}\n */\n\nlet currentRuntimeErrors = [];\n/**\n * The render mode the overlay is currently in.\n * @type {'compileError' | 'runtimeError' | null}\n */\n\nlet currentMode = null;\n/**\n * @typedef {Object} IframeProps\n * @property {function(): void} onIframeLoad\n */\n\n/**\n * Creates the main `iframe` the overlay will attach to.\n * Accepts a callback to be ran after iframe is initialized.\n * @param {Document} document\n * @param {HTMLElement} root\n * @param {IframeProps} props\n * @returns {HTMLIFrameElement}\n */\n\nfunction IframeRoot(document, root, props) {\n  const iframe = document.createElement('iframe');\n  iframe.id = 'react-refresh-overlay';\n  iframe.src = 'about:blank';\n  iframe.style.border = 'none';\n  iframe.style.height = '100vh';\n  iframe.style.left = '0';\n  iframe.style.position = 'fixed';\n  iframe.style.top = '0';\n  iframe.style.width = '100vw';\n  iframe.style.zIndex = '2147483647';\n  iframe.addEventListener('load', function onLoad() {\n    // Reset margin of iframe body\n    iframe.contentDocument.body.style.margin = '0';\n    props.onIframeLoad();\n  }); // We skip mounting and returns as we need to ensure\n  // the load event is fired after we setup the global variable\n\n  return iframe;\n}\n/**\n * Creates the main `div` element for the overlay to render.\n * @param {Document} document\n * @param {HTMLElement} root\n * @returns {HTMLDivElement}\n */\n\n\nfunction OverlayRoot(document, root) {\n  const div = document.createElement('div');\n  div.id = 'react-refresh-overlay-error'; // Style the contents container\n\n  div.style.backgroundColor = '#' + theme.grey;\n  div.style.boxSizing = 'border-box';\n  div.style.color = '#' + theme.white;\n  div.style.fontFamily = ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', '\"Helvetica Neue\"', 'Helvetica', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', 'Segoe UI Symbol'].join(', ');\n  div.style.fontSize = '0.875rem';\n  div.style.height = '100vh';\n  div.style.lineHeight = '1.3';\n  div.style.overflow = 'auto';\n  div.style.padding = '1rem 1.5rem 0';\n  div.style.width = '100vw';\n  root.appendChild(div);\n  return div;\n}\n/**\n * Ensures the iframe root and the overlay root are both initialized before render.\n * If check fails, render will be deferred until both roots are initialized.\n * @param {RenderFn} renderFn A function that triggers a DOM render.\n * @returns {void}\n */\n\n\nfunction ensureRootExists(renderFn) {\n  if (root) {\n    // Overlay root is ready, we can render right away.\n    renderFn();\n    return;\n  } // Creating an iframe may be asynchronous so we'll defer render.\n  // In case of multiple calls, function from the last call will be used.\n\n\n  scheduledRenderFn = renderFn;\n\n  if (iframeRoot) {\n    // Iframe is already ready, it will fire the load event.\n    return;\n  } // Create the iframe root, and, the overlay root inside it when it is ready.\n\n\n  iframeRoot = IframeRoot(document, document.body, {\n    onIframeLoad: function onIframeLoad() {\n      rootDocument = iframeRoot.contentDocument;\n      root = OverlayRoot(rootDocument, rootDocument.body);\n      scheduledRenderFn();\n    }\n  }); // We have to mount here to ensure `iframeRoot` is set when `onIframeLoad` fires.\n  // This is because onIframeLoad() will be called synchronously\n  // or asynchronously depending on the browser.\n\n  document.body.appendChild(iframeRoot);\n}\n/**\n * Creates the main `div` element for the overlay to render.\n * @returns {void}\n */\n\n\nfunction render() {\n  ensureRootExists(function () {\n    const currentFocus = rootDocument.activeElement;\n    let currentFocusId;\n\n    if (currentFocus.localName === 'button' && currentFocus.id) {\n      currentFocusId = currentFocus.id;\n    }\n\n    removeAllChildren(root);\n\n    if (currentCompileErrorMessage) {\n      currentMode = 'compileError';\n      CompileErrorContainer(rootDocument, root, {\n        errorMessage: currentCompileErrorMessage\n      });\n    } else if (currentRuntimeErrors.length) {\n      currentMode = 'runtimeError';\n      RuntimeErrorHeader(rootDocument, root, {\n        currentErrorIndex: currentRuntimeErrorIndex,\n        totalErrors: currentRuntimeErrors.length\n      });\n      RuntimeErrorContainer(rootDocument, root, {\n        currentError: currentRuntimeErrors[currentRuntimeErrorIndex]\n      });\n      RuntimeErrorFooter(rootDocument, root, {\n        initialFocus: currentFocusId,\n        multiple: currentRuntimeErrors.length > 1,\n        onClickCloseButton: function onClose() {\n          clearRuntimeErrors();\n        },\n        onClickNextButton: function onNext() {\n          if (currentRuntimeErrorIndex === currentRuntimeErrors.length - 1) {\n            return;\n          }\n\n          currentRuntimeErrorIndex += 1;\n          ensureRootExists(render);\n        },\n        onClickPrevButton: function onPrev() {\n          if (currentRuntimeErrorIndex === 0) {\n            return;\n          }\n\n          currentRuntimeErrorIndex -= 1;\n          ensureRootExists(render);\n        }\n      });\n    }\n  });\n}\n/**\n * Destroys the state of the overlay.\n * @returns {void}\n */\n\n\nfunction cleanup() {\n  // Clean up and reset all internal state.\n  document.body.removeChild(iframeRoot);\n  scheduledRenderFn = null;\n  root = null;\n  iframeRoot = null;\n}\n/**\n * Clears Webpack compilation errors and dismisses the compile error overlay.\n * @returns {void}\n */\n\n\nfunction clearCompileError() {\n  if (!root || currentMode !== 'compileError') {\n    return;\n  }\n\n  currentCompileErrorMessage = '';\n  currentMode = null;\n  cleanup();\n}\n/**\n * Clears runtime error records and dismisses the runtime error overlay.\n * @param {boolean} [dismissOverlay] Whether to dismiss the overlay or not.\n * @returns {void}\n */\n\n\nfunction clearRuntimeErrors(dismissOverlay) {\n  if (!root || currentMode !== 'runtimeError') {\n    return;\n  }\n\n  currentRuntimeErrorIndex = 0;\n  currentRuntimeErrors = [];\n\n  if (typeof dismissOverlay === 'undefined' || dismissOverlay) {\n    currentMode = null;\n    cleanup();\n  }\n}\n/**\n * Shows the compile error overlay with the specific Webpack error message.\n * @param {string} message\n * @returns {void}\n */\n\n\nfunction showCompileError(message) {\n  if (!message) {\n    return;\n  }\n\n  currentCompileErrorMessage = message;\n  render();\n}\n/**\n * Shows the runtime error overlay with the specific error records.\n * @param {Error[]} errors\n * @returns {void}\n */\n\n\nfunction showRuntimeErrors(errors) {\n  if (!errors || !errors.length) {\n    return;\n  }\n\n  currentRuntimeErrors = errors;\n  render();\n}\n/**\n * The debounced version of `showRuntimeErrors` to prevent frequent renders\n * due to rapid firing listeners.\n * @param {Error[]} errors\n * @returns {void}\n */\n\n\nconst debouncedShowRuntimeErrors = debounce(showRuntimeErrors, 30);\n/**\n * Detects if an error is a Webpack compilation error.\n * @param {Error} error The error of interest.\n * @returns {boolean} If the error is a Webpack compilation error.\n */\n\nfunction isWebpackCompileError(error) {\n  return /Module [A-z ]+\\(from/.test(error.message) || /Cannot find module/.test(error.message);\n}\n/**\n * Handles runtime error contexts captured with EventListeners.\n * Integrates with a runtime error overlay.\n * @param {Error} error A valid error object.\n * @returns {void}\n */\n\n\nfunction handleRuntimeError(error) {\n  if (error && !isWebpackCompileError(error) && currentRuntimeErrors.indexOf(error) === -1) {\n    currentRuntimeErrors = currentRuntimeErrors.concat(error);\n  }\n\n  debouncedShowRuntimeErrors(currentRuntimeErrors);\n}\n\nmodule.exports = Object.freeze({\n  clearCompileError: clearCompileError,\n  clearRuntimeErrors: clearRuntimeErrors,\n  handleRuntimeError: handleRuntimeError,\n  showCompileError: showCompileError,\n  showRuntimeErrors: showRuntimeErrors\n});","map":{"version":3,"sources":["/home/harish/windo/phoenix/node_modules/customize-cra-react-refresh/node_modules/@pmmmwh/react-refresh-webpack-plugin/src/overlay/index.js"],"names":["debounce","require","RuntimeErrorFooter","RuntimeErrorHeader","CompileErrorContainer","RuntimeErrorContainer","theme","removeAllChildren","iframeRoot","rootDocument","root","scheduledRenderFn","currentCompileErrorMessage","currentRuntimeErrorIndex","currentRuntimeErrors","currentMode","IframeRoot","document","props","iframe","createElement","id","src","style","border","height","left","position","top","width","zIndex","addEventListener","onLoad","contentDocument","body","margin","onIframeLoad","OverlayRoot","div","backgroundColor","grey","boxSizing","color","white","fontFamily","join","fontSize","lineHeight","overflow","padding","appendChild","ensureRootExists","renderFn","render","currentFocus","activeElement","currentFocusId","localName","errorMessage","length","currentErrorIndex","totalErrors","currentError","initialFocus","multiple","onClickCloseButton","onClose","clearRuntimeErrors","onClickNextButton","onNext","onClickPrevButton","onPrev","cleanup","removeChild","clearCompileError","dismissOverlay","showCompileError","message","showRuntimeErrors","errors","debouncedShowRuntimeErrors","isWebpackCompileError","error","test","handleRuntimeError","indexOf","concat","module","exports","Object","freeze"],"mappings":"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","sourcesContent":["const debounce = require('lodash.debounce');\nconst RuntimeErrorFooter = require('./components/RuntimeErrorFooter');\nconst RuntimeErrorHeader = require('./components/RuntimeErrorHeader');\nconst CompileErrorContainer = require('./containers/CompileErrorContainer');\nconst RuntimeErrorContainer = require('./containers/RuntimeErrorContainer');\nconst theme = require('./theme');\nconst removeAllChildren = require('./utils/removeAllChildren');\n\n/**\n * @callback RenderFn\n * @returns {void}\n */\n\n/* ===== Cached elements for DOM manipulations ===== */\n/**\n * The iframe that contains the overlay.\n * @type {HTMLIFrameElement}\n */\nlet iframeRoot = null;\n/**\n * The document object from the iframe root, used to create and render elements.\n * @type {Document}\n */\nlet rootDocument = null;\n/**\n * The root div elements will attach to.\n * @type {HTMLDivElement}\n */\nlet root = null;\n/**\n * A Cached function to allow deferred render.\n * @type {RenderFn | null}\n */\nlet scheduledRenderFn = null;\n\n/* ===== Overlay State ===== */\n/**\n * The latest error message from Webpack compilation.\n * @type {string}\n */\nlet currentCompileErrorMessage = '';\n/**\n * Index of the error currently shown by the overlay.\n * @type {number}\n */\nlet currentRuntimeErrorIndex = 0;\n/**\n * The latest runtime error objects.\n * @type {Error[]}\n */\nlet currentRuntimeErrors = [];\n/**\n * The render mode the overlay is currently in.\n * @type {'compileError' | 'runtimeError' | null}\n */\nlet currentMode = null;\n\n/**\n * @typedef {Object} IframeProps\n * @property {function(): void} onIframeLoad\n */\n\n/**\n * Creates the main `iframe` the overlay will attach to.\n * Accepts a callback to be ran after iframe is initialized.\n * @param {Document} document\n * @param {HTMLElement} root\n * @param {IframeProps} props\n * @returns {HTMLIFrameElement}\n */\nfunction IframeRoot(document, root, props) {\n  const iframe = document.createElement('iframe');\n  iframe.id = 'react-refresh-overlay';\n  iframe.src = 'about:blank';\n\n  iframe.style.border = 'none';\n  iframe.style.height = '100vh';\n  iframe.style.left = '0';\n  iframe.style.position = 'fixed';\n  iframe.style.top = '0';\n  iframe.style.width = '100vw';\n  iframe.style.zIndex = '2147483647';\n  iframe.addEventListener('load', function onLoad() {\n    // Reset margin of iframe body\n    iframe.contentDocument.body.style.margin = '0';\n    props.onIframeLoad();\n  });\n\n  // We skip mounting and returns as we need to ensure\n  // the load event is fired after we setup the global variable\n  return iframe;\n}\n\n/**\n * Creates the main `div` element for the overlay to render.\n * @param {Document} document\n * @param {HTMLElement} root\n * @returns {HTMLDivElement}\n */\nfunction OverlayRoot(document, root) {\n  const div = document.createElement('div');\n  div.id = 'react-refresh-overlay-error';\n\n  // Style the contents container\n  div.style.backgroundColor = '#' + theme.grey;\n  div.style.boxSizing = 'border-box';\n  div.style.color = '#' + theme.white;\n  div.style.fontFamily = [\n    '-apple-system',\n    'BlinkMacSystemFont',\n    '\"Segoe UI\"',\n    '\"Helvetica Neue\"',\n    'Helvetica',\n    'Arial',\n    'sans-serif',\n    '\"Apple Color Emoji\"',\n    '\"Segoe UI Emoji\"',\n    'Segoe UI Symbol',\n  ].join(', ');\n  div.style.fontSize = '0.875rem';\n  div.style.height = '100vh';\n  div.style.lineHeight = '1.3';\n  div.style.overflow = 'auto';\n  div.style.padding = '1rem 1.5rem 0';\n  div.style.width = '100vw';\n\n  root.appendChild(div);\n  return div;\n}\n\n/**\n * Ensures the iframe root and the overlay root are both initialized before render.\n * If check fails, render will be deferred until both roots are initialized.\n * @param {RenderFn} renderFn A function that triggers a DOM render.\n * @returns {void}\n */\nfunction ensureRootExists(renderFn) {\n  if (root) {\n    // Overlay root is ready, we can render right away.\n    renderFn();\n    return;\n  }\n\n  // Creating an iframe may be asynchronous so we'll defer render.\n  // In case of multiple calls, function from the last call will be used.\n  scheduledRenderFn = renderFn;\n\n  if (iframeRoot) {\n    // Iframe is already ready, it will fire the load event.\n    return;\n  }\n\n  // Create the iframe root, and, the overlay root inside it when it is ready.\n  iframeRoot = IframeRoot(document, document.body, {\n    onIframeLoad: function onIframeLoad() {\n      rootDocument = iframeRoot.contentDocument;\n      root = OverlayRoot(rootDocument, rootDocument.body);\n      scheduledRenderFn();\n    },\n  });\n\n  // We have to mount here to ensure `iframeRoot` is set when `onIframeLoad` fires.\n  // This is because onIframeLoad() will be called synchronously\n  // or asynchronously depending on the browser.\n  document.body.appendChild(iframeRoot);\n}\n\n/**\n * Creates the main `div` element for the overlay to render.\n * @returns {void}\n */\nfunction render() {\n  ensureRootExists(function () {\n    const currentFocus = rootDocument.activeElement;\n    let currentFocusId;\n    if (currentFocus.localName === 'button' && currentFocus.id) {\n      currentFocusId = currentFocus.id;\n    }\n\n    removeAllChildren(root);\n\n    if (currentCompileErrorMessage) {\n      currentMode = 'compileError';\n\n      CompileErrorContainer(rootDocument, root, {\n        errorMessage: currentCompileErrorMessage,\n      });\n    } else if (currentRuntimeErrors.length) {\n      currentMode = 'runtimeError';\n\n      RuntimeErrorHeader(rootDocument, root, {\n        currentErrorIndex: currentRuntimeErrorIndex,\n        totalErrors: currentRuntimeErrors.length,\n      });\n      RuntimeErrorContainer(rootDocument, root, {\n        currentError: currentRuntimeErrors[currentRuntimeErrorIndex],\n      });\n      RuntimeErrorFooter(rootDocument, root, {\n        initialFocus: currentFocusId,\n        multiple: currentRuntimeErrors.length > 1,\n        onClickCloseButton: function onClose() {\n          clearRuntimeErrors();\n        },\n        onClickNextButton: function onNext() {\n          if (currentRuntimeErrorIndex === currentRuntimeErrors.length - 1) {\n            return;\n          }\n          currentRuntimeErrorIndex += 1;\n          ensureRootExists(render);\n        },\n        onClickPrevButton: function onPrev() {\n          if (currentRuntimeErrorIndex === 0) {\n            return;\n          }\n          currentRuntimeErrorIndex -= 1;\n          ensureRootExists(render);\n        },\n      });\n    }\n  });\n}\n\n/**\n * Destroys the state of the overlay.\n * @returns {void}\n */\nfunction cleanup() {\n  // Clean up and reset all internal state.\n  document.body.removeChild(iframeRoot);\n  scheduledRenderFn = null;\n  root = null;\n  iframeRoot = null;\n}\n\n/**\n * Clears Webpack compilation errors and dismisses the compile error overlay.\n * @returns {void}\n */\nfunction clearCompileError() {\n  if (!root || currentMode !== 'compileError') {\n    return;\n  }\n\n  currentCompileErrorMessage = '';\n  currentMode = null;\n  cleanup();\n}\n\n/**\n * Clears runtime error records and dismisses the runtime error overlay.\n * @param {boolean} [dismissOverlay] Whether to dismiss the overlay or not.\n * @returns {void}\n */\nfunction clearRuntimeErrors(dismissOverlay) {\n  if (!root || currentMode !== 'runtimeError') {\n    return;\n  }\n\n  currentRuntimeErrorIndex = 0;\n  currentRuntimeErrors = [];\n\n  if (typeof dismissOverlay === 'undefined' || dismissOverlay) {\n    currentMode = null;\n    cleanup();\n  }\n}\n\n/**\n * Shows the compile error overlay with the specific Webpack error message.\n * @param {string} message\n * @returns {void}\n */\nfunction showCompileError(message) {\n  if (!message) {\n    return;\n  }\n\n  currentCompileErrorMessage = message;\n\n  render();\n}\n\n/**\n * Shows the runtime error overlay with the specific error records.\n * @param {Error[]} errors\n * @returns {void}\n */\nfunction showRuntimeErrors(errors) {\n  if (!errors || !errors.length) {\n    return;\n  }\n\n  currentRuntimeErrors = errors;\n\n  render();\n}\n\n/**\n * The debounced version of `showRuntimeErrors` to prevent frequent renders\n * due to rapid firing listeners.\n * @param {Error[]} errors\n * @returns {void}\n */\nconst debouncedShowRuntimeErrors = debounce(showRuntimeErrors, 30);\n\n/**\n * Detects if an error is a Webpack compilation error.\n * @param {Error} error The error of interest.\n * @returns {boolean} If the error is a Webpack compilation error.\n */\nfunction isWebpackCompileError(error) {\n  return /Module [A-z ]+\\(from/.test(error.message) || /Cannot find module/.test(error.message);\n}\n\n/**\n * Handles runtime error contexts captured with EventListeners.\n * Integrates with a runtime error overlay.\n * @param {Error} error A valid error object.\n * @returns {void}\n */\nfunction handleRuntimeError(error) {\n  if (error && !isWebpackCompileError(error) && currentRuntimeErrors.indexOf(error) === -1) {\n    currentRuntimeErrors = currentRuntimeErrors.concat(error);\n  }\n  debouncedShowRuntimeErrors(currentRuntimeErrors);\n}\n\nmodule.exports = Object.freeze({\n  clearCompileError: clearCompileError,\n  clearRuntimeErrors: clearRuntimeErrors,\n  handleRuntimeError: handleRuntimeError,\n  showCompileError: showCompileError,\n  showRuntimeErrors: showRuntimeErrors,\n});\n"]},"metadata":{},"sourceType":"script"}