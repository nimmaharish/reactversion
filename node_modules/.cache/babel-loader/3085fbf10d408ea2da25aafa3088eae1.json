{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Becca } from \"../api\";\nimport Snackbar from \"../services/snackbar\";\nexport function usePlans() {\n  _s();\n\n  const [plans, setPlans] = useState({\n    plans: []\n  });\n  const [loading, setLoading] = useState(false);\n\n  const refresh = async () => {\n    if (loading) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const plansList = await Becca.listPlans();\n      plansList.plans = plansList.plans.map(plan => ({ ...plan,\n        price: plan.price.reverse()\n      }));\n      setPlans(plansList);\n    } catch (e) {\n      console.error(e);\n      Snackbar.show('error occurred', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    refresh();\n  }, []);\n  return [plans, loading, refresh];\n}\n\n_s(usePlans, \"wqOe+2OYMWaD1JjKDz8vYs/S7KI=\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/hooks/plans.js"],"names":["useEffect","useState","Becca","Snackbar","usePlans","plans","setPlans","loading","setLoading","refresh","plansList","listPlans","map","plan","price","reverse","e","console","error","show"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,KAAT;AACA,OAAOC,QAAP;AAEA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAlC;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMQ,OAAO,GAAG,YAAY;AAC1B,QAAIF,OAAJ,EAAa;AACX;AACD;;AACD,QAAI;AACFC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAME,SAAS,GAAG,MAAMR,KAAK,CAACS,SAAN,EAAxB;AACAD,MAAAA,SAAS,CAACL,KAAV,GAAkBK,SAAS,CAACL,KAAV,CAAgBO,GAAhB,CAAoBC,IAAI,KAAK,EAC7C,GAAGA,IAD0C;AAE7CC,QAAAA,KAAK,EAAED,IAAI,CAACC,KAAL,CAAWC,OAAX;AAFsC,OAAL,CAAxB,CAAlB;AAIAT,MAAAA,QAAQ,CAACI,SAAD,CAAR;AACD,KARD,CAQE,OAAOM,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACAb,MAAAA,QAAQ,CAACgB,IAAT,CAAc,gBAAd,EAAgC,OAAhC;AACD,KAXD,SAWU;AACRX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAlBD;;AAoBAR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,CAACJ,KAAD,EAAQE,OAAR,EAAiBE,OAAjB,CAAP;AACD;;GA7BeL,Q","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Becca } from 'api';\nimport Snackbar from 'services/snackbar';\n\nexport function usePlans() {\n  const [plans, setPlans] = useState({ plans: [] });\n  const [loading, setLoading] = useState(false);\n\n  const refresh = async () => {\n    if (loading) {\n      return;\n    }\n    try {\n      setLoading(true);\n      const plansList = await Becca.listPlans();\n      plansList.plans = plansList.plans.map(plan => ({\n        ...plan,\n        price: plan.price.reverse(),\n      }));\n      setPlans(plansList);\n    } catch (e) {\n      console.error(e);\n      Snackbar.show('error occurred', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    refresh();\n  }, []);\n\n  return [plans, loading, refresh];\n}\n"]},"metadata":{},"sourceType":"module"}