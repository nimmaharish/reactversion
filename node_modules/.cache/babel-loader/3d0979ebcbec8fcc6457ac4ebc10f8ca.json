{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/web/Subscriptions.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useWebData } from \"../../contexts/webContext\";\nimport { Loading } from \"../../components/shared/Loading\";\nimport { useHistory } from 'react-router-dom';\nimport Loader from \"../../services/loader\";\nimport { Becca } from \"../../api\";\nimport URL from \"../../utils/url\";\nimport Stripe from \"../../services/stripe\";\nimport SnackBar from \"../../services/snackbar\";\nexport function Subscriptions() {\n  _s();\n\n  const data = useWebData();\n  const history = useHistory();\n  useEffect(() => {\n    const onBuy = async () => {\n      Loader.show();\n\n      try {\n        const {\n          id\n        } = await Becca.subscribePlan(data.planId, data.priceId, URL.getUrl('/subscriptions'), URL.getUrl('/subscriptions'));\n        await Stripe.redirectToCheckout(id);\n      } catch (e) {\n        SnackBar.showError(e);\n      } finally {\n        Loader.hide();\n      }\n    };\n\n    if (data !== null && data !== void 0 && data.planId && data !== null && data !== void 0 && data.priceId) {\n      onBuy();\n      return;\n    }\n\n    history.replace('/');\n  }, []);\n  return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  });\n}\n\n_s(Subscriptions, \"GsQ33WR+4WbQ6xZwX3mrpbwhwCg=\", false, function () {\n  return [useWebData, useHistory];\n});\n\n_c = Subscriptions;\nSubscriptions.propTypes = {};\nSubscriptions.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"Subscriptions\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/web/Subscriptions.jsx"],"names":["React","useEffect","useWebData","Loading","useHistory","Loader","Becca","URL","Stripe","SnackBar","Subscriptions","data","history","onBuy","show","id","subscribePlan","planId","priceId","getUrl","redirectToCheckout","e","showError","hide","replace","propTypes","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT;AACA,SAASC,OAAT;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP;AACA,SAASC,KAAT;AACA,OAAOC,GAAP;AACA,OAAOC,MAAP;AACA,OAAOC,QAAP;AAEA,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAC9B,QAAMC,IAAI,GAAGT,UAAU,EAAvB;AACA,QAAMU,OAAO,GAAGR,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,KAAK,GAAG,YAAY;AACxBR,MAAAA,MAAM,CAACS,IAAP;;AACA,UAAI;AACF,cAAM;AAAEC,UAAAA;AAAF,YAAS,MAAMT,KAAK,CAACU,aAAN,CACnBL,IAAI,CAACM,MADc,EACNN,IAAI,CAACO,OADC,EAEnBX,GAAG,CAACY,MAAJ,CAAW,gBAAX,CAFmB,EAGnBZ,GAAG,CAACY,MAAJ,CAAW,gBAAX,CAHmB,CAArB;AAKA,cAAMX,MAAM,CAACY,kBAAP,CAA0BL,EAA1B,CAAN;AACD,OAPD,CAOE,OAAOM,CAAP,EAAU;AACVZ,QAAAA,QAAQ,CAACa,SAAT,CAAmBD,CAAnB;AACD,OATD,SASU;AACRhB,QAAAA,MAAM,CAACkB,IAAP;AACD;AACF,KAdD;;AAgBA,QAAIZ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,IAAAA,IAAI,CAAEM,MAAN,IAAgBN,IAAhB,aAAgBA,IAAhB,eAAgBA,IAAI,CAAEO,OAA1B,EAAmC;AACjCL,MAAAA,KAAK;AACL;AACD;;AACDD,IAAAA,OAAO,CAACY,OAAR,CAAgB,GAAhB;AACD,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD;;GA/Bed,a;UACDR,U,EACGE,U;;;KAFFM,a;AAiChBA,aAAa,CAACe,SAAd,GAA0B,EAA1B;AAEAf,aAAa,CAACgB,YAAd,GAA6B,EAA7B","sourcesContent":["import React, { useEffect } from 'react';\nimport { useWebData } from 'contexts/webContext';\nimport { Loading } from 'components/shared/Loading';\nimport { useHistory } from 'react-router-dom';\nimport Loader from 'services/loader';\nimport { Becca } from 'api';\nimport URL from 'utils/url';\nimport Stripe from 'services/stripe';\nimport SnackBar from 'services/snackbar';\n\nexport function Subscriptions() {\n  const data = useWebData();\n  const history = useHistory();\n\n  useEffect(() => {\n    const onBuy = async () => {\n      Loader.show();\n      try {\n        const { id } = await Becca.subscribePlan(\n          data.planId, data.priceId,\n          URL.getUrl('/subscriptions'),\n          URL.getUrl('/subscriptions'),\n        );\n        await Stripe.redirectToCheckout(id);\n      } catch (e) {\n        SnackBar.showError(e);\n      } finally {\n        Loader.hide();\n      }\n    };\n\n    if (data?.planId && data?.priceId) {\n      onBuy();\n      return;\n    }\n    history.replace('/');\n  }, []);\n\n  return (\n    <Loading />\n  );\n}\n\nSubscriptions.propTypes = {};\n\nSubscriptions.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}