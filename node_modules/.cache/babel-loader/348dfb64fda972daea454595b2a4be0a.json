{"ast":null,"code":"export default function throttle(fn, onThrottle, opts) {\n  var context = this;\n  var limit = opts.limit;\n  var interval = opts.interval;\n  var counter = 0;\n  var timeoutId;\n  return function () {\n    counter++;\n\n    if (typeof timeoutId === 'undefined') {\n      timeoutId = setTimeout(function () {\n        counter = 0;\n        timeoutId = undefined;\n      }, interval);\n    }\n\n    if (counter > limit && typeof onThrottle === 'function') {\n      return onThrottle.apply(context, arguments);\n    } else {\n      return fn.apply(context, arguments);\n    }\n  };\n}","map":{"version":3,"sources":["/home/harish/windo/phoenix/node_modules/@elastic/apm-rum-core/dist/es/common/throttle.js"],"names":["throttle","fn","onThrottle","opts","context","limit","interval","counter","timeoutId","setTimeout","undefined","apply","arguments"],"mappings":"AAAA,eAAe,SAASA,QAAT,CAAkBC,EAAlB,EAAsBC,UAAtB,EAAkCC,IAAlC,EAAwC;AACrD,MAAIC,OAAO,GAAG,IAAd;AACA,MAAIC,KAAK,GAAGF,IAAI,CAACE,KAAjB;AACA,MAAIC,QAAQ,GAAGH,IAAI,CAACG,QAApB;AACA,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,SAAJ;AACA,SAAO,YAAY;AACjBD,IAAAA,OAAO;;AAEP,QAAI,OAAOC,SAAP,KAAqB,WAAzB,EAAsC;AACpCA,MAAAA,SAAS,GAAGC,UAAU,CAAC,YAAY;AACjCF,QAAAA,OAAO,GAAG,CAAV;AACAC,QAAAA,SAAS,GAAGE,SAAZ;AACD,OAHqB,EAGnBJ,QAHmB,CAAtB;AAID;;AAED,QAAIC,OAAO,GAAGF,KAAV,IAAmB,OAAOH,UAAP,KAAsB,UAA7C,EAAyD;AACvD,aAAOA,UAAU,CAACS,KAAX,CAAiBP,OAAjB,EAA0BQ,SAA1B,CAAP;AACD,KAFD,MAEO;AACL,aAAOX,EAAE,CAACU,KAAH,CAASP,OAAT,EAAkBQ,SAAlB,CAAP;AACD;AACF,GAfD;AAgBD","sourcesContent":["export default function throttle(fn, onThrottle, opts) {\n  var context = this;\n  var limit = opts.limit;\n  var interval = opts.interval;\n  var counter = 0;\n  var timeoutId;\n  return function () {\n    counter++;\n\n    if (typeof timeoutId === 'undefined') {\n      timeoutId = setTimeout(function () {\n        counter = 0;\n        timeoutId = undefined;\n      }, interval);\n    }\n\n    if (counter > limit && typeof onThrottle === 'function') {\n      return onThrottle.apply(context, arguments);\n    } else {\n      return fn.apply(context, arguments);\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}