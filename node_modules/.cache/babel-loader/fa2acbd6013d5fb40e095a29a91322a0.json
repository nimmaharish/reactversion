{"ast":null,"code":"import * as Yup from 'yup';\nexport function getInitialValues(bank = {}) {\n  return {\n    accountNumber: bank.accountNumber || '',\n    repeatAccountNumber: bank.accountNumber || '',\n    ifsc: bank.ifsc || '',\n    accountName: bank.name || '',\n    status: 'created'\n  };\n}\nexport const bankSchema = Yup.object().shape({\n  accountNumber: Yup.string().required().label('account number'),\n  repeatAccountNumber: Yup.string().oneOf([Yup.ref('accountNumber')], 'account number didn\\'t match').required().label('confirm account number'),\n  ifsc: Yup.string().required().min(11).max(11).label('IFSC'),\n  accountName: Yup.string().required().label('account name').min(3),\n  status: Yup.string().required()\n});","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/bank/utils.js"],"names":["Yup","getInitialValues","bank","accountNumber","repeatAccountNumber","ifsc","accountName","name","status","bankSchema","object","shape","string","required","label","oneOf","ref","min","max"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,OAAO,SAASC,gBAAT,CAA0BC,IAAI,GAAG,EAAjC,EAAqC;AAC1C,SAAO;AACLC,IAAAA,aAAa,EAAED,IAAI,CAACC,aAAL,IAAsB,EADhC;AAELC,IAAAA,mBAAmB,EAAEF,IAAI,CAACC,aAAL,IAAsB,EAFtC;AAGLE,IAAAA,IAAI,EAAEH,IAAI,CAACG,IAAL,IAAa,EAHd;AAILC,IAAAA,WAAW,EAAEJ,IAAI,CAACK,IAAL,IAAa,EAJrB;AAKLC,IAAAA,MAAM,EAAE;AALH,GAAP;AAOD;AAED,OAAO,MAAMC,UAAU,GAAGT,GAAG,CAACU,MAAJ,GACvBC,KADuB,CACjB;AACLR,EAAAA,aAAa,EAAEH,GAAG,CAACY,MAAJ,GACZC,QADY,GAEZC,KAFY,CAEN,gBAFM,CADV;AAILV,EAAAA,mBAAmB,EAAEJ,GAAG,CAACY,MAAJ,GAClBG,KADkB,CACZ,CAACf,GAAG,CAACgB,GAAJ,CAAQ,eAAR,CAAD,CADY,EACgB,8BADhB,EAElBH,QAFkB,GAGlBC,KAHkB,CAGZ,wBAHY,CAJhB;AAQLT,EAAAA,IAAI,EAAEL,GAAG,CAACY,MAAJ,GACHC,QADG,GAEHI,GAFG,CAEC,EAFD,EAGHC,GAHG,CAGC,EAHD,EAIHJ,KAJG,CAIG,MAJH,CARD;AAaLR,EAAAA,WAAW,EAAEN,GAAG,CAACY,MAAJ,GACVC,QADU,GAEVC,KAFU,CAEJ,cAFI,EAGVG,GAHU,CAGN,CAHM,CAbR;AAiBLT,EAAAA,MAAM,EAAER,GAAG,CAACY,MAAJ,GACLC,QADK;AAjBH,CADiB,CAAnB","sourcesContent":["import * as Yup from 'yup';\n\nexport function getInitialValues(bank = {}) {\n  return {\n    accountNumber: bank.accountNumber || '',\n    repeatAccountNumber: bank.accountNumber || '',\n    ifsc: bank.ifsc || '',\n    accountName: bank.name || '',\n    status: 'created',\n  };\n}\n\nexport const bankSchema = Yup.object()\n  .shape({\n    accountNumber: Yup.string()\n      .required()\n      .label('account number'),\n    repeatAccountNumber: Yup.string()\n      .oneOf([Yup.ref('accountNumber')], 'account number didn\\'t match')\n      .required()\n      .label('confirm account number'),\n    ifsc: Yup.string()\n      .required()\n      .min(11)\n      .max(11)\n      .label('IFSC'),\n    accountName: Yup.string()\n      .required()\n      .label('account name')\n      .min(3),\n    status: Yup.string()\n      .required(),\n  });\n"]},"metadata":{},"sourceType":"module"}