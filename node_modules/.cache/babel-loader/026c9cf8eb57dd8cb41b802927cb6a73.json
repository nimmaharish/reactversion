{"ast":null,"code":"import * as Yup from 'yup';\nexport const marshalData = values => {\n  var _values$modes;\n\n  return {\n    payable: values === null || values === void 0 ? void 0 : values.payable,\n    modes: values === null || values === void 0 ? void 0 : (_values$modes = values.modes) === null || _values$modes === void 0 ? void 0 : _values$modes.filter(mode => mode === null || mode === void 0 ? void 0 : mode.enabled).map(mode => ({\n      type: mode === null || mode === void 0 ? void 0 : mode.type,\n      id: mode === null || mode === void 0 ? void 0 : mode.id\n    }))\n  };\n};\nexport const getInitialValues = (shop = {}, link) => {\n  var _shop$paymentModes, _shop$paymentModes$on, _shop$paymentModes2, _shop$paymentModes2$c;\n\n  const modes = [];\n\n  if (shop !== null && shop !== void 0 && (_shop$paymentModes = shop.paymentModes) !== null && _shop$paymentModes !== void 0 && (_shop$paymentModes$on = _shop$paymentModes.online) !== null && _shop$paymentModes$on !== void 0 && _shop$paymentModes$on.enabled) {\n    const enabled = (shop.accounts || []).filter(x => x.enabled);\n\n    if (enabled !== null && enabled !== void 0 && enabled.length) {\n      var _link$modes;\n\n      modes.push({\n        type: 'online',\n        id: enabled[0]._id,\n        name: 'Online',\n        enabled: link !== null && link !== void 0 && link.payable ? Boolean(link === null || link === void 0 ? void 0 : (_link$modes = link.modes) === null || _link$modes === void 0 ? void 0 : _link$modes.find(mode => (mode === null || mode === void 0 ? void 0 : mode.id) === enabled[0]._id)) : true\n      });\n    }\n  }\n\n  if (shop !== null && shop !== void 0 && (_shop$paymentModes2 = shop.paymentModes) !== null && _shop$paymentModes2 !== void 0 && (_shop$paymentModes2$c = _shop$paymentModes2.custompayment) !== null && _shop$paymentModes2$c !== void 0 && _shop$paymentModes2$c.enabled) {\n    const enabledModes = (shop.paymentModes.custompayment.configured || []).filter(x => x.status === 'live').map(x => {\n      var _link$modes2;\n\n      return {\n        type: 'custompayment',\n        id: x._id,\n        name: x.mode,\n        enabled: link !== null && link !== void 0 && link.payable ? Boolean(link === null || link === void 0 ? void 0 : (_link$modes2 = link.modes) === null || _link$modes2 === void 0 ? void 0 : _link$modes2.find(mode => (mode === null || mode === void 0 ? void 0 : mode.id) === x._id)) : true\n      };\n    });\n    modes.push(...enabledModes);\n  }\n\n  return {\n    payable: (link === null || link === void 0 ? void 0 : link.payable) || '',\n    modes\n  };\n};\nexport const schema = Yup.object({\n  payable: Yup.number().moreThan(0).required('Payable is required')\n});","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/orders/paymentLinkUtils.js"],"names":["Yup","marshalData","values","payable","modes","filter","mode","enabled","map","type","id","getInitialValues","shop","link","paymentModes","online","accounts","x","length","push","_id","name","Boolean","find","custompayment","enabledModes","configured","status","schema","object","number","moreThan","required"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\n\nexport const marshalData = (values) => ({\n  payable: values?.payable,\n  modes: values?.modes?.filter(mode => mode?.enabled).map(mode => ({ type: mode?.type, id: mode?.id })),\n});\n\nexport const getInitialValues = (shop = {}, link) => {\n  const modes = [];\n  if (shop?.paymentModes?.online?.enabled) {\n    const enabled = (shop.accounts || []).filter(x => x.enabled);\n    if (enabled?.length) {\n      modes.push({\n        type: 'online',\n        id: enabled[0]._id,\n        name: 'Online',\n        enabled: link?.payable ? Boolean(link?.modes?.find(mode => mode?.id === enabled[0]._id)) : true,\n      });\n    }\n  }\n  if (shop?.paymentModes?.custompayment?.enabled) {\n    const enabledModes = (shop.paymentModes.custompayment.configured || [])\n      .filter(x => x.status === 'live')\n      .map(x => ({\n        type: 'custompayment',\n        id: x._id,\n        name: x.mode,\n        enabled: link?.payable ? Boolean(link?.modes?.find(mode => mode?.id === x._id)) : true,\n      }));\n    modes.push(...enabledModes);\n  }\n  return {\n    payable: link?.payable || '',\n    modes,\n  };\n};\n\nexport const schema = Yup.object({\n  payable: Yup.number().moreThan(0).required('Payable is required'),\n});\n"]},"metadata":{},"sourceType":"module"}