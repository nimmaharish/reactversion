{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/profile/bank/BankDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Drawer } from \"../../../components/shared/Drawer\";\nimport { Grid } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport { FormikInput, Button as Btn } from 'phoenix-components';\nimport { Becca } from \"../../../api\";\nimport Loader from \"../../../services/loader\";\nimport SnackBar from \"../../../services/snackbar\";\nimport { useLocation, useHistory } from 'react-router-dom'; // import closeIcon from 'assets/images/common/close.svg';\n\nimport chevronLeftDesk from \"../../../assets/v2/common/chevronPrimaryLeft.svg\";\nimport errorIcon from \"../../../assets/images/profile/warn.svg\";\nimport sIcon from \"../../../assets/v2/bank/success.svg\";\nimport pIcon from \"../../../assets/v2/bank/process.svg\";\nimport eIcon from \"../../../assets/v2/bank/error.svg\";\nimport { useRefreshShop, useShop } from \"../../../contexts\";\nimport IFSCSearch from \"./IFSCSearch\";\nimport { useToggle } from \"../../../hooks/common\";\nimport cx from 'classnames'; // import ButtonComponent from './ButtonComponent';\n\nimport Alert from \"../../../components/shared/alert/Alert.jsx\";\nimport EventManager from \"../../../utils/events\";\nimport { useDesktop } from \"../../../contexts\";\nimport styles from \"./BankDetails.module.css\";\nimport { bankSchema, getInitialValues } from \"./utils\";\nimport BankDetail from \"./BankDetail\";\n\nfunction BankDetails() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [openIFSC, toggleIFSC] = useToggle();\n  const refreshShop = useRefreshShop();\n  const location = useLocation();\n  const history = useHistory();\n  const isDesktop = useDesktop();\n  const {\n    bank = {}\n  } = useShop();\n  const {\n    status = '',\n    message\n  } = bank;\n  const isEmptyStatus = status === 'created' || status === '';\n\n  const getStatusSection = () => {\n    if (isEmptyStatus) {\n      return null;\n    }\n\n    if (status === 'success') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: cx(styles.success, styles.status),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: sIcon,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.left,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, \" Account verified \"));\n    }\n\n    if (status === 'processing') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: cx(styles.process, styles.status),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: pIcon,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.left,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, \" Account verification in progress\"));\n    }\n\n    if (status === 'error') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: cx(styles.error, styles.status1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flexEnd\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: eIcon,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.left,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, \" Account verification failed\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.failed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, message));\n    }\n\n    return null;\n  };\n\n  const onSubmit = async values => {\n    Loader.show();\n\n    try {\n      var _location$state;\n\n      await Becca.saveBankDetails(values);\n      EventManager.emitEvent('bank_detail_added');\n      refreshShop();\n      SnackBar.show('Details saved successfully', 'success');\n\n      if (location !== null && location !== void 0 && (_location$state = location.state) !== null && _location$state !== void 0 && _location$state.redirectTo) {\n        var _location$state2;\n\n        if (location !== null && location !== void 0 && (_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.mainRedirect) {\n          var _location$state3, _location$state4;\n\n          history.push(location === null || location === void 0 ? void 0 : (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.redirectTo, {\n            redirectTo: location === null || location === void 0 ? void 0 : (_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : _location$state4.mainRedirect\n          });\n          return;\n        }\n\n        history.push(location.state.redirectTo);\n        return;\n      }\n    } catch (e) {\n      var _e$response, _e$response$data;\n\n      setError((e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message) || 'Something went wrong, try again later!');\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  return isDesktop ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.desktopMainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => history.goBack(),\n    className: styles.maintitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.backIconForDesktop,\n    src: chevronLeftDesk,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"\\xA0\"), \"Bank Details\"), getStatusSection(), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: getInitialValues(bank),\n    validationSchema: bankSchema,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, ({\n    submitForm,\n    isValid\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: styles.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    name: \"accountNumber\",\n    placeholder: \"Enter Account Number\",\n    label: \"Account Number \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: styles.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    name: \"repeatAccountNumber\",\n    placeholder: \"Enter Account Number\",\n    label: \"Confirm Account Number \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: styles.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    name: \"accountName\",\n    placeholder: \"Enter Name\",\n    label: \"Account Holder Name \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: styles.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    name: \"ifsc\",\n    placeholder: \"Enter IFSC Code\",\n    label: \"IFSC Code \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexEnd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.textRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \" Not sure about IFSC\"), /*#__PURE__*/React.createElement(\"p\", {\n    onClick: toggleIFSC,\n    className: styles.ifscButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \"click here?\")), /*#__PURE__*/React.createElement(BankDetail, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Btn, {\n    className: styles.Btn,\n    label: \"Save\",\n    onClick: submitForm,\n    size: \"large\",\n    disabled: !isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }), error !== null && /*#__PURE__*/React.createElement(Alert, {\n    text: error,\n    btnText: \"Ok\",\n    icon: errorIcon,\n    textClass: styles.textClass,\n    onClick: () => setError(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }), openIFSC && /*#__PURE__*/React.createElement(IFSCSearch, {\n    onClose: toggleIFSC,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 29\n    }\n  }))))) : /*#__PURE__*/React.createElement(Drawer, {\n    title: \"Bank Details\",\n    containerClass: styles.drawer,\n    topBarClass: styles.drawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, getStatusSection(), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: getInitialValues(bank),\n    validationSchema: bankSchema,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, ({\n    submitForm,\n    isValid\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: styles.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    name: \"accountNumber\",\n    placeholder: \"Enter Account Number\",\n    label: \"Account Number \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: styles.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    name: \"repeatAccountNumber\",\n    placeholder: \"Enter Account Number\",\n    label: \"Confirm Account Number \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: styles.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    name: \"accountName\",\n    placeholder: \"Enter Name\",\n    label: \"Account Holder Name \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: styles.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    name: \"ifsc\",\n    placeholder: \"Enter IFSC Code\",\n    label: \"IFSC Code \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexEnd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.textRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }\n  }, \" Not sure about IFSC\"), /*#__PURE__*/React.createElement(\"p\", {\n    onClick: toggleIFSC,\n    className: styles.ifscButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 19\n    }\n  }, \"click here?\")), /*#__PURE__*/React.createElement(BankDetail, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Btn, {\n    className: styles.Btn,\n    label: \"Save\",\n    onClick: submitForm,\n    fullWidth: true,\n    size: \"large\",\n    disabled: !isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }), error !== null && /*#__PURE__*/React.createElement(Alert, {\n    text: error,\n    btnText: \"Ok\",\n    icon: errorIcon,\n    textClass: styles.textClass,\n    onClick: () => setError(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 19\n    }\n  }), openIFSC && /*#__PURE__*/React.createElement(IFSCSearch, {\n    onClose: toggleIFSC,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 31\n    }\n  })))));\n}\n\n_s(BankDetails, \"Ccw8mfn8n16V8jHb1WGmF5cNlo4=\", false, function () {\n  return [useToggle, useRefreshShop, useLocation, useHistory, useDesktop, useShop];\n});\n\n_c = BankDetails;\nBankDetails.propTypes = {};\nBankDetails.defaultProps = {};\nexport default BankDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"BankDetails\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/bank/BankDetails.jsx"],"names":["React","useState","Drawer","Grid","Formik","FormikInput","Button","Btn","Becca","Loader","SnackBar","useLocation","useHistory","useRefreshShop","useShop","IFSCSearch","useToggle","cx","Alert","EventManager","useDesktop","styles","bankSchema","getInitialValues","BankDetail","BankDetails","error","setError","openIFSC","toggleIFSC","refreshShop","location","history","isDesktop","bank","status","message","isEmptyStatus","getStatusSection","success","sIcon","left","process","pIcon","status1","eIcon","failed","onSubmit","values","show","saveBankDetails","emitEvent","state","redirectTo","mainRedirect","push","e","response","data","hide","desktopMainContainer","goBack","maintitle","backIconForDesktop","chevronLeftDesk","container","submitForm","isValid","grid","textRight","ifscButton","errorIcon","textClass","drawer","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Drawer } from 'components/shared/Drawer';\nimport { Grid } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport { FormikInput, Button as Btn } from 'phoenix-components';\nimport { Becca } from 'api';\nimport Loader from 'services/loader';\nimport SnackBar from 'services/snackbar';\nimport { useLocation, useHistory } from 'react-router-dom';\n// import closeIcon from 'assets/images/common/close.svg';\nimport chevronLeftDesk from 'assets/v2/common/chevronPrimaryLeft.svg';\nimport errorIcon from 'assets/images/profile/warn.svg';\nimport sIcon from 'assets/v2/bank/success.svg';\nimport pIcon from 'assets/v2/bank/process.svg';\nimport eIcon from 'assets/v2/bank/error.svg';\nimport { useRefreshShop, useShop } from 'contexts';\nimport IFSCSearch from 'containers/profile/bank/IFSCSearch';\nimport { useToggle } from 'hooks/common';\nimport cx from 'classnames';\n// import ButtonComponent from './ButtonComponent';\nimport Alert from 'components/shared/alert/Alert.jsx';\nimport EventManager from 'utils/events';\nimport { useDesktop } from 'contexts';\nimport styles from './BankDetails.module.css';\nimport { bankSchema, getInitialValues } from './utils';\nimport BankDetail from './BankDetail';\n\nfunction BankDetails() {\n  const [error, setError] = useState(null);\n  const [openIFSC, toggleIFSC] = useToggle();\n  const refreshShop = useRefreshShop();\n  const location = useLocation();\n  const history = useHistory();\n  const isDesktop = useDesktop();\n\n  const { bank = {} } = useShop();\n\n  const { status = '', message } = bank;\n\n  const isEmptyStatus = status === 'created' || status === '';\n\n  const getStatusSection = () => {\n    if (isEmptyStatus) {\n      return null;\n    }\n    if (status === 'success') {\n      return (\n        <div className={cx(styles.success, styles.status)}>\n          <img src={sIcon} alt=\"\" />\n          <div className={styles.left}> Account verified </div>\n        </div>\n      );\n    }\n    if (status === 'processing') {\n      return (\n        <div className={cx(styles.process, styles.status)}>\n          <img src={pIcon} alt=\"\" />\n          <div className={styles.left}> Account verification in progress</div>\n        </div>\n      );\n    }\n    if (status === 'error') {\n      return (\n        <div className={cx(styles.error, styles.status1)}>\n          <div className=\"flexEnd\">\n            <img src={eIcon} alt=\"\" />\n            <div className={styles.left}> Account verification failed</div>\n          </div>\n          <div className={styles.failed}>{message}</div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const onSubmit = async (values) => {\n    Loader.show();\n    try {\n      await Becca.saveBankDetails(values);\n      EventManager.emitEvent('bank_detail_added');\n      refreshShop();\n      SnackBar.show('Details saved successfully', 'success');\n      if (location?.state?.redirectTo) {\n        if (location?.state?.mainRedirect) {\n          history.push(location?.state?.redirectTo, {\n            redirectTo: location?.state?.mainRedirect\n          });\n          return;\n        }\n        history.push(location.state.redirectTo);\n        return;\n      }\n    } catch (e) {\n      setError(e?.response?.data?.message || 'Something went wrong, try again later!');\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  return (isDesktop ? (\n    <div className={styles.desktopMainContainer}>\n      <div onClick={() => history.goBack()} className={styles.maintitle}>\n        <img className={styles.backIconForDesktop} src={chevronLeftDesk} alt=\"\" />\n        <div>&nbsp;</div>\n        <div>&nbsp;</div>\n        Bank Details\n      </div>\n      {getStatusSection()}\n      <div className={styles.container}>\n        <Formik\n          initialValues={getInitialValues(bank)}\n          validationSchema={bankSchema}\n          onSubmit={onSubmit}\n        >\n          {({\n            submitForm,\n            isValid\n          }) => (\n            <>\n              <Grid item xs={12} className={styles.grid}>\n                <FormikInput\n                  name=\"accountNumber\"\n                  placeholder=\"Enter Account Number\"\n                  label=\"Account Number \"\n                />\n              </Grid>\n              <Grid item xs={12} className={styles.grid}>\n                <FormikInput\n                  name=\"repeatAccountNumber\"\n                  placeholder=\"Enter Account Number\"\n                  label=\"Confirm Account Number \"\n                />\n              </Grid>\n              <Grid item xs={12} className={styles.grid}>\n                <FormikInput\n                  name=\"accountName\"\n                  placeholder=\"Enter Name\"\n                  label=\"Account Holder Name \"\n                />\n              </Grid>\n              <Grid item xs={12} className={styles.grid}>\n                <FormikInput\n                  name=\"ifsc\"\n                  placeholder=\"Enter IFSC Code\"\n                  label=\"IFSC Code \"\n                />\n              </Grid>\n              <div className=\"flexEnd\">\n                <div className={styles.textRight}> Not sure about IFSC</div>\n                <p onClick={toggleIFSC} className={styles.ifscButton}>click here?</p>\n              </div>\n              <BankDetail />\n              <Btn\n                className={styles.Btn}\n                label=\"Save\"\n                onClick={submitForm}\n                size=\"large\"\n                disabled={!isValid}\n              />\n              {error !== null && (\n                <Alert\n                  text={error}\n                  btnText=\"Ok\"\n                  icon={errorIcon}\n                  textClass={styles.textClass}\n                  onClick={() => setError(null)}\n                />\n              )}\n              {openIFSC && (<IFSCSearch onClose={toggleIFSC} />)}\n            </>\n          )}\n        </Formik>\n      </div>\n    </div>\n  )\n    : (\n      <Drawer\n        title=\"Bank Details\"\n        containerClass={styles.drawer}\n        topBarClass={styles.drawer}\n      >\n        <div className={styles.container}>\n          {getStatusSection()}\n          <Formik\n            initialValues={getInitialValues(bank)}\n            validationSchema={bankSchema}\n            onSubmit={onSubmit}\n          >\n            {({\n              submitForm,\n              isValid\n            }) => (\n              <>\n                <Grid item xs={12} className={styles.grid}>\n                  <FormikInput\n                    name=\"accountNumber\"\n                    placeholder=\"Enter Account Number\"\n                    label=\"Account Number \"\n                  />\n                </Grid>\n                <Grid item xs={12} className={styles.grid}>\n                  <FormikInput\n                    name=\"repeatAccountNumber\"\n                    placeholder=\"Enter Account Number\"\n                    label=\"Confirm Account Number \"\n                  />\n                </Grid>\n                <Grid item xs={12} className={styles.grid}>\n                  <FormikInput\n                    name=\"accountName\"\n                    placeholder=\"Enter Name\"\n                    label=\"Account Holder Name \"\n                  />\n                </Grid>\n                <Grid item xs={12} className={styles.grid}>\n                  <FormikInput\n                    name=\"ifsc\"\n                    placeholder=\"Enter IFSC Code\"\n                    label=\"IFSC Code \"\n                  />\n                </Grid>\n                <div className=\"flexEnd\">\n                  <div className={styles.textRight}> Not sure about IFSC</div>\n                  <p onClick={toggleIFSC} className={styles.ifscButton}>click here?</p>\n                </div>\n                <BankDetail />\n                <Btn\n                  className={styles.Btn}\n                  label=\"Save\"\n                  onClick={submitForm}\n                  fullWidth={true}\n                  size=\"large\"\n                  disabled={!isValid}\n                />\n                {error !== null && (\n                  <Alert\n                    text={error}\n                    btnText=\"Ok\"\n                    icon={errorIcon}\n                    textClass={styles.textClass}\n                    onClick={() => setError(null)}\n                  />\n                )}\n                {openIFSC && (<IFSCSearch onClose={toggleIFSC} />)}\n              </>\n            )}\n          </Formik>\n        </div>\n      </Drawer>\n    )\n  );\n}\n\nBankDetails.propTypes = {};\n\nBankDetails.defaultProps = {};\n\nexport default BankDetails;\n"]},"metadata":{},"sourceType":"module"}