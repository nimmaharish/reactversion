{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/wallet/AddMoney.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { InputAdornment } from '@material-ui/core';\nimport { useUser } from \"../../contexts\";\nimport { Button } from 'phoenix-components';\nimport { SnackBar } from \"../../services\";\nimport Loader from \"../../services/loader\";\nimport URLUtils from \"../../utils/url\";\nimport { Piggy } from \"../../api\";\nimport CONFIG from \"../../config\";\nimport cx from 'classnames';\nimport WindoInput from \"../common/Input\";\nimport { useShop } from \"../../contexts/userContext\";\nimport Stripe from \"../../services/stripe\";\nimport { useToggle } from \"../../hooks/common\";\nimport Alert from \"../shared/alert/Alert\";\nimport { useHistory } from 'react-router-dom';\nimport { useDesktop } from \"../../contexts\";\nimport styles from \"./AddMoney.module.css\";\nexport function AddMoney() {\n  _s();\n\n  var _shop$country;\n\n  const [amount, setAmount] = useState();\n  const [cashFreeData, setCashFreeData] = useState(null);\n  const [openPhone, toggleOpenPhone] = useToggle(false);\n  const history = useHistory();\n  const user = useUser();\n  const shop = useShop();\n  const countryDenominatons = {\n    india: [100, 200, 500, 1000],\n    others: [10, 50, 100, 150]\n  };\n  const recommended = countryDenominatons[(shop === null || shop === void 0 ? void 0 : (_shop$country = shop.country) === null || _shop$country === void 0 ? void 0 : _shop$country.toLowerCase()) === 'india' || 'others'] || countryDenominatons.india;\n  const isDesktop = useDesktop();\n\n  const handleCashfree = async data => {\n    const options = {\n      appId: data.appId,\n      orderId: data.orderId,\n      orderAmount: data.orderAmount.toString(),\n      orderCurrency: data.orderCurrency,\n      customerName: user.name || '',\n      customerEmail: user.email,\n      customerPhone: user.phone,\n      returnUrl: data.returnUrl,\n      notifyUrl: data.notifyUrl,\n      signature: data.tokenData,\n      stage: data.stage\n    };\n    Loader.show();\n    setCashFreeData(options);\n    Loader.show();\n    const interval = setInterval(() => {\n      Loader.show();\n      const ele = document.getElementById('cashfree');\n\n      if (ele) {\n        clearInterval(interval);\n        Loader.hide();\n        ele.submit();\n      }\n    }, 1000);\n  };\n\n  const handleStripePayment = async data => {\n    try {\n      await Stripe.redirectToCheckout(data.sessionId);\n    } catch (e) {\n      SnackBar.showError(e);\n    }\n  };\n\n  const onPay = async () => {\n    try {\n      if (!amount) {\n        throw new Error('amount should be greater than 0');\n      }\n\n      if (+amount <= 0) {\n        throw new Error('amount should be greater than 0');\n      }\n\n      if (!user.phone) {\n        toggleOpenPhone();\n        return;\n      }\n\n      Loader.show();\n      const url = isDesktop ? '/wallet?type=cash' : '/payments?tab=wallet&type=cash';\n      const paymentData = {\n        returnUrl: URLUtils.getUrl(`${url}&payment&pgTid={{pgTid}}&tid={{tid}}&id={{identifier}}`),\n        cancelUrl: URLUtils.getUrl(url),\n        platform: 'web',\n        email: user.email,\n        phone: user.phone,\n        name: user.name || '',\n        amount: +amount\n      };\n      const paymentIntent = await Piggy.onPay(paymentData);\n\n      switch (paymentIntent.identifier) {\n        case 'cashfree':\n          return handleCashfree(paymentIntent);\n\n        case 'stripe':\n          return handleStripePayment(paymentIntent);\n\n        default:\n          throw new Error('unable to handle payments as of now!');\n      }\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, openPhone && /*#__PURE__*/React.createElement(Alert, {\n    btnText: \"Ok\",\n    text: \"Please add your phone number to proceed\",\n    onClick: () => {\n      history.push('/manage/shop', {\n        redirectTo: '/payments?tab=wallet'\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.head,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, \"Add Money\"), isDesktop ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.addMoneyContainerForDesktop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(WindoInput, {\n    value: amount,\n    className: styles.inputClass,\n    labelClassName: styles.labelClass,\n    placeholder: \"Enter Amount\",\n    type: \"number\",\n    setValue: e => setAmount(e),\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        className: styles.adorn,\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 19\n        }\n      }, shop.currency),\n      classes: {\n        input: cx(styles.slug, styles.single)\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: styles.cusBtn,\n    disabled: +amount <= 0,\n    onClick: onPay,\n    label: \"Add\",\n    variant: \"contained\",\n    type: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, recommended.map(x => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.amount,\n    onClick: () => setAmount(x),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, shop.currency, ' ', x, ' ')))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.flex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(WindoInput, {\n    value: amount,\n    className: styles.inputClass,\n    labelClassName: styles.labelClass,\n    placeholder: \"Enter Amount\",\n    type: \"number\",\n    setValue: e => setAmount(e),\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        className: styles.adorn,\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }\n      }, shop.currency),\n      classes: {\n        input: cx(styles.slug, styles.single)\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: styles.cusBtn,\n    disabled: +amount <= 0,\n    onClick: onPay,\n    label: \"Add\",\n    variant: \"contained\",\n    type: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.head,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, \"Recommended\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, recommended.map(x => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.amount,\n    onClick: () => setAmount(x),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, shop.currency, ' ', x, ' ')))), cashFreeData && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.hiddenForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    method: \"POST\",\n    id: \"cashfree\",\n    action: CONFIG.CASHFREE.host,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"appId\",\n    value: cashFreeData.appId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"orderId\",\n    value: cashFreeData.orderId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"orderAmount\",\n    value: cashFreeData.orderAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"orderCurrency\",\n    value: cashFreeData.orderCurrency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"customerName\",\n    value: cashFreeData.customerName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"customerEmail\",\n    value: cashFreeData.customerEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"customerPhone\",\n    value: cashFreeData.customerPhone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"returnUrl\",\n    value: cashFreeData.returnUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"notifyUrl\",\n    value: cashFreeData.notifyUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"signature\",\n    value: cashFreeData.signature,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }))));\n}\n\n_s(AddMoney, \"LGas7bF3x9elnkgJcmQAe/POx24=\", false, function () {\n  return [useToggle, useHistory, useUser, useShop, useDesktop];\n});\n\n_c = AddMoney;\nAddMoney.propTypes = {};\nAddMoney.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMoney\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/wallet/AddMoney.jsx"],"names":["React","useState","InputAdornment","useUser","Button","SnackBar","Loader","URLUtils","Piggy","CONFIG","cx","WindoInput","useShop","Stripe","useToggle","Alert","useHistory","useDesktop","styles","AddMoney","amount","setAmount","cashFreeData","setCashFreeData","openPhone","toggleOpenPhone","history","user","shop","countryDenominatons","india","others","recommended","country","toLowerCase","isDesktop","handleCashfree","data","options","appId","orderId","orderAmount","toString","orderCurrency","customerName","name","customerEmail","email","customerPhone","phone","returnUrl","notifyUrl","signature","tokenData","stage","show","interval","setInterval","ele","document","getElementById","clearInterval","hide","submit","handleStripePayment","redirectToCheckout","sessionId","e","showError","onPay","Error","url","paymentData","getUrl","cancelUrl","platform","paymentIntent","identifier","container","push","redirectTo","head","addMoneyContainerForDesktop","items","inputClass","labelClass","startAdornment","adorn","currency","classes","input","slug","single","cusBtn","section","map","x","flex","hiddenForm","CASHFREE","host","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { InputAdornment } from '@material-ui/core';\nimport { useUser } from 'contexts';\nimport { Button } from 'phoenix-components';\nimport { SnackBar } from 'services';\nimport Loader from 'services/loader';\nimport URLUtils from 'utils/url';\nimport { Piggy } from 'api';\nimport CONFIG from 'config';\nimport cx from 'classnames';\nimport WindoInput from 'components/common/Input';\nimport { useShop } from 'contexts/userContext';\nimport Stripe from 'services/stripe';\nimport { useToggle } from 'hooks/common';\nimport Alert from 'components/shared/alert/Alert';\nimport { useHistory } from 'react-router-dom';\nimport { useDesktop } from 'contexts';\nimport styles from './AddMoney.module.css';\n\nexport function AddMoney() {\n  const [amount, setAmount] = useState();\n  const [cashFreeData, setCashFreeData] = useState(null);\n  const [openPhone, toggleOpenPhone] = useToggle(false);\n  const history = useHistory();\n  const user = useUser();\n  const shop = useShop();\n  const countryDenominatons = {\n    india: [100, 200, 500, 1000],\n    others: [10, 50, 100, 150]\n  };\n  const recommended = countryDenominatons[shop?.country?.toLowerCase() === 'india' || 'others']\n    || countryDenominatons.india;\n\n  const isDesktop = useDesktop();\n\n  const handleCashfree = async data => {\n    const options = {\n      appId: data.appId,\n      orderId: data.orderId,\n      orderAmount: data.orderAmount.toString(),\n      orderCurrency: data.orderCurrency,\n      customerName: user.name || '',\n      customerEmail: user.email,\n      customerPhone: user.phone,\n      returnUrl: data.returnUrl,\n      notifyUrl: data.notifyUrl,\n      signature: data.tokenData,\n      stage: data.stage,\n    };\n    Loader.show();\n    setCashFreeData(options);\n    Loader.show();\n    const interval = setInterval(() => {\n      Loader.show();\n      const ele = document.getElementById('cashfree');\n      if (ele) {\n        clearInterval(interval);\n        Loader.hide();\n        ele.submit();\n      }\n    }, 1000);\n  };\n\n  const handleStripePayment = async (data) => {\n    try {\n      await Stripe.redirectToCheckout(data.sessionId);\n    } catch (e) {\n      SnackBar.showError(e);\n    }\n  };\n\n  const onPay = async () => {\n    try {\n      if (!amount) {\n        throw new Error('amount should be greater than 0');\n      }\n      if (+amount <= 0) {\n        throw new Error('amount should be greater than 0');\n      }\n      if (!user.phone) {\n        toggleOpenPhone();\n        return;\n      }\n      Loader.show();\n      const url = isDesktop ? '/wallet?type=cash' : '/payments?tab=wallet&type=cash';\n      const paymentData = {\n        returnUrl: URLUtils.getUrl(\n          `${url}&payment&pgTid={{pgTid}}&tid={{tid}}&id={{identifier}}`\n        ),\n        cancelUrl: URLUtils.getUrl(url),\n        platform: 'web',\n        email: user.email,\n        phone: user.phone,\n        name: user.name || '',\n        amount: +amount,\n      };\n\n      const paymentIntent = await Piggy.onPay(paymentData);\n\n      switch (paymentIntent.identifier) {\n        case 'cashfree':\n          return handleCashfree(paymentIntent);\n        case 'stripe':\n          return handleStripePayment(paymentIntent);\n        default:\n          throw new Error('unable to handle payments as of now!');\n      }\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      {openPhone && (\n        <Alert\n          btnText=\"Ok\"\n          text=\"Please add your phone number to proceed\"\n          onClick={() => {\n            history.push('/manage/shop', {\n              redirectTo: '/payments?tab=wallet',\n            });\n          }}\n        />\n      )}\n      <div className={styles.head}>Add Money</div>\n      {isDesktop ? (\n        <div className={styles.addMoneyContainerForDesktop}>\n          <div className={styles.items}>\n            <WindoInput\n              value={amount}\n              className={styles.inputClass}\n              labelClassName={styles.labelClass}\n              placeholder=\"Enter Amount\"\n              type=\"number\"\n              setValue={(e) => setAmount(e)}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment\n                    className={styles.adorn}\n                    position=\"start\">\n                    {shop.currency}\n                  </InputAdornment>),\n                classes: {\n                  input: cx(styles.slug, styles.single),\n                },\n              }}\n            />\n            <Button\n              className={styles.cusBtn}\n              disabled={(+amount <= 0)}\n              onClick={onPay}\n              label=\"Add\"\n              variant=\"contained\"\n              type=\"small\"\n            />\n          </div>\n          <div className={styles.section}>\n            {recommended.map(x => (\n              <div\n                className={styles.amount}\n                onClick={() => setAmount(x)}\n              >\n                {shop.currency}\n                {' '}\n                {x}\n                {' '}\n              </div>\n            ))}\n          </div>\n        </div>\n      )\n        : (\n          <>\n            <div className={styles.flex}>\n              <WindoInput\n                value={amount}\n                className={styles.inputClass}\n                labelClassName={styles.labelClass}\n                placeholder=\"Enter Amount\"\n                type=\"number\"\n                setValue={(e) => setAmount(e)}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment\n                      className={styles.adorn}\n                      position=\"start\">\n                      {shop.currency}\n                    </InputAdornment>),\n                  classes: {\n                    input: cx(styles.slug, styles.single),\n                  },\n                }}\n              />\n              <Button\n                className={styles.cusBtn}\n                disabled={(+amount <= 0)}\n                onClick={onPay}\n                label=\"Add\"\n                variant=\"contained\"\n                type=\"large\"\n              />\n            </div>\n            <div className={styles.head}>Recommended</div>\n            <div className={styles.section}>\n              {recommended.map(x => (\n                <div\n                  className={styles.amount}\n                  onClick={() => setAmount(x)}\n                >\n                  {shop.currency}\n                  {' '}\n                  {x}\n                  {' '}\n                </div>\n              ))}\n            </div>\n          </>\n        )}\n\n      {cashFreeData && (\n        <div className={styles.hiddenForm}>\n          <form method=\"POST\" id=\"cashfree\" action={CONFIG.CASHFREE.host}>\n            <input type=\"hidden\" name=\"appId\" value={cashFreeData.appId} />\n            <input type=\"hidden\" name=\"orderId\" value={cashFreeData.orderId} />\n            <input type=\"hidden\" name=\"orderAmount\" value={cashFreeData.orderAmount} />\n            <input type=\"hidden\" name=\"orderCurrency\" value={cashFreeData.orderCurrency} />\n            <input type=\"hidden\" name=\"customerName\" value={cashFreeData.customerName} />\n            <input type=\"hidden\" name=\"customerEmail\" value={cashFreeData.customerEmail} />\n            <input type=\"hidden\" name=\"customerPhone\" value={cashFreeData.customerPhone} />\n            <input type=\"hidden\" name=\"returnUrl\" value={cashFreeData.returnUrl} />\n            <input type=\"hidden\" name=\"notifyUrl\" value={cashFreeData.notifyUrl} />\n            <input type=\"hidden\" name=\"signature\" value={cashFreeData.signature} />\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n\nAddMoney.propTypes = {};\n\nAddMoney.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}