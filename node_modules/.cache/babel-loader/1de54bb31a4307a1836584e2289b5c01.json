{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/profile/checkout/LoginCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIsFreePlan, useOpenPlans, useIsOnFreeTrial } from \"../../../contexts/userContext\";\nimport { LOGIN_DATA } from \"./loginUtils\";\nimport { Switch } from 'phoenix-components/lib/formik';\nimport featureIcon from \"../../../assets/overview/feature.svg\";\nimport { useField, useFormikContext } from 'formik';\nimport styles from \"./LoginCard.module.css\";\nexport function LoginCard({\n  name,\n  featured\n}) {\n  _s();\n\n  const isFreePlan = useIsFreePlan();\n  const IsOnFreeTrial = useIsOnFreeTrial();\n  const card = LOGIN_DATA[name];\n  const openPlans = useOpenPlans();\n  const [,, {\n    setValue\n  }] = useField(`${name}.enabled`);\n  const [,, {\n    setValue: setDirect\n  }] = useField('direct.enabled');\n  const {\n    values,\n    setValues\n  } = useFormikContext(); // const name = direct ? 'direct' : name;);\n\n  const onChange = (_e, val) => {\n    if (val && isFreePlan && !IsOnFreeTrial && featured) {\n      openPlans();\n      return;\n    }\n\n    if (name === 'direct') {\n      if (val) {\n        const vals = { ...values\n        };\n        Object.keys(values).forEach(key => {\n          vals[key].enabled = key === 'direct';\n        });\n        setValues(vals);\n        return;\n      }\n    }\n\n    setValue(val);\n\n    if (val) {\n      setDirect(false);\n    }\n  };\n\n  if (!card) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: name === 'guest' ? styles.main1 : styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: card.icon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.middle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, card.title), isFreePlan && featured && !IsOnFreeTrial && /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.feature,\n    src: featureIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 58\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.subTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, card.subTitle))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.right,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    name: `${name}.enabled`,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(LoginCard, \"QLGqLkOXHahZhzl0fLhmTMSci2k=\", false, function () {\n  return [useIsFreePlan, useIsOnFreeTrial, useOpenPlans, useField, useField, useFormikContext];\n});\n\n_c = LoginCard;\nLoginCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  featured: PropTypes.bool\n};\nLoginCard.defaultProps = {\n  featured: false\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginCard\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/checkout/LoginCard.jsx"],"names":["React","PropTypes","useIsFreePlan","useOpenPlans","useIsOnFreeTrial","LOGIN_DATA","Switch","useField","useFormikContext","styles","LoginCard","name","featured","isFreePlan","IsOnFreeTrial","card","openPlans","setValue","setDirect","values","setValues","onChange","_e","val","vals","Object","keys","forEach","key","enabled","main1","main","container","icon","middle","title","feature","featureIcon","subTitle","right","propTypes","string","isRequired","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIsFreePlan, useOpenPlans, useIsOnFreeTrial } from 'contexts/userContext';\nimport { LOGIN_DATA } from 'containers/profile/checkout/loginUtils';\nimport { Switch } from 'phoenix-components/lib/formik';\nimport featureIcon from 'assets/overview/feature.svg';\nimport { useField, useFormikContext } from 'formik';\nimport styles from './LoginCard.module.css';\n\nexport function LoginCard({ name, featured }) {\n  const isFreePlan = useIsFreePlan();\n  const IsOnFreeTrial = useIsOnFreeTrial();\n  const card = LOGIN_DATA[name];\n  const openPlans = useOpenPlans();\n  const [,, { setValue }] = useField(`${name}.enabled`);\n  const [,, { setValue: setDirect }] = useField('direct.enabled');\n  const { values, setValues } = useFormikContext();\n  // const name = direct ? 'direct' : name;);\n\n  const onChange = (_e, val) => {\n    if (val && isFreePlan && !IsOnFreeTrial && featured) {\n      openPlans();\n      return;\n    }\n    if (name === 'direct') {\n      if (val) {\n        const vals = { ...values };\n        Object.keys(values).forEach(key => {\n          vals[key].enabled = key === 'direct';\n        });\n        setValues(vals);\n        return;\n      }\n    }\n    setValue(val);\n    if (val) {\n      setDirect(false);\n    }\n  };\n\n  if (!card) {\n    return null;\n  }\n\n  return (\n    <div className={name === 'guest' ? (styles.main1) : (styles.main)}>\n      <div className={styles.container}>\n        <img src={card.icon} alt=\"\" />\n        <div className={styles.middle}>\n          <div className={styles.title}>\n            <div>\n              {card.title}\n            </div>\n            {isFreePlan && featured && !IsOnFreeTrial && <img className={styles.feature} src={featureIcon} alt=\"\" />}\n          </div>\n          <div className={styles.subTitle}>{card.subTitle}</div>\n        </div>\n      </div>\n      <div className={styles.right}>\n        <Switch name={`${name}.enabled`} onChange={onChange} />\n      </div>\n    </div>\n  );\n}\n\nLoginCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  featured: PropTypes.bool,\n};\n\nLoginCard.defaultProps = {\n  featured: false,\n};\n"]},"metadata":{},"sourceType":"module"}