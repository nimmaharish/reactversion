{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/index.js\";\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-virtualized/styles.css';\nimport \"./index.css\";\nimport * as Sentry from '@sentry/react';\nimport { Integrations } from '@sentry/tracing';\nimport CONFIG from \"./config\";\nimport { init as initApm } from '@elastic/apm-rum';\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\ntry {\n  Sentry.init({\n    dsn: process.env.REACT_APP_SENTRY_DSN,\n    environment: process.env.REACT_APP_ENV,\n    integrations: [new Integrations.BrowserTracing()],\n    ignoreErrors: [/Request failed/i, /XMLHttpRequest/i, /ChunkLoadError/i],\n    tracesSampleRate: 0.2,\n    release: process.env.REACT_APP_ENV === 'production' ? CONFIG.BUILD.version : `${process.env.REACT_APP_ENV}-${CONFIG.BUILD.version}`,\n    enabled: process.env.REACT_APP_ENV !== 'development'\n  });\n} catch (e) {\n  console.error(e);\n}\n\ntry {\n  if (process.env.REACT_APP_ENV !== 'development') {\n    initApm({\n      serviceName: 'phoenix',\n      serverUrl: 'https://observability-prod-deployment.apm.ap-south-1.aws.elastic-cloud.com',\n      serviceVersion: CONFIG.BUILD.version,\n      environment: process.env.REACT_APP_ENV,\n      enabled: true\n    });\n  }\n} catch (e) {\n  console.error(e);\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }\n})), document.getElementById('root'));\n\nif (process.env.REACT_APP_ENV !== 'development') {\n  serviceWorker.register();\n} else {\n  serviceWorker.unregister();\n}","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/index.js"],"names":["React","ReactDOM","Sentry","Integrations","CONFIG","init","initApm","App","serviceWorker","dsn","process","env","REACT_APP_SENTRY_DSN","environment","REACT_APP_ENV","integrations","BrowserTracing","ignoreErrors","tracesSampleRate","release","BUILD","version","enabled","e","console","error","serviceName","serverUrl","serviceVersion","render","document","getElementById","register","unregister"],"mappings":";AAAA,OAAO,2BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,8BAAP;AACA;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,MAAP;AACA,SAASC,IAAI,IAAIC,OAAjB,QAAgC,kBAAhC;AACA,OAAOC,GAAP;AACA,OAAO,KAAKC,aAAZ;;AAEA,IAAI;AACFN,EAAAA,MAAM,CAACG,IAAP,CAAY;AACVI,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,oBADP;AAEVC,IAAAA,WAAW,EAAEH,OAAO,CAACC,GAAR,CAAYG,aAFf;AAGVC,IAAAA,YAAY,EAAE,CAAC,IAAIZ,YAAY,CAACa,cAAjB,EAAD,CAHJ;AAIVC,IAAAA,YAAY,EAAE,CAAC,iBAAD,EAAoB,iBAApB,EAAuC,iBAAvC,CAJJ;AAKVC,IAAAA,gBAAgB,EAAE,GALR;AAMVC,IAAAA,OAAO,EAAET,OAAO,CAACC,GAAR,CAAYG,aAAZ,KAA8B,YAA9B,GACLV,MAAM,CAACgB,KAAP,CAAaC,OADR,GAEJ,GAAEX,OAAO,CAACC,GAAR,CAAYG,aAAc,IAAGV,MAAM,CAACgB,KAAP,CAAaC,OAAQ,EAR/C;AASVC,IAAAA,OAAO,EAAEZ,OAAO,CAACC,GAAR,CAAYG,aAAZ,KAA8B;AAT7B,GAAZ;AAWD,CAZD,CAYE,OAAOS,CAAP,EAAU;AACVC,EAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;;AAED,IAAI;AACF,MAAIb,OAAO,CAACC,GAAR,CAAYG,aAAZ,KAA8B,aAAlC,EAAiD;AAC/CR,IAAAA,OAAO,CAAC;AACNoB,MAAAA,WAAW,EAAE,SADP;AAENC,MAAAA,SAAS,EAAE,4EAFL;AAGNC,MAAAA,cAAc,EAAExB,MAAM,CAACgB,KAAP,CAAaC,OAHvB;AAINR,MAAAA,WAAW,EAAEH,OAAO,CAACC,GAAR,CAAYG,aAJnB;AAKNQ,MAAAA,OAAO,EAAE;AALH,KAAD,CAAP;AAOD;AACF,CAVD,CAUE,OAAOC,CAAP,EAAU;AACVC,EAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;;AAEDtB,QAAQ,CAAC4B,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;;AAOA,IAAIrB,OAAO,CAACC,GAAR,CAAYG,aAAZ,KAA8B,aAAlC,EAAiD;AAC/CN,EAAAA,aAAa,CAACwB,QAAd;AACD,CAFD,MAEO;AACLxB,EAAAA,aAAa,CAACyB,UAAd;AACD","sourcesContent":["import 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-virtualized/styles.css';\nimport './index.css';\nimport * as Sentry from '@sentry/react';\nimport { Integrations } from '@sentry/tracing';\nimport CONFIG from 'config';\nimport { init as initApm } from '@elastic/apm-rum';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\ntry {\n  Sentry.init({\n    dsn: process.env.REACT_APP_SENTRY_DSN,\n    environment: process.env.REACT_APP_ENV,\n    integrations: [new Integrations.BrowserTracing()],\n    ignoreErrors: [/Request failed/i, /XMLHttpRequest/i, /ChunkLoadError/i],\n    tracesSampleRate: 0.2,\n    release: process.env.REACT_APP_ENV === 'production'\n      ? CONFIG.BUILD.version\n      : `${process.env.REACT_APP_ENV}-${CONFIG.BUILD.version}`,\n    enabled: process.env.REACT_APP_ENV !== 'development',\n  });\n} catch (e) {\n  console.error(e);\n}\n\ntry {\n  if (process.env.REACT_APP_ENV !== 'development') {\n    initApm({\n      serviceName: 'phoenix',\n      serverUrl: 'https://observability-prod-deployment.apm.ap-south-1.aws.elastic-cloud.com',\n      serviceVersion: CONFIG.BUILD.version,\n      environment: process.env.REACT_APP_ENV,\n      enabled: true,\n    });\n  }\n} catch (e) {\n  console.error(e);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nif (process.env.REACT_APP_ENV !== 'development') {\n  serviceWorker.register();\n} else {\n  serviceWorker.unregister();\n}\n"]},"metadata":{},"sourceType":"module"}