{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/testimonials/AddTestimonials.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Clickable, FormikInput } from 'phoenix-components';\nimport primaryPlusIcon from \"../../assets/images/testimonials/primaryplus.svg\";\nimport { ImagePicker } from \"../common/ImagePicker\";\nimport defaultPicIcon from \"../../assets/images/testimonials/defaultpic.svg\";\nimport { DeleteAlert } from \"../shared/DeleteAlert\";\nimport Alert from \"../shared/alert/Alert\";\nimport { getVideosAndImages } from \"../products/variantUtils\";\nimport { Drawer } from \"../shared/Drawer\";\nimport Loader from \"../../services/loader\";\nimport SnackBar from \"../../services/snackbar\";\nimport { useTestimonials } from \"../../hooks/common\";\nimport editIcon from \"../../assets/v2/settings/domain/edit.svg\";\nimport closeIcon from \"../../assets/images/testimonials/close.svg\";\nimport { Formik } from 'formik';\nimport { FooterButton } from \"../common/FooterButton\";\nimport { useToggle } from \"../../hooks/common\";\nimport { SideDrawer } from \"../shared/SideDrawer\";\nimport { useDesktop } from \"../../contexts\";\nimport { Becca } from \"../../api\";\nimport getInitialValues from \"./TestimonialsUtilis\";\nimport { tSchema } from \"./TestimonialsUtilis\";\nimport styles from \"./AddTestimonials.module.css\";\nexport default function AddTestimonials({\n  edit,\n  onClose,\n  updateTestimonial,\n  handleRef\n}) {\n  _s();\n\n  const initialValues = edit ? updateTestimonial : getInitialValues();\n  const [pp, setPp] = useToggle(false);\n  const [imgOrTxt, toggleImgOrTxt] = useToggle(false);\n  const [updateTestimonalPhoto, toggleUpdateTestimonalPhoto] = useToggle(false);\n  const [openAlert, toggleAlert] = useToggle();\n  const [data] = useTestimonials();\n  const inputRef1 = useRef(0);\n  const isDesktop = useDesktop();\n  const Component = isDesktop ? SideDrawer : Drawer;\n  consolfe.log(initialValues);\n\n  const onSave = async values => {\n    console.log(values);\n\n    if (values.testimonialImage !== '' && values.message !== '') {\n      toggleImgOrTxt();\n      return;\n    }\n\n    if (values.testimonialImage === '' && values.message === '') {\n      toggleAlert();\n      return;\n    }\n\n    const msg = edit ? 'Testimonial updated successfully' : 'Testimonial added successfully';\n\n    if (edit) {\n      console.log('edit');\n\n      if (JSON.stringify(values) === JSON.stringify(updateTestimonial)) {\n        onClose();\n      } else {\n        data.forEach((item, index) => {\n          if (item._id === updateTestimonial._id) {\n            data.splice(index, 1);\n          }\n        });\n      }\n    }\n\n    try {\n      Loader.show();\n      await Becca.updateUiConfig('testimonials', [...data, values]);\n      handleRef();\n      SnackBar.show(msg, 'success');\n      onClose();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const uploadProfilePic = async (e, setValue) => {\n    try {\n      var _e$target;\n\n      Loader.show();\n      const files = e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.files;\n      const file = files && files[0];\n      const payload = new FormData();\n      payload.append('name', file.name);\n      payload.append('purpose', 'Testimonial');\n      payload.append('type', 'image');\n      payload.append('file', file);\n      const {\n        url\n      } = await Becca.uploadAsset(payload);\n      setValue('customerImage', url);\n      setPp();\n      SnackBar.show('upload success');\n    } catch (e) {\n      SnackBar.show('upload failed', 'error');\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onImageChange = (values, setField) => files => {\n    var _images$;\n\n    if (files.length === 0) {\n      setField('testimonialImage', '');\n      return;\n    }\n\n    const {\n      images\n    } = getVideosAndImages(files);\n    setField('testimonialImage', (_images$ = images[0]) === null || _images$ === void 0 ? void 0 : _images$.url);\n    setField('type', 'image');\n  };\n\n  const handleDeleteTxt = setValue => {\n    setValue('message', '');\n    toggleImgOrTxt();\n  };\n\n  return /*#__PURE__*/React.createElement(Component, {\n    title: edit ? 'Edit Testimonial' : 'Add Testimonial',\n    backButton: true,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: tSchema,\n    onSubmit: onSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, ({\n    values,\n    setFieldValue,\n    submitForm\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    type: \"textarea\",\n    rows: 5,\n    label: \"Customer testimonials\",\n    name: \"message\",\n    placeholder: \"Add a testimonial from your customer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.max,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"Maximum 150 charaters\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.orBorderMain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.orBorder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.orTxt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"or\"))), !edit && /*#__PURE__*/React.createElement(ImagePicker, {\n    onChange: onImageChange(values, setFieldValue),\n    isMulti: false,\n    images: values !== null && values !== void 0 && values.testimonialImage ? [{\n      url: values.testimonialImage\n    }] : [],\n    accept: \"image/*\",\n    showCover: false,\n    videos: false,\n    label: \"Upload Image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }), edit && /*#__PURE__*/React.createElement(React.Fragment, null, (updateTestimonalPhoto || values.testimonialImage === '') && /*#__PURE__*/React.createElement(ImagePicker, {\n    onChange: onImageChange(values, setFieldValue),\n    isMulti: false,\n    images: values !== null && values !== void 0 && values.testimonialImage ? [{\n      url: values.testimonialImage\n    }] : [],\n    accept: \"image/*\",\n    showCover: false,\n    videos: false,\n    label: \"Upload Image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }), updateTestimonalPhoto === false && values.testimonialImage !== '' && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.testimonialImageCon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    className: styles.editIcon,\n    onClick: () => {\n      setFieldValue('testimonialImage', '');\n      setFieldValue('type', 'message');\n      toggleUpdateTestimonalPhoto();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: editIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    src: values.testimonialImage,\n    alt: \"\",\n    className: styles.uploadedTestimonialImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.csTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, \"Customer Details\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.customerName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Customer Name\",\n    name: \"name\",\n    placeholder: \"e.g.  John Deo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ciMainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.section1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ciTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, \"Select Customer Image\", /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.optional,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  }, \"(optional)\")), /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef1,\n    accept: \"image/*\",\n    hidden: true,\n    type: \"file\",\n    name: \"profilePic\",\n    onChange: e => {\n      uploadProfilePic(e, setFieldValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }), pp === false && edit === false && /*#__PURE__*/React.createElement(Clickable, {\n    onClick: () => {\n      var _inputRef1$current;\n\n      // eslint-disable-next-line no-unused-expressions\n      inputRef1 === null || inputRef1 === void 0 ? void 0 : (_inputRef1$current = inputRef1.current) === null || _inputRef1$current === void 0 ? void 0 : _inputRef1$current.click();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.add,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: primaryPlusIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.addTxt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 23\n    }\n  }, \"Add\"))), edit && /*#__PURE__*/React.createElement(Clickable, {\n    onClick: () => {\n      var _inputRef1$current2;\n\n      // eslint-disable-next-line no-unused-expressions\n      inputRef1 === null || inputRef1 === void 0 ? void 0 : (_inputRef1$current2 = inputRef1.current) === null || _inputRef1$current2 === void 0 ? void 0 : _inputRef1$current2.click();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.add,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: primaryPlusIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.addTxt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 23\n    }\n  }, \"Add\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ciProfilePicCon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, edit === false && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: values.customerImage === '' ? defaultPicIcon : values.customerImage,\n    alt: \"\",\n    className: styles.ciProfilePic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  }), pp && /*#__PURE__*/React.createElement(Clickable, {\n    className: styles.clsBtn,\n    onClick: () => {\n      setFieldValue('customerImage', '');\n      setPp();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: closeIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 25\n    }\n  }))), edit && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: values.customerImage === '' ? defaultPicIcon : values.customerImage,\n    alt: \"\",\n    className: styles.ciProfilePic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Clickable, {\n    className: styles.clsBtn,\n    onClick: () => {\n      setFieldValue('customerImage', '');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: closeIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.designation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Designation (optional)\",\n    name: \"designation\",\n    placeholder: \"Enter Designation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Loction (optional)\",\n    name: \"location\",\n    placeholder: \"Enter Location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 15\n    }\n  })), imgOrTxt && /*#__PURE__*/React.createElement(DeleteAlert, {\n    title: \"You can add either image or text. Should we delete the text?\",\n    onCancel: toggleImgOrTxt,\n    primary: \"Yes\",\n    secondary: \"No\",\n    onDelete: () => {\n      handleDeleteTxt(setFieldValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }), openAlert && /*#__PURE__*/React.createElement(Alert, {\n    btnText: \"Ok\",\n    text: \"Image or Text is required\",\n    onClick: toggleAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 15\n    }\n  }), !isDesktop && /*#__PURE__*/React.createElement(FooterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }\n  }, !edit && /*#__PURE__*/React.createElement(Button, {\n    label: \"Save\",\n    className: styles.saveBtn,\n    onClick: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 30\n    }\n  }), edit && /*#__PURE__*/React.createElement(Button, {\n    label: \"Save\",\n    className: styles.saveBtn,\n    onClick: () => {\n      submitForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 21\n    }\n  })), isDesktop && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.saveBtnDeskCon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, !edit && /*#__PURE__*/React.createElement(Button, {\n    label: \"Save\",\n    className: styles.saveBtn,\n    onClick: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 30\n    }\n  }), edit && /*#__PURE__*/React.createElement(Button, {\n    label: \"Save\",\n    className: styles.saveBtn,\n    onClick: () => {\n      submitForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 21\n    }\n  })))));\n}\n\n_s(AddTestimonials, \"IfSTk7UEGBVjSh/INP3xFtwdYjg=\", false, function () {\n  return [useToggle, useToggle, useToggle, useToggle, useTestimonials, useDesktop];\n});\n\n_c = AddTestimonials;\nAddTestimonials.propTypes = {\n  edit: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  updateTestimonial: PropTypes.object,\n  handleRef: PropTypes.func.isRequired\n};\nAddTestimonials.defaultProps = {\n  updateTestimonial: {}\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTestimonials\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/testimonials/AddTestimonials.jsx"],"names":["React","useRef","PropTypes","Button","Clickable","FormikInput","ImagePicker","DeleteAlert","Alert","getVideosAndImages","Drawer","Loader","SnackBar","useTestimonials","Formik","FooterButton","useToggle","SideDrawer","useDesktop","Becca","getInitialValues","tSchema","styles","AddTestimonials","edit","onClose","updateTestimonial","handleRef","initialValues","pp","setPp","imgOrTxt","toggleImgOrTxt","updateTestimonalPhoto","toggleUpdateTestimonalPhoto","openAlert","toggleAlert","data","inputRef1","isDesktop","Component","consolfe","log","onSave","values","console","testimonialImage","message","msg","JSON","stringify","forEach","item","index","_id","splice","show","updateUiConfig","e","showError","hide","uploadProfilePic","setValue","files","target","file","payload","FormData","append","name","url","uploadAsset","onImageChange","setField","length","images","handleDeleteTxt","setFieldValue","submitForm","mainContainer","max","orBorderMain","orBorder","orTxt","testimonialImageCon","editIcon","uploadedTestimonialImg","csTitle","customerName","ciMainContainer","section1","ciTitle","optional","current","click","add","primaryPlusIcon","addTxt","ciProfilePicCon","customerImage","defaultPicIcon","ciProfilePic","clsBtn","closeIcon","designation","location","saveBtn","saveBtnDeskCon","propTypes","bool","isRequired","func","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Clickable, FormikInput } from 'phoenix-components';\nimport primaryPlusIcon from 'assets/images/testimonials/primaryplus.svg';\nimport { ImagePicker } from 'components/common/ImagePicker';\nimport defaultPicIcon from 'assets/images/testimonials/defaultpic.svg';\nimport { DeleteAlert } from 'components/shared/DeleteAlert';\nimport Alert from 'components/shared/alert/Alert';\nimport {\n  getVideosAndImages,\n} from 'components/products/variantUtils';\nimport { Drawer } from 'components/shared/Drawer';\nimport Loader from 'services/loader';\nimport SnackBar from 'services/snackbar';\nimport { useTestimonials } from 'hooks/common';\nimport editIcon from 'assets/v2/settings/domain/edit.svg';\nimport closeIcon from 'assets/images/testimonials/close.svg';\nimport { Formik } from 'formik';\nimport { FooterButton } from 'components/common/FooterButton';\nimport { useToggle } from 'hooks/common';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { useDesktop } from 'contexts';\nimport { Becca } from '../../api';\nimport getInitialValues from './TestimonialsUtilis';\nimport { tSchema } from './TestimonialsUtilis';\nimport styles from './AddTestimonials.module.css';\n\nexport default function AddTestimonials({\n  edit, onClose, updateTestimonial, handleRef\n}) {\n  const initialValues = edit ? updateTestimonial : getInitialValues();\n  const [pp, setPp] = useToggle(false);\n  const [imgOrTxt, toggleImgOrTxt] = useToggle(false);\n  const [updateTestimonalPhoto, toggleUpdateTestimonalPhoto] = useToggle(false);\n  const [openAlert, toggleAlert] = useToggle();\n  const [data] = useTestimonials();\n  const inputRef1 = useRef(0);\n  const isDesktop = useDesktop();\n  const Component = isDesktop ? SideDrawer : Drawer;\n  consolfe.log(initialValues);\n  const onSave = async (values) => {\n    console.log(values);\n    if (values.testimonialImage !== '' && values.message !== '') {\n      toggleImgOrTxt();\n      return;\n    }\n    if (values.testimonialImage === '' && values.message === '') {\n      toggleAlert();\n      return;\n    }\n    const msg = edit ? 'Testimonial updated successfully' : 'Testimonial added successfully';\n    if (edit) {\n      console.log('edit');\n      if (JSON.stringify(values) === JSON.stringify(updateTestimonial)) {\n        onClose();\n      } else {\n        data.forEach((item, index) => {\n          if (item._id === updateTestimonial._id) {\n            data.splice(index, 1);\n          }\n        });\n      }\n    }\n    try {\n      Loader.show();\n      await Becca.updateUiConfig('testimonials', [...data, values]);\n      handleRef();\n      SnackBar.show(msg, 'success');\n      onClose();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const uploadProfilePic = async (e, setValue) => {\n    try {\n      Loader.show();\n      const files = e?.target?.files;\n      const file = files && files[0];\n      const payload = new FormData();\n      payload.append('name', file.name);\n      payload.append('purpose', 'Testimonial');\n      payload.append('type', 'image');\n      payload.append('file', file);\n      const { url } = await Becca.uploadAsset(payload);\n      setValue('customerImage', url);\n      setPp();\n      SnackBar.show('upload success');\n    } catch (e) {\n      SnackBar.show('upload failed', 'error');\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onImageChange = (values, setField) => (files) => {\n    if (files.length === 0) {\n      setField('testimonialImage', '');\n      return;\n    }\n    const { images } = getVideosAndImages(files);\n    setField('testimonialImage', images[0]?.url);\n    setField('type', 'image');\n  };\n\n  const handleDeleteTxt = (setValue) => {\n    setValue('message', '');\n    toggleImgOrTxt();\n  };\n\n  return (\n    <Component\n      title={edit ? 'Edit Testimonial' : 'Add Testimonial'}\n      backButton\n      onClose={onClose}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={tSchema}\n        onSubmit={onSave}\n      >\n        {({\n          values, setFieldValue, submitForm\n        }) => (\n          <div className={styles.mainContainer}>\n            <FormikInput\n              type=\"textarea\"\n              rows={5}\n              label=\"Customer testimonials\"\n              name=\"message\"\n              placeholder=\"Add a testimonial from your customer\"\n            />\n            <div className={styles.max}>Maximum 150 charaters</div>\n            <div className={styles.orBorderMain}>\n              <div className={styles.orBorder}>\n                <span className={styles.orTxt}>or</span>\n              </div>\n            </div>\n            {!edit && (\n              <ImagePicker\n                onChange={onImageChange(values, setFieldValue)}\n                isMulti={false}\n                images={values?.testimonialImage ? [{ url: values.testimonialImage }] : []}\n                accept=\"image/*\"\n                showCover={false}\n                videos={false}\n                label=\"Upload Image\"\n              />\n            )}\n            {edit && (\n              <>\n                {(updateTestimonalPhoto || values.testimonialImage === '')\n                  && (\n                    <ImagePicker\n                      onChange={onImageChange(values, setFieldValue)}\n                      isMulti={false}\n                      images={values?.testimonialImage ? [{ url: values.testimonialImage }] : []}\n                      accept=\"image/*\"\n                      showCover={false}\n                      videos={false}\n                      label=\"Upload Image\"\n                    />\n                  )}\n                {(updateTestimonalPhoto === false && values.testimonialImage !== '') && (\n                  <div className={styles.testimonialImageCon}>\n                    <Clickable\n                      className={styles.editIcon}\n                      onClick={() => {\n                        setFieldValue('testimonialImage', '');\n                        setFieldValue('type', 'message');\n                        toggleUpdateTestimonalPhoto();\n                      }}\n                    >\n                      <img src={editIcon} alt=\"\" />\n                    </Clickable>\n                    <img\n                      src={values.testimonialImage}\n                      alt=\"\"\n                      className={styles.uploadedTestimonialImg} />\n                  </div>\n                )}\n              </>\n            )}\n            <div className={styles.csTitle}>\n              Customer Details\n            </div>\n            <div className={styles.customerName}>\n              <FormikInput\n                label=\"Customer Name\"\n                name=\"name\"\n                placeholder=\"e.g.  John Deo\"\n              />\n            </div>\n            <div className={styles.ciMainContainer}>\n              <div className={styles.section1}>\n                <div className={styles.ciTitle}>\n                  Select Customer Image\n                  <span className={styles.optional}>(optional)</span>\n                </div>\n                <input\n                  ref={inputRef1}\n                  accept=\"image/*\"\n                  hidden\n                  type=\"file\"\n                  name=\"profilePic\"\n                  onChange={(e) => { uploadProfilePic(e, setFieldValue); }}\n                />\n                {(pp === false && edit === false) && (\n                  <Clickable\n                    onClick={() => {\n                      // eslint-disable-next-line no-unused-expressions\n                      inputRef1?.current?.click();\n                    }}\n                  >\n                    <div className={styles.add}>\n                      <img src={primaryPlusIcon} alt=\"\" />\n                      <div className={styles.addTxt}>\n                        Add\n                      </div>\n                    </div>\n                  </Clickable>\n                )}\n                {edit && (\n                  <Clickable\n                    onClick={() => {\n                      // eslint-disable-next-line no-unused-expressions\n                      inputRef1?.current?.click();\n                    }}\n                  >\n                    <div className={styles.add}>\n                      <img src={primaryPlusIcon} alt=\"\" />\n                      <div className={styles.addTxt}>\n                        Add\n                      </div>\n                    </div>\n                  </Clickable>\n                )}\n              </div>\n              <div className={styles.ciProfilePicCon}>\n                {edit === false && (\n                  <>\n                    <img\n                      src={values.customerImage === '' ? defaultPicIcon : values.customerImage}\n                      alt=\"\"\n                      className={styles.ciProfilePic} />\n                    {pp && (\n                      <Clickable\n                        className={styles.clsBtn}\n                        onClick={() => {\n                          setFieldValue('customerImage', '');\n                          setPp();\n                        }}>\n                        <img src={closeIcon} alt=\"\" />\n                      </Clickable>\n                    )}\n                  </>\n                )}\n                {\n                  edit && (\n                    <>\n                      <img\n                        src={values.customerImage === '' ? defaultPicIcon : values.customerImage}\n                        alt=\"\"\n                        className={styles.ciProfilePic} />\n                      <Clickable\n                        className={styles.clsBtn}\n                        onClick={() => { setFieldValue('customerImage', ''); }}>\n                        <img src={closeIcon} alt=\"\" />\n                      </Clickable>\n                    </>\n                  )\n                }\n              </div>\n            </div>\n            <div className={styles.designation}>\n              <FormikInput\n                label=\"Designation (optional)\"\n                name=\"designation\"\n                placeholder=\"Enter Designation\"\n              />\n            </div>\n            <div className={styles.location}>\n              <FormikInput\n                label=\"Loction (optional)\"\n                name=\"location\"\n                placeholder=\"Enter Location\"\n              />\n            </div>\n            {imgOrTxt\n              && (\n                <DeleteAlert\n                  title=\"You can add either image or text. Should we delete the text?\"\n                  onCancel={toggleImgOrTxt}\n                  primary=\"Yes\"\n                  secondary=\"No\"\n                  onDelete={() => {\n                    handleDeleteTxt(setFieldValue);\n                  }}\n                />\n              )}\n            {openAlert && (\n              <Alert\n                btnText=\"Ok\"\n                text=\"Image or Text is required\"\n                onClick={toggleAlert}\n              />\n            )}\n            {!isDesktop\n              && (\n                <FooterButton>\n                  {!edit && (<Button label=\"Save\" className={styles.saveBtn} onClick={submitForm} />)}\n                  {edit && (\n                    <Button\n                      label=\"Save\"\n                      className={styles.saveBtn}\n                      onClick={() => {\n                        submitForm();\n                      }} />\n                  )}\n                </FooterButton>\n              )}\n            {\n              isDesktop && (\n                <div className={styles.saveBtnDeskCon}>\n                  {!edit && (<Button label=\"Save\" className={styles.saveBtn} onClick={submitForm} />)}\n                  {edit && (\n                    <Button\n                      label=\"Save\"\n                      className={styles.saveBtn}\n                      onClick={() => {\n                        submitForm();\n                      }} />\n                  )}\n                </div>\n              )\n            }\n          </div>\n        )}\n      </Formik>\n    </Component>\n  );\n}\n\nAddTestimonials.propTypes = {\n  edit: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  updateTestimonial: PropTypes.object,\n  handleRef: PropTypes.func.isRequired\n};\n\nAddTestimonials.defaultProps = {\n  updateTestimonial: {}\n};\n"]},"metadata":{},"sourceType":"module"}