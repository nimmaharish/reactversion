{"ast":null,"code":"var _excluded = [\"tags\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { createStackTraces, filterInvalidFrames } from './stack-trace';\nimport { generateRandomId, merge, extend } from '../common/utils';\nimport { getPageContext } from '../common/context';\nimport { truncateModel, ERROR_MODEL } from '../common/truncate';\nvar IGNORE_KEYS = ['stack', 'message'];\n\nfunction getErrorProperties(error) {\n  var propertyFound = false;\n  var properties = {};\n  Object.keys(error).forEach(function (key) {\n    if (IGNORE_KEYS.indexOf(key) >= 0) {\n      return;\n    }\n\n    var val = error[key];\n\n    if (val == null || typeof val === 'function') {\n      return;\n    }\n\n    if (typeof val === 'object') {\n      if (typeof val.toISOString !== 'function') return;\n      val = val.toISOString();\n    }\n\n    properties[key] = val;\n    propertyFound = true;\n  });\n\n  if (propertyFound) {\n    return properties;\n  }\n}\n\nvar ErrorLogging = function () {\n  function ErrorLogging(apmServer, configService, transactionService) {\n    this._apmServer = apmServer;\n    this._configService = configService;\n    this._transactionService = transactionService;\n  }\n\n  var _proto = ErrorLogging.prototype;\n\n  _proto.createErrorDataModel = function createErrorDataModel(errorEvent) {\n    var frames = createStackTraces(errorEvent);\n    var filteredFrames = filterInvalidFrames(frames);\n    var culprit = '(inline script)';\n    var lastFrame = filteredFrames[filteredFrames.length - 1];\n\n    if (lastFrame && lastFrame.filename) {\n      culprit = lastFrame.filename;\n    }\n\n    var message = errorEvent.message,\n        error = errorEvent.error;\n    var errorMessage = message;\n    var errorType = '';\n    var errorContext = {};\n\n    if (error && typeof error === 'object') {\n      errorMessage = errorMessage || error.message;\n      errorType = error.name;\n      var customProperties = getErrorProperties(error);\n\n      if (customProperties) {\n        errorContext.custom = customProperties;\n      }\n    }\n\n    if (!errorType) {\n      if (errorMessage && errorMessage.indexOf(':') > -1) {\n        errorType = errorMessage.split(':')[0];\n      }\n    }\n\n    var currentTransaction = this._transactionService.getCurrentTransaction();\n\n    var transactionContext = currentTransaction ? currentTransaction.context : {};\n\n    var _this$_configService$ = this._configService.get('context'),\n        tags = _this$_configService$.tags,\n        configContext = _objectWithoutPropertiesLoose(_this$_configService$, _excluded);\n\n    var pageContext = getPageContext();\n    var context = merge({}, pageContext, transactionContext, configContext, errorContext);\n    var errorObject = {\n      id: generateRandomId(),\n      culprit: culprit,\n      exception: {\n        message: errorMessage,\n        stacktrace: filteredFrames,\n        type: errorType\n      },\n      context: context\n    };\n\n    if (currentTransaction) {\n      errorObject = extend(errorObject, {\n        trace_id: currentTransaction.traceId,\n        parent_id: currentTransaction.id,\n        transaction_id: currentTransaction.id,\n        transaction: {\n          type: currentTransaction.type,\n          sampled: currentTransaction.sampled\n        }\n      });\n    }\n\n    return truncateModel(ERROR_MODEL, errorObject);\n  };\n\n  _proto.logErrorEvent = function logErrorEvent(errorEvent) {\n    if (typeof errorEvent === 'undefined') {\n      return;\n    }\n\n    var errorObject = this.createErrorDataModel(errorEvent);\n\n    if (typeof errorObject.exception.message === 'undefined') {\n      return;\n    }\n\n    this._apmServer.addError(errorObject);\n  };\n\n  _proto.registerListeners = function registerListeners() {\n    var _this = this;\n\n    window.addEventListener('error', function (errorEvent) {\n      return _this.logErrorEvent(errorEvent);\n    });\n    window.addEventListener('unhandledrejection', function (promiseRejectionEvent) {\n      return _this.logPromiseEvent(promiseRejectionEvent);\n    });\n  };\n\n  _proto.logPromiseEvent = function logPromiseEvent(promiseRejectionEvent) {\n    var prefix = 'Unhandled promise rejection: ';\n    var reason = promiseRejectionEvent.reason;\n\n    if (reason == null) {\n      reason = '<no reason specified>';\n    }\n\n    var errorEvent;\n\n    if (typeof reason.message === 'string') {\n      var name = reason.name ? reason.name + ': ' : '';\n      errorEvent = {\n        error: reason,\n        message: prefix + name + reason.message\n      };\n    } else {\n      reason = typeof reason === 'object' ? '<object>' : typeof reason === 'function' ? '<function>' : reason;\n      errorEvent = {\n        message: prefix + reason\n      };\n    }\n\n    this.logErrorEvent(errorEvent);\n  };\n\n  _proto.logError = function logError(messageOrError) {\n    var errorEvent = {};\n\n    if (typeof messageOrError === 'string') {\n      errorEvent.message = messageOrError;\n    } else {\n      errorEvent.error = messageOrError;\n    }\n\n    return this.logErrorEvent(errorEvent);\n  };\n\n  return ErrorLogging;\n}();\n\nexport default ErrorLogging;","map":{"version":3,"sources":["/home/harish/windo/phoenix/node_modules/@elastic/apm-rum-core/dist/es/error-logging/error-logging.js"],"names":["_excluded","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","createStackTraces","filterInvalidFrames","generateRandomId","merge","extend","getPageContext","truncateModel","ERROR_MODEL","IGNORE_KEYS","getErrorProperties","error","propertyFound","properties","forEach","val","toISOString","ErrorLogging","apmServer","configService","transactionService","_apmServer","_configService","_transactionService","_proto","prototype","createErrorDataModel","errorEvent","frames","filteredFrames","culprit","lastFrame","filename","message","errorMessage","errorType","errorContext","name","customProperties","custom","split","currentTransaction","getCurrentTransaction","transactionContext","context","_this$_configService$","get","tags","configContext","pageContext","errorObject","id","exception","stacktrace","type","trace_id","traceId","parent_id","transaction_id","transaction","sampled","logErrorEvent","addError","registerListeners","_this","window","addEventListener","promiseRejectionEvent","logPromiseEvent","prefix","reason","logError","messageOrError"],"mappings":"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","sourcesContent":["var _excluded = [\"tags\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { createStackTraces, filterInvalidFrames } from './stack-trace';\nimport { generateRandomId, merge, extend } from '../common/utils';\nimport { getPageContext } from '../common/context';\nimport { truncateModel, ERROR_MODEL } from '../common/truncate';\nvar IGNORE_KEYS = ['stack', 'message'];\n\nfunction getErrorProperties(error) {\n  var propertyFound = false;\n  var properties = {};\n  Object.keys(error).forEach(function (key) {\n    if (IGNORE_KEYS.indexOf(key) >= 0) {\n      return;\n    }\n\n    var val = error[key];\n\n    if (val == null || typeof val === 'function') {\n      return;\n    }\n\n    if (typeof val === 'object') {\n      if (typeof val.toISOString !== 'function') return;\n      val = val.toISOString();\n    }\n\n    properties[key] = val;\n    propertyFound = true;\n  });\n\n  if (propertyFound) {\n    return properties;\n  }\n}\n\nvar ErrorLogging = function () {\n  function ErrorLogging(apmServer, configService, transactionService) {\n    this._apmServer = apmServer;\n    this._configService = configService;\n    this._transactionService = transactionService;\n  }\n\n  var _proto = ErrorLogging.prototype;\n\n  _proto.createErrorDataModel = function createErrorDataModel(errorEvent) {\n    var frames = createStackTraces(errorEvent);\n    var filteredFrames = filterInvalidFrames(frames);\n    var culprit = '(inline script)';\n    var lastFrame = filteredFrames[filteredFrames.length - 1];\n\n    if (lastFrame && lastFrame.filename) {\n      culprit = lastFrame.filename;\n    }\n\n    var message = errorEvent.message,\n        error = errorEvent.error;\n    var errorMessage = message;\n    var errorType = '';\n    var errorContext = {};\n\n    if (error && typeof error === 'object') {\n      errorMessage = errorMessage || error.message;\n      errorType = error.name;\n      var customProperties = getErrorProperties(error);\n\n      if (customProperties) {\n        errorContext.custom = customProperties;\n      }\n    }\n\n    if (!errorType) {\n      if (errorMessage && errorMessage.indexOf(':') > -1) {\n        errorType = errorMessage.split(':')[0];\n      }\n    }\n\n    var currentTransaction = this._transactionService.getCurrentTransaction();\n\n    var transactionContext = currentTransaction ? currentTransaction.context : {};\n\n    var _this$_configService$ = this._configService.get('context'),\n        tags = _this$_configService$.tags,\n        configContext = _objectWithoutPropertiesLoose(_this$_configService$, _excluded);\n\n    var pageContext = getPageContext();\n    var context = merge({}, pageContext, transactionContext, configContext, errorContext);\n    var errorObject = {\n      id: generateRandomId(),\n      culprit: culprit,\n      exception: {\n        message: errorMessage,\n        stacktrace: filteredFrames,\n        type: errorType\n      },\n      context: context\n    };\n\n    if (currentTransaction) {\n      errorObject = extend(errorObject, {\n        trace_id: currentTransaction.traceId,\n        parent_id: currentTransaction.id,\n        transaction_id: currentTransaction.id,\n        transaction: {\n          type: currentTransaction.type,\n          sampled: currentTransaction.sampled\n        }\n      });\n    }\n\n    return truncateModel(ERROR_MODEL, errorObject);\n  };\n\n  _proto.logErrorEvent = function logErrorEvent(errorEvent) {\n    if (typeof errorEvent === 'undefined') {\n      return;\n    }\n\n    var errorObject = this.createErrorDataModel(errorEvent);\n\n    if (typeof errorObject.exception.message === 'undefined') {\n      return;\n    }\n\n    this._apmServer.addError(errorObject);\n  };\n\n  _proto.registerListeners = function registerListeners() {\n    var _this = this;\n\n    window.addEventListener('error', function (errorEvent) {\n      return _this.logErrorEvent(errorEvent);\n    });\n    window.addEventListener('unhandledrejection', function (promiseRejectionEvent) {\n      return _this.logPromiseEvent(promiseRejectionEvent);\n    });\n  };\n\n  _proto.logPromiseEvent = function logPromiseEvent(promiseRejectionEvent) {\n    var prefix = 'Unhandled promise rejection: ';\n    var reason = promiseRejectionEvent.reason;\n\n    if (reason == null) {\n      reason = '<no reason specified>';\n    }\n\n    var errorEvent;\n\n    if (typeof reason.message === 'string') {\n      var name = reason.name ? reason.name + ': ' : '';\n      errorEvent = {\n        error: reason,\n        message: prefix + name + reason.message\n      };\n    } else {\n      reason = typeof reason === 'object' ? '<object>' : typeof reason === 'function' ? '<function>' : reason;\n      errorEvent = {\n        message: prefix + reason\n      };\n    }\n\n    this.logErrorEvent(errorEvent);\n  };\n\n  _proto.logError = function logError(messageOrError) {\n    var errorEvent = {};\n\n    if (typeof messageOrError === 'string') {\n      errorEvent.message = messageOrError;\n    } else {\n      errorEvent.error = messageOrError;\n    }\n\n    return this.logErrorEvent(errorEvent);\n  };\n\n  return ErrorLogging;\n}();\n\nexport default ErrorLogging;"]},"metadata":{},"sourceType":"module"}