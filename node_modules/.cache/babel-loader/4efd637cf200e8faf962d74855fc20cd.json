{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/common/LanguageDrawer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Drawer } from \"../shared/Drawer\";\nimport { SideDrawer } from \"../shared/SideDrawer\";\nimport { useDesktop, useLanguage, useSetLanguage } from \"../../contexts\";\nimport { ALL_LANGUAGES } from \"../global/translateUtils\";\nimport { Select } from 'phoenix-components';\nimport styles from \"./LanguageDrawer.module.css\";\nexport function LanguageDrawer({\n  onBack\n}) {\n  _s();\n\n  const isDesktop = useDesktop();\n  const language = useLanguage();\n  const storeSelected = ALL_LANGUAGES.find(x => x.value === language);\n  const setLanguage = useSetLanguage();\n\n  const setLang = ({\n    value\n  }) => {\n    setLanguage(value);\n    onBack();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !isDesktop && /*#__PURE__*/React.createElement(Drawer, {\n    title: \"Select Language\",\n    onClose: onBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    translate: \"no\",\n    className: styles.drawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: ALL_LANGUAGES,\n    label: \"Select Language\",\n    onChange: setLang,\n    value: storeSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.helperTextD,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"You can always change your language later in settings\")))), isDesktop && /*#__PURE__*/React.createElement(SideDrawer, {\n    onClose: onBack,\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.drawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: ALL_LANGUAGES,\n    label: \"Select Language\",\n    onChange: setLang,\n    value: storeSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.helperTextD,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"You can always change your language later in settings\")))));\n}\n\n_s(LanguageDrawer, \"/3xt5a+U9QFkrY9wXpCc2ASPKns=\", false, function () {\n  return [useDesktop, useLanguage, useSetLanguage];\n});\n\n_c = LanguageDrawer;\nLanguageDrawer.propTypes = {\n  onBack: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageDrawer\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/common/LanguageDrawer.jsx"],"names":["React","PropTypes","Drawer","SideDrawer","useDesktop","useLanguage","useSetLanguage","ALL_LANGUAGES","Select","styles","LanguageDrawer","onBack","isDesktop","language","storeSelected","find","x","value","setLanguage","setLang","drawer","helperTextD","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT;AACA,SAASC,UAAT;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,cAAlC;AACA,SAASC,aAAT;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,MAAP;AAEA,OAAO,SAASC,cAAT,CAAwB;AAC7BC,EAAAA;AAD6B,CAAxB,EAEJ;AAAA;;AACD,QAAMC,SAAS,GAAGR,UAAU,EAA5B;AACA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,aAAa,GAAGP,aAAa,CAACQ,IAAd,CAAmBC,CAAC,IAAIA,CAAC,CAACC,KAAF,KAAYJ,QAApC,CAAtB;AACA,QAAMK,WAAW,GAAGZ,cAAc,EAAlC;;AAEA,QAAMa,OAAO,GAAG,CAAC;AAAEF,IAAAA;AAAF,GAAD,KAAe;AAC7BC,IAAAA,WAAW,CAACD,KAAD,CAAX;AACAN,IAAAA,MAAM;AACP,GAHD;;AAKA,sBACE,0CACG,CAACC,SAAD,iBAEG,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,iBAAd;AAAgC,IAAA,OAAO,EAAED,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,IAAf;AAAoB,IAAA,SAAS,EAAEF,MAAM,CAACW,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEb,aADX;AAEE,IAAA,KAAK,EAAC,iBAFR;AAGE,IAAA,QAAQ,EAAEY,OAHZ;AAIE,IAAA,KAAK,EAAEL,aAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACY,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAPF,CADF,CADF,CAHN,EAmBGT,SAAS,iBAEN,oBAAC,UAAD;AACE,IAAA,OAAO,EAAED,MADX;AAEE,IAAA,WAAW,EAAE,IAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACW,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEb,aADX;AAEE,IAAA,KAAK,EAAC,iBAFR;AAGE,IAAA,QAAQ,EAAEY,OAHZ;AAIE,IAAA,KAAK,EAAEL,aAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACY,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAPF,CADF,CAJF,CArBN,CADF;AA2CD;;GAxDeX,c;UAGIN,U,EACDC,W,EAEGC,c;;;KANNI,c;AA0DhBA,cAAc,CAACY,SAAf,GAA2B;AACzBX,EAAAA,MAAM,EAAEV,SAAS,CAACsB,IAAV,CAAeC;AADE,CAA3B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Drawer } from 'components/shared/Drawer';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { useDesktop, useLanguage, useSetLanguage } from 'contexts';\nimport { ALL_LANGUAGES } from 'components/global/translateUtils';\nimport { Select } from 'phoenix-components';\nimport styles from './LanguageDrawer.module.css';\n\nexport function LanguageDrawer({\n  onBack\n}) {\n  const isDesktop = useDesktop();\n  const language = useLanguage();\n  const storeSelected = ALL_LANGUAGES.find(x => x.value === language);\n  const setLanguage = useSetLanguage();\n\n  const setLang = ({ value }) => {\n    setLanguage(value);\n    onBack();\n  };\n\n  return (\n    <>\n      {!isDesktop\n        && (\n          <Drawer title=\"Select Language\" onClose={onBack}>\n            <div translate=\"no\" className={styles.drawer}>\n              <div>\n                <Select\n                  options={ALL_LANGUAGES}\n                  label=\"Select Language\"\n                  onChange={setLang}\n                  value={storeSelected}\n                />\n                <div className={styles.helperTextD}>\n                  You can always change your language later in settings\n                </div>\n              </div>\n            </div>\n          </Drawer>\n        )}\n      {isDesktop\n        && (\n          <SideDrawer\n            onClose={onBack}\n            closeButton={true}\n          >\n            <div className={styles.drawer}>\n              <div>\n                <Select\n                  options={ALL_LANGUAGES}\n                  label=\"Select Language\"\n                  onChange={setLang}\n                  value={storeSelected}\n                />\n                <div className={styles.helperTextD}>\n                  You can always change your language later in settings\n                </div>\n              </div>\n            </div>\n          </SideDrawer>\n        )}\n    </>\n  );\n}\n\nLanguageDrawer.propTypes = {\n  onBack: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}