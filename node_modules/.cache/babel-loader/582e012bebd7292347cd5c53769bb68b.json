{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/layouts/NonLoggedInWeb.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Loading } from \"../components/shared/Loading\";\nimport { useQueryParams } from \"../hooks\";\nimport { useHistory } from 'react-router-dom';\nimport URL from \"../utils/url\";\nimport Storage from \"../services/storage\";\n\nfunction NonLoggedInWeb() {\n  _s();\n\n  const params = useQueryParams();\n  const history = useHistory();\n  useEffect(() => {\n    if (!params.has('token')) {\n      history.replace('/');\n    }\n\n    try {\n      const {\n        token\n      } = URL.getTokenData(params.get('token'));\n\n      if (!token) {\n        history.replace('/');\n      }\n\n      Storage.setItem('token', token);\n      window.location.reload();\n    } catch (e) {\n      history.replace('/');\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  });\n}\n\n_s(NonLoggedInWeb, \"nKTb/kHmvu7nwyBD6FL9qQnHBsc=\", false, function () {\n  return [useQueryParams, useHistory];\n});\n\n_c = NonLoggedInWeb;\nNonLoggedInWeb.propTypes = {};\nNonLoggedInWeb.defaultProps = {};\nexport default NonLoggedInWeb;\n\nvar _c;\n\n$RefreshReg$(_c, \"NonLoggedInWeb\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/layouts/NonLoggedInWeb.jsx"],"names":["React","useEffect","Loading","useQueryParams","useHistory","URL","Storage","NonLoggedInWeb","params","history","has","replace","token","getTokenData","get","setItem","window","location","reload","e","propTypes","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT;AACA,SAASC,cAAT;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,GAAP;AACA,OAAOC,OAAP;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACxB,QAAMC,MAAM,GAAGL,cAAc,EAA7B;AACA,QAAMM,OAAO,GAAGL,UAAU,EAA1B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACO,MAAM,CAACE,GAAP,CAAW,OAAX,CAAL,EAA0B;AACxBD,MAAAA,OAAO,CAACE,OAAR,CAAgB,GAAhB;AACD;;AACD,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAYP,GAAG,CAACQ,YAAJ,CAAiBL,MAAM,CAACM,GAAP,CAAW,OAAX,CAAjB,CAAlB;;AACA,UAAI,CAACF,KAAL,EAAY;AACVH,QAAAA,OAAO,CAACE,OAAR,CAAgB,GAAhB;AACD;;AACDL,MAAAA,OAAO,CAACS,OAAR,CAAgB,OAAhB,EAAyBH,KAAzB;AACAI,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAPD,CAOE,OAAOC,CAAP,EAAU;AACVV,MAAAA,OAAO,CAACE,OAAR,CAAgB,GAAhB;AACD;AACF,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD;;GAtBQJ,c;UACQJ,c,EACCC,U;;;KAFTG,c;AAwBTA,cAAc,CAACa,SAAf,GAA2B,EAA3B;AAEAb,cAAc,CAACc,YAAf,GAA8B,EAA9B;AAEA,eAAed,cAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Loading } from 'components/shared/Loading';\nimport { useQueryParams } from 'hooks';\nimport { useHistory } from 'react-router-dom';\nimport URL from 'utils/url';\nimport Storage from 'services/storage';\n\nfunction NonLoggedInWeb() {\n  const params = useQueryParams();\n  const history = useHistory();\n  useEffect(() => {\n    if (!params.has('token')) {\n      history.replace('/');\n    }\n    try {\n      const { token } = URL.getTokenData(params.get('token'));\n      if (!token) {\n        history.replace('/');\n      }\n      Storage.setItem('token', token);\n      window.location.reload();\n    } catch (e) {\n      history.replace('/');\n    }\n  }, []);\n\n  return (\n    <Loading />\n  );\n}\n\nNonLoggedInWeb.propTypes = {};\n\nNonLoggedInWeb.defaultProps = {};\n\nexport default NonLoggedInWeb;\n"]},"metadata":{},"sourceType":"module"}