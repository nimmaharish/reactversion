{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/seo/Seo.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Drawer } from \"../shared/Drawer\";\nimport { SideDrawer } from \"../shared/SideDrawer\";\nimport { useDesktop } from \"../../contexts\";\nimport { Formik } from 'formik';\nimport SnackBar from \"../../services/snackbar\";\nimport Loader from \"../../services/loader\";\nimport { useSeo } from \"../../hooks/common\";\nimport { Loading } from \"../shared/Loading\";\nimport { Button, FormikInput } from 'phoenix-components';\nimport PropTypes from 'prop-types';\nimport { Becca } from \"../../api\";\nimport { schema, getInitialValues } from \"./utils\";\nimport styles from \"./Seo.module.css\";\nexport default function Seo({\n  onClose\n}) {\n  _s();\n\n  const isDesktop = useDesktop();\n  const history = useHistory();\n  const [seo, loading, refresh] = useSeo();\n  console.log(seo);\n  const Component = isDesktop ? SideDrawer : Drawer;\n\n  const closeDraw = () => {\n    history.push('/settings/profile');\n  };\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const onSubmit = async values => {\n    try {\n      Loader.show();\n      await Becca.updateUiConfig('seo', values);\n      refresh();\n      onClose();\n      SnackBar.show('SEO updated successfully', 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Component, {\n    title: \"SEO Settings\",\n    backButton: true,\n    onClose: onClose || closeDraw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    validationSchema: schema,\n    initialValues: getInitialValues(seo),\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, ({\n    submitForm\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    name: \"title\",\n    label: \"Enter Meta Title\",\n    placeholder: \"Tite Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"marginMTopBottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormikInput, {\n    name: \"description\",\n    type: \"textarea\",\n    rows: 4,\n    label: \"Enter Meta Description\",\n    placeholder: \"Type Discription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"marginMTopBottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormikInput, {\n    name: \"keywords\",\n    type: \"textarea\",\n    rows: 4,\n    label: \"Enter Key Words\",\n    placeholder: \"Type keywords\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  })), isDesktop ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    bordered: true,\n    label: \"Save\",\n    size: \"large\",\n    onClick: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    bordered: false,\n    label: \"Save\",\n    size: \"large\",\n    onClick: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  })))));\n}\n\n_s(Seo, \"pRqoPDZN2+bTj3Z5+TSk4ojgzRk=\", false, function () {\n  return [useDesktop, useHistory, useSeo];\n});\n\n_c = Seo;\nSeo.propTypes = {\n  onClose: PropTypes.func.isRequired\n};\nSeo.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"Seo\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/seo/Seo.jsx"],"names":["React","useHistory","Drawer","SideDrawer","useDesktop","Formik","SnackBar","Loader","useSeo","Loading","Button","FormikInput","PropTypes","Becca","schema","getInitialValues","styles","Seo","onClose","isDesktop","history","seo","loading","refresh","console","log","Component","closeDraw","push","onSubmit","values","show","updateUiConfig","e","showError","hide","submitForm","container","button","propTypes","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Drawer } from 'components/shared/Drawer';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { useDesktop } from 'contexts';\nimport { Formik } from 'formik';\nimport SnackBar from 'services/snackbar';\nimport Loader from 'services/loader';\nimport { useSeo } from 'hooks/common';\nimport { Loading } from 'components/shared/Loading';\nimport { Button, FormikInput } from 'phoenix-components';\nimport PropTypes from 'prop-types';\nimport { Becca } from '../../api';\nimport { schema, getInitialValues } from './utils';\nimport styles from './Seo.module.css';\n\nexport default function Seo({ onClose }) {\n  const isDesktop = useDesktop();\n  const history = useHistory();\n  const [seo, loading, refresh] = useSeo();\n  console.log(seo);\n  const Component = isDesktop ? SideDrawer : Drawer;\n  const closeDraw = () => {\n    history.push('/settings/profile');\n  };\n\n  if (loading) {\n    return <Loading />;\n  }\n  const onSubmit = async (values) => {\n    try {\n      Loader.show();\n      await Becca.updateUiConfig('seo', values);\n      refresh();\n      onClose();\n      SnackBar.show('SEO updated successfully', 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  return (\n    <Component\n      title=\"SEO Settings\"\n      backButton={true}\n      onClose={onClose || closeDraw}\n    >\n      <Formik\n        validationSchema={schema}\n        initialValues={getInitialValues(seo)}\n        onSubmit={onSubmit}>\n        {({ submitForm }) => (\n          <>\n            <div className={styles.container}>\n              <FormikInput\n                name=\"title\"\n                label=\"Enter Meta Title\"\n                placeholder=\"Tite Name\" />\n              <div className=\"marginMTopBottom\"></div>\n              <FormikInput\n                name=\"description\"\n                type=\"textarea\"\n                rows={4}\n                label=\"Enter Meta Description\"\n                placeholder=\"Type Discription\" />\n              <div className=\"marginMTopBottom\"></div>\n              <FormikInput\n                name=\"keywords\"\n                type=\"textarea\"\n                rows={4}\n                label=\"Enter Key Words\"\n                placeholder=\"Type keywords\" />\n            </div>\n            {isDesktop ? (\n              <div className={styles.button}>\n                <Button\n                  bordered={true}\n                  label=\"Save\"\n                  size=\"large\"\n                  onClick={submitForm} />\n              </div>\n            ) : (\n              <div className={styles.button}>\n                <Button\n                  fullWidth\n                  bordered={false}\n                  label=\"Save\"\n                  size=\"large\"\n                  onClick={submitForm} />\n              </div>\n            )}\n          </>\n        )}\n      </Formik>\n    </Component>\n  );\n}\n\nSeo.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nSeo.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}