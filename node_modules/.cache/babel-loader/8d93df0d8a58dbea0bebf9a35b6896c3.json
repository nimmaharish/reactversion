{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/profile/shippingPartners/Partner.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Drawer } from \"../../../components/shared/Drawer\";\nimport { Formik } from 'formik';\nimport { Becca } from \"../../../api\";\nimport PropTypes from 'prop-types';\nimport Loader from \"../../../services/loader\";\nimport SnackBar from \"../../../services/snackbar\";\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useToggle } from \"../../../hooks/common\";\nimport { FormikInput, Button, Clickable } from 'phoenix-components';\nimport { FooterButton } from \"../../../components/common/FooterButton\";\nimport { Switch } from 'phoenix-components';\nimport closeIcon from \"../../../assets/images/orders/list/close.svg\";\nimport PencilIcon from \"../../../assets/images/address/edit.svg\";\nimport { usePartnersRefresh } from \"../../../contexts\";\nimport { useDesktop } from \"../../../contexts\";\nimport cx from 'classnames';\nimport { Dialog } from '@material-ui/core';\nimport EventManager from \"../../../utils/events\";\nimport { SideDrawer } from \"../../../components/shared/SideDrawer\";\nimport styles from \"./Partner.module.css\";\nimport { KnowMoreDialog } from \"./KnowMoreDialog\";\nimport { getInitialValues, schema, isEmptyPartner } from \"./utils\";\n\nfunction Partner({\n  name,\n  partners\n}) {\n  _s();\n\n  var _partners$name;\n\n  const history = useHistory();\n  const location = useLocation();\n  const [openForm, toggleForm] = useToggle(false);\n  const refresh = usePartnersRefresh();\n  const isDesktop = useDesktop();\n\n  const onUnlive = async () => {\n    try {\n      var _location$state;\n\n      Loader.show();\n      await Becca.updateShippingPartner(name, {\n        enabled: !partners[name].enabled\n      });\n      SnackBar.show('Partner updated successfully', 'success');\n\n      if (location !== null && location !== void 0 && (_location$state = location.state) !== null && _location$state !== void 0 && _location$state.redirectTo) {\n        history.push(location.state.redirectTo);\n        return;\n      }\n\n      refresh();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onSubmit = async values => {\n    try {\n      Loader.show();\n      await Becca.createShippingPartner(name, values);\n      EventManager.emitEvent('shipping_partner_enabled', {\n        name\n      });\n      SnackBar.show('Partner added successfully', 'success');\n      refresh();\n      toggleForm();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onDisconnect = async () => {\n    try {\n      Loader.show();\n      await Becca.deleteShippingPartner(name);\n      EventManager.emitEvent('shipping_partner_disabled', {\n        name\n      });\n      SnackBar.show('Partner disconnected successfully', 'success');\n      refresh();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const getInitial = () => {\n    const val = getInitialValues({ ...partners,\n      name\n    });\n    return val;\n  };\n\n  const list = {\n    shiprocket: ['Go to settings in shiprocket dashboard', 'Go to configure under API', 'Create API user', 'Enter email and password used for creating API user in shiprocket'],\n    goshippo: ['Go to settings in shippo dashboard', 'Go to API', 'Click on generate token under live token', 'Enter shippo token that you generated'],\n    pickrr: ['Contact Pickrr team to get Pickrr Token', 'Enter Pickrr Token']\n  };\n  const isEnabled = (_partners$name = partners[name]) === null || _partners$name === void 0 ? void 0 : _partners$name.enabled;\n  const showEmailConfig = name === 'shiprocket';\n  const heading = {\n    shiprocket: 'How to Integrate Shiprocket',\n    pickrr: 'How to Integrate Pickrr',\n    goshippo: 'How to Integrate Shippo'\n  };\n  const title = {\n    shiprocket: 'Shiprocket',\n    pickrr: 'Pickrr',\n    goshippo: 'Shippo'\n  };\n  const drawerTitle = {\n    shiprocket: 'Shiprocket Details',\n    pickrr: 'Pickrr Details',\n    goshippo: 'Shippo Details'\n  };\n  const url = {\n    shiprocket: 'https://www.shiprocket.in/',\n    pickrr: 'http://www.pickrr.com/',\n    goshippo: 'https://goshippo.com/'\n  };\n\n  const onClose = () => history.goBack();\n\n  const sideDrawerAction = () => {\n    if (isEmptyPartner(name, partners)) {\n      toggleForm();\n    } else {\n      onDisconnect();\n    }\n  };\n\n  const body = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  }, isEmptyPartner(name, partners) && /*#__PURE__*/React.createElement(KnowMoreDialog, {\n    onAction: toggleForm,\n    list: list[name],\n    heading: heading[name],\n    url: url[name],\n    description: `To integrate third-party shipping partners into your windo account,\n            please follow these steps`,\n    title: title[name],\n    onBack: () => history.goBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }), !isEmptyPartner(name, partners) && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.partner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.account,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, \" Account Status \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.switch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: isEnabled ? styles.alive : styles.na,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, isEnabled ? 'Live' : 'Unlive'), /*#__PURE__*/React.createElement(Switch, {\n    active: partners[name].enabled,\n    onChange: onUnlive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fullWidth flexBetween\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.account,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, \" Account Details \"), /*#__PURE__*/React.createElement(Clickable, {\n    onClick: toggleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: PencilIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }))), showEmailConfig ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 19\n    }\n  }, \" Email \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, ' ', partners[name].config.email, ' ')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  }, \" Password \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  }, ' ', partners[name].config.password, ' '))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, \" Token \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, ' ', partners[name].config.token, ' '))), !isDesktop && /*#__PURE__*/React.createElement(FooterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    bordered: false,\n    label: \"Disconnect\",\n    size: \"large\",\n    onClick: onDisconnect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }))), openForm && !isDesktop && /*#__PURE__*/React.createElement(Drawer, {\n    onClose: toggleForm,\n    closeButton: true,\n    title: drawerTitle[name],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    validationSchema: schema,\n    initialValues: getInitial(),\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, ({\n    submitForm,\n    values\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, showEmailConfig && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Enter Email\",\n    placeholder: \"e.g. XYZ1234\",\n    name: \"config.email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Enter Password\",\n    placeholder: \"e.g. XYZ1234\",\n    name: \"config.password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  }))), !showEmailConfig && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Enter Token\",\n    placeholder: \"e.g. XYZ1234\",\n    name: \"config.token\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(FooterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    bordered: false,\n    label: \"Connect\",\n    size: \"large\",\n    onClick: () => submitForm(values, name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  })))))), openForm && isDesktop && /*#__PURE__*/React.createElement(Dialog, {\n    maxWidth: \"sm\",\n    open: openForm,\n    onClose: toggleForm,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('flexEnd', styles.padding),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    onClick: toggleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: closeIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, drawerTitle[name]), /*#__PURE__*/React.createElement(Formik, {\n    validationSchema: schema,\n    initialValues: getInitial(),\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }, ({\n    submitForm,\n    values\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }\n  }, showEmailConfig && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Enter Email\",\n    placeholder: \"e.g. XYZ1234\",\n    name: \"config.email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Enter Password\",\n    placeholder: \"e.g. XYZ1234\",\n    name: \"config.password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 25\n    }\n  }))), !showEmailConfig && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Enter Token\",\n    placeholder: \"e.g. XYZ1234\",\n    name: \"config.token\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.buttonD,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"Connect\",\n    size: \"large\",\n    onClick: () => submitForm(values, name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 21\n    }\n  })))))));\n\n  return !isDesktop ? /*#__PURE__*/React.createElement(Drawer, {\n    title: title[name],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 5\n    }\n  }, body()) : /*#__PURE__*/React.createElement(SideDrawer, {\n    backButton: true,\n    onClick: sideDrawerAction,\n    onClose: onClose,\n    button: true,\n    btnLabel: isEmptyPartner(name, partners) ? 'Connect' : 'Disconnect',\n    title: title[name],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 5\n    }\n  }, body());\n}\n\n_s(Partner, \"wniJM7gKpsjXyn/LmVRnT8XK2/0=\", false, function () {\n  return [useHistory, useLocation, useToggle, usePartnersRefresh, useDesktop];\n});\n\n_c = Partner;\nPartner.propTypes = {\n  name: PropTypes.string.isRequired,\n  partners: PropTypes.object.isRequired\n};\nexport default Partner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Partner\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/shippingPartners/Partner.jsx"],"names":["React","Drawer","Formik","Becca","PropTypes","Loader","SnackBar","useHistory","useLocation","useToggle","FormikInput","Button","Clickable","FooterButton","Switch","usePartnersRefresh","useDesktop","cx","Dialog","EventManager","SideDrawer","styles","KnowMoreDialog","getInitialValues","schema","isEmptyPartner","Partner","name","partners","history","location","openForm","toggleForm","refresh","isDesktop","onUnlive","show","updateShippingPartner","enabled","state","redirectTo","push","e","showError","hide","onSubmit","values","createShippingPartner","emitEvent","onDisconnect","deleteShippingPartner","getInitial","val","list","shiprocket","goshippo","pickrr","isEnabled","showEmailConfig","heading","title","drawerTitle","url","onClose","goBack","sideDrawerAction","body","mainContainer","partner","status","account","switch","alive","na","details","PencilIcon","key","value","config","email","password","token","submitForm","container","main","input","padding","closeIcon","buttonD","propTypes","string","isRequired","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Drawer } from 'components/shared/Drawer';\nimport { Formik } from 'formik';\nimport { Becca } from 'api';\nimport PropTypes from 'prop-types';\nimport Loader from 'services/loader';\nimport SnackBar from 'services/snackbar';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useToggle } from 'hooks/common';\nimport { FormikInput, Button, Clickable } from 'phoenix-components';\nimport { FooterButton } from 'components/common/FooterButton';\nimport {\n  Switch\n} from 'phoenix-components';\nimport closeIcon from 'assets/images/orders/list/close.svg';\nimport PencilIcon from 'assets/images/address/edit.svg';\nimport { usePartnersRefresh } from 'contexts';\nimport { useDesktop } from 'contexts';\nimport cx from 'classnames';\nimport { Dialog } from '@material-ui/core';\nimport EventManager from 'utils/events';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport styles from './Partner.module.css';\nimport { KnowMoreDialog } from './KnowMoreDialog';\nimport { getInitialValues, schema, isEmptyPartner } from './utils';\n\nfunction Partner({ name, partners }) {\n  const history = useHistory();\n  const location = useLocation();\n  const [openForm, toggleForm] = useToggle(false);\n  const refresh = usePartnersRefresh();\n  const isDesktop = useDesktop();\n\n  const onUnlive = async () => {\n    try {\n      Loader.show();\n      await Becca.updateShippingPartner(name, { enabled: !partners[name].enabled });\n      SnackBar.show('Partner updated successfully', 'success');\n      if (location?.state?.redirectTo) {\n        history.push(location.state.redirectTo);\n        return;\n      }\n      refresh();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onSubmit = async (values) => {\n    try {\n      Loader.show();\n      await Becca.createShippingPartner(name, values);\n      EventManager.emitEvent('shipping_partner_enabled', {\n        name,\n      });\n      SnackBar.show('Partner added successfully', 'success');\n      refresh();\n      toggleForm();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onDisconnect = async () => {\n    try {\n      Loader.show();\n      await Becca.deleteShippingPartner(name);\n      EventManager.emitEvent('shipping_partner_disabled', {\n        name,\n      });\n      SnackBar.show('Partner disconnected successfully', 'success');\n      refresh();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const getInitial = () => {\n    const val = getInitialValues({ ...partners, name });\n    return val;\n  };\n\n  const list = {\n    shiprocket: [\n      'Go to settings in shiprocket dashboard',\n      'Go to configure under API',\n      'Create API user',\n      'Enter email and password used for creating API user in shiprocket',\n    ],\n    goshippo: [\n      'Go to settings in shippo dashboard',\n      'Go to API',\n      'Click on generate token under live token',\n      'Enter shippo token that you generated',\n    ],\n    pickrr: [\n      'Contact Pickrr team to get Pickrr Token',\n      'Enter Pickrr Token',\n    ],\n  };\n\n  const isEnabled = partners[name]?.enabled;\n\n  const showEmailConfig = name === 'shiprocket';\n\n  const heading = {\n    shiprocket: 'How to Integrate Shiprocket',\n    pickrr: 'How to Integrate Pickrr',\n    goshippo: 'How to Integrate Shippo'\n  };\n\n  const title = {\n    shiprocket: 'Shiprocket',\n    pickrr: 'Pickrr',\n    goshippo: 'Shippo'\n  };\n\n  const drawerTitle = {\n    shiprocket: 'Shiprocket Details',\n    pickrr: 'Pickrr Details',\n    goshippo: 'Shippo Details'\n  };\n\n  const url = {\n    shiprocket: 'https://www.shiprocket.in/',\n    pickrr: 'http://www.pickrr.com/',\n    goshippo: 'https://goshippo.com/'\n  };\n\n  const onClose = () => history.goBack();\n\n  const sideDrawerAction = () => {\n    if (isEmptyPartner(name, partners)) {\n      toggleForm();\n    } else {\n      onDisconnect();\n    }\n  };\n\n  const body = () => (\n    <div className={styles.mainContainer}>\n      {isEmptyPartner(name, partners) && (\n        <KnowMoreDialog\n          onAction={toggleForm}\n          list={list[name]}\n          heading={heading[name]}\n          url={url[name]}\n          description={`To integrate third-party shipping partners into your windo account,\n            please follow these steps`}\n          title={title[name]}\n          onBack={() => history.goBack()}\n        />\n      )}\n      {!isEmptyPartner(name, partners) && (\n        <div className={styles.partner}>\n          <div className={styles.status}>\n            <div className={styles.account}> Account Status </div>\n            <div className={styles.switch}>\n              <div className={isEnabled ? styles.alive : styles.na}>{isEnabled ? 'Live' : 'Unlive'}</div>\n              <Switch active={partners[name].enabled} onChange={onUnlive} />\n            </div>\n          </div>\n          <div className={styles.details}>\n            <div className=\"fullWidth flexBetween\">\n              <div className={styles.account}> Account Details </div>\n              <Clickable onClick={toggleForm}>\n                <img src={PencilIcon} alt=\"\" />\n              </Clickable>\n            </div>\n            {showEmailConfig ? (\n              <>\n                <div className=\"fullWidth\">\n                  <div className={styles.key}> Email </div>\n                  <div className={styles.value}>\n                    {' '}\n                    {partners[name].config.email}\n                    {' '}\n                  </div>\n                </div>\n                <div className=\"fullWidth\">\n                  <div className={styles.key}> Password </div>\n                  <div className={styles.value}>\n                    {' '}\n                    {partners[name].config.password}\n                    {' '}\n                  </div>\n                </div>\n              </>\n            ) : (\n              <div className=\"fullWidth\">\n                <div className={styles.key}> Token </div>\n                <div className={styles.value}>\n                  {' '}\n                  {partners[name].config.token}\n                  {' '}\n                </div>\n              </div>\n            )}\n          </div>\n          {!isDesktop && (\n            <FooterButton>\n              <Button\n                fullWidth\n                bordered={false}\n                label=\"Disconnect\"\n                size=\"large\"\n                onClick={onDisconnect}\n              >\n              </Button>\n            </FooterButton>\n          )}\n        </div>\n      )}\n      {openForm && !isDesktop && (\n        <Drawer\n          onClose={toggleForm}\n          closeButton\n          title={drawerTitle[name]}\n        >\n          <Formik\n            validationSchema={schema}\n            initialValues={getInitial()}\n            onSubmit={onSubmit}\n          >\n            {({ submitForm, values }) => (\n              <div className={styles.container}>\n                <div className={styles.main}>\n                  {showEmailConfig && (\n                    <>\n                      <div className={styles.input}>\n                        <FormikInput\n                          label=\"Enter Email\"\n                          placeholder=\"e.g. XYZ1234\"\n                          name=\"config.email\"\n                        />\n                      </div>\n                      <div className={styles.input}>\n                        <FormikInput\n                          label=\"Enter Password\"\n                          placeholder=\"e.g. XYZ1234\"\n                          name=\"config.password\"\n                        />\n                      </div>\n                    </>\n                  )}\n                  {!showEmailConfig && (\n                    <>\n                      <div className={styles.input}>\n                        <FormikInput\n                          label=\"Enter Token\"\n                          placeholder=\"e.g. XYZ1234\"\n                          name=\"config.token\"\n                        />\n                      </div>\n                    </>\n                  )}\n                  <FooterButton>\n                    <Button\n                      fullWidth\n                      bordered={false}\n                      label=\"Connect\"\n                      size=\"large\"\n                      onClick={() => submitForm(values, name)}\n                    >\n                    </Button>\n                  </FooterButton>\n                </div>\n              </div>\n            )}\n          </Formik>\n        </Drawer>\n      )}\n      {openForm && isDesktop && (\n        <Dialog\n          maxWidth=\"sm\"\n          open={openForm}\n          onClose={toggleForm}\n          fullWidth\n        >\n          <div className={cx('flexEnd', styles.padding)}>\n            <Clickable\n              onClick={toggleForm}>\n              <img src={closeIcon} alt=\"\" />\n            </Clickable>\n          </div>\n          <div className={styles.title}>{drawerTitle[name]}</div>\n          <Formik\n            validationSchema={schema}\n            initialValues={getInitial()}\n            onSubmit={onSubmit}\n          >\n            {({ submitForm, values }) => (\n              <div className={styles.container}>\n                <div className={styles.main}>\n                  {showEmailConfig && (\n                    <>\n                      <div className={styles.input}>\n                        <FormikInput\n                          label=\"Enter Email\"\n                          placeholder=\"e.g. XYZ1234\"\n                          name=\"config.email\"\n                        />\n                      </div>\n                      <div className={styles.input}>\n                        <FormikInput\n                          label=\"Enter Password\"\n                          placeholder=\"e.g. XYZ1234\"\n                          name=\"config.password\"\n                        />\n                      </div>\n                    </>\n                  )}\n                  {!showEmailConfig && (\n                    <>\n                      <div className={styles.input}>\n                        <FormikInput\n                          label=\"Enter Token\"\n                          placeholder=\"e.g. XYZ1234\"\n                          name=\"config.token\"\n                        />\n                      </div>\n                    </>\n                  )}\n                  <div className={styles.buttonD}>\n                    <Button\n                      label=\"Connect\"\n                      size=\"large\"\n                      onClick={() => submitForm(values, name)}\n                    >\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            )}\n          </Formik>\n        </Dialog>\n      )}\n    </div>\n  );\n\n  return !isDesktop ? (\n    <Drawer title={title[name]}>\n      {body()}\n    </Drawer>\n  ) : (\n    <SideDrawer\n      backButton={true}\n      onClick={sideDrawerAction}\n      onClose={onClose}\n      button={true}\n      btnLabel={isEmptyPartner(name, partners) ? 'Connect' : 'Disconnect'}\n      title={title[name]}\n    >\n      {body()}\n    </SideDrawer>\n  );\n}\n\nPartner.propTypes = {\n  name: PropTypes.string.isRequired,\n  partners: PropTypes.object.isRequired,\n};\n\nexport default Partner;\n"]},"metadata":{},"sourceType":"module"}