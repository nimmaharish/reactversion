{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/profile/marketingBanners/Saved.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useToggle } from \"../../../hooks/common\";\nimport Loader from \"../../../services/loader\";\nimport { Becca } from \"../../../api\";\nimport emptyTemplatesIcon from \"../../../assets/v2/settings/emptyTemplates.svg\";\nimport addedIcon from \"../../../assets/v2/settings/added.svg\";\nimport addWebsiteIcon from \"../../../assets/v2/settings/addWebsite.svg\";\nimport { useTemplates, useRefreshTemplates } from \"../../../contexts\";\nimport SnackBar from \"../../../services/snackbar\";\nimport { Clickable } from 'phoenix-components';\nimport { Card } from \"./Card\";\nimport Form from \"./Form\";\nimport styles from \"./Saved.module.css\";\nexport function Saved() {\n  _s();\n\n  const templates = useTemplates();\n  const refresh = useRefreshTemplates();\n  const [open, close] = useToggle(false);\n  const [selected, setSelected] = useState(null);\n  const isTemplatesEmpty = (templates === null || templates === void 0 ? void 0 : templates.length) === 0;\n\n  const getText = item => {\n    if (item.status === 'live') {\n      return 'Added';\n    }\n\n    return 'Add to website';\n  };\n\n  const getClass = item => {\n    if (item.status === 'live') {\n      return styles.green;\n    }\n\n    return styles.blue;\n  };\n\n  const getIcon = item => {\n    if (item.status === 'live') {\n      return addedIcon;\n    }\n\n    return addWebsiteIcon;\n  };\n\n  const patchTemplate = async payload => {\n    try {\n      Loader.show();\n      const status = payload.status === 'live' ? 'created' : 'live';\n      await Becca.patchTemplate(payload._id, {\n        status\n      });\n      refresh();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, open && /*#__PURE__*/React.createElement(Form, {\n    values: selected,\n    onClose: close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.head,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Saved Templates\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, isTemplatesEmpty && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: emptyTemplatesIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.emptyText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Saved templates will appear here\")), !isTemplatesEmpty && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.single,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, templates.map(y => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: y.title,\n    description: y.description,\n    image: y.image,\n    showEdit: true,\n    onClick: () => {\n      setSelected(y);\n      close();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Clickable, {\n    onClick: () => patchTemplate(y),\n    className: getClass(y),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.icon,\n    src: getIcon(y),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }), getText(y)))))));\n}\n\n_s(Saved, \"dqEvFbP70RiVLDRhms1Zn54KpWA=\", false, function () {\n  return [useTemplates, useRefreshTemplates, useToggle];\n});\n\n_c = Saved;\nSaved.propTypes = {};\nSaved.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"Saved\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/profile/marketingBanners/Saved.jsx"],"names":["React","useState","useToggle","Loader","Becca","useTemplates","useRefreshTemplates","SnackBar","Clickable","Card","Form","styles","Saved","templates","refresh","open","close","selected","setSelected","isTemplatesEmpty","length","getText","item","status","getClass","green","blue","getIcon","addedIcon","addWebsiteIcon","patchTemplate","payload","show","_id","e","showError","hide","section","head","body","emptyTemplatesIcon","emptyText","single","map","y","card","title","description","image","icon","propTypes","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT;AACA,OAAOC,MAAP;AACA,SAASC,KAAT;;;;AAIA,SAASC,YAAT,EAAuBC,mBAAvB;AACA,OAAOC,QAAP;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,IAAT;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AAEA,OAAO,SAASC,KAAT,GAAiB;AAAA;;AACtB,QAAMC,SAAS,GAAGR,YAAY,EAA9B;AACA,QAAMS,OAAO,GAAGR,mBAAmB,EAAnC;AACA,QAAM,CAACS,IAAD,EAAOC,KAAP,IAAgBd,SAAS,CAAC,KAAD,CAA/B;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAMkB,gBAAgB,GAAG,CAAAN,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEO,MAAX,MAAsB,CAA/C;;AAEA,QAAMC,OAAO,GAAIC,IAAD,IAAU;AACxB,QAAIA,IAAI,CAACC,MAAL,KAAgB,MAApB,EAA4B;AAC1B,aAAO,OAAP;AACD;;AACD,WAAO,gBAAP;AACD,GALD;;AAOA,QAAMC,QAAQ,GAAIF,IAAD,IAAU;AACzB,QAAIA,IAAI,CAACC,MAAL,KAAgB,MAApB,EAA4B;AAC1B,aAAOZ,MAAM,CAACc,KAAd;AACD;;AACD,WAAOd,MAAM,CAACe,IAAd;AACD,GALD;;AAOA,QAAMC,OAAO,GAAIL,IAAD,IAAU;AACxB,QAAIA,IAAI,CAACC,MAAL,KAAgB,MAApB,EAA4B;AAC1B,aAAOK,SAAP;AACD;;AACD,WAAOC,cAAP;AACD,GALD;;AAOA,QAAMC,aAAa,GAAG,MAAOC,OAAP,IAAmB;AACvC,QAAI;AACF5B,MAAAA,MAAM,CAAC6B,IAAP;AACA,YAAMT,MAAM,GAAGQ,OAAO,CAACR,MAAR,KAAmB,MAAnB,GAA4B,SAA5B,GAAwC,MAAvD;AACA,YAAMnB,KAAK,CAAC0B,aAAN,CAAoBC,OAAO,CAACE,GAA5B,EAAiC;AAAEV,QAAAA;AAAF,OAAjC,CAAN;AACAT,MAAAA,OAAO;AACR,KALD,CAKE,OAAOoB,CAAP,EAAU;AACV3B,MAAAA,QAAQ,CAAC4B,SAAT,CAAmBD,CAAnB;AACD,KAPD,SAOU;AACR/B,MAAAA,MAAM,CAACiC,IAAP;AACD;AACF,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAEzB,MAAM,CAAC0B,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,IAAI,iBAAI,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEE,QAAd;AAAwB,IAAA,OAAO,EAAED,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,eAEE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAAC2B,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,eAKE;AAAK,IAAA,SAAS,EAAE3B,MAAM,CAAC4B,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,gBAAgB,iBACf;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEqB,kBAAV;AAA8B,IAAA,GAAG,EAAC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAE7B,MAAM,CAAC8B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAFF,CAFJ,EASG,CAACtB,gBAAD,iBACC;AAAK,IAAA,SAAS,EAAER,MAAM,CAAC+B,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG7B,SAAS,CAAC8B,GAAV,CAAcC,CAAC,iBACd;AAAK,IAAA,SAAS,EAAEjC,MAAM,CAACkC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAED,CAAC,CAACE,KADX;AAEE,IAAA,WAAW,EAAEF,CAAC,CAACG,WAFjB;AAGE,IAAA,KAAK,EAAEH,CAAC,CAACI,KAHX;AAIE,IAAA,QAAQ,EAAE,IAJZ;AAKE,IAAA,OAAO,EAAE,MAAM;AACb9B,MAAAA,WAAW,CAAC0B,CAAD,CAAX;AACA5B,MAAAA,KAAK;AACN,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAWE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAE,MAAMc,aAAa,CAACc,CAAD,CAD9B;AAEE,IAAA,SAAS,EAAEpB,QAAQ,CAACoB,CAAD,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAK,IAAA,SAAS,EAAEjC,MAAM,CAACsC,IAAvB;AAA6B,IAAA,GAAG,EAAEtB,OAAO,CAACiB,CAAD,CAAzC;AAA8C,IAAA,GAAG,EAAC,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIGvB,OAAO,CAACuB,CAAD,CAJV,CAXF,CADD,CADH,CAVJ,CALF,CADF;AA0CD;;GAnFehC,K;UACIP,Y,EACFC,mB,EACMJ,S;;;KAHRU,K;AAqFhBA,KAAK,CAACsC,SAAN,GAAkB,EAAlB;AAEAtC,KAAK,CAACuC,YAAN,GAAqB,EAArB","sourcesContent":["import React, { useState } from 'react';\nimport { useToggle } from 'hooks/common';\nimport Loader from 'services/loader';\nimport { Becca } from 'api';\nimport emptyTemplatesIcon from 'assets/v2/settings/emptyTemplates.svg';\nimport addedIcon from 'assets/v2/settings/added.svg';\nimport addWebsiteIcon from 'assets/v2/settings/addWebsite.svg';\nimport { useTemplates, useRefreshTemplates } from 'contexts';\nimport SnackBar from 'services/snackbar';\nimport { Clickable } from 'phoenix-components';\nimport { Card } from './Card';\nimport Form from './Form';\nimport styles from './Saved.module.css';\n\nexport function Saved() {\n  const templates = useTemplates();\n  const refresh = useRefreshTemplates();\n  const [open, close] = useToggle(false);\n  const [selected, setSelected] = useState(null);\n  const isTemplatesEmpty = templates?.length === 0;\n\n  const getText = (item) => {\n    if (item.status === 'live') {\n      return 'Added';\n    }\n    return 'Add to website';\n  };\n\n  const getClass = (item) => {\n    if (item.status === 'live') {\n      return styles.green;\n    }\n    return styles.blue;\n  };\n\n  const getIcon = (item) => {\n    if (item.status === 'live') {\n      return addedIcon;\n    }\n    return addWebsiteIcon;\n  };\n\n  const patchTemplate = async (payload) => {\n    try {\n      Loader.show();\n      const status = payload.status === 'live' ? 'created' : 'live';\n      await Becca.patchTemplate(payload._id, { status });\n      refresh();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  return (\n    <div className={styles.section}>\n      {open && <Form values={selected} onClose={close} />}\n      <div className={styles.head}>\n        Saved Templates\n      </div>\n      <div className={styles.body}>\n        {isTemplatesEmpty && (\n          <div className=\"flexColumn\">\n            <img src={emptyTemplatesIcon} alt=\"\" />\n            <div className={styles.emptyText}>\n              Saved templates will appear here\n            </div>\n          </div>\n        )}\n        {!isTemplatesEmpty && (\n          <div className={styles.single}>\n            {templates.map(y => (\n              <div className={styles.card}>\n                <Card\n                  title={y.title}\n                  description={y.description}\n                  image={y.image}\n                  showEdit={true}\n                  onClick={() => {\n                    setSelected(y);\n                    close();\n                  }}\n                />\n                <Clickable\n                  onClick={() => patchTemplate(y)}\n                  className={getClass(y)}>\n                  <img className={styles.icon} src={getIcon(y)} alt=\"\" />\n                  {getText(y)}\n                </Clickable>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nSaved.propTypes = {};\n\nSaved.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}