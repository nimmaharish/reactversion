{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/shared/FabMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport MdClose from \"../../assets/images/products/create/add1.svg\";\nimport one from \"../../assets/images/products/insta.svg\";\nimport two from \"../../assets/images/products/gallery.svg\";\nimport three from \"../../assets/images/products/camera.svg\";\nimport { PostType } from \"../../constants/posts\";\nimport { inParallelWithLimit } from \"../../utils/parallel\";\nimport { compressImages } from \"../../utils/image\";\nimport { Clickable } from 'phoenix-components';\nimport PropTypes from 'prop-types';\nimport EventManager from \"../../utils/events\";\nimport WebView from \"../../services/webview\";\nimport { get } from 'lodash';\nimport MdAdd from \"../../assets/images/products/create/add1.svg\";\nimport { MainButton, ChildButton, FloatingMenu, Directions } from 'react-floating-button-menu';\nimport cx from 'classnames';\nimport 'react-floating-button-menu/dist/index.css';\nimport { InstaMessage } from \"../userProfile/InstaMessage\";\nimport { useIsInstantSyncEnabled } from \"../../contexts/userContext\";\nimport { useShop } from \"../../contexts\";\nimport { useQueryParams } from \"../../hooks\";\nimport { useHistory } from 'react-router-dom';\nimport SnackBar from \"../../services/snackbar\";\nimport Loader from \"../../services/loader\";\nimport { UploadProgress } from \"./UploadProgress\";\nimport { Nikon } from \"../../api\";\nimport { useDesktop } from \"../../contexts\";\nimport { useProfile } from \"../../hooks/profile\";\nimport { marshallData, getInitialValues } from \"../posts/utils\";\nimport styles from \"./FabMenu.module.css\";\nexport const FabMenu = ({\n  refresh\n}) => {\n  _s();\n\n  var _profile$loginRequire;\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [progress, setProgress] = useState(false);\n  const isInstantSyncEnabled = useIsInstantSyncEnabled();\n  const history = useHistory();\n  const [timer, setTimer] = useState({\n    current: 1,\n    label: 'Uploading'\n  });\n  const isDesktop = useDesktop();\n  const cameraRef = useRef();\n  const localRef = useRef();\n  const shop = useShop();\n  const [profile, refreshProfile] = useProfile();\n  const [openPopup, setOpenPopup] = useState(false);\n  const enabled = (_profile$loginRequire = profile === null || profile === void 0 ? void 0 : profile.loginRequired) !== null && _profile$loginRequire !== void 0 ? _profile$loginRequire : true;\n\n  const getInstaUrl = () => {\n    const url = new URL('https://api.instagram.com/oauth/authorize');\n    url.searchParams.set('client_id', '1129552074233709');\n    url.searchParams.set('redirect_uri', `${document.location.protocol}//${document.location.host}/instagram`);\n    url.searchParams.set('response_type', 'code');\n    url.searchParams.set('scope', 'user_profile,user_media');\n    url.searchParams.set('force_authentication', '1');\n    return url.toString();\n  };\n\n  const params = useQueryParams();\n  useEffect(() => {\n    if (!progress) {\n      refresh();\n      refreshProfile();\n    }\n  }, [progress]);\n\n  const closeSyncPopup = () => {\n    setOpenPopup(false);\n    history.replace('/overview');\n  };\n\n  const importInstagram = async () => {\n    try {\n      const acc = await Nikon.getInstagramAccount();\n\n      if (!(acc !== null && acc !== void 0 && acc.loginRequired)) {\n        return;\n      }\n\n      if (!WebView.isWebView()) {\n        window.location.href = getInstaUrl();\n        return;\n      }\n\n      Loader.show();\n      const {\n        code\n      } = await WebView.instagramLogin();\n      EventManager.emitEvent('instagram_account_synced');\n      await Nikon.syncInstagramProfile(code, 'https://seller.windo.live/instagram');\n      setOpenPopup(true);\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const syncNow = async () => {\n    if (!isInstantSyncEnabled) {\n      params.set('openPlans', 'generic');\n      history.push({\n        search: params.toString()\n      });\n      return;\n    }\n\n    if (!enabled) {\n      Loader.show();\n\n      try {\n        await Nikon.syncInstagramNow();\n        SnackBar.show('Your posts will be synced with in next few minutes', 'success');\n      } catch (e) {\n        SnackBar.showError(e);\n      } finally {\n        Loader.hide();\n      }\n    }\n\n    importInstagram();\n  };\n\n  const handleClick = value => {\n    if (value === 'insta') {\n      syncNow();\n    }\n\n    if (value === 'camera') {\n      cameraRef.current.click();\n    }\n\n    if (value === 'gallery') {\n      localRef.current.click();\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  const isValidFile = file => {\n    const validExtensions = ['mp4', 'mov', 'jpeg', 'jpg', 'png'];\n    const ext = file.name.split('.').pop().toLowerCase();\n\n    if (ext === 'mp4' || ext === 'mov') {\n      const isValidSize = Math.round((file === null || file === void 0 ? void 0 : file.size) / (1024 * 1024)) <= 50;\n      return validExtensions.includes(ext) && isValidSize;\n    }\n\n    const isValidSize = Math.round((file === null || file === void 0 ? void 0 : file.size) / (1024 * 1024)) <= 5;\n    return validExtensions.includes(ext) && isValidSize;\n  };\n\n  const uploadAsset = async e => {\n    const targetFiles = Array.from(e.target.files);\n    const filesToSend = targetFiles.filter(file => isValidFile(file));\n    const err = 'Maximum upload size per image is 5mb, per video is 50 mb';\n\n    if (filesToSend.length === 0) {\n      SnackBar.show(err, 'error');\n      return;\n    }\n\n    try {\n      setProgress(true); // filter only images which is less than 5MB\n\n      const files = await compressImages([...filesToSend]);\n      const exts = ['mp4', 'mov'];\n      await inParallelWithLimit(files, 5, async file => {\n        const payload = getInitialValues();\n        const ext = file.name.toLowerCase().split('.').pop().toLowerCase();\n        payload.type = exts.includes(ext) ? PostType.VIDEO : PostType.IMAGES;\n\n        if (exts.includes(ext)) {\n          payload.video = file;\n        } else {\n          payload.images = [file];\n        }\n\n        const data = marshallData(payload, shop);\n        const label = 'Uploading'; // const label = `Uploading ${timer.current} / ${filesToSend.length}.`;\n\n        const diff = targetFiles.length - filesToSend.length;\n        const failed = `${diff} files not uploading`;\n        await Nikon.createPost(data);\n        setTimer(() => ({\n          current: get(timer, 'current') + 1,\n          label: diff <= 0 ? label : `${failed}, ${err} ${label}`\n        }));\n      });\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      setProgress(false);\n    }\n  };\n\n  const menuItems = () => {\n    if (!isOpen) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n\n    const items = [{\n      label: 'Take a product shot',\n      value: 'camera',\n      icon: three\n    }, {\n      label: 'Add products from local to gallery',\n      value: 'gallery',\n      icon: two\n    }, {\n      label: 'Add products from Instagram',\n      value: 'insta',\n      icon: one\n    }];\n\n    const itemsToShow = () => {\n      if (isDesktop) {\n        return items.filter(x => x.value !== 'camera');\n      }\n\n      return items;\n    };\n\n    return itemsToShow().map(x => /*#__PURE__*/React.createElement(ChildButton, {\n      onClick: () => handleClick(x.value),\n      icon: /*#__PURE__*/React.createElement(\"div\", {\n        className: cx(styles.menuItem, `${styles[x.value]}`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: styles.icon,\n        src: x.icon,\n        alt: x.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }\n      }, x.label)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.relative, {\n      [styles.close]: !isOpen\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 5\n    }\n  }, openPopup && /*#__PURE__*/React.createElement(InstaMessage, {\n    closeSyncPopup: closeSyncPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    ref: cameraRef,\n    accept: \"image/png,image/jpeg,video/mp4\",\n    hidden: true,\n    capture: true,\n    type: \"file\",\n    onChange: e => {\n      uploadAsset(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    ref: localRef,\n    accept: \"image/png,image/jpeg,video/mp4\",\n    hidden: true,\n    multiple: true,\n    type: \"file\",\n    onChange: e => {\n      uploadAsset(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FloatingMenu, {\n    slideSpeed: 500,\n    isOpen: isOpen,\n    spacing: 8,\n    className: !isOpen && styles.menu,\n    direction: Directions.Up,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MainButton, {\n    className: cx(styles.fab, {\n      [styles.fabclose]: isOpen\n    }),\n    isOpen: isOpen,\n    iconResting: /*#__PURE__*/React.createElement(Clickable // className={styles.fab}\n    , {\n      onClick: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: MdAdd,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 15\n      }\n    })),\n    iconActive: /*#__PURE__*/React.createElement(Clickable // className={styles.fab}\n    , {\n      onClick: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: MdClose,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 15\n      }\n    })),\n    background: \"linear-gradient(45deg, var(--primary) 50%, var(--primary) 50%)\",\n    onClick: () => {\n      setIsOpen(prev => !prev);\n    },\n    size: 56,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }), menuItems()), progress && /*#__PURE__*/React.createElement(UploadProgress, {\n    type: \"circular\",\n    text: timer.label,\n    progress: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 20\n    }\n  }));\n};\n\n_s(FabMenu, \"eKD5qnNy7fKjTiYeyGTqmD1QM4s=\", false, function () {\n  return [useIsInstantSyncEnabled, useHistory, useDesktop, useShop, useProfile, useQueryParams];\n});\n\n_c = FabMenu;\nFabMenu.propTypes = {\n  refresh: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FabMenu\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/shared/FabMenu.jsx"],"names":["React","useState","useRef","useEffect","PostType","inParallelWithLimit","compressImages","Clickable","PropTypes","EventManager","WebView","get","MainButton","ChildButton","FloatingMenu","Directions","cx","InstaMessage","useIsInstantSyncEnabled","useShop","useQueryParams","useHistory","SnackBar","Loader","UploadProgress","Nikon","useDesktop","useProfile","marshallData","getInitialValues","styles","FabMenu","refresh","isOpen","setIsOpen","progress","setProgress","isInstantSyncEnabled","history","timer","setTimer","current","label","isDesktop","cameraRef","localRef","shop","profile","refreshProfile","openPopup","setOpenPopup","enabled","loginRequired","getInstaUrl","url","URL","searchParams","set","document","location","protocol","host","toString","params","closeSyncPopup","replace","importInstagram","acc","getInstagramAccount","isWebView","window","href","show","code","instagramLogin","emitEvent","syncInstagramProfile","e","showError","hide","syncNow","push","search","syncInstagramNow","handleClick","value","click","isValidFile","file","validExtensions","ext","name","split","pop","toLowerCase","isValidSize","Math","round","size","includes","uploadAsset","targetFiles","Array","from","target","files","filesToSend","filter","err","length","exts","payload","type","VIDEO","IMAGES","video","images","data","diff","failed","createPost","menuItems","items","icon","three","two","one","itemsToShow","x","map","menuItem","relative","close","menu","Up","fab","fabclose","MdAdd","MdClose","prev","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport MdClose from 'assets/images/products/create/add1.svg';\nimport one from 'assets/images/products/insta.svg';\nimport two from 'assets/images/products/gallery.svg';\nimport three from 'assets/images/products/camera.svg';\nimport { PostType } from 'constants/posts';\nimport { inParallelWithLimit } from 'utils/parallel';\nimport { compressImages } from 'utils/image';\nimport { Clickable } from 'phoenix-components';\nimport PropTypes from 'prop-types';\nimport EventManager from 'utils/events';\nimport WebView from 'services/webview';\nimport { get } from 'lodash';\nimport MdAdd from 'assets/images/products/create/add1.svg';\nimport {\n  MainButton,\n  ChildButton,\n  FloatingMenu,\n  Directions,\n} from 'react-floating-button-menu';\nimport cx from 'classnames';\nimport 'react-floating-button-menu/dist/index.css';\nimport { InstaMessage } from 'components/userProfile/InstaMessage';\nimport {\n  useIsInstantSyncEnabled\n} from 'contexts/userContext';\nimport { useShop } from 'contexts';\nimport { useQueryParams } from 'hooks';\nimport { useHistory } from 'react-router-dom';\nimport SnackBar from 'services/snackbar';\nimport Loader from 'services/loader';\nimport { UploadProgress } from 'components/shared/UploadProgress';\nimport { Nikon } from 'api';\nimport { useDesktop } from 'contexts';\nimport { useProfile } from 'hooks/profile';\nimport { marshallData, getInitialValues } from '../posts/utils';\nimport styles from './FabMenu.module.css';\n\nexport const FabMenu = ({ refresh }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [progress, setProgress] = useState(false);\n\n  const isInstantSyncEnabled = useIsInstantSyncEnabled();\n  const history = useHistory();\n  const [timer, setTimer] = useState({\n    current: 1,\n    label: 'Uploading'\n  });\n  const isDesktop = useDesktop();\n  const cameraRef = useRef();\n  const localRef = useRef();\n  const shop = useShop();\n  const [profile, refreshProfile] = useProfile();\n  const [openPopup, setOpenPopup] = useState(false);\n  const enabled = profile?.loginRequired ?? true;\n\n  const getInstaUrl = () => {\n    const url = new URL('https://api.instagram.com/oauth/authorize');\n    url.searchParams.set('client_id', '1129552074233709');\n    url.searchParams.set('redirect_uri', `${document.location.protocol}//${document.location.host}/instagram`);\n    url.searchParams.set('response_type', 'code');\n    url.searchParams.set('scope', 'user_profile,user_media');\n    url.searchParams.set('force_authentication', '1');\n    return url.toString();\n  };\n\n  const params = useQueryParams();\n\n  useEffect(() => {\n    if (!progress) {\n      refresh();\n      refreshProfile();\n    }\n  }, [progress]);\n\n  const closeSyncPopup = () => {\n    setOpenPopup(false);\n    history.replace('/overview');\n  };\n\n  const importInstagram = async () => {\n    try {\n      const acc = await Nikon.getInstagramAccount();\n      if (!acc?.loginRequired) {\n        return;\n      }\n      if (!WebView.isWebView()) {\n        window.location.href = getInstaUrl();\n        return;\n      }\n      Loader.show();\n      const { code } = await WebView.instagramLogin();\n      EventManager.emitEvent('instagram_account_synced');\n      await Nikon.syncInstagramProfile(code, 'https://seller.windo.live/instagram');\n      setOpenPopup(true);\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const syncNow = async () => {\n    if (!isInstantSyncEnabled) {\n      params.set('openPlans', 'generic');\n      history.push({\n        search: params.toString(),\n      });\n      return;\n    }\n    if (!enabled) {\n      Loader.show();\n      try {\n        await Nikon.syncInstagramNow();\n        SnackBar.show('Your posts will be synced with in next few minutes', 'success');\n      } catch (e) {\n        SnackBar.showError(e);\n      } finally {\n        Loader.hide();\n      }\n    }\n    importInstagram();\n  };\n\n  const handleClick = (value) => {\n    if (value === 'insta') {\n      syncNow();\n    }\n    if (value === 'camera') {\n      cameraRef.current.click();\n    }\n    if (value === 'gallery') {\n      localRef.current.click();\n    }\n    setIsOpen(!isOpen);\n  };\n\n  const isValidFile = (file) => {\n    const validExtensions = ['mp4', 'mov', 'jpeg', 'jpg', 'png'];\n    const ext = file.name.split('.').pop().toLowerCase();\n    if (ext === 'mp4' || ext === 'mov') {\n      const isValidSize = Math.round((file?.size / (1024 * 1024))) <= 50;\n      return validExtensions.includes(ext) && isValidSize;\n    }\n    const isValidSize = Math.round((file?.size / (1024 * 1024))) <= 5;\n    return validExtensions.includes(ext) && isValidSize;\n  };\n\n  const uploadAsset = async (e) => {\n    const targetFiles = Array.from(e.target.files);\n    const filesToSend = targetFiles.filter(file => isValidFile(file));\n    const err = 'Maximum upload size per image is 5mb, per video is 50 mb';\n    if (filesToSend.length === 0) {\n      SnackBar.show(err, 'error');\n      return;\n    }\n    try {\n      setProgress(true);\n      // filter only images which is less than 5MB\n      const files = await compressImages([...filesToSend]);\n      const exts = ['mp4', 'mov'];\n      await inParallelWithLimit(files, 5, async file => {\n        const payload = getInitialValues();\n        const ext = file.name.toLowerCase().split('.').pop().toLowerCase();\n        payload.type = exts.includes(ext) ? PostType.VIDEO : PostType.IMAGES;\n        if (exts.includes(ext)) {\n          payload.video = file;\n        } else {\n          payload.images = [file];\n        }\n        const data = marshallData(payload, shop);\n        const label = 'Uploading';\n        // const label = `Uploading ${timer.current} / ${filesToSend.length}.`;\n        const diff = targetFiles.length - filesToSend.length;\n        const failed = `${diff} files not uploading`;\n        await Nikon.createPost(data);\n        setTimer(() => ({\n          current: get(timer, 'current') + 1,\n          label: diff <= 0 ? label : `${failed}, ${err} ${label}`\n        }));\n      });\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      setProgress(false);\n    }\n  };\n\n  const menuItems = () => {\n    if (!isOpen) {\n      return <></>;\n    }\n    const items = [\n      {\n        label: 'Take a product shot',\n        value: 'camera',\n        icon: three,\n      },\n      {\n        label: 'Add products from local to gallery',\n        value: 'gallery',\n        icon: two,\n      },\n      {\n        label: 'Add products from Instagram',\n        value: 'insta',\n        icon: one,\n      },\n    ];\n    const itemsToShow = () => {\n      if (isDesktop) {\n        return items.filter(x => x.value !== 'camera');\n      }\n      return items;\n    };\n    return itemsToShow().map((x) => (\n      <ChildButton\n        onClick={() => handleClick(x.value)}\n        icon={(\n          <div\n            className={cx(styles.menuItem, `${styles[x.value]}`)}\n          >\n            <img className={styles.icon} src={x.icon} alt={x.value} />\n            <div className={styles.label}>\n              {x.label}\n            </div>\n          </div>\n        )}\n      />\n    ));\n  };\n\n  return (\n    <div\n      className={cx(styles.relative, { [styles.close]: !isOpen })}\n    >\n      {openPopup && <InstaMessage closeSyncPopup={closeSyncPopup} />}\n      <input\n        ref={cameraRef}\n        accept=\"image/png,image/jpeg,video/mp4\"\n        hidden\n        capture\n        type=\"file\"\n        onChange={(e) => {\n          uploadAsset(e);\n        }} />\n      <input\n        ref={localRef}\n        accept=\"image/png,image/jpeg,video/mp4\"\n        hidden\n        multiple\n        type=\"file\"\n        onChange={(e) => {\n          uploadAsset(e);\n        }}\n      />\n      <FloatingMenu\n        slideSpeed={500}\n        isOpen={isOpen}\n        spacing={8}\n        className={!isOpen && styles.menu}\n        direction={Directions.Up}\n      >\n        <MainButton\n          className={cx(styles.fab, { [styles.fabclose]: isOpen })}\n          isOpen={isOpen}\n          iconResting={(\n            <Clickable\n              // className={styles.fab}\n              onClick={() => {}}>\n              <img src={MdAdd} alt=\"\" />\n            </Clickable>\n          )}\n          iconActive={(\n            <Clickable\n              // className={styles.fab}\n              onClick={() => {}}>\n              <img src={MdClose} alt=\"\" />\n            </Clickable>\n          )}\n          background=\"linear-gradient(45deg, var(--primary) 50%, var(--primary) 50%)\"\n          onClick={() => {\n            setIsOpen((prev) => !prev);\n          }}\n          size={56}\n        />\n        {menuItems()}\n      </FloatingMenu>\n      {progress && <UploadProgress type=\"circular\" text={timer.label} progress={progress} />}\n    </div>\n  );\n};\n\nFabMenu.propTypes = {\n  refresh: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}