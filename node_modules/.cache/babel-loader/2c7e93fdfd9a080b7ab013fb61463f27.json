{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/orders/Carts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useInfiniteCarts, useQueryParams } from \"../../hooks\";\nimport { useHistory } from 'react-router-dom';\nimport { InfiniteLoader, List, Grid } from 'react-virtualized';\nimport { StatusSelectionBar } from \"../../components/shared/StatusSelectionBar\";\nimport { Picker } from \"../../components/shared/dateRangePicker/Picker\";\nimport { Drawer } from \"../../components/shared/Drawer\";\nimport chevronLeftDesk from \"../../assets/v2/common/chevronPrimaryLeft.svg\"; // import { useRefreshShop } from 'contexts/userContext';\n\nimport { getText, customDateFilters, updatedFilters } from \"../utils\";\nimport { useDesktop } from \"../../contexts\";\nimport { CartCard } from \"../../components/orders/CartCard\";\nimport { placedList } from \"./utils\"; // import SnackBar from 'services/snackbar';\n// import Loader from 'services/loader';\n// import { Becca } from 'api';\n\nimport styles from \"./Carts.module.css\";\n\nfunction Carts() {\n  _s();\n\n  const history = useHistory();\n  const params = useQueryParams();\n  const isDesktop = useDesktop();\n  const height = window.screen.height - 78 - 36 - 8 - 56;\n  const place = params.get('placed') || 'all';\n  const screenWidth = window.screen.width - 320 - 160;\n  const [dateRangeFilters, setDateRangeFilters] = useState({\n    from: null,\n    to: null\n  });\n  const isEmptyFrom = dateRangeFilters.from === null;\n  const isEmptyTo = dateRangeFilters.to === null;\n\n  const dateTimeFilters = () => {\n    if (place !== 'custom') {\n      return updatedFilters[place];\n    }\n\n    if (isEmptyFrom || isEmptyTo) {\n      return {};\n    }\n\n    return customDateFilters(dateRangeFilters.from, dateRangeFilters.to, false);\n  };\n\n  const filters = { ...dateTimeFilters()\n  };\n  const [carts, loadMore, hasMore,, refresh] = useInfiniteCarts(filters, {\n    updatedAt: -1\n  });\n  const rowCount = hasMore ? 10000 : carts.length;\n\n  const onSectionRendered = onRowsRendered => ({\n    columnStartIndex,\n    columnStopIndex,\n    rowStartIndex,\n    rowStopIndex\n  }) => {\n    const startIndex = rowStartIndex * 2 + columnStartIndex;\n    const stopIndex = rowStopIndex * 2 + columnStopIndex;\n    onRowsRendered({\n      startIndex,\n      stopIndex\n    });\n  };\n\n  const onCreateChange = val => {\n    setDateRangeFilters({\n      from: null,\n      to: null\n    });\n    params.set('placed', val);\n    history.push({\n      search: params.toString()\n    });\n  };\n\n  const isLoaded = i => !!carts[i];\n\n  const renderItem = item => {\n    const idx = isDesktop ? item.rowIndex * 2 + item.columnIndex : item.index;\n\n    if (idx >= carts.length) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: item.key,\n      style: item.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CartCard, {\n      refresh: refresh,\n      cart: carts[idx],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const body = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.picContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Picker, {\n    label: getText(dateRangeFilters),\n    onSelect: e => {\n      setDateRangeFilters(e);\n      params.set('placed', 'custom');\n      history.push({\n        search: params.toString()\n      });\n    },\n    inputStyle: styles.padd0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(StatusSelectionBar, {\n    tabClassName: styles.tabClassName,\n    className: styles.tabClass,\n    activeClass: styles.tabActive,\n    items: placedList,\n    onChange: onCreateChange,\n    active: place,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.orderHead,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"Abandoned Carts\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.loaderPadding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, isDesktop ? /*#__PURE__*/React.createElement(InfiniteLoader, {\n    loadMoreRows: loadMore,\n    isRowLoaded: isLoaded,\n    rowCount: rowCount,\n    minimumBatchSize: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, ({\n    onRowsRendered,\n    registerChild\n  }) => /*#__PURE__*/React.createElement(Grid, {\n    onSectionRendered: onSectionRendered(onRowsRendered),\n    ref: registerChild,\n    cellRenderer: renderItem,\n    columnCount: 2,\n    columnWidth: screenWidth / 2,\n    height: height,\n    rowCount: Math.ceil(rowCount / 2),\n    rowHeight: 120,\n    width: screenWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(InfiniteLoader, {\n    loadMoreRows: loadMore,\n    isRowLoaded: isLoaded,\n    rowCount: rowCount,\n    minimumBatchSize: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, ({\n    onRowsRendered,\n    registerChild\n  }) => /*#__PURE__*/React.createElement(List, {\n    height: height,\n    onRowsRendered: onRowsRendered,\n    ref: registerChild,\n    rowCount: carts.length,\n    rowHeight: 90,\n    rowRenderer: renderItem,\n    width: window.screen.width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }))));\n\n  if (isDesktop) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.desktopContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => history.push('/orders'),\n      className: styles.maintitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: styles.backIconForDesktop,\n      src: chevronLeftDesk,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, \"\\xA0\"), \"Carts\"), body());\n  }\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    className: styles.section,\n    title: \"Carts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  }, body());\n}\n\n_s(Carts, \"fmk/8pA4vAguP8GtAu9IApfbuok=\", false, function () {\n  return [useHistory, useQueryParams, useDesktop, useInfiniteCarts];\n});\n\n_c = Carts;\nexport default Carts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carts\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/orders/Carts.jsx"],"names":["React","useState","useInfiniteCarts","useQueryParams","useHistory","InfiniteLoader","List","Grid","StatusSelectionBar","Picker","Drawer","getText","customDateFilters","updatedFilters","useDesktop","CartCard","placedList","styles","Carts","history","params","isDesktop","height","window","screen","place","get","screenWidth","width","dateRangeFilters","setDateRangeFilters","from","to","isEmptyFrom","isEmptyTo","dateTimeFilters","filters","carts","loadMore","hasMore","refresh","updatedAt","rowCount","length","onSectionRendered","onRowsRendered","columnStartIndex","columnStopIndex","rowStartIndex","rowStopIndex","startIndex","stopIndex","onCreateChange","val","set","push","search","toString","isLoaded","i","renderItem","item","idx","rowIndex","columnIndex","index","key","style","body","Content","picContainer","e","padd0","tabClassName","tabClass","tabActive","orderHead","loaderPadding","registerChild","Math","ceil","desktopContainer","maintitle","backIconForDesktop","chevronLeftDesk","section"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useInfiniteCarts, useQueryParams } from 'hooks';\nimport { useHistory } from 'react-router-dom';\nimport {\n  InfiniteLoader, List, Grid\n} from 'react-virtualized';\nimport { StatusSelectionBar } from 'components/shared/StatusSelectionBar';\nimport { Picker } from 'components/shared/dateRangePicker/Picker';\nimport { Drawer } from 'components/shared/Drawer';\nimport chevronLeftDesk from 'assets/v2/common/chevronPrimaryLeft.svg';\n// import { useRefreshShop } from 'contexts/userContext';\nimport { getText, customDateFilters, updatedFilters } from 'containers/utils';\nimport {\n  useDesktop\n} from 'contexts';\nimport { CartCard } from 'components/orders/CartCard';\nimport { placedList } from './utils';\n// import SnackBar from 'services/snackbar';\n// import Loader from 'services/loader';\n// import { Becca } from 'api';\nimport styles from './Carts.module.css';\n\nfunction Carts() {\n  const history = useHistory();\n  const params = useQueryParams();\n  const isDesktop = useDesktop();\n  const height = window.screen.height - 78 - 36 - 8 - 56;\n  const place = params.get('placed') || 'all';\n  const screenWidth = window.screen.width - 320 - 160;\n  const [dateRangeFilters, setDateRangeFilters] = useState({\n    from: null,\n    to: null\n  });\n  const isEmptyFrom = dateRangeFilters.from === null;\n  const isEmptyTo = dateRangeFilters.to === null;\n\n  const dateTimeFilters = () => {\n    if (place !== 'custom') {\n      return updatedFilters[place];\n    }\n    if (isEmptyFrom || isEmptyTo) {\n      return {};\n    }\n    return customDateFilters(dateRangeFilters.from, dateRangeFilters.to, false);\n  };\n\n  const filters = {\n    ...dateTimeFilters(),\n  };\n  const [carts, loadMore, hasMore, , refresh] = useInfiniteCarts(filters, {\n    updatedAt: -1,\n  });\n  const rowCount = hasMore ? 10000 : carts.length;\n\n  const onSectionRendered = (onRowsRendered) => ({\n    columnStartIndex,\n    columnStopIndex,\n    rowStartIndex,\n    rowStopIndex\n  }) => {\n    const startIndex = rowStartIndex * 2 + columnStartIndex;\n    const stopIndex = rowStopIndex * 2 + columnStopIndex;\n\n    onRowsRendered({\n      startIndex,\n      stopIndex\n    });\n  };\n\n  const onCreateChange = (val) => {\n    setDateRangeFilters({\n      from: null,\n      to: null\n    });\n    params.set('placed', val);\n    history.push({ search: params.toString() });\n  };\n\n  const isLoaded = i => !!carts[i];\n\n  const renderItem = (item) => {\n    const idx = isDesktop ? item.rowIndex * 2 + item.columnIndex : item.index;\n    if (idx >= carts.length) {\n      return null;\n    }\n    return (\n      <div key={item.key} style={item.style}>\n        <CartCard refresh={refresh} cart={carts[idx]} />\n      </div>\n    );\n  };\n\n  const body = () => (\n    <div className={styles.Content}>\n      <div className={styles.picContainer}>\n        <Picker\n          label={getText(dateRangeFilters)}\n          onSelect={(e) => {\n            setDateRangeFilters(e);\n            params.set('placed', 'custom');\n            history.push({ search: params.toString() });\n          }}\n          inputStyle={styles.padd0}\n        />\n      </div>\n      <StatusSelectionBar\n        tabClassName={styles.tabClassName}\n        className={styles.tabClass}\n        activeClass={styles.tabActive}\n        items={placedList}\n        onChange={onCreateChange}\n        active={place}\n      />\n      <div className={styles.orderHead}>\n        Abandoned Carts\n      </div>\n      <div className={styles.loaderPadding}>\n        {isDesktop ? (\n          <InfiniteLoader\n            loadMoreRows={loadMore}\n            isRowLoaded={isLoaded}\n            rowCount={rowCount}\n            minimumBatchSize={10}\n          >\n            {({\n              onRowsRendered,\n              registerChild\n            }) => (\n              <Grid\n                onSectionRendered={onSectionRendered(onRowsRendered)}\n                ref={registerChild}\n                cellRenderer={renderItem}\n                columnCount={2}\n                columnWidth={(screenWidth / 2)}\n                height={height}\n                rowCount={Math.ceil(rowCount / 2)}\n                rowHeight={120}\n                width={screenWidth}\n              />\n            )}\n          </InfiniteLoader>\n        ) : (\n          <InfiniteLoader\n            loadMoreRows={loadMore}\n            isRowLoaded={isLoaded}\n            rowCount={rowCount}\n            minimumBatchSize={10}\n          >\n            {({\n              onRowsRendered,\n              registerChild\n            }) => (\n              <List\n                height={height}\n                onRowsRendered={onRowsRendered}\n                ref={registerChild}\n                rowCount={carts.length}\n                rowHeight={90}\n                rowRenderer={renderItem}\n                width={window.screen.width}\n              />\n            )}\n          </InfiniteLoader>\n        )}\n      </div>\n    </div>\n  );\n\n  if (isDesktop) {\n    return (\n      <div className={styles.desktopContainer}>\n        <div onClick={() => history.push('/orders')} className={styles.maintitle}>\n          <img className={styles.backIconForDesktop} src={chevronLeftDesk} alt=\"\" />\n          <div>&nbsp;</div>\n          <div>&nbsp;</div>\n          Carts\n        </div>\n        {body()}\n      </div>\n    );\n  }\n\n  return (\n    <Drawer\n      className={styles.section}\n      title=\"Carts\"\n    >\n      {body()}\n    </Drawer>\n  );\n}\nexport default Carts;\n"]},"metadata":{},"sourceType":"module"}