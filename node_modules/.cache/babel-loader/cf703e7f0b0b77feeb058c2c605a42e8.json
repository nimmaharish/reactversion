{"ast":null,"code":"import { Promise } from '../common/polyfills';\nimport Transaction from './transaction';\nimport { PerfEntryRecorder, captureObserverEntries, metrics, createTotalBlockingTimeSpan } from './metrics';\nimport { extend, getEarliestSpan, getLatestNonXHRSpan, isPerfTypeSupported, generateRandomId } from '../common/utils';\nimport { captureNavigation } from './capture-navigation';\nimport { PAGE_LOAD, NAME_UNKNOWN, TRANSACTION_START, TRANSACTION_END, TEMPORARY_TYPE, TRANSACTION_TYPE_ORDER, LARGEST_CONTENTFUL_PAINT, LONG_TASK, PAINT, TRUNCATED_TYPE, FIRST_INPUT, LAYOUT_SHIFT, SESSION_TIMEOUT } from '../common/constants';\nimport { addTransactionContext } from '../common/context';\nimport { __DEV__, state } from '../state';\nimport { slugifyUrl } from '../common/url';\n\nvar TransactionService = function () {\n  function TransactionService(logger, config) {\n    var _this = this;\n\n    this._config = config;\n    this._logger = logger;\n    this.currentTransaction = undefined;\n    this.respIntervalId = undefined;\n    this.recorder = new PerfEntryRecorder(function (list) {\n      var tr = _this.getCurrentTransaction();\n\n      if (tr && tr.captureTimings) {\n        var _tr$spans;\n\n        var isHardNavigation = tr.type === PAGE_LOAD;\n\n        var _captureObserverEntri = captureObserverEntries(list, {\n          isHardNavigation: isHardNavigation,\n          trStart: isHardNavigation ? 0 : tr._start\n        }),\n            spans = _captureObserverEntri.spans,\n            marks = _captureObserverEntri.marks;\n\n        (_tr$spans = tr.spans).push.apply(_tr$spans, spans);\n\n        tr.addMarks({\n          agent: marks\n        });\n      }\n    });\n  }\n\n  var _proto = TransactionService.prototype;\n\n  _proto.createCurrentTransaction = function createCurrentTransaction(name, type, options) {\n    var tr = new Transaction(name, type, options);\n    this.currentTransaction = tr;\n    return tr;\n  };\n\n  _proto.getCurrentTransaction = function getCurrentTransaction() {\n    if (this.currentTransaction && !this.currentTransaction.ended) {\n      return this.currentTransaction;\n    }\n  };\n\n  _proto.createOptions = function createOptions(options) {\n    var config = this._config.config;\n    var presetOptions = {\n      transactionSampleRate: config.transactionSampleRate\n    };\n    var perfOptions = extend(presetOptions, options);\n\n    if (perfOptions.managed) {\n      perfOptions = extend({\n        pageLoadTraceId: config.pageLoadTraceId,\n        pageLoadSampled: config.pageLoadSampled,\n        pageLoadSpanId: config.pageLoadSpanId,\n        pageLoadTransactionName: config.pageLoadTransactionName\n      }, perfOptions);\n    }\n\n    return perfOptions;\n  };\n\n  _proto.startManagedTransaction = function startManagedTransaction(name, type, perfOptions) {\n    var tr = this.getCurrentTransaction();\n    var isRedefined = false;\n\n    if (!tr) {\n      tr = this.createCurrentTransaction(name, type, perfOptions);\n    } else if (tr.canReuse() && perfOptions.canReuse) {\n      var redefineType = tr.type;\n      var currentTypeOrder = TRANSACTION_TYPE_ORDER.indexOf(tr.type);\n      var redefineTypeOrder = TRANSACTION_TYPE_ORDER.indexOf(type);\n\n      if (currentTypeOrder >= 0 && redefineTypeOrder < currentTypeOrder) {\n        redefineType = type;\n      }\n\n      if (__DEV__) {\n        this._logger.debug(\"redefining transaction(\" + tr.id + \", \" + tr.name + \", \" + tr.type + \")\", 'to', \"(\" + (name || tr.name) + \", \" + redefineType + \")\", tr);\n      }\n\n      tr.redefine(name, redefineType, perfOptions);\n      isRedefined = true;\n    } else {\n      if (__DEV__) {\n        this._logger.debug(\"ending previous transaction(\" + tr.id + \", \" + tr.name + \")\", tr);\n      }\n\n      tr.end();\n      tr = this.createCurrentTransaction(name, type, perfOptions);\n    }\n\n    if (tr.type === PAGE_LOAD) {\n      if (!isRedefined) {\n        this.recorder.start(LARGEST_CONTENTFUL_PAINT);\n        this.recorder.start(PAINT);\n        this.recorder.start(FIRST_INPUT);\n        this.recorder.start(LAYOUT_SHIFT);\n      }\n\n      if (perfOptions.pageLoadTraceId) {\n        tr.traceId = perfOptions.pageLoadTraceId;\n      }\n\n      if (perfOptions.pageLoadSampled) {\n        tr.sampled = perfOptions.pageLoadSampled;\n      }\n\n      if (tr.name === NAME_UNKNOWN && perfOptions.pageLoadTransactionName) {\n        tr.name = perfOptions.pageLoadTransactionName;\n      }\n    }\n\n    if (!isRedefined && this._config.get('monitorLongtasks')) {\n      this.recorder.start(LONG_TASK);\n    }\n\n    if (tr.sampled) {\n      tr.captureTimings = true;\n    }\n\n    return tr;\n  };\n\n  _proto.startTransaction = function startTransaction(name, type, options) {\n    var _this2 = this;\n\n    var perfOptions = this.createOptions(options);\n    var tr;\n    var fireOnstartHook = true;\n\n    if (perfOptions.managed) {\n      var current = this.currentTransaction;\n      tr = this.startManagedTransaction(name, type, perfOptions);\n\n      if (current === tr) {\n        fireOnstartHook = false;\n      }\n    } else {\n      tr = new Transaction(name, type, perfOptions);\n    }\n\n    tr.onEnd = function () {\n      return _this2.handleTransactionEnd(tr);\n    };\n\n    if (fireOnstartHook) {\n      if (__DEV__) {\n        this._logger.debug(\"startTransaction(\" + tr.id + \", \" + tr.name + \", \" + tr.type + \")\");\n      }\n\n      this._config.events.send(TRANSACTION_START, [tr]);\n    }\n\n    return tr;\n  };\n\n  _proto.handleTransactionEnd = function handleTransactionEnd(tr) {\n    var _this3 = this;\n\n    this.recorder.stop();\n    var currentUrl = window.location.href;\n    return Promise.resolve().then(function () {\n      var name = tr.name,\n          type = tr.type;\n      var lastHiddenStart = state.lastHiddenStart;\n\n      if (lastHiddenStart >= tr._start) {\n        if (__DEV__) {\n          _this3._logger.debug(\"transaction(\" + tr.id + \", \" + name + \", \" + type + \") was discarded! The page was hidden during the transaction!\");\n        }\n\n        return;\n      }\n\n      if (_this3.shouldIgnoreTransaction(name) || type === TEMPORARY_TYPE) {\n        if (__DEV__) {\n          _this3._logger.debug(\"transaction(\" + tr.id + \", \" + name + \", \" + type + \") is ignored\");\n        }\n\n        return;\n      }\n\n      if (type === PAGE_LOAD) {\n        var pageLoadTransactionName = _this3._config.get('pageLoadTransactionName');\n\n        if (name === NAME_UNKNOWN && pageLoadTransactionName) {\n          tr.name = pageLoadTransactionName;\n        }\n\n        if (tr.captureTimings) {\n          var cls = metrics.cls,\n              fid = metrics.fid,\n              tbt = metrics.tbt,\n              longtask = metrics.longtask;\n\n          if (tbt.duration > 0) {\n            tr.spans.push(createTotalBlockingTimeSpan(tbt));\n          }\n\n          tr.experience = {};\n\n          if (isPerfTypeSupported(LONG_TASK)) {\n            tr.experience.tbt = tbt.duration;\n          }\n\n          if (isPerfTypeSupported(LAYOUT_SHIFT)) {\n            tr.experience.cls = cls.score;\n          }\n\n          if (fid > 0) {\n            tr.experience.fid = fid;\n          }\n\n          if (longtask.count > 0) {\n            tr.experience.longtask = {\n              count: longtask.count,\n              sum: longtask.duration,\n              max: longtask.max\n            };\n          }\n        }\n\n        _this3.setSession(tr);\n      }\n\n      if (tr.name === NAME_UNKNOWN) {\n        tr.name = slugifyUrl(currentUrl);\n      }\n\n      captureNavigation(tr);\n\n      _this3.adjustTransactionTime(tr);\n\n      var breakdownMetrics = _this3._config.get('breakdownMetrics');\n\n      if (breakdownMetrics) {\n        tr.captureBreakdown();\n      }\n\n      var configContext = _this3._config.get('context');\n\n      addTransactionContext(tr, configContext);\n\n      _this3._config.events.send(TRANSACTION_END, [tr]);\n\n      if (__DEV__) {\n        _this3._logger.debug(\"end transaction(\" + tr.id + \", \" + tr.name + \", \" + tr.type + \")\", tr);\n      }\n    }, function (err) {\n      if (__DEV__) {\n        _this3._logger.debug(\"error ending transaction(\" + tr.id + \", \" + tr.name + \")\", err);\n      }\n    });\n  };\n\n  _proto.setSession = function setSession(tr) {\n    var session = this._config.get('session');\n\n    if (session) {\n      if (typeof session == 'boolean') {\n        tr.session = {\n          id: generateRandomId(16),\n          sequence: 1\n        };\n      } else {\n        if (session.timestamp && Date.now() - session.timestamp > SESSION_TIMEOUT) {\n          tr.session = {\n            id: generateRandomId(16),\n            sequence: 1\n          };\n        } else {\n          tr.session = {\n            id: session.id,\n            sequence: session.sequence ? session.sequence + 1 : 1\n          };\n        }\n      }\n\n      var sessionConfig = {\n        session: {\n          id: tr.session.id,\n          sequence: tr.session.sequence,\n          timestamp: Date.now()\n        }\n      };\n\n      this._config.setConfig(sessionConfig);\n\n      this._config.setLocalConfig(sessionConfig, true);\n    }\n  };\n\n  _proto.adjustTransactionTime = function adjustTransactionTime(transaction) {\n    var spans = transaction.spans;\n    var earliestSpan = getEarliestSpan(spans);\n\n    if (earliestSpan && earliestSpan._start < transaction._start) {\n      transaction._start = earliestSpan._start;\n    }\n\n    var latestSpan = getLatestNonXHRSpan(spans);\n\n    if (latestSpan && latestSpan._end > transaction._end) {\n      transaction._end = latestSpan._end;\n    }\n\n    var transactionEnd = transaction._end;\n\n    for (var i = 0; i < spans.length; i++) {\n      var span = spans[i];\n\n      if (span._end > transactionEnd) {\n        span._end = transactionEnd;\n        span.type += TRUNCATED_TYPE;\n      }\n\n      if (span._start > transactionEnd) {\n        span._start = transactionEnd;\n      }\n    }\n  };\n\n  _proto.shouldIgnoreTransaction = function shouldIgnoreTransaction(transactionName) {\n    var ignoreList = this._config.get('ignoreTransactions');\n\n    if (ignoreList && ignoreList.length) {\n      for (var i = 0; i < ignoreList.length; i++) {\n        var element = ignoreList[i];\n\n        if (typeof element.test === 'function') {\n          if (element.test(transactionName)) {\n            return true;\n          }\n        } else if (element === transactionName) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  _proto.startSpan = function startSpan(name, type, options) {\n    var tr = this.getCurrentTransaction();\n\n    if (!tr) {\n      tr = this.createCurrentTransaction(undefined, TEMPORARY_TYPE, this.createOptions({\n        canReuse: true,\n        managed: true\n      }));\n    }\n\n    var span = tr.startSpan(name, type, options);\n\n    if (__DEV__) {\n      this._logger.debug(\"startSpan(\" + name + \", \" + span.type + \")\", \"on transaction(\" + tr.id + \", \" + tr.name + \")\");\n    }\n\n    return span;\n  };\n\n  _proto.endSpan = function endSpan(span, context) {\n    if (!span) {\n      return;\n    }\n\n    if (__DEV__) {\n      var tr = this.getCurrentTransaction();\n      tr && this._logger.debug(\"endSpan(\" + span.name + \", \" + span.type + \")\", \"on transaction(\" + tr.id + \", \" + tr.name + \")\");\n    }\n\n    span.end(null, context);\n  };\n\n  return TransactionService;\n}();\n\nexport default TransactionService;","map":{"version":3,"sources":["/home/harish/windo/phoenix/node_modules/@elastic/apm-rum-core/dist/es/performance-monitoring/transaction-service.js"],"names":["Promise","Transaction","PerfEntryRecorder","captureObserverEntries","metrics","createTotalBlockingTimeSpan","extend","getEarliestSpan","getLatestNonXHRSpan","isPerfTypeSupported","generateRandomId","captureNavigation","PAGE_LOAD","NAME_UNKNOWN","TRANSACTION_START","TRANSACTION_END","TEMPORARY_TYPE","TRANSACTION_TYPE_ORDER","LARGEST_CONTENTFUL_PAINT","LONG_TASK","PAINT","TRUNCATED_TYPE","FIRST_INPUT","LAYOUT_SHIFT","SESSION_TIMEOUT","addTransactionContext","__DEV__","state","slugifyUrl","TransactionService","logger","config","_this","_config","_logger","currentTransaction","undefined","respIntervalId","recorder","list","tr","getCurrentTransaction","captureTimings","_tr$spans","isHardNavigation","type","_captureObserverEntri","trStart","_start","spans","marks","push","apply","addMarks","agent","_proto","prototype","createCurrentTransaction","name","options","ended","createOptions","presetOptions","transactionSampleRate","perfOptions","managed","pageLoadTraceId","pageLoadSampled","pageLoadSpanId","pageLoadTransactionName","startManagedTransaction","isRedefined","canReuse","redefineType","currentTypeOrder","indexOf","redefineTypeOrder","debug","id","redefine","end","start","traceId","sampled","get","startTransaction","_this2","fireOnstartHook","current","onEnd","handleTransactionEnd","events","send","_this3","stop","currentUrl","window","location","href","resolve","then","lastHiddenStart","shouldIgnoreTransaction","cls","fid","tbt","longtask","duration","experience","score","count","sum","max","setSession","adjustTransactionTime","breakdownMetrics","captureBreakdown","configContext","err","session","sequence","timestamp","Date","now","sessionConfig","setConfig","setLocalConfig","transaction","earliestSpan","latestSpan","_end","transactionEnd","i","length","span","transactionName","ignoreList","element","test","startSpan","endSpan","context"],"mappings":"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","sourcesContent":["import { Promise } from '../common/polyfills';\nimport Transaction from './transaction';\nimport { PerfEntryRecorder, captureObserverEntries, metrics, createTotalBlockingTimeSpan } from './metrics';\nimport { extend, getEarliestSpan, getLatestNonXHRSpan, isPerfTypeSupported, generateRandomId } from '../common/utils';\nimport { captureNavigation } from './capture-navigation';\nimport { PAGE_LOAD, NAME_UNKNOWN, TRANSACTION_START, TRANSACTION_END, TEMPORARY_TYPE, TRANSACTION_TYPE_ORDER, LARGEST_CONTENTFUL_PAINT, LONG_TASK, PAINT, TRUNCATED_TYPE, FIRST_INPUT, LAYOUT_SHIFT, SESSION_TIMEOUT } from '../common/constants';\nimport { addTransactionContext } from '../common/context';\nimport { __DEV__, state } from '../state';\nimport { slugifyUrl } from '../common/url';\n\nvar TransactionService = function () {\n  function TransactionService(logger, config) {\n    var _this = this;\n\n    this._config = config;\n    this._logger = logger;\n    this.currentTransaction = undefined;\n    this.respIntervalId = undefined;\n    this.recorder = new PerfEntryRecorder(function (list) {\n      var tr = _this.getCurrentTransaction();\n\n      if (tr && tr.captureTimings) {\n        var _tr$spans;\n\n        var isHardNavigation = tr.type === PAGE_LOAD;\n\n        var _captureObserverEntri = captureObserverEntries(list, {\n          isHardNavigation: isHardNavigation,\n          trStart: isHardNavigation ? 0 : tr._start\n        }),\n            spans = _captureObserverEntri.spans,\n            marks = _captureObserverEntri.marks;\n\n        (_tr$spans = tr.spans).push.apply(_tr$spans, spans);\n\n        tr.addMarks({\n          agent: marks\n        });\n      }\n    });\n  }\n\n  var _proto = TransactionService.prototype;\n\n  _proto.createCurrentTransaction = function createCurrentTransaction(name, type, options) {\n    var tr = new Transaction(name, type, options);\n    this.currentTransaction = tr;\n    return tr;\n  };\n\n  _proto.getCurrentTransaction = function getCurrentTransaction() {\n    if (this.currentTransaction && !this.currentTransaction.ended) {\n      return this.currentTransaction;\n    }\n  };\n\n  _proto.createOptions = function createOptions(options) {\n    var config = this._config.config;\n    var presetOptions = {\n      transactionSampleRate: config.transactionSampleRate\n    };\n    var perfOptions = extend(presetOptions, options);\n\n    if (perfOptions.managed) {\n      perfOptions = extend({\n        pageLoadTraceId: config.pageLoadTraceId,\n        pageLoadSampled: config.pageLoadSampled,\n        pageLoadSpanId: config.pageLoadSpanId,\n        pageLoadTransactionName: config.pageLoadTransactionName\n      }, perfOptions);\n    }\n\n    return perfOptions;\n  };\n\n  _proto.startManagedTransaction = function startManagedTransaction(name, type, perfOptions) {\n    var tr = this.getCurrentTransaction();\n    var isRedefined = false;\n\n    if (!tr) {\n      tr = this.createCurrentTransaction(name, type, perfOptions);\n    } else if (tr.canReuse() && perfOptions.canReuse) {\n      var redefineType = tr.type;\n      var currentTypeOrder = TRANSACTION_TYPE_ORDER.indexOf(tr.type);\n      var redefineTypeOrder = TRANSACTION_TYPE_ORDER.indexOf(type);\n\n      if (currentTypeOrder >= 0 && redefineTypeOrder < currentTypeOrder) {\n        redefineType = type;\n      }\n\n      if (__DEV__) {\n        this._logger.debug(\"redefining transaction(\" + tr.id + \", \" + tr.name + \", \" + tr.type + \")\", 'to', \"(\" + (name || tr.name) + \", \" + redefineType + \")\", tr);\n      }\n\n      tr.redefine(name, redefineType, perfOptions);\n      isRedefined = true;\n    } else {\n      if (__DEV__) {\n        this._logger.debug(\"ending previous transaction(\" + tr.id + \", \" + tr.name + \")\", tr);\n      }\n\n      tr.end();\n      tr = this.createCurrentTransaction(name, type, perfOptions);\n    }\n\n    if (tr.type === PAGE_LOAD) {\n      if (!isRedefined) {\n        this.recorder.start(LARGEST_CONTENTFUL_PAINT);\n        this.recorder.start(PAINT);\n        this.recorder.start(FIRST_INPUT);\n        this.recorder.start(LAYOUT_SHIFT);\n      }\n\n      if (perfOptions.pageLoadTraceId) {\n        tr.traceId = perfOptions.pageLoadTraceId;\n      }\n\n      if (perfOptions.pageLoadSampled) {\n        tr.sampled = perfOptions.pageLoadSampled;\n      }\n\n      if (tr.name === NAME_UNKNOWN && perfOptions.pageLoadTransactionName) {\n        tr.name = perfOptions.pageLoadTransactionName;\n      }\n    }\n\n    if (!isRedefined && this._config.get('monitorLongtasks')) {\n      this.recorder.start(LONG_TASK);\n    }\n\n    if (tr.sampled) {\n      tr.captureTimings = true;\n    }\n\n    return tr;\n  };\n\n  _proto.startTransaction = function startTransaction(name, type, options) {\n    var _this2 = this;\n\n    var perfOptions = this.createOptions(options);\n    var tr;\n    var fireOnstartHook = true;\n\n    if (perfOptions.managed) {\n      var current = this.currentTransaction;\n      tr = this.startManagedTransaction(name, type, perfOptions);\n\n      if (current === tr) {\n        fireOnstartHook = false;\n      }\n    } else {\n      tr = new Transaction(name, type, perfOptions);\n    }\n\n    tr.onEnd = function () {\n      return _this2.handleTransactionEnd(tr);\n    };\n\n    if (fireOnstartHook) {\n      if (__DEV__) {\n        this._logger.debug(\"startTransaction(\" + tr.id + \", \" + tr.name + \", \" + tr.type + \")\");\n      }\n\n      this._config.events.send(TRANSACTION_START, [tr]);\n    }\n\n    return tr;\n  };\n\n  _proto.handleTransactionEnd = function handleTransactionEnd(tr) {\n    var _this3 = this;\n\n    this.recorder.stop();\n    var currentUrl = window.location.href;\n    return Promise.resolve().then(function () {\n      var name = tr.name,\n          type = tr.type;\n      var lastHiddenStart = state.lastHiddenStart;\n\n      if (lastHiddenStart >= tr._start) {\n        if (__DEV__) {\n          _this3._logger.debug(\"transaction(\" + tr.id + \", \" + name + \", \" + type + \") was discarded! The page was hidden during the transaction!\");\n        }\n\n        return;\n      }\n\n      if (_this3.shouldIgnoreTransaction(name) || type === TEMPORARY_TYPE) {\n        if (__DEV__) {\n          _this3._logger.debug(\"transaction(\" + tr.id + \", \" + name + \", \" + type + \") is ignored\");\n        }\n\n        return;\n      }\n\n      if (type === PAGE_LOAD) {\n        var pageLoadTransactionName = _this3._config.get('pageLoadTransactionName');\n\n        if (name === NAME_UNKNOWN && pageLoadTransactionName) {\n          tr.name = pageLoadTransactionName;\n        }\n\n        if (tr.captureTimings) {\n          var cls = metrics.cls,\n              fid = metrics.fid,\n              tbt = metrics.tbt,\n              longtask = metrics.longtask;\n\n          if (tbt.duration > 0) {\n            tr.spans.push(createTotalBlockingTimeSpan(tbt));\n          }\n\n          tr.experience = {};\n\n          if (isPerfTypeSupported(LONG_TASK)) {\n            tr.experience.tbt = tbt.duration;\n          }\n\n          if (isPerfTypeSupported(LAYOUT_SHIFT)) {\n            tr.experience.cls = cls.score;\n          }\n\n          if (fid > 0) {\n            tr.experience.fid = fid;\n          }\n\n          if (longtask.count > 0) {\n            tr.experience.longtask = {\n              count: longtask.count,\n              sum: longtask.duration,\n              max: longtask.max\n            };\n          }\n        }\n\n        _this3.setSession(tr);\n      }\n\n      if (tr.name === NAME_UNKNOWN) {\n        tr.name = slugifyUrl(currentUrl);\n      }\n\n      captureNavigation(tr);\n\n      _this3.adjustTransactionTime(tr);\n\n      var breakdownMetrics = _this3._config.get('breakdownMetrics');\n\n      if (breakdownMetrics) {\n        tr.captureBreakdown();\n      }\n\n      var configContext = _this3._config.get('context');\n\n      addTransactionContext(tr, configContext);\n\n      _this3._config.events.send(TRANSACTION_END, [tr]);\n\n      if (__DEV__) {\n        _this3._logger.debug(\"end transaction(\" + tr.id + \", \" + tr.name + \", \" + tr.type + \")\", tr);\n      }\n    }, function (err) {\n      if (__DEV__) {\n        _this3._logger.debug(\"error ending transaction(\" + tr.id + \", \" + tr.name + \")\", err);\n      }\n    });\n  };\n\n  _proto.setSession = function setSession(tr) {\n    var session = this._config.get('session');\n\n    if (session) {\n      if (typeof session == 'boolean') {\n        tr.session = {\n          id: generateRandomId(16),\n          sequence: 1\n        };\n      } else {\n        if (session.timestamp && Date.now() - session.timestamp > SESSION_TIMEOUT) {\n          tr.session = {\n            id: generateRandomId(16),\n            sequence: 1\n          };\n        } else {\n          tr.session = {\n            id: session.id,\n            sequence: session.sequence ? session.sequence + 1 : 1\n          };\n        }\n      }\n\n      var sessionConfig = {\n        session: {\n          id: tr.session.id,\n          sequence: tr.session.sequence,\n          timestamp: Date.now()\n        }\n      };\n\n      this._config.setConfig(sessionConfig);\n\n      this._config.setLocalConfig(sessionConfig, true);\n    }\n  };\n\n  _proto.adjustTransactionTime = function adjustTransactionTime(transaction) {\n    var spans = transaction.spans;\n    var earliestSpan = getEarliestSpan(spans);\n\n    if (earliestSpan && earliestSpan._start < transaction._start) {\n      transaction._start = earliestSpan._start;\n    }\n\n    var latestSpan = getLatestNonXHRSpan(spans);\n\n    if (latestSpan && latestSpan._end > transaction._end) {\n      transaction._end = latestSpan._end;\n    }\n\n    var transactionEnd = transaction._end;\n\n    for (var i = 0; i < spans.length; i++) {\n      var span = spans[i];\n\n      if (span._end > transactionEnd) {\n        span._end = transactionEnd;\n        span.type += TRUNCATED_TYPE;\n      }\n\n      if (span._start > transactionEnd) {\n        span._start = transactionEnd;\n      }\n    }\n  };\n\n  _proto.shouldIgnoreTransaction = function shouldIgnoreTransaction(transactionName) {\n    var ignoreList = this._config.get('ignoreTransactions');\n\n    if (ignoreList && ignoreList.length) {\n      for (var i = 0; i < ignoreList.length; i++) {\n        var element = ignoreList[i];\n\n        if (typeof element.test === 'function') {\n          if (element.test(transactionName)) {\n            return true;\n          }\n        } else if (element === transactionName) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  _proto.startSpan = function startSpan(name, type, options) {\n    var tr = this.getCurrentTransaction();\n\n    if (!tr) {\n      tr = this.createCurrentTransaction(undefined, TEMPORARY_TYPE, this.createOptions({\n        canReuse: true,\n        managed: true\n      }));\n    }\n\n    var span = tr.startSpan(name, type, options);\n\n    if (__DEV__) {\n      this._logger.debug(\"startSpan(\" + name + \", \" + span.type + \")\", \"on transaction(\" + tr.id + \", \" + tr.name + \")\");\n    }\n\n    return span;\n  };\n\n  _proto.endSpan = function endSpan(span, context) {\n    if (!span) {\n      return;\n    }\n\n    if (__DEV__) {\n      var tr = this.getCurrentTransaction();\n      tr && this._logger.debug(\"endSpan(\" + span.name + \", \" + span.type + \")\", \"on transaction(\" + tr.id + \", \" + tr.name + \")\");\n    }\n\n    span.end(null, context);\n  };\n\n  return TransactionService;\n}();\n\nexport default TransactionService;"]},"metadata":{},"sourceType":"module"}