{"ast":null,"code":"import * as Yup from 'yup';\nexport const typeOptions = [{\n  label: 'Minutes',\n  value: 'minutes'\n}, {\n  label: 'Hours',\n  value: 'hours'\n}, {\n  label: 'Days',\n  value: 'days'\n}, {\n  label: 'Weeks',\n  value: 'weeks'\n}];\nexport const getInitialValues = values => {\n  var _values$from, _values$from2, _values$to;\n\n  return {\n    fromItemValue: (values === null || values === void 0 ? void 0 : (_values$from = values.from) === null || _values$from === void 0 ? void 0 : _values$from.value) || '',\n    itemType: (values === null || values === void 0 ? void 0 : (_values$from2 = values.from) === null || _values$from2 === void 0 ? void 0 : _values$from2.type) || 'days',\n    toItemValue: (values === null || values === void 0 ? void 0 : (_values$to = values.to) === null || _values$to === void 0 ? void 0 : _values$to.value) || ''\n  };\n};\nexport const schema = Yup.object().shape({\n  itemType: Yup.string().required('Days/Hours Required'),\n  fromItemValue: Yup.number().required('Min Days/Hours Required').positive().integer(),\n  toItemValue: Yup.number().required('Max Days/Hours Required').positive().moreThan(Yup.ref('fromItemValue'), 'Max Days/Hours should be greater than Min Days/Hours').integer()\n});","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/shippingTime/utils.js"],"names":["Yup","typeOptions","label","value","getInitialValues","values","fromItemValue","from","itemType","type","toItemValue","to","schema","object","shape","string","required","number","positive","integer","moreThan","ref"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,OAAO,MAAMC,WAAW,GAAG,CACzB;AACEC,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADyB,EAKzB;AACED,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALyB,EASzB;AACED,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATyB,EAazB;AACED,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAbyB,CAApB;AAmBP,OAAO,MAAMC,gBAAgB,GAAIC,MAAD;AAAA;;AAAA,SAAa;AAC3CC,IAAAA,aAAa,EAAE,CAAAD,MAAM,SAAN,IAAAA,MAAM,WAAN,4BAAAA,MAAM,CAAEE,IAAR,8DAAcJ,KAAd,KAAuB,EADK;AAE3CK,IAAAA,QAAQ,EAAE,CAAAH,MAAM,SAAN,IAAAA,MAAM,WAAN,6BAAAA,MAAM,CAAEE,IAAR,gEAAcE,IAAd,KAAsB,MAFW;AAG3CC,IAAAA,WAAW,EAAE,CAAAL,MAAM,SAAN,IAAAA,MAAM,WAAN,0BAAAA,MAAM,CAAEM,EAAR,0DAAYR,KAAZ,KAAqB;AAHS,GAAb;AAAA,CAAzB;AAMP,OAAO,MAAMS,MAAM,GAAGZ,GAAG,CAACa,MAAJ,GACnBC,KADmB,CACb;AACLN,EAAAA,QAAQ,EAAER,GAAG,CAACe,MAAJ,GAAaC,QAAb,CAAsB,qBAAtB,CADL;AAELV,EAAAA,aAAa,EAAEN,GAAG,CAACiB,MAAJ,GACZD,QADY,CACH,yBADG,EAEZE,QAFY,GAGZC,OAHY,EAFV;AAMLT,EAAAA,WAAW,EAAEV,GAAG,CAACiB,MAAJ,GACVD,QADU,CACD,yBADC,EAEVE,QAFU,GAGVE,QAHU,CAGDpB,GAAG,CAACqB,GAAJ,CAAQ,eAAR,CAHC,EAGyB,sDAHzB,EAIVF,OAJU;AANR,CADa,CAAf","sourcesContent":["import * as Yup from 'yup';\n\nexport const typeOptions = [\n  {\n    label: 'Minutes',\n    value: 'minutes'\n  },\n  {\n    label: 'Hours',\n    value: 'hours'\n  },\n  {\n    label: 'Days',\n    value: 'days'\n  },\n  {\n    label: 'Weeks',\n    value: 'weeks'\n  }\n];\n\nexport const getInitialValues = (values) => ({\n  fromItemValue: values?.from?.value || '',\n  itemType: values?.from?.type || 'days',\n  toItemValue: values?.to?.value || '',\n});\n\nexport const schema = Yup.object()\n  .shape({\n    itemType: Yup.string().required('Days/Hours Required'),\n    fromItemValue: Yup.number()\n      .required('Min Days/Hours Required')\n      .positive()\n      .integer(),\n    toItemValue: Yup.number()\n      .required('Max Days/Hours Required')\n      .positive()\n      .moreThan(Yup.ref('fromItemValue'), 'Max Days/Hours should be greater than Min Days/Hours')\n      .integer()\n  });\n"]},"metadata":{},"sourceType":"module"}