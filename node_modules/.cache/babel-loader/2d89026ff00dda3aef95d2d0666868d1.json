{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/shared/DeleteAlert.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog } from '@material-ui/core';\nimport { useDesktop } from \"../../contexts\";\nimport closeIcon from \"../../assets/images/orders/list/close.svg\";\nimport { Button, Clickable } from 'phoenix-components';\nimport cx from 'classnames';\nimport styles from \"./DeleteAlert.module.css\";\nexport function DeleteAlert({\n  title,\n  subTitle,\n  onCancel,\n  onDelete,\n  primary,\n  secondary\n}) {\n  _s();\n\n  const isSecondaryReq = !!onCancel;\n  const hideSubTitle = subTitle.length === 0;\n  const isDesktop = useDesktop();\n  return /*#__PURE__*/React.createElement(Dialog // className={styles.dialog}\n  , {\n    PaperProps: {\n      classes: {\n        root: styles.dialog\n      }\n    },\n    maxWidth: isDesktop ? 'xs' : 'md',\n    open: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, isDesktop && /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('flexEnd', styles.padding),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    onClick: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: closeIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, title), !hideSubTitle && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.subTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, subTitle), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, isSecondaryReq && /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    onClick: onCancel,\n    label: secondary,\n    primary: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 28\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    onClick: onDelete,\n    label: primary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(DeleteAlert, \"3l4y9eCI8Q4nOrq3yDi/AmhuQWU=\", false, function () {\n  return [useDesktop];\n});\n\n_c = DeleteAlert;\nDeleteAlert.propTypes = {\n  title: PropTypes.string,\n  subTitle: PropTypes.string,\n  onDelete: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  primary: PropTypes.string,\n  secondary: PropTypes.string\n};\nDeleteAlert.defaultProps = {\n  title: 'Delete?',\n  subTitle: '',\n  primary: 'Delete',\n  secondary: 'Cancel'\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteAlert\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/shared/DeleteAlert.jsx"],"names":["React","PropTypes","Dialog","useDesktop","Button","Clickable","cx","styles","DeleteAlert","title","subTitle","onCancel","onDelete","primary","secondary","isSecondaryReq","hideSubTitle","length","isDesktop","classes","root","dialog","padding","closeIcon","buttons","propTypes","string","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog } from '@material-ui/core';\nimport { useDesktop } from 'contexts';\nimport closeIcon from 'assets/images/orders/list/close.svg';\nimport { Button, Clickable } from 'phoenix-components';\nimport cx from 'classnames';\nimport styles from './DeleteAlert.module.css';\n\nexport function DeleteAlert({\n  title, subTitle, onCancel, onDelete, primary, secondary,\n}) {\n  const isSecondaryReq = !!onCancel;\n  const hideSubTitle = subTitle.length === 0;\n  const isDesktop = useDesktop();\n  return (\n    <Dialog\n      // className={styles.dialog}\n      PaperProps={{\n        classes: {\n          root: styles.dialog,\n        }\n      }}\n      maxWidth={isDesktop ? 'xs' : 'md'}\n      open={true}\n    >\n      {isDesktop && (\n        <div className={cx('flexEnd', styles.padding)}>\n          <Clickable\n            onClick={onCancel}>\n            <img src={closeIcon} alt=\"\" />\n          </Clickable>\n        </div>\n      )}\n      <div className={styles.title}>{title}</div>\n      {!hideSubTitle && <div className={styles.subTitle}>{subTitle}</div>}\n      <div className={styles.buttons}>\n        {isSecondaryReq && <Button size=\"large\" onClick={onCancel} label={secondary} primary={false} />}\n        <Button size=\"large\" onClick={onDelete} label={primary} />\n      </div>\n    </Dialog>\n  );\n}\n\nDeleteAlert.propTypes = {\n  title: PropTypes.string,\n  subTitle: PropTypes.string,\n  onDelete: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  primary: PropTypes.string,\n  secondary: PropTypes.string,\n};\n\nDeleteAlert.defaultProps = {\n  title: 'Delete?',\n  subTitle: '',\n  primary: 'Delete',\n  secondary: 'Cancel',\n};\n"]},"metadata":{},"sourceType":"module"}