{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/profile/marketingBanners/Preview.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useToggle } from \"../../../hooks/common\";\nimport Loader from \"../../../services/loader\";\nimport { Becca } from \"../../../api\";\nimport emptyPreviewIcon from \"../../../assets/v2/settings/emptyPreview.svg\";\nimport addWebsiteIcon from \"../../../assets/v2/settings/removeWebsite.svg\";\nimport { useTemplates, useRefreshTemplates } from \"../../../contexts\";\nimport SnackBar from \"../../../services/snackbar\";\nimport { Clickable } from 'phoenix-components';\nimport { sortBy } from 'lodash';\nimport { DeleteAlert } from \"../../shared/DeleteAlert\";\nimport { useDesktop } from \"../../../contexts\";\nimport { Card } from \"./Card\";\nimport Form from \"./Form\";\nimport styles from \"./Preview.module.css\";\nexport function Preview() {\n  _s();\n\n  const refresh = useRefreshTemplates();\n  const [open, close] = useToggle(false);\n  const [openDelete, toggleDelete] = useToggle(false);\n  const [deleteId, setDeleteId] = useState(null);\n  const [selected, setSelected] = useState(null);\n  const isDesktop = useDesktop();\n  const templates = useTemplates();\n\n  const getText = item => {\n    if (item.status === 'live') {\n      return 'Remove';\n    }\n\n    return 'Add to website';\n  };\n\n  const getClass = item => {\n    if (item.status === 'live') {\n      return styles.red;\n    }\n\n    return styles.blue;\n  };\n\n  const getIcon = item => {\n    if (item.status === 'live') {\n      return addWebsiteIcon;\n    }\n\n    return addWebsiteIcon;\n  };\n\n  const patchTemplate = async payload => {\n    try {\n      Loader.show();\n      const status = payload.status === 'live' ? 'created' : 'live';\n      await Becca.patchTemplate(payload._id, {\n        status\n      });\n      refresh();\n      setDeleteId(null);\n      toggleDelete();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const items = sortBy(templates === null || templates === void 0 ? void 0 : templates.filter(x => x.status === 'live'), ['updatedAt']).reverse();\n  const isPreviewEmpty = (items === null || items === void 0 ? void 0 : items.length) === 0;\n\n  if (isDesktop) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.section,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, open && /*#__PURE__*/React.createElement(Form, {\n      values: selected,\n      onClose: close,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.head,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"Banner Preview\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, isPreviewEmpty && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexColumn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: emptyPreviewIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.emptyText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \"You haven\\u2019t added any banners to your website yet!\")), !isPreviewEmpty && /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.single,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, items.map(y => /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, openDelete && y._id === deleteId && /*#__PURE__*/React.createElement(DeleteAlert, {\n      title: \"Are you sure want to remove this banner?\",\n      onCancel: toggleDelete,\n      primary: \"Yes\",\n      secondary: \"No\",\n      onDelete: () => patchTemplate(y),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      title: y.title,\n      description: y.description,\n      image: y.image,\n      showEdit: true,\n      onClick: () => {\n        setSelected(y);\n        close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Clickable, {\n      onClick: () => {\n        setDeleteId(y._id);\n        toggleDelete();\n      },\n      className: getClass(y),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: styles.icon,\n      src: getIcon(y),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }), getText(y)))))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, open && /*#__PURE__*/React.createElement(Form, {\n    values: selected,\n    onClose: close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.head,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, \"Banner Preview\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, isPreviewEmpty && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: emptyPreviewIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.emptyText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"You haven\\u2019t added any banners to your website yet!\")), !isPreviewEmpty && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.single,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, items.map(y => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, openDelete && y._id === deleteId && /*#__PURE__*/React.createElement(DeleteAlert, {\n    title: \"Are you sure want to remove this banner?\",\n    onCancel: toggleDelete,\n    primary: \"Yes\",\n    secondary: \"No\",\n    onDelete: () => patchTemplate(y),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    title: y.title,\n    description: y.description,\n    image: y.image,\n    showEdit: true,\n    onClick: () => {\n      setSelected(y);\n      close();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Clickable, {\n    onClick: () => {\n      setDeleteId(y._id);\n      toggleDelete();\n    },\n    className: getClass(y),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.icon,\n    src: getIcon(y),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }), getText(y)))))));\n}\n\n_s(Preview, \"r7ZdMtflLgTk40hgzIPdPjhREA8=\", false, function () {\n  return [useRefreshTemplates, useToggle, useToggle, useDesktop, useTemplates];\n});\n\n_c = Preview;\nPreview.propTypes = {};\nPreview.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/profile/marketingBanners/Preview.jsx"],"names":["React","useState","useToggle","Loader","Becca","useTemplates","useRefreshTemplates","SnackBar","Clickable","sortBy","DeleteAlert","useDesktop","Card","Form","styles","Preview","refresh","open","close","openDelete","toggleDelete","deleteId","setDeleteId","selected","setSelected","isDesktop","templates","getText","item","status","getClass","red","blue","getIcon","addWebsiteIcon","patchTemplate","payload","show","_id","e","showError","hide","items","filter","x","reverse","isPreviewEmpty","length","section","head","body","emptyPreviewIcon","emptyText","single","map","y","card","title","description","image","icon","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useToggle } from 'hooks/common';\nimport Loader from 'services/loader';\nimport { Becca } from 'api';\nimport emptyPreviewIcon from 'assets/v2/settings/emptyPreview.svg';\nimport addWebsiteIcon from 'assets/v2/settings/removeWebsite.svg';\nimport { useTemplates, useRefreshTemplates } from 'contexts';\nimport SnackBar from 'services/snackbar';\nimport { Clickable } from 'phoenix-components';\nimport { sortBy } from 'lodash';\nimport { DeleteAlert } from 'components/shared/DeleteAlert';\nimport { useDesktop } from 'contexts';\nimport { Card } from './Card';\nimport Form from './Form';\nimport styles from './Preview.module.css';\n\nexport function Preview() {\n  const refresh = useRefreshTemplates();\n  const [open, close] = useToggle(false);\n  const [openDelete, toggleDelete] = useToggle(false);\n  const [deleteId, setDeleteId] = useState(null);\n  const [selected, setSelected] = useState(null);\n  const isDesktop = useDesktop();\n\n  const templates = useTemplates();\n  const getText = (item) => {\n    if (item.status === 'live') {\n      return 'Remove';\n    }\n    return 'Add to website';\n  };\n\n  const getClass = (item) => {\n    if (item.status === 'live') {\n      return styles.red;\n    }\n    return styles.blue;\n  };\n\n  const getIcon = (item) => {\n    if (item.status === 'live') {\n      return addWebsiteIcon;\n    }\n    return addWebsiteIcon;\n  };\n\n  const patchTemplate = async (payload) => {\n    try {\n      Loader.show();\n      const status = payload.status === 'live' ? 'created' : 'live';\n      await Becca.patchTemplate(payload._id, { status });\n      refresh();\n      setDeleteId(null);\n      toggleDelete();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const items = sortBy(templates?.filter(x => x.status === 'live'), ['updatedAt']).reverse();\n  const isPreviewEmpty = items?.length === 0;\n\n  if (isDesktop) {\n    return (\n      <div className={styles.section}>\n        {open && <Form values={selected} onClose={close} />}\n        <div className={styles.head}>\n          Banner Preview\n        </div>\n        <div className={styles.body}>\n          {isPreviewEmpty && (\n            <div className=\"flexColumn\">\n              <img src={emptyPreviewIcon} alt=\"\" />\n              <div className={styles.emptyText}>\n                You haven’t added any banners to your\n                website yet!\n              </div>\n            </div>\n          )}\n          {!isPreviewEmpty && (\n            <div className={styles.single}>\n              {items.map(y => (\n                <div className={styles.card}>\n                  {openDelete && y._id === deleteId && (\n                    <DeleteAlert\n                      title=\"Are you sure want to remove this banner?\"\n                      onCancel={toggleDelete}\n                      primary=\"Yes\"\n                      secondary=\"No\"\n                      onDelete={() => patchTemplate(y)}\n                    />\n                  )}\n                  <Card\n                    title={y.title}\n                    description={y.description}\n                    image={y.image}\n                    showEdit={true}\n                    onClick={() => {\n                      setSelected(y);\n                      close();\n                    }}\n                  />\n                  <Clickable\n                    onClick={() => {\n                      setDeleteId(y._id);\n                      toggleDelete();\n                    }}\n                    className={getClass(y)}>\n                    <img className={styles.icon} src={getIcon(y)} alt=\"\" />\n                    {getText(y)}\n                  </Clickable>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.section}>\n      {open && <Form values={selected} onClose={close} />}\n      <div className={styles.head}>\n        Banner Preview\n      </div>\n      <div className={styles.body}>\n        {isPreviewEmpty && (\n          <div className=\"flexColumn\">\n            <img src={emptyPreviewIcon} alt=\"\" />\n            <div className={styles.emptyText}>\n              You haven’t added any banners to your\n              website yet!\n            </div>\n          </div>\n        )}\n        {!isPreviewEmpty && (\n          <div className={styles.single}>\n            {items.map(y => (\n              <div className={styles.card}>\n                {openDelete && y._id === deleteId && (\n                  <DeleteAlert\n                    title=\"Are you sure want to remove this banner?\"\n                    onCancel={toggleDelete}\n                    primary=\"Yes\"\n                    secondary=\"No\"\n                    onDelete={() => patchTemplate(y)}\n                  />\n                )}\n                <Card\n                  title={y.title}\n                  description={y.description}\n                  image={y.image}\n                  showEdit={true}\n                  onClick={() => {\n                    setSelected(y);\n                    close();\n                  }}\n                />\n                <Clickable\n                  onClick={() => {\n                    setDeleteId(y._id);\n                    toggleDelete();\n                  }}\n                  className={getClass(y)}>\n                  <img className={styles.icon} src={getIcon(y)} alt=\"\" />\n                  {getText(y)}\n                </Clickable>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nPreview.propTypes = {};\n\nPreview.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}