{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/profile/ratings/Filters.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport cx from 'classnames';\nimport { Drawer } from '@material-ui/core';\nimport { useDesktop } from \"../../../contexts\";\nimport unchecked from \"../../../assets/images/payments/unselect.svg\";\nimport checked from \"../../../assets/v2/products/checked.svg\";\nimport PropTypes from 'prop-types';\nimport { SideDrawer } from \"../../../components/shared/SideDrawer\";\nimport styles from \"./Filters.module.css\";\n\nfunction Filters({\n  onSelect,\n  onClose,\n  selected\n}) {\n  _s();\n\n  const isDesktop = useDesktop();\n  const all = [{\n    label: 'Product',\n    value: 'product'\n  }];\n\n  const onClick = value => {\n    onSelect(value);\n    onClose();\n  };\n\n  const isSelected = value => selected === value;\n\n  const body = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, !isDesktop && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"Choose Rating Type\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, all.map((x, i) => /*#__PURE__*/React.createElement(\"li\", {\n    className: cx(styles.item, isSelected(x.value) && styles.active),\n    key: i,\n    role: \"presentation\",\n    onClick: () => onClick(x.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, x.label, /*#__PURE__*/React.createElement(\"img\", {\n    src: isSelected(x.value) ? checked : unchecked,\n    className: styles.icon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: cx(styles.item, styles.opacity),\n    role: \"presentation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Shop (Coming Soon)\", /*#__PURE__*/React.createElement(\"img\", {\n    src: unchecked,\n    className: styles.icon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }))));\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isDesktop && /*#__PURE__*/React.createElement(SideDrawer, {\n    backButton: true,\n    onClick: () => {\n      onClose();\n    },\n    onClose: () => {\n      onClose();\n    },\n    button: true,\n    btnLabel: \"Apply\",\n    title: \"Choose Rating Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, body()), !isDesktop && /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"bottom\",\n    open: true,\n    onClose: () => {\n      onClose();\n    },\n    PaperProps: {\n      classes: {\n        root: styles.paper\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, body()));\n}\n\n_s(Filters, \"3l4y9eCI8Q4nOrq3yDi/AmhuQWU=\", false, function () {\n  return [useDesktop];\n});\n\n_c = Filters;\nFilters.defaultProps = {};\nFilters.propTypes = {\n  onSelect: PropTypes.func.isRequired,\n  selected: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/ratings/Filters.jsx"],"names":["React","cx","Drawer","useDesktop","PropTypes","SideDrawer","styles","Filters","onSelect","onClose","selected","isDesktop","all","label","value","onClick","isSelected","body","content","list","map","x","i","item","active","checked","unchecked","icon","opacity","classes","root","paper","defaultProps","propTypes","func","isRequired","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport { Drawer } from '@material-ui/core';\nimport { useDesktop } from 'contexts';\nimport unchecked from 'assets/images/payments/unselect.svg';\nimport checked from 'assets/v2/products/checked.svg';\nimport PropTypes from 'prop-types';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport styles from './Filters.module.css';\n\nfunction Filters({ onSelect, onClose, selected }) {\n  const isDesktop = useDesktop();\n  const all = [{\n    label: 'Product',\n    value: 'product'\n  }];\n\n  const onClick = (value) => {\n    onSelect(value);\n    onClose();\n  };\n\n  const isSelected = (value) => selected === value;\n\n  const body = () => (\n    <div className={styles.content}>\n      {!isDesktop && (\n        <div className={styles.label}>\n          <div>\n            Choose Rating Type\n          </div>\n        </div>\n      )}\n      <ul className={styles.list}>\n        {all.map((x, i) => (\n          <li\n            className={cx(styles.item, isSelected(x.value) && styles.active)}\n            key={i}\n            role=\"presentation\"\n            onClick={() => onClick(x.value)}\n          >\n            {x.label}\n            <img src={isSelected(x.value) ? checked : unchecked} className={styles.icon} alt=\"\" />\n          </li>\n        ))}\n        <li\n          className={cx(styles.item, styles.opacity)}\n          role=\"presentation\"\n        >\n          Shop (Coming Soon)\n          <img src={unchecked} className={styles.icon} alt=\"\" />\n        </li>\n      </ul>\n    </div>\n  );\n\n  return (\n    <>\n      {isDesktop && (\n        <SideDrawer\n          backButton={true}\n          onClick={() => {\n            onClose();\n          }}\n          onClose={() => {\n            onClose();\n          }}\n          button={true}\n          btnLabel=\"Apply\"\n          title=\"Choose Rating Type\"\n        >\n          {body()}\n        </SideDrawer>\n      )}\n      {!isDesktop && (\n        <Drawer\n          anchor=\"bottom\"\n          open={true}\n          onClose={() => {\n            onClose();\n          }}\n          PaperProps={{\n            classes: {\n              root: styles.paper,\n            }\n          }}\n        >\n          {body()}\n        </Drawer>\n      )}\n    </>\n  );\n}\n\nFilters.defaultProps = {\n};\n\nFilters.propTypes = {\n  onSelect: PropTypes.func.isRequired,\n  selected: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Filters;\n"]},"metadata":{},"sourceType":"module"}