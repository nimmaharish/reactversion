{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/profile/marketingPixel/MarketingPixels.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { Drawer } from \"../../../components/shared/Drawer\";\nimport { PixelCard } from \"../../../components/profile/marketingPixels/PixelCard\";\nimport { getInitialValues } from \"../../../components/profile/marketingPixels/utils\";\nimport fbIcon from \"../../../assets/v2/settings/marketingPixels/fb.svg\";\nimport gaIcon from \"../../../assets/v2/settings/marketingPixels/ga.svg\";\nimport { Formik } from 'formik';\nimport { useIsMarketingPixelEnabled, useOpenPlans, useRefreshShop, useShop } from \"../../../contexts/userContext\";\nimport { IDBottomDrawer } from \"../../../components/profile/marketingPixels/IDBottomDrawer\";\nimport SnackBar from \"../../../services/snackbar\";\nimport Loader from \"../../../services/loader\";\nimport { Becca } from \"../../../api\";\nimport { useDesktop } from \"../../../contexts\";\nimport chevronLeftDesk from \"../../../assets/v2/common/chevronPrimaryLeft.svg\";\nimport { useHistory } from 'react-router-dom';\nimport { SideDrawer } from \"../../../components/shared/SideDrawer\";\nimport Kbc from \"../../../components/knowBaseCards/KnowBaseCards\";\nimport styles from \"./MarketingPixels.module.css\";\n\nfunction MarketingPixels() {\n  _s();\n\n  var _shop$config2;\n\n  const shop = useShop();\n  const isEnabled = useIsMarketingPixelEnabled();\n  const openPlans = useOpenPlans();\n  const refreshShop = useRefreshShop();\n  const [idDraw, setIdDraw] = useState(null);\n  const isDesktop = useDesktop();\n  const history = useHistory();\n\n  const onSubmit = async values => {\n    if (!isEnabled) {\n      openPlans();\n      return;\n    }\n\n    try {\n      Loader.show();\n      const {\n        config = {}\n      } = shop;\n      config.pixels = values;\n      await Becca.updateShop({\n        config\n      });\n      refreshShop();\n      SnackBar.show('Pixel changes saved successfully!', 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  if (isDesktop) {\n    var _shop$config;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.desktopContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => history.goBack(),\n      className: styles.maintitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: styles.backIconForDesktop,\n      src: chevronLeftDesk,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, \"\\xA0\"), \"Marketing Plugins\"), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: getInitialValues((shop === null || shop === void 0 ? void 0 : (_shop$config = shop.config) === null || _shop$config === void 0 ? void 0 : _shop$config.pixels) || {}),\n      onSubmit: onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.cards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(PixelCard, {\n      icon: fbIcon,\n      title: \"Facebook Pixel\",\n      description: `Facebook Pixel is an analytics tool that helps you measure the effectiveness of your \n              advertising efforts by understanding how people behave, and what actions they take on your website`,\n      name: \"fb\",\n      color: \"rgba(59, 89, 152, 0.1)\",\n      onConnect: () => setIdDraw('fb'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(PixelCard, {\n      icon: gaIcon,\n      title: \"Google Analytics\",\n      description: `It is an analytics tool that allows you to measure the effectiveness of your \n            advertising by understanding the actions people take on  your website`,\n      name: \"ga\",\n      color: \"rgba(249, 171, 0, 0.1)\",\n      onConnect: () => setIdDraw('ga'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }), idDraw && /*#__PURE__*/React.createElement(SideDrawer, {\n      backButton: true,\n      title: idDraw === 'fb' ? 'Facebook Pixel' : 'Google Analytics',\n      onClose: () => setIdDraw(null),\n      button: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IDBottomDrawer, {\n      onClose: () => setIdDraw(null),\n      name: idDraw,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexCenter fullWidth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Kbc, {\n      type: \"marketingPixel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    title: \"Marketing Plugins\",\n    backButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: getInitialValues((shop === null || shop === void 0 ? void 0 : (_shop$config2 = shop.config) === null || _shop$config2 === void 0 ? void 0 : _shop$config2.pixels) || {}),\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.cards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PixelCard, {\n    icon: fbIcon,\n    title: \"Facebook Pixel\",\n    description: `Facebook Pixel is an analytics tool that helps you measure the effectiveness of your\n             advertising efforts  by understanding how people behave, and what actions they take on your website`,\n    name: \"fb\",\n    color: \"rgba(59, 89, 152, 0.1)\",\n    onConnect: () => setIdDraw('fb'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PixelCard, {\n    icon: gaIcon,\n    title: \"Google Analytics\",\n    description: `It is an analytics tool that allows you to measure the effectiveness of your \n            advertising by understanding the actions people take on  your website`,\n    name: \"ga\",\n    color: \"rgba(249, 171, 0, 0.1)\",\n    onConnect: () => setIdDraw('ga'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), idDraw && /*#__PURE__*/React.createElement(IDBottomDrawer, {\n    onClose: () => setIdDraw(null),\n    name: idDraw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.kbc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Kbc, {\n    type: \"marketingPixel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(MarketingPixels, \"VN/bukF3oRwOmNKj6f1Zy3CUz6Y=\", false, function () {\n  return [useShop, useIsMarketingPixelEnabled, useOpenPlans, useRefreshShop, useDesktop, useHistory];\n});\n\n_c = MarketingPixels;\nMarketingPixels.propTypes = {};\nMarketingPixels.defaultProps = {};\nexport default MarketingPixels;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarketingPixels\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/marketingPixel/MarketingPixels.jsx"],"names":["React","useState","Drawer","PixelCard","getInitialValues","Formik","useIsMarketingPixelEnabled","useOpenPlans","useRefreshShop","useShop","IDBottomDrawer","SnackBar","Loader","Becca","useDesktop","useHistory","SideDrawer","Kbc","styles","MarketingPixels","shop","isEnabled","openPlans","refreshShop","idDraw","setIdDraw","isDesktop","history","onSubmit","values","show","config","pixels","updateShop","e","showError","hide","desktopContainer","goBack","maintitle","backIconForDesktop","chevronLeftDesk","cards","fbIcon","gaIcon","kbc","propTypes","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { Drawer } from 'components/shared/Drawer';\nimport { PixelCard } from 'components/profile/marketingPixels/PixelCard';\nimport { getInitialValues } from 'components/profile/marketingPixels/utils';\nimport fbIcon from 'assets/v2/settings/marketingPixels/fb.svg';\nimport gaIcon from 'assets/v2/settings/marketingPixels/ga.svg';\nimport { Formik } from 'formik';\nimport {\n  useIsMarketingPixelEnabled, useOpenPlans, useRefreshShop, useShop\n} from 'contexts/userContext';\nimport { IDBottomDrawer } from 'components/profile/marketingPixels/IDBottomDrawer';\nimport SnackBar from 'services/snackbar';\nimport Loader from 'services/loader';\nimport { Becca } from 'api';\nimport { useDesktop } from 'contexts';\nimport chevronLeftDesk from 'assets/v2/common/chevronPrimaryLeft.svg';\nimport { useHistory } from 'react-router-dom';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport Kbc from 'components/knowBaseCards/KnowBaseCards';\nimport styles from './MarketingPixels.module.css';\n\nfunction MarketingPixels() {\n  const shop = useShop();\n  const isEnabled = useIsMarketingPixelEnabled();\n  const openPlans = useOpenPlans();\n  const refreshShop = useRefreshShop();\n  const [idDraw, setIdDraw] = useState(null);\n  const isDesktop = useDesktop();\n  const history = useHistory();\n\n  const onSubmit = async (values) => {\n    if (!isEnabled) {\n      openPlans();\n      return;\n    }\n    try {\n      Loader.show();\n      const { config = {} } = shop;\n      config.pixels = values;\n      await Becca.updateShop({\n        config,\n      });\n      refreshShop();\n      SnackBar.show('Pixel changes saved successfully!', 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  if (isDesktop) {\n    return (\n      <div className={styles.desktopContainer}>\n        <div onClick={() => history.goBack()} className={styles.maintitle}>\n          <img className={styles.backIconForDesktop} src={chevronLeftDesk} alt=\"\" />\n          <div>&nbsp;</div>\n          <div>&nbsp;</div>\n          Marketing Plugins\n        </div>\n        <Formik\n          initialValues={getInitialValues(shop?.config?.pixels || {})}\n          onSubmit={onSubmit}\n        >\n          <div className={styles.cards}>\n            <PixelCard\n              icon={fbIcon}\n              title=\"Facebook Pixel\"\n              description={`Facebook Pixel is an analytics tool that helps you measure the effectiveness of your \n              advertising efforts by understanding how people behave, and what actions they take on your website`}\n              name=\"fb\"\n              color=\"rgba(59, 89, 152, 0.1)\"\n              onConnect={() => setIdDraw('fb')}\n            />\n            <PixelCard\n              icon={gaIcon}\n              title=\"Google Analytics\"\n              description={`It is an analytics tool that allows you to measure the effectiveness of your \n            advertising by understanding the actions people take on  your website`}\n              name=\"ga\"\n              color=\"rgba(249, 171, 0, 0.1)\"\n              onConnect={() => setIdDraw('ga')}\n            />\n            {idDraw && (\n              <SideDrawer\n                backButton={true}\n                title={idDraw === 'fb' ? 'Facebook Pixel' : 'Google Analytics'}\n                onClose={() => setIdDraw(null)}\n                button={false}\n              >\n                <IDBottomDrawer onClose={() => setIdDraw(null)} name={idDraw} />\n              </SideDrawer>\n            )}\n          </div>\n        </Formik>\n        <div className=\"flexCenter fullWidth\">\n          <Kbc type=\"marketingPixel\" />\n        </div>\n      </div>\n    );\n  }\n  return (\n    <Drawer title=\"Marketing Plugins\" backButton={true}>\n      <Formik\n        initialValues={getInitialValues(shop?.config?.pixels || {})}\n        onSubmit={onSubmit}\n      >\n        <div className={styles.cards}>\n          <PixelCard\n            icon={fbIcon}\n            title=\"Facebook Pixel\"\n            description={`Facebook Pixel is an analytics tool that helps you measure the effectiveness of your\n             advertising efforts  by understanding how people behave, and what actions they take on your website`}\n            name=\"fb\"\n            color=\"rgba(59, 89, 152, 0.1)\"\n            onConnect={() => setIdDraw('fb')}\n          />\n          <PixelCard\n            icon={gaIcon}\n            title=\"Google Analytics\"\n            description={`It is an analytics tool that allows you to measure the effectiveness of your \n            advertising by understanding the actions people take on  your website`}\n            name=\"ga\"\n            color=\"rgba(249, 171, 0, 0.1)\"\n            onConnect={() => setIdDraw('ga')}\n          />\n          {idDraw && (\n            <IDBottomDrawer onClose={() => setIdDraw(null)} name={idDraw} />\n          )}\n        </div>\n      </Formik>\n      <div className={styles.kbc}>\n        <Kbc type=\"marketingPixel\" />\n      </div>\n    </Drawer>\n  );\n}\n\nMarketingPixels.propTypes = {};\n\nMarketingPixels.defaultProps = {};\n\nexport default MarketingPixels;\n"]},"metadata":{},"sourceType":"module"}