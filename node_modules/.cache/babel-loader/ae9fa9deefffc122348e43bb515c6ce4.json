{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/userProfile/TopBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { InstaImport } from \"./InstaImport\";\nimport importIcon from \"../../assets/images/insta.png\";\nimport settingIcon from \"../../assets/v2/posts/setting.svg\";\nimport PropTypes from 'prop-types';\nimport { Clickable } from 'phoenix-components';\nimport Loader from \"../../services/loader\";\nimport { Nikon } from \"../../api\";\nimport { useIsInstantSyncEnabled } from \"../../contexts/userContext\";\nimport SnackBar from \"../../services/snackbar\";\nimport { useHistory } from 'react-router-dom';\nimport { useQueryParams } from \"../../hooks\";\nimport styles from \"./TopBar.module.css\";\nexport function TopBar({\n  profile,\n  refresh\n}) {\n  _s();\n\n  const isInstantSyncEnabled = useIsInstantSyncEnabled();\n  const history = useHistory();\n  const params = useQueryParams();\n\n  const syncNow = async () => {\n    if (!isInstantSyncEnabled) {\n      params.set('openPlans', 'generic');\n      history.push({\n        search: params.toString()\n      });\n      return;\n    }\n\n    Loader.show();\n\n    try {\n      await Nikon.syncInstagramNow();\n      SnackBar.show('Your posts will be synced with in next few minutes', 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  if (!profile) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.topBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.topMiddle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"post\",\n    className: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    className: styles.syncButton,\n    onClick: syncNow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: importIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }), \"Sync Posts Now\"), /*#__PURE__*/React.createElement(InstaImport, {\n    profile: profile,\n    onClose: refresh,\n    page: \"posts\",\n    customButton: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: styles.settingIcon,\n      src: settingIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })))));\n}\n\n_s(TopBar, \"DNiuAjeoyZHZRkNmjWnHNQ2xJeg=\", false, function () {\n  return [useIsInstantSyncEnabled, useHistory, useQueryParams];\n});\n\n_c = TopBar;\nTopBar.propTypes = {\n  profile: PropTypes.object.isRequired,\n  refresh: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"TopBar\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/userProfile/TopBar.jsx"],"names":["React","InstaImport","importIcon","PropTypes","Clickable","Loader","Nikon","useIsInstantSyncEnabled","SnackBar","useHistory","useQueryParams","styles","TopBar","profile","refresh","isInstantSyncEnabled","history","params","syncNow","set","push","search","toString","show","syncInstagramNow","e","showError","hide","container","topBar","topMiddle","buttonContainer","syncButton","settingIcon","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { InstaImport } from 'components/userProfile/InstaImport';\nimport importIcon from 'assets/images/insta.png';\nimport settingIcon from 'assets/v2/posts/setting.svg';\nimport PropTypes from 'prop-types';\nimport { Clickable } from 'phoenix-components';\nimport Loader from 'services/loader';\nimport { Nikon } from 'api';\nimport {\n  useIsInstantSyncEnabled\n} from 'contexts/userContext';\nimport SnackBar from 'services/snackbar';\nimport { useHistory } from 'react-router-dom';\nimport { useQueryParams } from 'hooks';\nimport styles from './TopBar.module.css';\n\nexport function TopBar({\n  profile,\n  refresh\n}) {\n  const isInstantSyncEnabled = useIsInstantSyncEnabled();\n  const history = useHistory();\n  const params = useQueryParams();\n\n  const syncNow = async () => {\n    if (!isInstantSyncEnabled) {\n      params.set('openPlans', 'generic');\n      history.push({\n        search: params.toString(),\n      });\n      return;\n    }\n    Loader.show();\n    try {\n      await Nikon.syncInstagramNow();\n      SnackBar.show('Your posts will be synced with in next few minutes', 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.topBar}>\n        <div className={styles.topMiddle}>\n          <div id=\"post\" className={styles.buttonContainer}>\n            <Clickable\n              className={styles.syncButton}\n              onClick={syncNow}\n            >\n              <img src={importIcon} alt=\"\" />\n              Sync Posts Now\n            </Clickable>\n            <InstaImport\n              profile={profile}\n              onClose={refresh}\n              page=\"posts\"\n              customButton={(\n                <div>\n                  <img className={styles.settingIcon} src={settingIcon} alt=\"\" />\n                </div>\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nTopBar.propTypes = {\n  profile: PropTypes.object.isRequired,\n  refresh: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}