{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/products/SizeVariant.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField } from 'formik';\nimport { Card, Clickable, FormikInput, Switch } from 'phoenix-components';\nimport { Radio } from 'phoenix-components/lib/formik';\nimport { Grid } from '@material-ui/core';\nimport deleteIcon from \"../../assets/v2/products/delete.svg\";\nimport styles from \"./Variant.module.css\";\nimport _ from 'lodash';\nimport { useDesktop, useImagesLength } from \"../../contexts\";\nimport cx from 'classnames';\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { useIsFreePlan } from \"../../contexts\";\nimport { getVideosAndImages } from \"./variantUtils\";\nexport function SizeVariant({\n  index\n}) {\n  _s();\n\n  var _variant$info, _variant$info2, _variant$_id, _variant$info3, _variant$info4;\n\n  const isFreePlan = useIsFreePlan(); // const freeRange = '0';\n  // const plusRange = '2';\n\n  const isDesktop = useDesktop();\n  const prefix = `variants[${index}]`;\n  const [{\n    value: variant\n  },, {\n    setValue\n  }] = useField(prefix);\n  const [{\n    value: variants\n  },, {\n    setValue: setVariants\n  }] = useField('variants');\n  const fileLength = useImagesLength(true);\n\n  const onUnlive = () => {\n    setValue({ ...variant,\n      status: variant.status === 'live' ? 'unlive' : 'live'\n    });\n  };\n\n  const onDelete = async () => {\n    setVariants(variants.filter((_v, idx) => idx !== index));\n  };\n\n  const onChangeImages = files => {\n    const {\n      videos,\n      images\n    } = getVideosAndImages(files);\n    setValue({ ...variant,\n      images,\n      videos\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !isDesktop && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"Size\", ' ', _.isEmpty(variant === null || variant === void 0 ? void 0 : (_variant$info = variant.info) === null || _variant$info === void 0 ? void 0 : _variant$info.value) ? index + 1 : variant === null || variant === void 0 ? void 0 : (_variant$info2 = variant.info) === null || _variant$info2 === void 0 ? void 0 : _variant$info2.value), /*#__PURE__*/React.createElement(Card, {\n    className: styles.cardBgn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Size\",\n    placeholder: \"e.g. S\",\n    name: `${prefix}.info.value`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, (variant === null || variant === void 0 ? void 0 : (_variant$_id = variant._id) === null || _variant$_id === void 0 ? void 0 : _variant$_id.length) > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.switch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.status, {\n      [styles.statusLive]: variant.status === 'live',\n      [styles.statusUnlive]: variant.status !== 'live'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 27\n    }\n  }), ' ', variant.status), /*#__PURE__*/React.createElement(Switch, {\n    active: variant.status === 'live',\n    onChange: onUnlive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Product Price\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Price\",\n    placeholder: \"e.g. 160\",\n    name: `${prefix}.discountedAmount`,\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Strike-off Price\",\n    placeholder: \"e.g. 200\",\n    name: `${prefix}.amount`,\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, \"Availability\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Radio, {\n    name: `${prefix}.availableType`,\n    value: \"infinite\",\n    label: \"Always in Stock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Radio, {\n    name: `${prefix}.availableType`,\n    value: \"finite\",\n    label: \"Limited Stock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  })))), (variant === null || variant === void 0 ? void 0 : variant.availableType) === 'finite' && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Availability\",\n    name: `${prefix}.available`,\n    placeholder: \"0\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(ImageDrawer, {\n    onChange: onChangeImages,\n    isMulti: true,\n    images: [...variant.images, ...variant.videos],\n    accept: \"image/*,video/mp4,video/x-m4v,video/*\",\n    videos: !isFreePlan,\n    size: fileLength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }), !variant._id && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.delete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    onClick: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: deleteIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 23\n    }\n  })))))), isDesktop && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"Size\", ' ', _.isEmpty(variant === null || variant === void 0 ? void 0 : (_variant$info3 = variant.info) === null || _variant$info3 === void 0 ? void 0 : _variant$info3.value) ? index + 1 : variant === null || variant === void 0 ? void 0 : (_variant$info4 = variant.info) === null || _variant$info4 === void 0 ? void 0 : _variant$info4.value), /*#__PURE__*/React.createElement(Card, {\n    className: styles.sizeCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Size\",\n    placeholder: \"e.g. S, XL, A3, A5 etc., \",\n    name: `${prefix}.info.value`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.switch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.status, {\n      [styles.statusLive]: variant.status === 'live',\n      [styles.statusUnlive]: variant.status !== 'live'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 23\n    }\n  }), ' ', variant.status), /*#__PURE__*/React.createElement(Switch, {\n    active: variant.status === 'live',\n    onChange: onUnlive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 19\n    }\n  }, \"Product Price\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Price\",\n    placeholder: \"e.g. 160\",\n    name: `${prefix}.discountedAmount`,\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Strike-off Price\",\n    placeholder: \"e.g. 200\",\n    name: `${prefix}.amount`,\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, \"Availability\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: styles.gridContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Radio, {\n    name: `${prefix}.availableType`,\n    value: \"finite\",\n    label: \"Limited Stock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Radio, {\n    name: `${prefix}.availableType`,\n    value: \"infinite\",\n    label: \"Always in Stock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 23\n    }\n  })))), (variant === null || variant === void 0 ? void 0 : variant.availableType) === 'finite' && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Availability\",\n    name: `${prefix}.available`,\n    placeholder: \"0\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.imageDrawer1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ImageDrawer, {\n    onChange: onChangeImages,\n    isMulti: true,\n    images: [...variant.images, ...variant.videos],\n    accept: \"image/*,video/mp4,video/x-m4v,video/*\",\n    videos: !isFreePlan,\n    size: fileLength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  })), !variant._id && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.delete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    onClick: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: deleteIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }))))));\n}\n\n_s(SizeVariant, \"+X/p8wOjiFLAVNnWCxtVQnGbNW4=\", false, function () {\n  return [useIsFreePlan, useDesktop, useField, useField, useImagesLength];\n});\n\n_c = SizeVariant;\nSizeVariant.propTypes = {\n  index: PropTypes.number.isRequired\n};\nSizeVariant.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"SizeVariant\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/products/SizeVariant.jsx"],"names":["React","PropTypes","useField","Card","Clickable","FormikInput","Switch","Radio","Grid","styles","_","useDesktop","useImagesLength","cx","ImageDrawer","useIsFreePlan","getVideosAndImages","SizeVariant","index","isFreePlan","isDesktop","prefix","value","variant","setValue","variants","setVariants","fileLength","onUnlive","status","onDelete","filter","_v","idx","onChangeImages","files","videos","images","title","isEmpty","info","cardBgn","_id","length","switch","statusLive","statusUnlive","heading","availableType","delete","deleteIcon","sizeCard","gridContent","imageDrawer1","propTypes","number","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField } from 'formik';\nimport {\n  Card, Clickable, FormikInput, Switch\n} from 'phoenix-components';\nimport { Radio } from 'phoenix-components/lib/formik';\nimport { Grid } from '@material-ui/core';\nimport deleteIcon from 'assets/v2/products/delete.svg';\nimport styles from 'components/products/Variant.module.css';\nimport _ from 'lodash';\nimport { useDesktop, useImagesLength } from 'contexts';\nimport cx from 'classnames';\nimport { ImageDrawer } from 'components/products/ImageDrawer';\nimport {\n  useIsFreePlan\n} from 'contexts';\nimport { getVideosAndImages } from 'components/products/variantUtils';\n\nexport function SizeVariant({ index }) {\n  const isFreePlan = useIsFreePlan();\n  // const freeRange = '0';\n  // const plusRange = '2';\n  const isDesktop = useDesktop();\n  const prefix = `variants[${index}]`;\n  const [{ value: variant }, , { setValue }] = useField(prefix);\n  const [{ value: variants }, , { setValue: setVariants }] = useField('variants');\n  const fileLength = useImagesLength(true);\n\n  const onUnlive = () => {\n    setValue({\n      ...variant,\n      status: variant.status === 'live' ? 'unlive' : 'live',\n    });\n  };\n\n  const onDelete = async () => {\n    setVariants(variants.filter((_v, idx) => idx !== index));\n  };\n\n  const onChangeImages = (files) => {\n    const {\n      videos,\n      images\n    } = getVideosAndImages(files);\n    setValue({\n      ...variant,\n      images,\n      videos,\n    });\n  };\n\n  return (\n    <>\n      {!isDesktop\n        && (\n          <>\n            <div>\n              <div className={styles.title}>\n                Size\n                {' '}\n                {_.isEmpty(variant?.info?.value) ? index + 1 : variant?.info?.value}\n              </div>\n              <Card className={styles.cardBgn}>\n                <Grid container spacing={2}>\n                  <Grid item xs={7}>\n                    <FormikInput\n                      label=\"Size\"\n                      placeholder=\"e.g. S\"\n                      name={`${prefix}.info.value`}\n                    />\n                  </Grid>\n                  <Grid item xs={5}>\n                    {variant?._id?.length > 0 && (\n                      <div className={styles.switch}>\n                        <div\n                          className={cx(styles.status, {\n                            [styles.statusLive]: variant.status === 'live',\n                            [styles.statusUnlive]: variant.status !== 'live',\n                          })}\n                        >\n                          <span />\n                          {' '}\n                          {variant.status}\n                        </div>\n                        <Switch active={variant.status === 'live'} onChange={onUnlive} />\n                      </div>\n                    )}\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={styles.heading}>Product Price</div>\n                    <Grid container spacing={2}>\n                      <Grid item xs={6}>\n                        <FormikInput\n                          label=\"Price\"\n                          placeholder=\"e.g. 160\"\n                          name={`${prefix}.discountedAmount`}\n                          type=\"number\"\n                        />\n                      </Grid>\n                      <Grid item xs={6}>\n                        <FormikInput\n                          label=\"Strike-off Price\"\n                          placeholder=\"e.g. 200\"\n                          name={`${prefix}.amount`}\n                          type=\"number\"\n                        />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={styles.heading}>Availability</div>\n                    <Grid container spacing={2}>\n                      <Grid item xs={6}>\n                        <Radio name={`${prefix}.availableType`} value=\"infinite\" label=\"Always in Stock\" />\n                      </Grid>\n                      <Grid item xs={6}>\n                        <Radio name={`${prefix}.availableType`} value=\"finite\" label=\"Limited Stock\" />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  {variant?.availableType === 'finite' && (\n                    <Grid item xs={12}>\n                      <FormikInput\n                        label=\"Availability\"\n                        name={`${prefix}.available`}\n                        placeholder=\"0\"\n                        type=\"number\"\n                      />\n                    </Grid>\n                  )}\n                </Grid>\n                <ImageDrawer\n                  onChange={onChangeImages}\n                  isMulti={true}\n                  images={[...variant.images, ...variant.videos]}\n                  accept=\"image/*,video/mp4,video/x-m4v,video/*\"\n                  videos={!isFreePlan}\n                  size={fileLength}\n                />\n                {!variant._id && (\n                  <div className={styles.delete}>\n                    <Clickable onClick={onDelete}>\n                      <img src={deleteIcon} alt=\"\" />\n                    </Clickable>\n                  </div>\n                )}\n              </Card>\n            </div>\n          </>\n        )}\n      {isDesktop\n        && (\n          <div>\n            <div className={styles.title}>\n              Size\n              {' '}\n              {_.isEmpty(variant?.info?.value) ? index + 1 : variant?.info?.value}\n            </div>\n            <Card className={styles.sizeCard}>\n              <Grid container spacing={2}>\n                <Grid item xs={7}>\n                  <FormikInput\n                    label=\"Size\"\n                    placeholder=\"e.g. S, XL, A3, A5 etc., \"\n                    name={`${prefix}.info.value`}\n                  />\n                </Grid>\n                <Grid item xs={5}>\n                  <div className={styles.switch}>\n                    <div\n                      className={cx(styles.status, {\n                        [styles.statusLive]: variant.status === 'live',\n                        [styles.statusUnlive]: variant.status !== 'live',\n                      })}\n                    >\n                      <span />\n                      {' '}\n                      {variant.status}\n                    </div>\n                    <Switch active={variant.status === 'live'} onChange={onUnlive} />\n                  </div>\n                </Grid>\n                <Grid item xs={12}>\n                  <div className={styles.heading}>Product Price</div>\n                  <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                      <FormikInput\n                        label=\"Price\"\n                        placeholder=\"e.g. 160\"\n                        name={`${prefix}.discountedAmount`}\n                        type=\"number\"\n                      />\n                    </Grid>\n                    <Grid item xs={6}>\n                      <FormikInput\n                        label=\"Strike-off Price\"\n                        placeholder=\"e.g. 200\"\n                        name={`${prefix}.amount`}\n                        type=\"number\"\n                      />\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                  <div className={styles.heading}>Availability</div>\n                  <Grid container spacing={2} className={styles.gridContent}>\n                    <Grid item xs={4}>\n                      <Radio name={`${prefix}.availableType`} value=\"finite\" label=\"Limited Stock\" />\n                    </Grid>\n                    <Grid item xs={4}>\n                      <Radio name={`${prefix}.availableType`} value=\"infinite\" label=\"Always in Stock\" />\n                    </Grid>\n                  </Grid>\n                </Grid>\n                {variant?.availableType === 'finite' && (\n                  <Grid item xs={12}>\n                    <FormikInput\n                      label=\"Availability\"\n                      name={`${prefix}.available`}\n                      placeholder=\"0\"\n                      type=\"number\"\n                    />\n                  </Grid>\n                )}\n              </Grid>\n              <div className={styles.imageDrawer1}>\n                <ImageDrawer\n                  onChange={onChangeImages}\n                  isMulti={true}\n                  images={[...variant.images, ...variant.videos]}\n                  accept=\"image/*,video/mp4,video/x-m4v,video/*\"\n                  videos={!isFreePlan}\n                  size={fileLength}\n                />\n              </div>\n              {!variant._id && (\n                <div className={styles.delete}>\n                  <Clickable onClick={onDelete}>\n                    <img src={deleteIcon} alt=\"\" />\n                  </Clickable>\n                </div>\n              )}\n            </Card>\n          </div>\n        )}\n    </>\n  );\n}\n\nSizeVariant.propTypes = {\n  index: PropTypes.number.isRequired,\n};\n\nSizeVariant.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}