{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/subscriptions/Subscriptions.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport cx from 'classnames';\nimport { Drawer } from \"../../components/shared/Drawer\";\nimport { StatusSelectionBar } from \"../../components/shared/StatusSelectionBar\";\nimport { usePlans } from \"../../hooks/plans\";\nimport { Loading } from \"../../components/shared/Loading\";\nimport { useIsFreeTrialSubscribed, useIsUserRated, usePlan, useRefreshShop } from \"../../contexts/userContext\";\nimport SnackBar from \"../../services/snackbar\";\nimport Loader from \"../../services/loader\";\nimport { Becca } from \"../../api\";\nimport URL from \"../../utils/url\";\nimport moment from 'moment';\nimport { useQueryParams } from \"../../hooks\";\nimport { useHistory } from 'react-router-dom';\nimport { PaymentSuccess } from \"./PaymentSuccess\";\nimport _ from 'lodash';\nimport WebView from \"../../services/webview\"; // import EventManager from 'utils/events';\n\nimport { useDesktop } from \"../../contexts\";\nimport chevronLeftDesk from \"../../assets/v2/common/chevronPrimaryLeft.svg\";\nimport { Grid } from '@material-ui/core';\nimport { SubscriptionCard } from \"../../components/subscriptions/SubscriptionCard\";\nimport { canTakeRating, setRatingShown } from \"../../utils/ratings\";\nimport { RatingService } from \"../../services/ratings\";\nimport Kbc from \"../../components/knowBaseCards/KnowBaseCards\";\nimport Radios from \"./Radios\";\nimport Alert from \"./Alert\";\nimport styles from \"./Subscriptions.module.css\";\n\nfunction Subscriptions() {\n  _s();\n\n  var _ref;\n\n  const [{\n    plans,\n    details,\n    starFeatures\n  }, loading, refresh] = usePlans();\n  const [txId, setTxId] = useState(null);\n  const currentPlan = usePlan();\n  const reloadShop = useRefreshShop(); // const shop = useShop();\n  // const isIndia = shop?.country === 'india';\n\n  const isFreePlan = currentPlan.name === 'free';\n  const params = useQueryParams();\n  const defaultPrice = plans.find(p => p.name === (isFreePlan ? 'plus' : currentPlan.name));\n  const planParam = params.get('planName') || undefined;\n  const [plan, setPlan] = useState(planParam !== null && planParam !== void 0 ? planParam : isFreePlan ? 'plus' : currentPlan.name);\n  const [price, setPriceRaw] = useState(_.get(defaultPrice, 'price[0].validity', null));\n  const [alert, showAlert] = useState(false);\n  const history = useHistory();\n  const identifier = params.get('identifier');\n  const isWebView = WebView.isWebView();\n  const isDesktop = useDesktop();\n  const isSubscribed = useIsFreeTrialSubscribed();\n  const rated = useIsUserRated();\n\n  const setPrice = pr => {\n    setPriceRaw(pr === null || pr === void 0 ? void 0 : pr.validity);\n  };\n\n  const poll = async (id, interval) => {\n    try {\n      const {\n        status\n      } = await Becca.pollSubscriptionStatus(id);\n\n      if (status === 'active') {\n        if (interval) {\n          clearInterval(interval);\n        }\n\n        setTxId(id); // EventManager.emitEvent('subscribed_to_plan');\n\n        history.replace('/subscriptions/');\n        return;\n      }\n\n      if (!(status === 'created' || status === 'processing')) {\n        if (interval) {\n          clearInterval(interval);\n        }\n\n        history.replace('/subscriptions/');\n      }\n    } catch (e) {\n      var _e$response;\n\n      if ((e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.status) === 404) {\n        history.replace('/subscriptions/');\n      }\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  useEffect(() => {\n    setPrice(_.get(defaultPrice, 'price[0]', null));\n  }, [plans.length]);\n  useEffect(() => {\n    if (identifier) {\n      if (params.has('cancel')) {\n        history.replace('/subscriptions/');\n      }\n\n      const interval = setInterval(() => {\n        poll(identifier, interval);\n      }, 5000);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [identifier]);\n  useEffect(() => {\n    if (!isSubscribed) {\n      return;\n    }\n\n    if (rated) {\n      return;\n    }\n\n    if (!canTakeRating()) {\n      return;\n    }\n\n    RatingService.open();\n    setRatingShown();\n  }, [isSubscribed && !isFreePlan]);\n\n  const onPaymentClose = async () => {\n    if (!isWebView && !isDesktop) {\n      document.location.href = 'https://seller.windo.live';\n      return;\n    }\n\n    await reloadShop();\n    await refresh();\n    setTxId(null);\n  };\n\n  if (loading || plans.length === 0 || identifier) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const selectedPlan = plans.find(p => p.name === plan);\n  const selectedPrice = ((_ref = selectedPlan || []) === null || _ref === void 0 ? void 0 : _ref.price.find(x => x.validity === price)) || (selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan.price[0]);\n  const stateList = plans.map(p => ({\n    label: p.description,\n    value: p.name\n  }));\n\n  const onStateChange = val => {\n    setPlan(val);\n\n    if (val !== 'free') {\n      const planObj = plans.find(p => p.name === val);\n      setPrice(planObj === null || planObj === void 0 ? void 0 : planObj.price[0]);\n    } else {\n      setPrice(null);\n    }\n  };\n\n  const startFreeTrial = async () => {\n    Loader.show();\n\n    try {\n      await Becca.startFreeTrail(); // EventManager.emitEvent('free_trial_activated');\n\n      showAlert(!alert);\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const redirectToPortal = async () => {\n    Loader.show();\n\n    try {\n      const {\n        url\n      } = await Becca.getPortal(URL.getUrl('/subscriptions'));\n      window.location.href = url;\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const getPlanText = () => {\n    if (plan === 'free') {\n      return 'A simple, transparent plan with no hidden charges';\n    }\n\n    if (plan === 'plus') {\n      return 'An affordable plan with rich customizations';\n    }\n\n    if (plan === 'premium') {\n      return 'A next-level plan with everything you need';\n    }\n  };\n\n  const starSet = new Set(starFeatures || []);\n  const Component = isDesktop ? 'div' : Drawer;\n  const props = !isDesktop ? {\n    title: 'Subscription Plan',\n    onClose: () => {\n      history.goBack();\n    }\n  } : {\n    className: styles.desktopContainer\n  };\n  const planText = getPlanText();\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 5\n      }\n    }), isDesktop && /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => history.goBack(),\n      className: styles.maintitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: styles.backIconForDesktop,\n      src: chevronLeftDesk,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }, \"\\xA0\"), \"Subscription Plan\"), alert && /*#__PURE__*/React.createElement(Alert, {\n      onClose: () => {\n        reloadShop();\n        showAlert(!alert);\n      },\n      buttonTitle: \"Okay\",\n      title: \"Thank you for choosing the 14 days Free Trial.\",\n      subTitle: `Your Free Trial Started at\n           ${moment().format('MMM Do')} Ends at ${moment().add(14, 'days').format('ll')}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }\n    }), (details === null || details === void 0 ? void 0 : details.status) === 'processing' && /*#__PURE__*/React.createElement(Alert, {\n      buttonTitle: \"Okay\",\n      subTitle: \"Subscription is currently being processed. Check status after few minutes\",\n      onClose: () => {},\n      title: \"Subscription\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: cx({\n        [styles.containerClass]: !isDesktop,\n        [styles.containerClassForDesktop]: isDesktop\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 7\n      }\n    }, txId !== null && /*#__PURE__*/React.createElement(PaymentSuccess, {\n      onClose: onPaymentClose,\n      id: txId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 27\n      }\n    }), !isDesktop && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StatusSelectionBar, {\n      className: styles.stateBar,\n      activeClass: styles.activeClass,\n      tabClassName: styles.tabClassName,\n      itemClassName: styles.itemClassName,\n      items: stateList,\n      onChange: onStateChange,\n      active: plan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: cx(styles.subHeading, 'fullWidth textCenter'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }\n    }, planText)), isDesktop && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.desktopTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }\n    }, \"Choose your subscription plan\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.desktopSubtitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }\n    }, \"simple, transparent plans with no hidden charges.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.desktopRadios,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Radios, {\n      price: selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan.price,\n      selected: selectedPrice === null || selectedPrice === void 0 ? void 0 : selectedPrice._id,\n      setSelected: setPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 15\n      }\n    }))), isDesktop ? /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }\n    }, plans.map(p => /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(SubscriptionCard, {\n      plans: plans,\n      plan: p,\n      setPrice: setPrice,\n      price: price,\n      redirectToPortal: redirectToPortal,\n      startFreeTrial: startFreeTrial,\n      details: details,\n      starSet: starSet,\n      poll: poll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.kbc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Kbc, {\n      type: \"subscriptions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 15\n      }\n    }))) : /*#__PURE__*/React.createElement(SubscriptionCard, {\n      plans: plans,\n      plan: selectedPlan,\n      setPrice: setPrice,\n      price: price,\n      redirectToPortal: redirectToPortal,\n      startFreeTrial: startFreeTrial,\n      details: details,\n      starSet: starSet,\n      poll: poll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }\n    })))\n  );\n}\n\n_s(Subscriptions, \"HLn4MT+jLao7icf2baEiNhTzOic=\", false, function () {\n  return [usePlans, usePlan, useRefreshShop, useQueryParams, useHistory, useDesktop, useIsFreeTrialSubscribed, useIsUserRated];\n});\n\n_c = Subscriptions;\nSubscriptions.propTypes = {};\nSubscriptions.defaultProps = {};\nexport default Subscriptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Subscriptions\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/subscriptions/Subscriptions.jsx"],"names":["React","useEffect","useState","cx","Drawer","StatusSelectionBar","usePlans","Loading","useIsFreeTrialSubscribed","useIsUserRated","usePlan","useRefreshShop","SnackBar","Loader","Becca","URL","moment","useQueryParams","useHistory","PaymentSuccess","_","WebView","useDesktop","Grid","SubscriptionCard","canTakeRating","setRatingShown","RatingService","Kbc","Radios","Alert","styles","Subscriptions","plans","details","starFeatures","loading","refresh","txId","setTxId","currentPlan","reloadShop","isFreePlan","name","params","defaultPrice","find","p","planParam","get","undefined","plan","setPlan","price","setPriceRaw","alert","showAlert","history","identifier","isWebView","isDesktop","isSubscribed","rated","setPrice","pr","validity","poll","id","interval","status","pollSubscriptionStatus","clearInterval","replace","e","response","hide","length","has","setInterval","open","onPaymentClose","document","location","href","selectedPlan","selectedPrice","x","stateList","map","label","description","value","onStateChange","val","planObj","startFreeTrial","show","startFreeTrail","showError","redirectToPortal","url","getPortal","getUrl","window","getPlanText","starSet","Set","Component","props","title","onClose","goBack","className","desktopContainer","planText","maintitle","backIconForDesktop","chevronLeftDesk","format","add","containerClass","containerClassForDesktop","stateBar","activeClass","tabClassName","itemClassName","subHeading","desktopTitle","desktopSubtitle","desktopRadios","_id","kbc","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport cx from 'classnames';\nimport { Drawer } from 'components/shared/Drawer';\nimport { StatusSelectionBar } from 'components/shared/StatusSelectionBar';\nimport { usePlans } from 'hooks/plans';\nimport { Loading } from 'components/shared/Loading';\nimport {\n  useIsFreeTrialSubscribed, useIsUserRated, usePlan, useRefreshShop\n} from 'contexts/userContext';\nimport SnackBar from 'services/snackbar';\nimport Loader from 'services/loader';\nimport { Becca } from 'api';\nimport URL from 'utils/url';\nimport moment from 'moment';\nimport { useQueryParams } from 'hooks';\nimport { useHistory } from 'react-router-dom';\nimport { PaymentSuccess } from 'containers/subscriptions/PaymentSuccess';\nimport _ from 'lodash';\nimport WebView from 'services/webview';\n// import EventManager from 'utils/events';\nimport { useDesktop } from 'contexts';\nimport chevronLeftDesk from 'assets/v2/common/chevronPrimaryLeft.svg';\nimport { Grid } from '@material-ui/core';\nimport { SubscriptionCard } from 'components/subscriptions/SubscriptionCard';\nimport { canTakeRating, setRatingShown } from 'utils/ratings';\nimport { RatingService } from 'services/ratings';\nimport Kbc from 'components/knowBaseCards/KnowBaseCards';\nimport Radios from './Radios';\nimport Alert from './Alert';\nimport styles from './Subscriptions.module.css';\n\nfunction Subscriptions() {\n  const [{\n    plans,\n    details,\n    starFeatures\n  }, loading, refresh] = usePlans();\n  const [txId, setTxId] = useState(null);\n  const currentPlan = usePlan();\n  const reloadShop = useRefreshShop();\n  // const shop = useShop();\n  // const isIndia = shop?.country === 'india';\n  const isFreePlan = currentPlan.name === 'free';\n  const params = useQueryParams();\n  const defaultPrice = plans.find(p => p.name === (isFreePlan ? 'plus' : currentPlan.name));\n  const planParam = params.get('planName') || undefined;\n  const [plan, setPlan] = useState(planParam ?? (isFreePlan ? 'plus' : currentPlan.name));\n  const [price, setPriceRaw] = useState(_.get(defaultPrice, 'price[0].validity', null));\n  const [alert, showAlert] = useState(false);\n  const history = useHistory();\n  const identifier = params.get('identifier');\n  const isWebView = WebView.isWebView();\n  const isDesktop = useDesktop();\n  const isSubscribed = useIsFreeTrialSubscribed();\n  const rated = useIsUserRated();\n\n  const setPrice = (pr) => {\n    setPriceRaw(pr?.validity);\n  };\n\n  const poll = async (id, interval) => {\n    try {\n      const { status } = await Becca.pollSubscriptionStatus(id);\n      if (status === 'active') {\n        if (interval) {\n          clearInterval(interval);\n        }\n        setTxId(id);\n        // EventManager.emitEvent('subscribed_to_plan');\n        history.replace('/subscriptions/');\n        return;\n      }\n      if (!(status === 'created' || status === 'processing')) {\n        if (interval) {\n          clearInterval(interval);\n        }\n        history.replace('/subscriptions/');\n      }\n    } catch (e) {\n      if (e?.response?.status === 404) {\n        history.replace('/subscriptions/');\n      }\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  useEffect(() => {\n    setPrice(_.get(defaultPrice, 'price[0]', null));\n  }, [plans.length]);\n\n  useEffect(() => {\n    if (identifier) {\n      if (params.has('cancel')) {\n        history.replace('/subscriptions/');\n      }\n      const interval = setInterval(() => {\n        poll(identifier, interval);\n      }, 5000);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [identifier]);\n\n  useEffect(() => {\n    if (!isSubscribed) {\n      return;\n    }\n    if (rated) {\n      return;\n    }\n    if (!canTakeRating()) {\n      return;\n    }\n    RatingService.open();\n    setRatingShown();\n  }, [isSubscribed && !isFreePlan]);\n\n  const onPaymentClose = async () => {\n    if (!isWebView && !isDesktop) {\n      document.location.href = 'https://seller.windo.live';\n      return;\n    }\n    await reloadShop();\n    await refresh();\n    setTxId(null);\n  };\n\n  if (loading || plans.length === 0 || identifier) {\n    return <Loading />;\n  }\n\n  const selectedPlan = plans.find(p => p.name === plan);\n  const selectedPrice = (selectedPlan || [])?.price.find(x => x.validity === price) || selectedPlan?.price[0];\n\n  const stateList = plans.map(p => ({\n    label: p.description,\n    value: p.name,\n  }));\n\n  const onStateChange = (val) => {\n    setPlan(val);\n    if (val !== 'free') {\n      const planObj = plans.find(p => p.name === val);\n      setPrice(planObj?.price[0]);\n    } else {\n      setPrice(null);\n    }\n  };\n\n  const startFreeTrial = async () => {\n    Loader.show();\n    try {\n      await Becca.startFreeTrail();\n      // EventManager.emitEvent('free_trial_activated');\n      showAlert(!alert);\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const redirectToPortal = async () => {\n    Loader.show();\n    try {\n      const { url } = await Becca.getPortal(URL.getUrl('/subscriptions'));\n      window.location.href = url;\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const getPlanText = () => {\n    if (plan === 'free') {\n      return 'A simple, transparent plan with no hidden charges';\n    }\n    if (plan === 'plus') {\n      return 'An affordable plan with rich customizations';\n    }\n    if (plan === 'premium') {\n      return 'A next-level plan with everything you need';\n    }\n  };\n\n  const starSet = new Set(starFeatures || []);\n\n  const Component = isDesktop ? 'div' : Drawer;\n\n  const props = !isDesktop ? {\n    title: 'Subscription Plan',\n    onClose: () => {\n      history.goBack();\n    },\n  } : {\n    className: styles.desktopContainer,\n  };\n\n  const planText = getPlanText();\n\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <Component {...props}>\n      {isDesktop && (\n        <div onClick={() => history.goBack()} className={styles.maintitle}>\n          <img className={styles.backIconForDesktop} src={chevronLeftDesk} alt=\"\" />\n          <div>&nbsp;</div>\n          <div>&nbsp;</div>\n          Subscription Plan\n        </div>\n      )}\n      {alert && (\n        <Alert\n          onClose={() => {\n            reloadShop();\n            showAlert(!alert);\n          }}\n          buttonTitle=\"Okay\"\n          title=\"Thank you for choosing the 14 days Free Trial.\"\n          subTitle={`Your Free Trial Started at\n           ${moment()\n              .format('MMM Do')} Ends at ${moment()\n                .add(14, 'days')\n                .format('ll')}`}\n        />\n      )}\n      {details?.status === 'processing' && (\n        <Alert\n          buttonTitle=\"Okay\"\n          subTitle=\"Subscription is currently being processed. Check status after few minutes\"\n          onClose={() => {\n          }}\n          title=\"Subscription\"\n        />\n      )}\n      <div\n        className={cx({\n          [styles.containerClass]: !isDesktop,\n          [styles.containerClassForDesktop]: isDesktop,\n        })}\n      >\n        {txId !== null && <PaymentSuccess onClose={onPaymentClose} id={txId} />}\n        {!isDesktop && (\n          <>\n            <StatusSelectionBar\n              className={styles.stateBar}\n              activeClass={styles.activeClass}\n              tabClassName={styles.tabClassName}\n              itemClassName={styles.itemClassName}\n              items={stateList}\n              onChange={onStateChange}\n              active={plan}\n            />\n            <div className={cx(styles.subHeading, 'fullWidth textCenter')}>\n              {planText}\n            </div>\n          </>\n        )}\n        {isDesktop && (\n          <>\n            <div className={styles.desktopTitle}>\n              Choose your subscription plan\n            </div>\n            <div className={styles.desktopSubtitle}>\n              simple, transparent plans with no hidden charges.\n            </div>\n            <div className={styles.desktopRadios}>\n              <Radios\n                price={selectedPlan?.price}\n                selected={selectedPrice?._id}\n                setSelected={setPrice}\n              />\n            </div>\n          </>\n        )}\n        {isDesktop ? (\n          <Grid container spacing={6}>\n            {plans.map(p => (\n              <Grid item sm={4}>\n                <SubscriptionCard\n                  plans={plans}\n                  plan={p}\n                  setPrice={setPrice}\n                  price={price}\n                  redirectToPortal={redirectToPortal}\n                  startFreeTrial={startFreeTrial}\n                  details={details}\n                  starSet={starSet}\n                  poll={poll}\n                />\n              </Grid>\n            ))}\n            <div className={styles.kbc}>\n              <Kbc type=\"subscriptions\" />\n            </div>\n          </Grid>\n        ) : (\n          <SubscriptionCard\n            plans={plans}\n            plan={selectedPlan}\n            setPrice={setPrice}\n            price={price}\n            redirectToPortal={redirectToPortal}\n            startFreeTrial={startFreeTrial}\n            details={details}\n            starSet={starSet}\n            poll={poll}\n          />\n        )}\n      </div>\n    </Component>\n  );\n}\n\nSubscriptions.propTypes = {};\n\nSubscriptions.defaultProps = {};\n\nexport default Subscriptions;\n"]},"metadata":{},"sourceType":"module"}