{"ast":null,"code":"import { Promise } from './polyfills';\nimport { NAVIGATION_TIMING_MARKS, COMPRESSED_NAV_TIMING_MARKS } from '../performance-monitoring/capture-navigation';\n\nfunction compressStackFrames(frames) {\n  return frames.map(function (frame) {\n    return {\n      ap: frame.abs_path,\n      f: frame.filename,\n      fn: frame.function,\n      li: frame.lineno,\n      co: frame.colno\n    };\n  });\n}\n\nfunction compressResponse(response) {\n  return {\n    ts: response.transfer_size,\n    ebs: response.encoded_body_size,\n    dbs: response.decoded_body_size\n  };\n}\n\nfunction compressHTTP(http) {\n  var compressed = {};\n  var method = http.method,\n      status_code = http.status_code,\n      url = http.url,\n      response = http.response;\n  compressed.url = url;\n\n  if (method) {\n    compressed.mt = method;\n  }\n\n  if (status_code) {\n    compressed.sc = status_code;\n  }\n\n  if (response) {\n    compressed.r = compressResponse(response);\n  }\n\n  return compressed;\n}\n\nfunction compressContext(context) {\n  if (!context) {\n    return null;\n  }\n\n  var compressed = {};\n  var page = context.page,\n      http = context.http,\n      response = context.response,\n      destination = context.destination,\n      user = context.user,\n      custom = context.custom;\n\n  if (page) {\n    compressed.p = {\n      rf: page.referer,\n      url: page.url\n    };\n  }\n\n  if (http) {\n    compressed.h = compressHTTP(http);\n  }\n\n  if (response) {\n    compressed.r = compressResponse(response);\n  }\n\n  if (destination) {\n    var service = destination.service;\n    compressed.dt = {\n      se: {\n        n: service.name,\n        t: service.type,\n        rc: service.resource\n      },\n      ad: destination.address,\n      po: destination.port\n    };\n  }\n\n  if (user) {\n    compressed.u = {\n      id: user.id,\n      un: user.username,\n      em: user.email\n    };\n  }\n\n  if (custom) {\n    compressed.cu = custom;\n  }\n\n  return compressed;\n}\n\nfunction compressMarks(marks) {\n  if (!marks) {\n    return null;\n  }\n\n  var compressedNtMarks = compressNavigationTimingMarks(marks.navigationTiming);\n  var compressed = {\n    nt: compressedNtMarks,\n    a: compressAgentMarks(compressedNtMarks, marks.agent)\n  };\n  return compressed;\n}\n\nfunction compressNavigationTimingMarks(ntMarks) {\n  if (!ntMarks) {\n    return null;\n  }\n\n  var compressed = {};\n  COMPRESSED_NAV_TIMING_MARKS.forEach(function (mark, index) {\n    var mapping = NAVIGATION_TIMING_MARKS[index];\n    compressed[mark] = ntMarks[mapping];\n  });\n  return compressed;\n}\n\nfunction compressAgentMarks(compressedNtMarks, agentMarks) {\n  var compressed = {};\n\n  if (compressedNtMarks) {\n    compressed = {\n      fb: compressedNtMarks.rs,\n      di: compressedNtMarks.di,\n      dc: compressedNtMarks.dc\n    };\n  }\n\n  if (agentMarks) {\n    var fp = agentMarks.firstContentfulPaint;\n    var lp = agentMarks.largestContentfulPaint;\n\n    if (fp) {\n      compressed.fp = fp;\n    }\n\n    if (lp) {\n      compressed.lp = lp;\n    }\n  }\n\n  if (Object.keys(compressed).length === 0) {\n    return null;\n  }\n\n  return compressed;\n}\n\nexport function compressMetadata(metadata) {\n  var service = metadata.service,\n      labels = metadata.labels;\n  var agent = service.agent,\n      language = service.language;\n  return {\n    se: {\n      n: service.name,\n      ve: service.version,\n      a: {\n        n: agent.name,\n        ve: agent.version\n      },\n      la: {\n        n: language.name\n      },\n      en: service.environment\n    },\n    l: labels\n  };\n}\nexport function compressTransaction(transaction) {\n  var spans = transaction.spans.map(function (span) {\n    var spanData = {\n      id: span.id,\n      n: span.name,\n      t: span.type,\n      s: span.start,\n      d: span.duration,\n      c: compressContext(span.context),\n      o: span.outcome,\n      sr: span.sample_rate\n    };\n\n    if (span.parent_id !== transaction.id) {\n      spanData.pid = span.parent_id;\n    }\n\n    if (span.sync === true) {\n      spanData.sy = true;\n    }\n\n    if (span.subtype) {\n      spanData.su = span.subtype;\n    }\n\n    if (span.action) {\n      spanData.ac = span.action;\n    }\n\n    return spanData;\n  });\n  var tr = {\n    id: transaction.id,\n    tid: transaction.trace_id,\n    n: transaction.name,\n    t: transaction.type,\n    d: transaction.duration,\n    c: compressContext(transaction.context),\n    k: compressMarks(transaction.marks),\n    me: compressMetricsets(transaction.breakdown),\n    y: spans,\n    yc: {\n      sd: spans.length\n    },\n    sm: transaction.sampled,\n    sr: transaction.sample_rate,\n    o: transaction.outcome\n  };\n\n  if (transaction.experience) {\n    var _transaction$experien = transaction.experience,\n        cls = _transaction$experien.cls,\n        fid = _transaction$experien.fid,\n        tbt = _transaction$experien.tbt,\n        longtask = _transaction$experien.longtask;\n    tr.exp = {\n      cls: cls,\n      fid: fid,\n      tbt: tbt,\n      lt: longtask\n    };\n  }\n\n  if (transaction.session) {\n    var _transaction$session = transaction.session,\n        id = _transaction$session.id,\n        sequence = _transaction$session.sequence;\n    tr.ses = {\n      id: id,\n      seq: sequence\n    };\n  }\n\n  return tr;\n}\nexport function compressError(error) {\n  var exception = error.exception;\n  var compressed = {\n    id: error.id,\n    cl: error.culprit,\n    ex: {\n      mg: exception.message,\n      st: compressStackFrames(exception.stacktrace),\n      t: error.type\n    },\n    c: compressContext(error.context)\n  };\n  var transaction = error.transaction;\n\n  if (transaction) {\n    compressed.tid = error.trace_id;\n    compressed.pid = error.parent_id;\n    compressed.xid = error.transaction_id;\n    compressed.x = {\n      t: transaction.type,\n      sm: transaction.sampled\n    };\n  }\n\n  return compressed;\n}\nexport function compressMetricsets(breakdowns) {\n  return breakdowns.map(function (_ref) {\n    var span = _ref.span,\n        samples = _ref.samples;\n    var isSpan = span != null;\n\n    if (isSpan) {\n      return {\n        y: {\n          t: span.type\n        },\n        sa: {\n          ysc: {\n            v: samples['span.self_time.count'].value\n          },\n          yss: {\n            v: samples['span.self_time.sum.us'].value\n          }\n        }\n      };\n    }\n\n    return {\n      sa: {\n        xdc: {\n          v: samples['transaction.duration.count'].value\n        },\n        xds: {\n          v: samples['transaction.duration.sum.us'].value\n        },\n        xbc: {\n          v: samples['transaction.breakdown.count'].value\n        }\n      }\n    };\n  });\n}\nexport function compressPayload(params, type) {\n  if (type === void 0) {\n    type = 'gzip';\n  }\n\n  var isCompressionStreamSupported = typeof CompressionStream === 'function';\n  return new Promise(function (resolve) {\n    if (!isCompressionStreamSupported) {\n      return resolve(params);\n    }\n\n    var payload = params.payload,\n        headers = params.headers,\n        beforeSend = params.beforeSend;\n    var payloadStream = new Blob([payload]).stream();\n    var compressedStream = payloadStream.pipeThrough(new CompressionStream(type));\n    return new Response(compressedStream).blob().then(function (payload) {\n      headers['Content-Encoding'] = type;\n      return resolve({\n        payload: payload,\n        headers: headers,\n        beforeSend: beforeSend\n      });\n    });\n  });\n}","map":{"version":3,"sources":["/home/harish/windo/phoenix/node_modules/@elastic/apm-rum-core/dist/es/common/compress.js"],"names":["Promise","NAVIGATION_TIMING_MARKS","COMPRESSED_NAV_TIMING_MARKS","compressStackFrames","frames","map","frame","ap","abs_path","f","filename","fn","function","li","lineno","co","colno","compressResponse","response","ts","transfer_size","ebs","encoded_body_size","dbs","decoded_body_size","compressHTTP","http","compressed","method","status_code","url","mt","sc","r","compressContext","context","page","destination","user","custom","p","rf","referer","h","service","dt","se","n","name","t","type","rc","resource","ad","address","po","port","u","id","un","username","em","email","cu","compressMarks","marks","compressedNtMarks","compressNavigationTimingMarks","navigationTiming","nt","a","compressAgentMarks","agent","ntMarks","forEach","mark","index","mapping","agentMarks","fb","rs","di","dc","fp","firstContentfulPaint","lp","largestContentfulPaint","Object","keys","length","compressMetadata","metadata","labels","language","ve","version","la","en","environment","l","compressTransaction","transaction","spans","span","spanData","s","start","d","duration","c","o","outcome","sr","sample_rate","parent_id","pid","sync","sy","subtype","su","action","ac","tr","tid","trace_id","k","me","compressMetricsets","breakdown","y","yc","sd","sm","sampled","experience","_transaction$experien","cls","fid","tbt","longtask","exp","lt","session","_transaction$session","sequence","ses","seq","compressError","error","exception","cl","culprit","ex","mg","message","st","stacktrace","xid","transaction_id","x","breakdowns","_ref","samples","isSpan","sa","ysc","v","value","yss","xdc","xds","xbc","compressPayload","params","isCompressionStreamSupported","CompressionStream","resolve","payload","headers","beforeSend","payloadStream","Blob","stream","compressedStream","pipeThrough","Response","blob","then"],"mappings":"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","sourcesContent":["import { Promise } from './polyfills';\nimport { NAVIGATION_TIMING_MARKS, COMPRESSED_NAV_TIMING_MARKS } from '../performance-monitoring/capture-navigation';\n\nfunction compressStackFrames(frames) {\n  return frames.map(function (frame) {\n    return {\n      ap: frame.abs_path,\n      f: frame.filename,\n      fn: frame.function,\n      li: frame.lineno,\n      co: frame.colno\n    };\n  });\n}\n\nfunction compressResponse(response) {\n  return {\n    ts: response.transfer_size,\n    ebs: response.encoded_body_size,\n    dbs: response.decoded_body_size\n  };\n}\n\nfunction compressHTTP(http) {\n  var compressed = {};\n  var method = http.method,\n      status_code = http.status_code,\n      url = http.url,\n      response = http.response;\n  compressed.url = url;\n\n  if (method) {\n    compressed.mt = method;\n  }\n\n  if (status_code) {\n    compressed.sc = status_code;\n  }\n\n  if (response) {\n    compressed.r = compressResponse(response);\n  }\n\n  return compressed;\n}\n\nfunction compressContext(context) {\n  if (!context) {\n    return null;\n  }\n\n  var compressed = {};\n  var page = context.page,\n      http = context.http,\n      response = context.response,\n      destination = context.destination,\n      user = context.user,\n      custom = context.custom;\n\n  if (page) {\n    compressed.p = {\n      rf: page.referer,\n      url: page.url\n    };\n  }\n\n  if (http) {\n    compressed.h = compressHTTP(http);\n  }\n\n  if (response) {\n    compressed.r = compressResponse(response);\n  }\n\n  if (destination) {\n    var service = destination.service;\n    compressed.dt = {\n      se: {\n        n: service.name,\n        t: service.type,\n        rc: service.resource\n      },\n      ad: destination.address,\n      po: destination.port\n    };\n  }\n\n  if (user) {\n    compressed.u = {\n      id: user.id,\n      un: user.username,\n      em: user.email\n    };\n  }\n\n  if (custom) {\n    compressed.cu = custom;\n  }\n\n  return compressed;\n}\n\nfunction compressMarks(marks) {\n  if (!marks) {\n    return null;\n  }\n\n  var compressedNtMarks = compressNavigationTimingMarks(marks.navigationTiming);\n  var compressed = {\n    nt: compressedNtMarks,\n    a: compressAgentMarks(compressedNtMarks, marks.agent)\n  };\n  return compressed;\n}\n\nfunction compressNavigationTimingMarks(ntMarks) {\n  if (!ntMarks) {\n    return null;\n  }\n\n  var compressed = {};\n  COMPRESSED_NAV_TIMING_MARKS.forEach(function (mark, index) {\n    var mapping = NAVIGATION_TIMING_MARKS[index];\n    compressed[mark] = ntMarks[mapping];\n  });\n  return compressed;\n}\n\nfunction compressAgentMarks(compressedNtMarks, agentMarks) {\n  var compressed = {};\n\n  if (compressedNtMarks) {\n    compressed = {\n      fb: compressedNtMarks.rs,\n      di: compressedNtMarks.di,\n      dc: compressedNtMarks.dc\n    };\n  }\n\n  if (agentMarks) {\n    var fp = agentMarks.firstContentfulPaint;\n    var lp = agentMarks.largestContentfulPaint;\n\n    if (fp) {\n      compressed.fp = fp;\n    }\n\n    if (lp) {\n      compressed.lp = lp;\n    }\n  }\n\n  if (Object.keys(compressed).length === 0) {\n    return null;\n  }\n\n  return compressed;\n}\n\nexport function compressMetadata(metadata) {\n  var service = metadata.service,\n      labels = metadata.labels;\n  var agent = service.agent,\n      language = service.language;\n  return {\n    se: {\n      n: service.name,\n      ve: service.version,\n      a: {\n        n: agent.name,\n        ve: agent.version\n      },\n      la: {\n        n: language.name\n      },\n      en: service.environment\n    },\n    l: labels\n  };\n}\nexport function compressTransaction(transaction) {\n  var spans = transaction.spans.map(function (span) {\n    var spanData = {\n      id: span.id,\n      n: span.name,\n      t: span.type,\n      s: span.start,\n      d: span.duration,\n      c: compressContext(span.context),\n      o: span.outcome,\n      sr: span.sample_rate\n    };\n\n    if (span.parent_id !== transaction.id) {\n      spanData.pid = span.parent_id;\n    }\n\n    if (span.sync === true) {\n      spanData.sy = true;\n    }\n\n    if (span.subtype) {\n      spanData.su = span.subtype;\n    }\n\n    if (span.action) {\n      spanData.ac = span.action;\n    }\n\n    return spanData;\n  });\n  var tr = {\n    id: transaction.id,\n    tid: transaction.trace_id,\n    n: transaction.name,\n    t: transaction.type,\n    d: transaction.duration,\n    c: compressContext(transaction.context),\n    k: compressMarks(transaction.marks),\n    me: compressMetricsets(transaction.breakdown),\n    y: spans,\n    yc: {\n      sd: spans.length\n    },\n    sm: transaction.sampled,\n    sr: transaction.sample_rate,\n    o: transaction.outcome\n  };\n\n  if (transaction.experience) {\n    var _transaction$experien = transaction.experience,\n        cls = _transaction$experien.cls,\n        fid = _transaction$experien.fid,\n        tbt = _transaction$experien.tbt,\n        longtask = _transaction$experien.longtask;\n    tr.exp = {\n      cls: cls,\n      fid: fid,\n      tbt: tbt,\n      lt: longtask\n    };\n  }\n\n  if (transaction.session) {\n    var _transaction$session = transaction.session,\n        id = _transaction$session.id,\n        sequence = _transaction$session.sequence;\n    tr.ses = {\n      id: id,\n      seq: sequence\n    };\n  }\n\n  return tr;\n}\nexport function compressError(error) {\n  var exception = error.exception;\n  var compressed = {\n    id: error.id,\n    cl: error.culprit,\n    ex: {\n      mg: exception.message,\n      st: compressStackFrames(exception.stacktrace),\n      t: error.type\n    },\n    c: compressContext(error.context)\n  };\n  var transaction = error.transaction;\n\n  if (transaction) {\n    compressed.tid = error.trace_id;\n    compressed.pid = error.parent_id;\n    compressed.xid = error.transaction_id;\n    compressed.x = {\n      t: transaction.type,\n      sm: transaction.sampled\n    };\n  }\n\n  return compressed;\n}\nexport function compressMetricsets(breakdowns) {\n  return breakdowns.map(function (_ref) {\n    var span = _ref.span,\n        samples = _ref.samples;\n    var isSpan = span != null;\n\n    if (isSpan) {\n      return {\n        y: {\n          t: span.type\n        },\n        sa: {\n          ysc: {\n            v: samples['span.self_time.count'].value\n          },\n          yss: {\n            v: samples['span.self_time.sum.us'].value\n          }\n        }\n      };\n    }\n\n    return {\n      sa: {\n        xdc: {\n          v: samples['transaction.duration.count'].value\n        },\n        xds: {\n          v: samples['transaction.duration.sum.us'].value\n        },\n        xbc: {\n          v: samples['transaction.breakdown.count'].value\n        }\n      }\n    };\n  });\n}\nexport function compressPayload(params, type) {\n  if (type === void 0) {\n    type = 'gzip';\n  }\n\n  var isCompressionStreamSupported = typeof CompressionStream === 'function';\n  return new Promise(function (resolve) {\n    if (!isCompressionStreamSupported) {\n      return resolve(params);\n    }\n\n    var payload = params.payload,\n        headers = params.headers,\n        beforeSend = params.beforeSend;\n    var payloadStream = new Blob([payload]).stream();\n    var compressedStream = payloadStream.pipeThrough(new CompressionStream(type));\n    return new Response(compressedStream).blob().then(function (payload) {\n      headers['Content-Encoding'] = type;\n      return resolve({\n        payload: payload,\n        headers: headers,\n        beforeSend: beforeSend\n      });\n    });\n  });\n}"]},"metadata":{},"sourceType":"module"}