{"ast":null,"code":"import { PostType } from \"../../constants/posts\";\nimport _ from 'lodash';\nexport const getInitialValues = (other = {}) => ({\n  images: [],\n  video: null,\n  thumbnail: null,\n  type: PostType.IMAGES,\n  description: '',\n  hashTags: [],\n  products: [],\n  product: null,\n  language: 'English',\n  ...other\n});\nexport const getInitialProductValues = (values = {}) => ({\n  title: '',\n  amount: '',\n  discountedAmount: '',\n  availableType: 'infinite',\n  available: '',\n  customizable: 'true',\n  ...values\n});\nexport function marshallProductData(values, shop) {\n  var _shop$tax;\n\n  const product = {\n    title: values.title,\n    amount: +values.amount,\n    discountedAmount: +values.discountedAmount,\n    availableType: values.availableType,\n    available: +values.available || 0,\n    customizable: values.customizable === 'true'\n  };\n\n  if (shop !== null && shop !== void 0 && (_shop$tax = shop.tax) !== null && _shop$tax !== void 0 && _shop$tax.enabled) {\n    product.tax = {\n      slab: shop.tax.slab\n    };\n  }\n\n  product.paymentType = {\n    online: true,\n    cod: false\n  };\n  return product;\n}\nexport function marshallData(values, shop) {\n  var _values$categories;\n\n  const data = {\n    type: values.type,\n    description: values.description,\n    hashTags: values.hashTags.map(x => x.label),\n    categories: (values === null || values === void 0 ? void 0 : (_values$categories = values.categories) === null || _values$categories === void 0 ? void 0 : _values$categories.map(x => x.label)) || [],\n    products: values.products || [],\n    language: values.language || 'English'\n  };\n\n  if (!_.isEmpty(values.product)) {\n    data.product = marshallProductData(values.product, shop);\n  }\n\n  const formData = new FormData();\n  formData.append('data', JSON.stringify(data));\n\n  if (data.type === PostType.IMAGES) {\n    values.images.forEach((file, i) => {\n      formData.append(`images[${i}]`, file);\n    });\n  } else {\n    formData.append('video', values.video);\n    formData.append('thumbnail', values.thumbnail);\n  }\n\n  return formData;\n} // export function unMarshallData(_data) {\n//\n// }","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/posts/utils.js"],"names":["PostType","_","getInitialValues","other","images","video","thumbnail","type","IMAGES","description","hashTags","products","product","language","getInitialProductValues","values","title","amount","discountedAmount","availableType","available","customizable","marshallProductData","shop","tax","enabled","slab","paymentType","online","cod","marshallData","data","map","x","label","categories","isEmpty","formData","FormData","append","JSON","stringify","forEach","file","i"],"mappings":"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","sourcesContent":["import { PostType } from 'constants/posts';\nimport _ from 'lodash';\n\nexport const getInitialValues = (other = {}) => ({\n  images: [],\n  video: null,\n  thumbnail: null,\n  type: PostType.IMAGES,\n  description: '',\n  hashTags: [],\n  products: [],\n  product: null,\n  language: 'English',\n  ...other,\n});\n\nexport const getInitialProductValues = (values = {}) => ({\n  title: '',\n  amount: '',\n  discountedAmount: '',\n  availableType: 'infinite',\n  available: '',\n  customizable: 'true',\n  ...values,\n});\n\nexport function marshallProductData(values, shop) {\n  const product = {\n    title: values.title,\n    amount: +values.amount,\n    discountedAmount: +values.discountedAmount,\n    availableType: values.availableType,\n    available: (+values.available) || 0,\n    customizable: values.customizable === 'true',\n  };\n  if (shop?.tax?.enabled) {\n    product.tax = {\n      slab: shop.tax.slab,\n    };\n  }\n  product.paymentType = {\n    online: true,\n    cod: false\n  };\n\n  return product;\n}\n\nexport function marshallData(values, shop) {\n  const data = {\n    type: values.type,\n    description: values.description,\n    hashTags: values.hashTags.map(x => x.label),\n    categories: values?.categories?.map(x => x.label) || [],\n    products: values.products || [],\n    language: values.language || 'English',\n  };\n\n  if (!_.isEmpty(values.product)) {\n    data.product = marshallProductData(values.product, shop);\n  }\n\n  const formData = new FormData();\n  formData.append('data', JSON.stringify(data));\n  if (data.type === PostType.IMAGES) {\n    values.images.forEach((file, i) => {\n      formData.append(`images[${i}]`, file);\n    });\n  } else {\n    formData.append('video', values.video);\n    formData.append('thumbnail', values.thumbnail);\n  }\n  return formData;\n}\n\n// export function unMarshallData(_data) {\n//\n// }\n"]},"metadata":{},"sourceType":"module"}