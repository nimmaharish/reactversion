{"ast":null,"code":"import Queue from './queue';\nimport throttle from './throttle';\nimport NDJSON from './ndjson';\nimport { XHR_IGNORE } from './patching/patch-utils';\nimport { truncateModel, METADATA_MODEL } from './truncate';\nimport { ERRORS, TRANSACTIONS } from './constants';\nimport { noop } from './utils';\nimport { Promise } from './polyfills';\nimport { compressMetadata, compressTransaction, compressError, compressPayload } from './compress';\nimport { __DEV__ } from '../state';\nvar THROTTLE_INTERVAL = 60000;\n\nvar ApmServer = function () {\n  function ApmServer(configService, loggingService) {\n    this._configService = configService;\n    this._loggingService = loggingService;\n    this.queue = undefined;\n    this.throttleEvents = noop;\n  }\n\n  var _proto = ApmServer.prototype;\n\n  _proto.init = function init() {\n    var _this = this;\n\n    var queueLimit = this._configService.get('queueLimit');\n\n    var flushInterval = this._configService.get('flushInterval');\n\n    var limit = this._configService.get('eventsLimit');\n\n    var onFlush = function onFlush(events) {\n      var promise = _this.sendEvents(events);\n\n      if (promise) {\n        promise.catch(function (reason) {\n          _this._loggingService.warn('Failed sending events!', _this._constructError(reason));\n        });\n      }\n    };\n\n    this.queue = new Queue(onFlush, {\n      queueLimit: queueLimit,\n      flushInterval: flushInterval\n    });\n    this.throttleEvents = throttle(this.queue.add.bind(this.queue), function () {\n      return _this._loggingService.warn('Dropped events due to throttling!');\n    }, {\n      limit: limit,\n      interval: THROTTLE_INTERVAL\n    });\n  };\n\n  _proto._postJson = function _postJson(endPoint, payload) {\n    var _this2 = this;\n\n    var headers = {\n      'Content-Type': 'application/x-ndjson'\n    };\n\n    var apmRequest = this._configService.get('apmRequest');\n\n    var params = {\n      payload: payload,\n      headers: headers,\n      beforeSend: apmRequest\n    };\n    return compressPayload(params).catch(function (error) {\n      if (__DEV__) {\n        _this2._loggingService.debug('Compressing the payload using CompressionStream API failed', error.message);\n      }\n\n      return params;\n    }).then(function (result) {\n      return _this2._makeHttpRequest('POST', endPoint, result);\n    }).then(function (_ref) {\n      var responseText = _ref.responseText;\n      return responseText;\n    });\n  };\n\n  _proto._constructError = function _constructError(reason) {\n    var url = reason.url,\n        status = reason.status,\n        responseText = reason.responseText;\n\n    if (typeof status == 'undefined') {\n      return reason;\n    }\n\n    var message = url + ' HTTP status: ' + status;\n\n    if (__DEV__ && responseText) {\n      try {\n        var serverErrors = [];\n        var response = JSON.parse(responseText);\n\n        if (response.errors && response.errors.length > 0) {\n          response.errors.forEach(function (err) {\n            return serverErrors.push(err.message);\n          });\n          message += ' ' + serverErrors.join(',');\n        }\n      } catch (e) {\n        this._loggingService.debug('Error parsing response from APM server', e);\n      }\n    }\n\n    return new Error(message);\n  };\n\n  _proto._makeHttpRequest = function _makeHttpRequest(method, url, _temp) {\n    var _ref2 = _temp === void 0 ? {} : _temp,\n        _ref2$timeout = _ref2.timeout,\n        timeout = _ref2$timeout === void 0 ? 10000 : _ref2$timeout,\n        payload = _ref2.payload,\n        headers = _ref2.headers,\n        beforeSend = _ref2.beforeSend;\n\n    return new Promise(function (resolve, reject) {\n      var xhr = new window.XMLHttpRequest();\n      xhr[XHR_IGNORE] = true;\n      xhr.open(method, url, true);\n      xhr.timeout = timeout;\n\n      if (headers) {\n        for (var header in headers) {\n          if (headers.hasOwnProperty(header)) {\n            xhr.setRequestHeader(header, headers[header]);\n          }\n        }\n      }\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n          var status = xhr.status,\n              responseText = xhr.responseText;\n\n          if (status === 0 || status > 399 && status < 600) {\n            reject({\n              url: url,\n              status: status,\n              responseText: responseText\n            });\n          } else {\n            resolve(xhr);\n          }\n        }\n      };\n\n      xhr.onerror = function () {\n        var status = xhr.status,\n            responseText = xhr.responseText;\n        reject({\n          url: url,\n          status: status,\n          responseText: responseText\n        });\n      };\n\n      var canSend = true;\n\n      if (typeof beforeSend === 'function') {\n        canSend = beforeSend({\n          url: url,\n          method: method,\n          headers: headers,\n          payload: payload,\n          xhr: xhr\n        });\n      }\n\n      if (canSend) {\n        xhr.send(payload);\n      } else {\n        reject({\n          url: url,\n          status: 0,\n          responseText: 'Request rejected by user configuration.'\n        });\n      }\n    });\n  };\n\n  _proto.fetchConfig = function fetchConfig(serviceName, environment) {\n    var _this3 = this;\n\n    var serverUrl = this._configService.get('serverUrl');\n\n    var configEndpoint = serverUrl + \"/config/v1/rum/agents\";\n\n    if (!serviceName) {\n      return Promise.reject('serviceName is required for fetching central config.');\n    }\n\n    configEndpoint += \"?service.name=\" + serviceName;\n\n    if (environment) {\n      configEndpoint += \"&service.environment=\" + environment;\n    }\n\n    var localConfig = this._configService.getLocalConfig();\n\n    if (localConfig) {\n      configEndpoint += \"&ifnonematch=\" + localConfig.etag;\n    }\n\n    var apmRequest = this._configService.get('apmRequest');\n\n    return this._makeHttpRequest('GET', configEndpoint, {\n      timeout: 5000,\n      beforeSend: apmRequest\n    }).then(function (xhr) {\n      var status = xhr.status,\n          responseText = xhr.responseText;\n\n      if (status === 304) {\n        return localConfig;\n      } else {\n        var remoteConfig = JSON.parse(responseText);\n        var etag = xhr.getResponseHeader('etag');\n\n        if (etag) {\n          remoteConfig.etag = etag.replace(/[\"]/g, '');\n\n          _this3._configService.setLocalConfig(remoteConfig, true);\n        }\n\n        return remoteConfig;\n      }\n    }).catch(function (reason) {\n      var error = _this3._constructError(reason);\n\n      return Promise.reject(error);\n    });\n  };\n\n  _proto.createMetaData = function createMetaData() {\n    var cfg = this._configService;\n    var metadata = {\n      service: {\n        name: cfg.get('serviceName'),\n        version: cfg.get('serviceVersion'),\n        agent: {\n          name: 'rum-js',\n          version: cfg.version\n        },\n        language: {\n          name: 'javascript'\n        },\n        environment: cfg.get('environment')\n      },\n      labels: cfg.get('context.tags')\n    };\n    return truncateModel(METADATA_MODEL, metadata);\n  };\n\n  _proto.addError = function addError(error) {\n    var _this$throttleEvents;\n\n    this.throttleEvents((_this$throttleEvents = {}, _this$throttleEvents[ERRORS] = error, _this$throttleEvents));\n  };\n\n  _proto.addTransaction = function addTransaction(transaction) {\n    var _this$throttleEvents2;\n\n    this.throttleEvents((_this$throttleEvents2 = {}, _this$throttleEvents2[TRANSACTIONS] = transaction, _this$throttleEvents2));\n  };\n\n  _proto.ndjsonErrors = function ndjsonErrors(errors, compress) {\n    var key = compress ? 'e' : 'error';\n    return errors.map(function (error) {\n      var _NDJSON$stringify;\n\n      return NDJSON.stringify((_NDJSON$stringify = {}, _NDJSON$stringify[key] = compress ? compressError(error) : error, _NDJSON$stringify));\n    });\n  };\n\n  _proto.ndjsonMetricsets = function ndjsonMetricsets(metricsets) {\n    return metricsets.map(function (metricset) {\n      return NDJSON.stringify({\n        metricset: metricset\n      });\n    }).join('');\n  };\n\n  _proto.ndjsonTransactions = function ndjsonTransactions(transactions, compress) {\n    var _this4 = this;\n\n    var key = compress ? 'x' : 'transaction';\n    return transactions.map(function (tr) {\n      var _NDJSON$stringify2;\n\n      var spans = '',\n          breakdowns = '';\n\n      if (!compress) {\n        if (tr.spans) {\n          spans = tr.spans.map(function (span) {\n            return NDJSON.stringify({\n              span: span\n            });\n          }).join('');\n          delete tr.spans;\n        }\n\n        if (tr.breakdown) {\n          breakdowns = _this4.ndjsonMetricsets(tr.breakdown);\n          delete tr.breakdown;\n        }\n      }\n\n      return NDJSON.stringify((_NDJSON$stringify2 = {}, _NDJSON$stringify2[key] = compress ? compressTransaction(tr) : tr, _NDJSON$stringify2)) + spans + breakdowns;\n    });\n  };\n\n  _proto.sendEvents = function sendEvents(events) {\n    var _payload, _NDJSON$stringify3;\n\n    if (events.length === 0) {\n      return;\n    }\n\n    var transactions = [];\n    var errors = [];\n\n    for (var i = 0; i < events.length; i++) {\n      var event = events[i];\n\n      if (event[TRANSACTIONS]) {\n        transactions.push(event[TRANSACTIONS]);\n      }\n\n      if (event[ERRORS]) {\n        errors.push(event[ERRORS]);\n      }\n    }\n\n    if (transactions.length === 0 && errors.length === 0) {\n      return;\n    }\n\n    var cfg = this._configService;\n    var payload = (_payload = {}, _payload[TRANSACTIONS] = transactions, _payload[ERRORS] = errors, _payload);\n    var filteredPayload = cfg.applyFilters(payload);\n\n    if (!filteredPayload) {\n      this._loggingService.warn('Dropped payload due to filtering!');\n\n      return;\n    }\n\n    var apiVersion = cfg.get('apiVersion');\n    var compress = apiVersion > 2;\n    var ndjson = [];\n    var metadata = this.createMetaData();\n    var metadataKey = compress ? 'm' : 'metadata';\n    ndjson.push(NDJSON.stringify((_NDJSON$stringify3 = {}, _NDJSON$stringify3[metadataKey] = compress ? compressMetadata(metadata) : metadata, _NDJSON$stringify3)));\n    ndjson = ndjson.concat(this.ndjsonErrors(filteredPayload[ERRORS], compress), this.ndjsonTransactions(filteredPayload[TRANSACTIONS], compress));\n    var ndjsonPayload = ndjson.join('');\n    var serverUrlPrefix = cfg.get('serverUrlPrefix') || \"/intake/v\" + apiVersion + \"/rum/events\";\n    var endPoint = cfg.get('serverUrl') + serverUrlPrefix;\n    return this._postJson(endPoint, ndjsonPayload);\n  };\n\n  return ApmServer;\n}();\n\nexport default ApmServer;","map":{"version":3,"sources":["/home/harish/windo/phoenix/node_modules/@elastic/apm-rum-core/dist/es/common/apm-server.js"],"names":["Queue","throttle","NDJSON","XHR_IGNORE","truncateModel","METADATA_MODEL","ERRORS","TRANSACTIONS","noop","Promise","compressMetadata","compressTransaction","compressError","compressPayload","__DEV__","THROTTLE_INTERVAL","ApmServer","configService","loggingService","_configService","_loggingService","queue","undefined","throttleEvents","_proto","prototype","init","_this","queueLimit","get","flushInterval","limit","onFlush","events","promise","sendEvents","catch","reason","warn","_constructError","add","bind","interval","_postJson","endPoint","payload","_this2","headers","apmRequest","params","beforeSend","error","debug","message","then","result","_makeHttpRequest","_ref","responseText","url","status","serverErrors","response","JSON","parse","errors","length","forEach","err","push","join","e","Error","method","_temp","_ref2","_ref2$timeout","timeout","resolve","reject","xhr","window","XMLHttpRequest","open","header","hasOwnProperty","setRequestHeader","onreadystatechange","readyState","onerror","canSend","send","fetchConfig","serviceName","environment","_this3","serverUrl","configEndpoint","localConfig","getLocalConfig","etag","remoteConfig","getResponseHeader","replace","setLocalConfig","createMetaData","cfg","metadata","service","name","version","agent","language","labels","addError","_this$throttleEvents","addTransaction","transaction","_this$throttleEvents2","ndjsonErrors","compress","key","map","_NDJSON$stringify","stringify","ndjsonMetricsets","metricsets","metricset","ndjsonTransactions","transactions","_this4","tr","_NDJSON$stringify2","spans","breakdowns","span","breakdown","_payload","_NDJSON$stringify3","i","event","filteredPayload","applyFilters","apiVersion","ndjson","metadataKey","concat","ndjsonPayload","serverUrlPrefix"],"mappings":"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","sourcesContent":["import Queue from './queue';\nimport throttle from './throttle';\nimport NDJSON from './ndjson';\nimport { XHR_IGNORE } from './patching/patch-utils';\nimport { truncateModel, METADATA_MODEL } from './truncate';\nimport { ERRORS, TRANSACTIONS } from './constants';\nimport { noop } from './utils';\nimport { Promise } from './polyfills';\nimport { compressMetadata, compressTransaction, compressError, compressPayload } from './compress';\nimport { __DEV__ } from '../state';\nvar THROTTLE_INTERVAL = 60000;\n\nvar ApmServer = function () {\n  function ApmServer(configService, loggingService) {\n    this._configService = configService;\n    this._loggingService = loggingService;\n    this.queue = undefined;\n    this.throttleEvents = noop;\n  }\n\n  var _proto = ApmServer.prototype;\n\n  _proto.init = function init() {\n    var _this = this;\n\n    var queueLimit = this._configService.get('queueLimit');\n\n    var flushInterval = this._configService.get('flushInterval');\n\n    var limit = this._configService.get('eventsLimit');\n\n    var onFlush = function onFlush(events) {\n      var promise = _this.sendEvents(events);\n\n      if (promise) {\n        promise.catch(function (reason) {\n          _this._loggingService.warn('Failed sending events!', _this._constructError(reason));\n        });\n      }\n    };\n\n    this.queue = new Queue(onFlush, {\n      queueLimit: queueLimit,\n      flushInterval: flushInterval\n    });\n    this.throttleEvents = throttle(this.queue.add.bind(this.queue), function () {\n      return _this._loggingService.warn('Dropped events due to throttling!');\n    }, {\n      limit: limit,\n      interval: THROTTLE_INTERVAL\n    });\n  };\n\n  _proto._postJson = function _postJson(endPoint, payload) {\n    var _this2 = this;\n\n    var headers = {\n      'Content-Type': 'application/x-ndjson'\n    };\n\n    var apmRequest = this._configService.get('apmRequest');\n\n    var params = {\n      payload: payload,\n      headers: headers,\n      beforeSend: apmRequest\n    };\n    return compressPayload(params).catch(function (error) {\n      if (__DEV__) {\n        _this2._loggingService.debug('Compressing the payload using CompressionStream API failed', error.message);\n      }\n\n      return params;\n    }).then(function (result) {\n      return _this2._makeHttpRequest('POST', endPoint, result);\n    }).then(function (_ref) {\n      var responseText = _ref.responseText;\n      return responseText;\n    });\n  };\n\n  _proto._constructError = function _constructError(reason) {\n    var url = reason.url,\n        status = reason.status,\n        responseText = reason.responseText;\n\n    if (typeof status == 'undefined') {\n      return reason;\n    }\n\n    var message = url + ' HTTP status: ' + status;\n\n    if (__DEV__ && responseText) {\n      try {\n        var serverErrors = [];\n        var response = JSON.parse(responseText);\n\n        if (response.errors && response.errors.length > 0) {\n          response.errors.forEach(function (err) {\n            return serverErrors.push(err.message);\n          });\n          message += ' ' + serverErrors.join(',');\n        }\n      } catch (e) {\n        this._loggingService.debug('Error parsing response from APM server', e);\n      }\n    }\n\n    return new Error(message);\n  };\n\n  _proto._makeHttpRequest = function _makeHttpRequest(method, url, _temp) {\n    var _ref2 = _temp === void 0 ? {} : _temp,\n        _ref2$timeout = _ref2.timeout,\n        timeout = _ref2$timeout === void 0 ? 10000 : _ref2$timeout,\n        payload = _ref2.payload,\n        headers = _ref2.headers,\n        beforeSend = _ref2.beforeSend;\n\n    return new Promise(function (resolve, reject) {\n      var xhr = new window.XMLHttpRequest();\n      xhr[XHR_IGNORE] = true;\n      xhr.open(method, url, true);\n      xhr.timeout = timeout;\n\n      if (headers) {\n        for (var header in headers) {\n          if (headers.hasOwnProperty(header)) {\n            xhr.setRequestHeader(header, headers[header]);\n          }\n        }\n      }\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n          var status = xhr.status,\n              responseText = xhr.responseText;\n\n          if (status === 0 || status > 399 && status < 600) {\n            reject({\n              url: url,\n              status: status,\n              responseText: responseText\n            });\n          } else {\n            resolve(xhr);\n          }\n        }\n      };\n\n      xhr.onerror = function () {\n        var status = xhr.status,\n            responseText = xhr.responseText;\n        reject({\n          url: url,\n          status: status,\n          responseText: responseText\n        });\n      };\n\n      var canSend = true;\n\n      if (typeof beforeSend === 'function') {\n        canSend = beforeSend({\n          url: url,\n          method: method,\n          headers: headers,\n          payload: payload,\n          xhr: xhr\n        });\n      }\n\n      if (canSend) {\n        xhr.send(payload);\n      } else {\n        reject({\n          url: url,\n          status: 0,\n          responseText: 'Request rejected by user configuration.'\n        });\n      }\n    });\n  };\n\n  _proto.fetchConfig = function fetchConfig(serviceName, environment) {\n    var _this3 = this;\n\n    var serverUrl = this._configService.get('serverUrl');\n\n    var configEndpoint = serverUrl + \"/config/v1/rum/agents\";\n\n    if (!serviceName) {\n      return Promise.reject('serviceName is required for fetching central config.');\n    }\n\n    configEndpoint += \"?service.name=\" + serviceName;\n\n    if (environment) {\n      configEndpoint += \"&service.environment=\" + environment;\n    }\n\n    var localConfig = this._configService.getLocalConfig();\n\n    if (localConfig) {\n      configEndpoint += \"&ifnonematch=\" + localConfig.etag;\n    }\n\n    var apmRequest = this._configService.get('apmRequest');\n\n    return this._makeHttpRequest('GET', configEndpoint, {\n      timeout: 5000,\n      beforeSend: apmRequest\n    }).then(function (xhr) {\n      var status = xhr.status,\n          responseText = xhr.responseText;\n\n      if (status === 304) {\n        return localConfig;\n      } else {\n        var remoteConfig = JSON.parse(responseText);\n        var etag = xhr.getResponseHeader('etag');\n\n        if (etag) {\n          remoteConfig.etag = etag.replace(/[\"]/g, '');\n\n          _this3._configService.setLocalConfig(remoteConfig, true);\n        }\n\n        return remoteConfig;\n      }\n    }).catch(function (reason) {\n      var error = _this3._constructError(reason);\n\n      return Promise.reject(error);\n    });\n  };\n\n  _proto.createMetaData = function createMetaData() {\n    var cfg = this._configService;\n    var metadata = {\n      service: {\n        name: cfg.get('serviceName'),\n        version: cfg.get('serviceVersion'),\n        agent: {\n          name: 'rum-js',\n          version: cfg.version\n        },\n        language: {\n          name: 'javascript'\n        },\n        environment: cfg.get('environment')\n      },\n      labels: cfg.get('context.tags')\n    };\n    return truncateModel(METADATA_MODEL, metadata);\n  };\n\n  _proto.addError = function addError(error) {\n    var _this$throttleEvents;\n\n    this.throttleEvents((_this$throttleEvents = {}, _this$throttleEvents[ERRORS] = error, _this$throttleEvents));\n  };\n\n  _proto.addTransaction = function addTransaction(transaction) {\n    var _this$throttleEvents2;\n\n    this.throttleEvents((_this$throttleEvents2 = {}, _this$throttleEvents2[TRANSACTIONS] = transaction, _this$throttleEvents2));\n  };\n\n  _proto.ndjsonErrors = function ndjsonErrors(errors, compress) {\n    var key = compress ? 'e' : 'error';\n    return errors.map(function (error) {\n      var _NDJSON$stringify;\n\n      return NDJSON.stringify((_NDJSON$stringify = {}, _NDJSON$stringify[key] = compress ? compressError(error) : error, _NDJSON$stringify));\n    });\n  };\n\n  _proto.ndjsonMetricsets = function ndjsonMetricsets(metricsets) {\n    return metricsets.map(function (metricset) {\n      return NDJSON.stringify({\n        metricset: metricset\n      });\n    }).join('');\n  };\n\n  _proto.ndjsonTransactions = function ndjsonTransactions(transactions, compress) {\n    var _this4 = this;\n\n    var key = compress ? 'x' : 'transaction';\n    return transactions.map(function (tr) {\n      var _NDJSON$stringify2;\n\n      var spans = '',\n          breakdowns = '';\n\n      if (!compress) {\n        if (tr.spans) {\n          spans = tr.spans.map(function (span) {\n            return NDJSON.stringify({\n              span: span\n            });\n          }).join('');\n          delete tr.spans;\n        }\n\n        if (tr.breakdown) {\n          breakdowns = _this4.ndjsonMetricsets(tr.breakdown);\n          delete tr.breakdown;\n        }\n      }\n\n      return NDJSON.stringify((_NDJSON$stringify2 = {}, _NDJSON$stringify2[key] = compress ? compressTransaction(tr) : tr, _NDJSON$stringify2)) + spans + breakdowns;\n    });\n  };\n\n  _proto.sendEvents = function sendEvents(events) {\n    var _payload, _NDJSON$stringify3;\n\n    if (events.length === 0) {\n      return;\n    }\n\n    var transactions = [];\n    var errors = [];\n\n    for (var i = 0; i < events.length; i++) {\n      var event = events[i];\n\n      if (event[TRANSACTIONS]) {\n        transactions.push(event[TRANSACTIONS]);\n      }\n\n      if (event[ERRORS]) {\n        errors.push(event[ERRORS]);\n      }\n    }\n\n    if (transactions.length === 0 && errors.length === 0) {\n      return;\n    }\n\n    var cfg = this._configService;\n    var payload = (_payload = {}, _payload[TRANSACTIONS] = transactions, _payload[ERRORS] = errors, _payload);\n    var filteredPayload = cfg.applyFilters(payload);\n\n    if (!filteredPayload) {\n      this._loggingService.warn('Dropped payload due to filtering!');\n\n      return;\n    }\n\n    var apiVersion = cfg.get('apiVersion');\n    var compress = apiVersion > 2;\n    var ndjson = [];\n    var metadata = this.createMetaData();\n    var metadataKey = compress ? 'm' : 'metadata';\n    ndjson.push(NDJSON.stringify((_NDJSON$stringify3 = {}, _NDJSON$stringify3[metadataKey] = compress ? compressMetadata(metadata) : metadata, _NDJSON$stringify3)));\n    ndjson = ndjson.concat(this.ndjsonErrors(filteredPayload[ERRORS], compress), this.ndjsonTransactions(filteredPayload[TRANSACTIONS], compress));\n    var ndjsonPayload = ndjson.join('');\n    var serverUrlPrefix = cfg.get('serverUrlPrefix') || \"/intake/v\" + apiVersion + \"/rum/events\";\n    var endPoint = cfg.get('serverUrl') + serverUrlPrefix;\n    return this._postJson(endPoint, ndjsonPayload);\n  };\n\n  return ApmServer;\n}();\n\nexport default ApmServer;"]},"metadata":{},"sourceType":"module"}