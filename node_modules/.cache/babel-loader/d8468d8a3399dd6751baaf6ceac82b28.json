{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/orders/Note.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { useToggle } from \"../../hooks/common\";\nimport { Clickable } from 'phoenix-components';\nimport styles from \"./Note.module.css\";\nexport function Note({\n  note\n}) {\n  _s();\n\n  const [open, setOpen] = useToggle();\n\n  if (!note || (note === null || note === void 0 ? void 0 : note.length) === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InfoIcon, {\n    style: {\n      fontSize: 24,\n      color: 'var(--green)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.note,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, open ? note : note.slice(0, 80), note.length > 80 && /*#__PURE__*/React.createElement(Clickable, {\n    className: styles.more,\n    onClick: setOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, open ? 'less' : 'more...')));\n}\n\n_s(Note, \"EkIIPXoQZjsDHfo0WzzBrYXK5fs=\", false, function () {\n  return [useToggle];\n});\n\n_c = Note;\nNote.propTypes = {\n  note: PropTypes.string\n};\nNote.defaultProps = {\n  note: null\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/orders/Note.jsx"],"names":["React","PropTypes","InfoIcon","useToggle","Clickable","styles","Note","note","open","setOpen","length","container","fontSize","color","slice","more","propTypes","string","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,SAAT;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,MAAP;AAEA,OAAO,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,SAAS,EAAjC;;AAEA,MAAI,CAACI,IAAD,IAAS,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEG,MAAN,MAAiB,CAA9B,EAAiC;AAC/B,WAAO,IAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACM,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAER,MAAM,CAACE,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,GAAGD,IAAH,GAAUA,IAAI,CAACO,KAAL,CAAW,CAAX,EAAc,EAAd,CADjB,EAEGP,IAAI,CAACG,MAAL,GAAc,EAAd,iBACC,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEL,MAAM,CAACU,IAA7B;AAAmC,IAAA,OAAO,EAAEN,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,GAAG,MAAH,GAAY,SADnB,CAHJ,CAFF,CADF;AAaD;;GApBeF,I;UACUH,S;;;KADVG,I;AAsBhBA,IAAI,CAACU,SAAL,GAAiB;AACfT,EAAAA,IAAI,EAAEN,SAAS,CAACgB;AADD,CAAjB;AAIAX,IAAI,CAACY,YAAL,GAAoB;AAClBX,EAAAA,IAAI,EAAE;AADY,CAApB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { useToggle } from 'hooks/common';\nimport { Clickable } from 'phoenix-components';\nimport styles from './Note.module.css';\n\nexport function Note({ note }) {\n  const [open, setOpen] = useToggle();\n\n  if (!note || note?.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={styles.container}>\n      <InfoIcon style={{ fontSize: 24, color: 'var(--green)' }} />\n      <div className={styles.note}>\n        {open ? note : note.slice(0, 80)}\n        {note.length > 80 && (\n          <Clickable className={styles.more} onClick={setOpen}>\n            {open ? 'less' : 'more...'}\n          </Clickable>\n        )}\n      </div>\n    </div>\n  );\n}\n\nNote.propTypes = {\n  note: PropTypes.string\n};\n\nNote.defaultProps = {\n  note: null\n};\n"]},"metadata":{},"sourceType":"module"}