{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/tax/List.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Drawer } from \"../shared/Drawer\";\nimport { Clickable } from 'phoenix-components';\nimport { SideDrawer } from \"../shared/SideDrawer\";\nimport { useDesktop } from \"../../contexts\";\nimport addIcon from \"../../assets/overview/addIcon.svg\";\nimport { useRefreshShop, useShop } from \"../../contexts\";\nimport { Formik } from 'formik';\nimport { Becca } from \"../../api\";\nimport Loader from \"../../services/loader\";\nimport { useHistory } from 'react-router-dom';\nimport SnackBar from \"../../services/snackbar\";\nimport Form from \"./Form\";\nimport { Card } from \"./Card\";\nimport styles from \"./List.module.css\";\nexport default function List() {\n  _s();\n\n  const isDesktop = useDesktop();\n  const {\n    taxes = []\n  } = useShop();\n  const [openForm, setOpenForm] = useState(null);\n  const refreshShop = useRefreshShop();\n  const Component = isDesktop ? SideDrawer : Drawer;\n  const history = useHistory();\n  const allTaxes = taxes.filter(x => !x.isDeleted);\n  const deletedTaxes = taxes.filter(x => x.isDeleted);\n\n  const onSubmit = async values => {\n    try {\n      Loader.show();\n      const merged = [...values.taxes, ...deletedTaxes];\n      await Becca.updateShop({\n        taxes: merged\n      });\n      refreshShop();\n      SnackBar.show('Tax updated successfully', 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onOpenForm = index => {\n    setOpenForm(index);\n  };\n\n  const closeDraw = () => {\n    history.goBack();\n  };\n\n  return /*#__PURE__*/React.createElement(Component, {\n    title: \"Tax Details\",\n    backButton: true,\n    onClose: closeDraw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      taxes: allTaxes\n    },\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, openForm !== null && /*#__PURE__*/React.createElement(Form, {\n    index: openForm,\n    onClose: () => setOpenForm(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    className: styles.addButton,\n    onClick: () => setOpenForm(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: addIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.addIconText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"Add Tax Charges\"))), allTaxes.map((tax, idx) => /*#__PURE__*/React.createElement(Card, {\n    openForm: onOpenForm,\n    index: idx,\n    key: tax._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 40\n    }\n  })))));\n}\n\n_s(List, \"o1dLQ/bo2VLtwF+JRRcUyxMZmEM=\", false, function () {\n  return [useDesktop, useShop, useRefreshShop, useHistory];\n});\n\n_c = List;\nList.propTypes = {};\nList.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/tax/List.jsx"],"names":["React","useState","Drawer","Clickable","SideDrawer","useDesktop","useRefreshShop","useShop","Formik","Becca","Loader","useHistory","SnackBar","Form","Card","styles","List","isDesktop","taxes","openForm","setOpenForm","refreshShop","Component","history","allTaxes","filter","x","isDeleted","deletedTaxes","onSubmit","values","show","merged","updateShop","e","showError","hide","onOpenForm","index","closeDraw","goBack","container","addButton","addIcon","addIconText","map","tax","idx","_id","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Drawer } from 'components/shared/Drawer';\nimport { Clickable } from 'phoenix-components';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { useDesktop } from 'contexts';\nimport addIcon from 'assets/overview/addIcon.svg';\nimport { useRefreshShop, useShop } from 'contexts';\nimport { Formik } from 'formik';\nimport { Becca } from 'api';\nimport Loader from 'services/loader';\nimport { useHistory } from 'react-router-dom';\nimport SnackBar from 'services/snackbar';\nimport Form from './Form';\nimport { Card } from './Card';\nimport styles from './List.module.css';\n\nexport default function List() {\n  const isDesktop = useDesktop();\n  const { taxes = [] } = useShop();\n  const [openForm, setOpenForm] = useState(null);\n  const refreshShop = useRefreshShop();\n  const Component = isDesktop ? SideDrawer : Drawer;\n  const history = useHistory();\n\n  const allTaxes = taxes.filter(x => !x.isDeleted);\n  const deletedTaxes = taxes.filter(x => x.isDeleted);\n\n  const onSubmit = async (values) => {\n    try {\n      Loader.show();\n      const merged = [...values.taxes, ...deletedTaxes];\n      await Becca.updateShop({ taxes: merged });\n      refreshShop();\n      SnackBar.show('Tax updated successfully', 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onOpenForm = index => {\n    setOpenForm(index);\n  };\n\n  const closeDraw = () => {\n    history.goBack();\n  };\n\n  return (\n    <Component\n      title=\"Tax Details\"\n      backButton={true}\n      onClose={closeDraw}\n    >\n      <Formik initialValues={{ taxes: allTaxes }} onSubmit={onSubmit}>\n        <>\n          {openForm !== null && <Form index={openForm} onClose={() => setOpenForm(null)} />}\n          <div className={styles.container}>\n            <Clickable\n              className={styles.addButton}\n              onClick={() => setOpenForm(-1)}\n            >\n              <img src={addIcon} alt=\"\" />\n              <div className={styles.addIconText}>Add Tax Charges</div>\n            </Clickable>\n          </div>\n\n          {allTaxes.map((tax, idx) => (<Card openForm={onOpenForm} index={idx} key={tax._id} />))}\n        </>\n      </Formik>\n    </Component>\n  );\n}\n\nList.propTypes = {\n};\n\nList.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}