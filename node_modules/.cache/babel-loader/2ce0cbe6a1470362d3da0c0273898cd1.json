{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/customerCampaign/CustomerList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { InfiniteLoader, List } from 'react-virtualized';\nimport WhiteMail from \"../../assets/logos/whitemail.svg\";\nimport { Button } from 'phoenix-components';\nimport { useCustomersList, useQueryParams } from \"../../hooks\";\nimport Header from \"../orders/header/Header\";\nimport { Header as DesktopHeader } from \"../shared/Header\";\nimport { useDesktop } from \"../../contexts\";\nimport emptyOrder from \"../../assets/overview/newOrder.svg\";\nimport { Picker } from \"../shared/dateRangePicker/Picker\";\nimport SnackBar from \"../../services/snackbar\";\nimport { Search } from 'phoenix-components';\nimport { useHistory } from 'react-router-dom';\nimport { customDateFilters, getText } from \"../../containers/utils\";\nimport { useOpenPlans } from \"../../contexts\";\nimport { useIsCustomerCampaignEnabled } from \"../../contexts/userContext\";\nimport _ from 'lodash';\nimport { dateFilters, getQueryFilters } from \"./utils\";\nimport Filters from \"./Filters\";\nimport UserDetailsCard from \"./UserDetailsCard\";\nimport styles from \"./CustomerList.module.css\";\n\nfunction CustomerList() {\n  _s();\n\n  var _bodyRef$current, _bodyRef$current$getB, _bodyRef$current2;\n\n  const params = useQueryParams();\n  const [checkedIds, setCheckedId] = useState([]);\n  const [query, setQuery] = useState('');\n  const [skuIds, setSkuIds] = useState(null);\n  const [orderValue, setOrderValue] = useState({\n    min: null,\n    max: null\n  });\n  const place = params.get('placed') || 'all';\n  const isDesktop = useDesktop();\n  const history = useHistory();\n  const bodyRef = useRef();\n  const isCustomerCampaignEnabled = useIsCustomerCampaignEnabled();\n  const openPlans = useOpenPlans(false, 'generic', 'premium');\n  const topBar = (bodyRef === null || bodyRef === void 0 ? void 0 : (_bodyRef$current = bodyRef.current) === null || _bodyRef$current === void 0 ? void 0 : (_bodyRef$current$getB = _bodyRef$current.getBoundingClientRect()) === null || _bodyRef$current$getB === void 0 ? void 0 : _bodyRef$current$getB.top) || 120;\n  const height = window.screen.height - topBar - 75;\n  const width = bodyRef === null || bodyRef === void 0 ? void 0 : (_bodyRef$current2 = bodyRef.current) === null || _bodyRef$current2 === void 0 ? void 0 : _bodyRef$current2.clientWidth;\n  const [dateRangeFilters, setDateRangeFilters] = useState({\n    from: null,\n    to: null\n  });\n\n  const onNameChange = _.debounce(e => {\n    setQuery(e.target.value);\n  }, 500);\n\n  const isEmptyFrom = dateRangeFilters.from === null;\n  const isEmptyTo = dateRangeFilters.to === null;\n\n  const dateTimeFilters = () => {\n    if (place !== 'custom') {\n      return dateFilters[place];\n    }\n\n    if (isEmptyFrom || isEmptyTo) {\n      return {};\n    }\n\n    return customDateFilters(dateRangeFilters.from, dateRangeFilters.to);\n  };\n\n  const filters = { ...dateTimeFilters(),\n    ...getQueryFilters(query),\n    ...(skuIds ? {\n      skuIds\n    } : {}),\n    ...{\n      orderValue\n    }\n  };\n  const [customers, loadMore, hasMore,,, getCustomerAddress] = useCustomersList(filters);\n  const rowCount = hasMore ? 10000 : customers.length;\n\n  const trackCheckedIds = id => {\n    const cpy = [...new Set(checkedIds)];\n\n    if (checkedIds.includes(id)) {\n      const items = cpy.splice(checkedIds.indexOf(id), 1);\n      setCheckedId(items);\n      return;\n    }\n\n    cpy.push(id);\n    setCheckedId(cpy);\n  };\n\n  const handleBulkMail = () => {\n    if (!isCustomerCampaignEnabled) {\n      openPlans();\n      return;\n    }\n\n    if (checkedIds.length === 0) {\n      SnackBar.showError('Please select atleast one customer');\n      return;\n    }\n\n    const emails = [...new Set(checkedIds.map(x => {\n      const item = customers.find((y, i) => x === i);\n      return item.email;\n    }))];\n    const url = `mailto:${emails.join(',')}`;\n    window.open(url, '_blank');\n  };\n\n  const rendercustomers = userDetails => /*#__PURE__*/React.createElement(UserDetailsCard, {\n    details: customers[userDetails.index],\n    index: userDetails.index,\n    trackCheckedIds: trackCheckedIds,\n    getAddressReq: getCustomerAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  });\n\n  const isLoaded = i => !!customers[i];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, isDesktop && /*#__PURE__*/React.createElement(DesktopHeader, {\n    title: \"Customer List\",\n    onBack: history.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }), !isDesktop && /*#__PURE__*/React.createElement(Header, {\n    showFaq: false,\n    title: \"Customer List\",\n    onBack: history.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), customers.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.sendMailDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.helperText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Select multiple customer to send bulk Emails\"), /*#__PURE__*/React.createElement(Button, {\n    startIcon: WhiteMail,\n    label: \"Send Bulk Email\",\n    onClick: handleBulkMail,\n    bordered: false,\n    fullWidth: true,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.picker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Picker, {\n    label: getText(dateRangeFilters),\n    onSelect: e => {\n      setDateRangeFilters(e);\n      params.set('placed', 'custom');\n      history.push({\n        search: params.toString()\n      });\n    },\n    inputStyle: styles.padd0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Filters, {\n    setSkuIds: setSkuIds,\n    setOrderValue: setOrderValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.paddLR,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    placeholder: \"Search by customer name\",\n    onChange: onNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    ref: bodyRef,\n    className: styles.chatContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, customers.length > 0 ? /*#__PURE__*/React.createElement(InfiniteLoader, {\n    loadMoreRows: loadMore,\n    isRowLoaded: isLoaded,\n    rowCount: rowCount,\n    minimumBatchSize: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, ({\n    onRowsRendered,\n    registerChild\n  }) => /*#__PURE__*/React.createElement(List, {\n    height: height,\n    onRowsRendered: onRowsRendered,\n    ref: registerChild,\n    rowCount: rowCount,\n    rowHeight: 80,\n    rowRenderer: rendercustomers,\n    width: isDesktop ? width : width - 32,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.emptyOrders,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: emptyOrder,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.emptyProductText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, \"You haven't received any orders yet!\"))));\n}\n\n_s(CustomerList, \"2uekj3PjdVB4lkRQVBr0UZh3EgM=\", false, function () {\n  return [useQueryParams, useDesktop, useHistory, useIsCustomerCampaignEnabled, useOpenPlans, useCustomersList];\n});\n\n_c = CustomerList;\nexport default CustomerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/customerCampaign/CustomerList.jsx"],"names":["React","useState","useRef","InfiniteLoader","List","Button","useCustomersList","useQueryParams","Header","DesktopHeader","useDesktop","Picker","SnackBar","Search","useHistory","customDateFilters","getText","useOpenPlans","useIsCustomerCampaignEnabled","_","dateFilters","getQueryFilters","Filters","UserDetailsCard","styles","CustomerList","params","checkedIds","setCheckedId","query","setQuery","skuIds","setSkuIds","orderValue","setOrderValue","min","max","place","get","isDesktop","history","bodyRef","isCustomerCampaignEnabled","openPlans","topBar","current","getBoundingClientRect","top","height","window","screen","width","clientWidth","dateRangeFilters","setDateRangeFilters","from","to","onNameChange","debounce","e","target","value","isEmptyFrom","isEmptyTo","dateTimeFilters","filters","customers","loadMore","hasMore","getCustomerAddress","rowCount","length","trackCheckedIds","id","cpy","Set","includes","items","splice","indexOf","push","handleBulkMail","showError","emails","map","x","item","find","y","i","email","url","join","open","rendercustomers","userDetails","index","isLoaded","body","goBack","sendMailDiv","helperText","WhiteMail","picker","set","search","toString","padd0","paddLR","chatContainer","onRowsRendered","registerChild","emptyOrders","emptyOrder","emptyProductText"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { InfiniteLoader, List } from 'react-virtualized';\nimport WhiteMail from 'assets/logos/whitemail.svg';\nimport { Button } from 'phoenix-components';\nimport { useCustomersList, useQueryParams } from 'hooks';\nimport Header from 'components/orders/header/Header';\nimport { Header as DesktopHeader } from 'components/shared/Header';\nimport { useDesktop } from 'contexts';\nimport emptyOrder from 'assets/overview/newOrder.svg';\nimport { Picker } from 'components/shared/dateRangePicker/Picker';\nimport SnackBar from 'services/snackbar';\nimport { Search } from 'phoenix-components';\nimport { useHistory } from 'react-router-dom';\nimport { customDateFilters, getText } from 'containers/utils';\nimport { useOpenPlans } from 'contexts';\nimport {\n  useIsCustomerCampaignEnabled,\n} from 'contexts/userContext';\nimport _ from 'lodash';\nimport { dateFilters, getQueryFilters } from './utils';\nimport Filters from './Filters';\nimport UserDetailsCard from './UserDetailsCard';\nimport styles from './CustomerList.module.css';\n\nfunction CustomerList() {\n  const params = useQueryParams();\n\n  const [checkedIds, setCheckedId] = useState([]);\n  const [query, setQuery] = useState('');\n  const [skuIds, setSkuIds] = useState(null);\n  const [orderValue, setOrderValue] = useState({\n    min: null,\n    max: null,\n  });\n  const place = params.get('placed') || 'all';\n  const isDesktop = useDesktop();\n  const history = useHistory();\n  const bodyRef = useRef();\n  const isCustomerCampaignEnabled = useIsCustomerCampaignEnabled();\n  const openPlans = useOpenPlans(false, 'generic', 'premium');\n  const topBar = bodyRef?.current?.getBoundingClientRect()?.top || 120;\n  const height = window.screen.height - topBar - 75;\n  const width = bodyRef?.current?.clientWidth;\n\n  const [dateRangeFilters, setDateRangeFilters] = useState({\n    from: null,\n    to: null\n  });\n\n  const onNameChange = _.debounce((e) => {\n    setQuery(e.target.value);\n  }, 500);\n\n  const isEmptyFrom = dateRangeFilters.from === null;\n  const isEmptyTo = dateRangeFilters.to === null;\n\n  const dateTimeFilters = () => {\n    if (place !== 'custom') {\n      return dateFilters[place];\n    }\n    if (isEmptyFrom || isEmptyTo) {\n      return {};\n    }\n    return customDateFilters(dateRangeFilters.from, dateRangeFilters.to);\n  };\n\n  const filters = {\n    ...dateTimeFilters(),\n    ...getQueryFilters(query),\n    ...(skuIds ? { skuIds } : {}),\n    ...{ orderValue },\n  };\n  const [customers, loadMore, hasMore, , , getCustomerAddress] = useCustomersList(filters);\n  const rowCount = hasMore ? 10000 : customers.length;\n\n  const trackCheckedIds = (id) => {\n    const cpy = [...new Set(checkedIds)];\n    if (checkedIds.includes(id)) {\n      const items = cpy.splice(checkedIds.indexOf(id), 1);\n      setCheckedId(items);\n      return;\n    }\n    cpy.push(id);\n    setCheckedId(cpy);\n  };\n\n  const handleBulkMail = () => {\n    if (!isCustomerCampaignEnabled) {\n      openPlans();\n      return;\n    }\n    if (checkedIds.length === 0) {\n      SnackBar.showError('Please select atleast one customer');\n      return;\n    }\n    const emails = [...new Set(checkedIds.map(x => {\n      const item = customers.find((y, i) => x === i);\n      return item.email;\n    }))];\n    const url = `mailto:${emails.join(',')}`;\n    window.open(url, '_blank');\n  };\n\n  const rendercustomers = (userDetails) => (\n    <UserDetailsCard\n      details={customers[userDetails.index]}\n      index={userDetails.index}\n      trackCheckedIds={trackCheckedIds}\n      getAddressReq={getCustomerAddress}\n    />\n  );\n\n  const isLoaded = i => !!customers[i];\n\n  return (\n    <div className={styles.body}>\n      {isDesktop && <DesktopHeader title=\"Customer List\" onBack={history.goBack} />}\n      {!isDesktop && (\n        <Header\n          showFaq={false}\n          title=\"Customer List\"\n          onBack={history.goBack}\n        />\n      )}\n      {customers.length > 0 && (\n        <>\n          <div className={styles.sendMailDiv}>\n            <div className={styles.helperText}>\n              Select multiple customer to send bulk Emails\n            </div>\n            <Button\n              startIcon={WhiteMail}\n              label=\"Send Bulk Email\"\n              onClick={handleBulkMail}\n              bordered={false}\n              fullWidth\n              size=\"large\" />\n          </div>\n\n        </>\n      )}\n      <div className={styles.picker}>\n        <Picker\n          label={getText(dateRangeFilters)}\n          onSelect={(e) => {\n            setDateRangeFilters(e);\n            params.set('placed', 'custom');\n            history.push({ search: params.toString() });\n          }}\n          inputStyle={styles.padd0}\n        />\n      </div>\n      <Filters setSkuIds={setSkuIds} setOrderValue={setOrderValue} />\n      <div className={styles.paddLR}>\n        <Search\n          placeholder=\"Search by customer name\"\n          onChange={onNameChange}\n        />\n      </div>\n      <div ref={bodyRef} className={styles.chatContainer}>\n        {customers.length > 0 ? (\n          <InfiniteLoader\n            loadMoreRows={loadMore}\n            isRowLoaded={isLoaded}\n            rowCount={rowCount}\n            minimumBatchSize={10}\n          >\n            {({\n              onRowsRendered,\n              registerChild\n            }) => (\n              <List\n                height={height}\n                onRowsRendered={onRowsRendered}\n                ref={registerChild}\n                rowCount={rowCount}\n                rowHeight={80}\n                rowRenderer={rendercustomers}\n                width={isDesktop ? width : width - 32}\n              />\n            )}\n          </InfiniteLoader>\n        ) : (\n          (\n            <div className={styles.emptyOrders}>\n              <img src={emptyOrder} alt=\"\" />\n              <div className={styles.emptyProductText}>\n                You haven't received any orders yet!\n              </div>\n\n            </div>\n          )\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default CustomerList;\n"]},"metadata":{},"sourceType":"module"}