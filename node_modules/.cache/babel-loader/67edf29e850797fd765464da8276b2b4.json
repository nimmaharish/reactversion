{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { Becca } from \"../api\";\nimport Snackbar from \"../services/snackbar\";\nexport function useAreaConfig(error = true) {\n  _s();\n\n  const [areaConfig, setAreaConfig] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const refresh = useCallback(async () => {\n    try {\n      if (loading) {\n        return;\n      }\n\n      setLoading(true);\n      setAreaConfig(await Becca.getAreaConfig());\n    } catch (e) {\n      if (error) {\n        console.error(e);\n        Snackbar.show('Errror Occured', 'error');\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    refresh();\n  }, [refresh]);\n  return [areaConfig, refresh, loading];\n}\n\n_s(useAreaConfig, \"bAQiFT+MOe86UtVwgrZvh3ePBe4=\");\n\nexport function useChargeConfig(error = true) {\n  _s2();\n\n  const [chargeConfig, setChargeConfig] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const refresh = useCallback(async () => {\n    try {\n      if (loading) {\n        return;\n      }\n\n      setLoading(true);\n      setChargeConfig(await Becca.getChargeConfig());\n    } catch (e) {\n      if (error) {\n        console.error(e);\n        Snackbar.show('Errror Occured', 'error');\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    refresh();\n  }, [refresh]);\n  return [chargeConfig, refresh, loading];\n}\n\n_s2(useChargeConfig, \"lfF8WqCaobsOYkVfTYYit+qCqsM=\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/hooks/areasServed.js"],"names":["useCallback","useEffect","useState","Becca","Snackbar","useAreaConfig","error","areaConfig","setAreaConfig","loading","setLoading","refresh","getAreaConfig","e","console","show","useChargeConfig","chargeConfig","setChargeConfig","getChargeConfig"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,KAAT;AACA,OAAOC,QAAP;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAK,GAAG,IAA/B,EAAqC;AAAA;;AAC1C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMS,OAAO,GAAGX,WAAW,CAAC,YAAY;AACtC,QAAI;AACF,UAAIS,OAAJ,EAAa;AACX;AACD;;AACDC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,MAAAA,aAAa,CAAC,MAAML,KAAK,CAACS,aAAN,EAAP,CAAb;AACD,KAND,CAME,OAAOC,CAAP,EAAU;AACV,UAAIP,KAAJ,EAAW;AACTQ,QAAAA,OAAO,CAACR,KAAR,CAAcO,CAAd;AACAT,QAAAA,QAAQ,CAACW,IAAT,CAAc,gBAAd,EAAgC,OAAhC;AACD;AACF,KAXD,SAWU;AACRL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAf0B,EAexB,EAfwB,CAA3B;AAiBAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO;AACR,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,SAAO,CAACJ,UAAD,EAAaI,OAAb,EAAsBF,OAAtB,CAAP;AACD;;GAzBeJ,a;;AA2BhB,OAAO,SAASW,eAAT,CAAyBV,KAAK,GAAG,IAAjC,EAAuC;AAAA;;AAC5C,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMS,OAAO,GAAGX,WAAW,CAAC,YAAY;AACtC,QAAI;AACF,UAAIS,OAAJ,EAAa;AACX;AACD;;AACDC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAQ,MAAAA,eAAe,CAAC,MAAMf,KAAK,CAACgB,eAAN,EAAP,CAAf;AACD,KAND,CAME,OAAON,CAAP,EAAU;AACV,UAAIP,KAAJ,EAAW;AACTQ,QAAAA,OAAO,CAACR,KAAR,CAAcO,CAAd;AACAT,QAAAA,QAAQ,CAACW,IAAT,CAAc,gBAAd,EAAgC,OAAhC;AACD;AACF,KAXD,SAWU;AACRL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAf0B,EAexB,EAfwB,CAA3B;AAiBAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO;AACR,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,SAAO,CAACM,YAAD,EAAeN,OAAf,EAAwBF,OAAxB,CAAP;AACD;;IAzBeO,e","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { Becca } from 'api';\nimport Snackbar from 'services/snackbar';\n\nexport function useAreaConfig(error = true) {\n  const [areaConfig, setAreaConfig] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const refresh = useCallback(async () => {\n    try {\n      if (loading) {\n        return;\n      }\n      setLoading(true);\n      setAreaConfig(await Becca.getAreaConfig());\n    } catch (e) {\n      if (error) {\n        console.error(e);\n        Snackbar.show('Errror Occured', 'error');\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    refresh();\n  }, [refresh]);\n\n  return [areaConfig, refresh, loading];\n}\n\nexport function useChargeConfig(error = true) {\n  const [chargeConfig, setChargeConfig] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const refresh = useCallback(async () => {\n    try {\n      if (loading) {\n        return;\n      }\n      setLoading(true);\n      setChargeConfig(await Becca.getChargeConfig());\n    } catch (e) {\n      if (error) {\n        console.error(e);\n        Snackbar.show('Errror Occured', 'error');\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    refresh();\n  }, [refresh]);\n\n  return [chargeConfig, refresh, loading];\n}\n"]},"metadata":{},"sourceType":"module"}