{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/products/UploadProduct.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\n/* eslint-disable react/no-multi-comp */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, ReactInput } from 'phoenix-components';\nimport Snackbar from \"../../services/snackbar\";\nimport uploadPlusIcon from \"../../assets/images/products/create/uploadPlus.svg\";\nimport editIcon from \"../../assets/overview/edit.svg\";\nimport { Drawer } from \"../shared/Drawer\";\nimport { SideDrawer } from \"../shared/SideDrawer\";\nimport { BottomDrawer } from \"../shared/BottomDrawer\";\nimport { FilesUploader } from \"../common/FilesUploader\";\nimport { InputAlert } from \"../shared/InputAlert\";\nimport { FooterButton } from \"../common/FooterButton\";\nimport Header from \"../../containers/products/Header\";\nimport { useDesktop } from \"../../contexts\";\nimport styles from \"./UploadProduct.module.css\";\n\nconst ProductLinkCard = ({\n  products,\n  onClick\n}) => /*#__PURE__*/React.createElement(Card, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.shareEditBtnsContainer,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  onClick: onClick,\n  primary: false,\n  endIcon: editIcon,\n  bordered: false,\n  label: \"Digital Product Link\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.linkCard,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n}, products[0].value));\n\n_c = ProductLinkCard;\n\nconst UploadProductLink = ({\n  onClose,\n  onSave,\n  products\n}) => {\n  _s();\n\n  var _products$0$value, _products$;\n\n  const [link, setLink] = useState((_products$0$value = (_products$ = products[0]) === null || _products$ === void 0 ? void 0 : _products$.value) !== null && _products$0$value !== void 0 ? _products$0$value : '');\n  const isDektop = useDesktop();\n\n  const handleOnChange = value => {\n    setLink(value);\n  };\n\n  if (isDektop) {\n    return /*#__PURE__*/React.createElement(InputAlert, {\n      type: \"text\",\n      title: \"Add Digital Product Link\",\n      label: \"Enter Digital Product Link\",\n      placeholder: \"Product link\",\n      defaultValue: link,\n      onCancel: onClose,\n      onSave: value => {\n        onSave(value);\n        onClose();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(BottomDrawer, {\n    title: \"Add Digital Product Link\",\n    closeButton: true,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ReactInput, {\n    inputClass: styles.productLinkInput,\n    type: \"text\",\n    label: \"Enter Digital Product Link\",\n    placeholder: \"Product link\",\n    value: link,\n    setValue: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FooterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: styles.borderRadiusNone,\n    primary: true,\n    label: \"Save\",\n    size: \"large\",\n    onClick: () => {\n      onSave(link);\n      onClose();\n    },\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(UploadProductLink, \"P7GH//YENVXsK1RW9j7t0KOI3zI=\", false, function () {\n  return [useDesktop];\n});\n\n_c2 = UploadProductLink;\n\nconst UploadForm = ({\n  onUpload,\n  onSave,\n  digitalProducts,\n  eitherIsMandatory\n}) => {\n  _s2();\n\n  const [openProductLinkCard, setOpenProductLinkCard] = useState(false);\n  const [productLinks, setProductLinks] = useState(digitalProducts.filter(product => product.type === 'url'));\n  const [productFiles, setProductFiles] = useState(digitalProducts.filter(product => product.type === 'file'));\n  const isDesktop = useDesktop();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.uploadCardContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.productDetailsText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"ProductDetails\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.uploadCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.uploadLinkContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, productLinks.length > 0 ? /*#__PURE__*/React.createElement(ProductLinkCard, {\n    products: productLinks,\n    onClick: () => setOpenProductLinkCard(!openProductLinkCard),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: styles.uploadLinkBtn,\n    primary: false,\n    startIcon: uploadPlusIcon,\n    label: \"Add Digital Product Link\",\n    onClick: () => setOpenProductLinkCard(!openProductLinkCard),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  })), openProductLinkCard ? /*#__PURE__*/React.createElement(UploadProductLink, {\n    products: productLinks,\n    onClose: () => setOpenProductLinkCard(!openProductLinkCard),\n    onSave: link => {\n      setProductFiles([]);\n      setProductLinks([{\n        type: 'url',\n        value: link\n      }]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }) : ''), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.orDivider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"Or\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.uploadFilesContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.uploadFileText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"Upload a File\"), /*#__PURE__*/React.createElement(FilesUploader, {\n    files: productFiles,\n    accept: \"\",\n    label: \"Upload your file here\",\n    onChange: data => {\n      setProductLinks([]);\n      setProductFiles(data);\n    },\n    isMulti: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, isDesktop ? /*#__PURE__*/React.createElement(Button, {\n    className: styles.borderRadiusNone,\n    primary: true,\n    size: \"large\",\n    label: \"Save\",\n    onClick: () => {\n      if (eitherIsMandatory) {\n        if (productLinks.length === 0 && productFiles.length === 0) {\n          Snackbar.showError('Either of the links should be filled in order to proceed.');\n          return;\n        }\n      }\n\n      onUpload(productLinks.length === 0 ? productFiles : productLinks);\n      onSave();\n    },\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(FooterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: styles.borderRadiusNone,\n    primary: true,\n    size: \"large\",\n    label: \"Save\",\n    onClick: () => {\n      if (eitherIsMandatory) {\n        if (productLinks.length === 0 && productFiles.length === 0) {\n          Snackbar.showError('Either of the links should be filled in order to proceed.');\n          return;\n        }\n      }\n\n      onUpload(productLinks.length === 0 ? productFiles : productLinks);\n      onSave();\n    },\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }))));\n};\n\n_s2(UploadForm, \"pBEZ0AMiiYpiKsiRmNq2ZRqyeuI=\", false, function () {\n  return [useDesktop];\n});\n\n_c3 = UploadForm;\n\nconst UploadProduct = ({\n  onBack,\n  onUpload,\n  onSave,\n  digitalProducts,\n  eitherIsMandatory\n}) => {\n  _s3();\n\n  const [isOpen, setIsOpen] = useState(true);\n  const isDesktop = useDesktop();\n\n  const back = () => {\n    setIsOpen(false);\n    onBack();\n  };\n\n  if (isDesktop) {\n    return /*#__PURE__*/React.createElement(SideDrawer, {\n      isOpen: isOpen,\n      title: \"Upload Product link\",\n      backButton: true,\n      onClose: back,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(UploadForm, {\n      onUpload: onUpload,\n      digitalProducts: digitalProducts,\n      onSave: onSave,\n      eitherIsMandatory: eitherIsMandatory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    open: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    title: \"Upload Product link\",\n    onBack: back,\n    showFaq: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(UploadForm, {\n    onUpload: onUpload,\n    digitalProducts: digitalProducts,\n    onSave: onSave,\n    eitherIsMandatory: eitherIsMandatory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s3(UploadProduct, \"26f7l01g7N0fQPZbzZBlCGmj8Yw=\", false, function () {\n  return [useDesktop];\n});\n\n_c4 = UploadProduct;\nUploadProduct.propTypes = {\n  onBack: PropTypes.func,\n  onUpload: PropTypes.func,\n  onSave: PropTypes.func,\n  digitalProducts: PropTypes.array,\n  eitherIsMandatory: PropTypes.bool\n};\nUploadProduct.defaultProps = {\n  onBack: () => {},\n  onUpload: () => {},\n  onSave: () => {},\n  digitalProducts: [],\n  eitherIsMandatory: false\n};\nUploadForm.propTypes = {\n  onUpload: PropTypes.func,\n  onSave: PropTypes.func,\n  digitalProducts: PropTypes.array,\n  eitherIsMandatory: PropTypes.bool\n};\nUploadForm.defaultProps = {\n  onUpload: () => {},\n  onSave: () => {},\n  digitalProducts: [],\n  eitherIsMandatory: false\n};\nUploadProductLink.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n  products: PropTypes.array.isRequired\n};\nUploadProductLink.defaultProps = {};\nProductLinkCard.propTypes = {\n  products: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired\n};\nProductLinkCard.defaultProps = {};\nexport default UploadProduct;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ProductLinkCard\");\n$RefreshReg$(_c2, \"UploadProductLink\");\n$RefreshReg$(_c3, \"UploadForm\");\n$RefreshReg$(_c4, \"UploadProduct\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/products/UploadProduct.jsx"],"names":["React","useState","PropTypes","Button","Card","ReactInput","Snackbar","Drawer","SideDrawer","BottomDrawer","FilesUploader","InputAlert","FooterButton","Header","useDesktop","styles","ProductLinkCard","products","onClick","shareEditBtnsContainer","editIcon","linkCard","value","UploadProductLink","onClose","onSave","link","setLink","isDektop","handleOnChange","line","productLinkInput","borderRadiusNone","UploadForm","onUpload","digitalProducts","eitherIsMandatory","openProductLinkCard","setOpenProductLinkCard","productLinks","setProductLinks","filter","product","type","productFiles","setProductFiles","isDesktop","uploadCardContainer","productDetailsText","uploadCard","uploadLinkContainer","length","uploadLinkBtn","uploadPlusIcon","orDivider","uploadFilesContainer","uploadFileText","data","showError","UploadProduct","onBack","isOpen","setIsOpen","back","propTypes","func","array","bool","defaultProps","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-multi-comp */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, ReactInput } from 'phoenix-components';\n\nimport Snackbar from 'services/snackbar';\n\nimport uploadPlusIcon from 'assets/images/products/create/uploadPlus.svg';\nimport editIcon from 'assets/overview/edit.svg';\n\nimport { Drawer } from 'components/shared/Drawer';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { BottomDrawer } from 'components/shared/BottomDrawer';\nimport { FilesUploader } from 'components/common/FilesUploader';\nimport { InputAlert } from 'components/shared/InputAlert';\nimport { FooterButton } from 'components/common/FooterButton';\n\nimport Header from 'containers/products/Header';\n\nimport { useDesktop } from 'contexts';\n\nimport styles from './UploadProduct.module.css';\n\nconst ProductLinkCard = ({ products, onClick }) => (\n  <Card>\n    <div className={styles.shareEditBtnsContainer}>\n      <Button onClick={onClick} primary={false} endIcon={editIcon} bordered={false} label=\"Digital Product Link\" />\n    </div>\n    <div className={styles.linkCard}>\n      {products[0].value}\n    </div>\n  </Card>\n);\n\nconst UploadProductLink = ({ onClose, onSave, products }) => {\n  const [link, setLink] = useState(products[0]?.value ?? '');\n  const isDektop = useDesktop();\n\n  const handleOnChange = (value) => {\n    setLink(value);\n  };\n\n  if (isDektop) {\n    return (\n      <InputAlert\n        type=\"text\"\n        title=\"Add Digital Product Link\"\n        label=\"Enter Digital Product Link\"\n        placeholder=\"Product link\"\n        defaultValue={link}\n        onCancel={onClose}\n        onSave={(value) => {\n          onSave(value);\n          onClose();\n        }}\n      />\n    );\n  }\n\n  return (\n    <BottomDrawer\n      title=\"Add Digital Product Link\"\n      closeButton={true}\n      onClose={onClose}>\n      <div className={styles.line} />\n      <ReactInput\n        inputClass={styles.productLinkInput}\n        type=\"text\"\n        label=\"Enter Digital Product Link\"\n        placeholder=\"Product link\"\n        value={link}\n        setValue={handleOnChange}\n      />\n      <FooterButton>\n        <Button\n          className={styles.borderRadiusNone}\n          primary={true}\n          label=\"Save\"\n          size=\"large\"\n          onClick={() => {\n            onSave(link);\n            onClose();\n          }}\n          fullWidth\n        />\n      </FooterButton>\n      {/* </div> */}\n    </BottomDrawer>\n  );\n};\n\nconst UploadForm = ({\n  onUpload, onSave, digitalProducts, eitherIsMandatory\n}) => {\n  const [openProductLinkCard, setOpenProductLinkCard] = useState(false);\n  const [productLinks, setProductLinks] = useState(\n    digitalProducts.filter((product) => product.type === 'url')\n  );\n  const [productFiles, setProductFiles] = useState(\n    digitalProducts.filter((product) => product.type === 'file')\n  );\n\n  const isDesktop = useDesktop();\n\n  return (\n    <div className={styles.uploadCardContainer}>\n      <div>\n        <p className={styles.productDetailsText}>ProductDetails</p>\n        <div className={styles.uploadCard}>\n          <div className={styles.uploadLinkContainer}>\n            {productLinks.length > 0 ? (\n              <ProductLinkCard\n                products={productLinks}\n                onClick={() => setOpenProductLinkCard(!openProductLinkCard)} />\n            )\n              : (\n                <div>\n                  <Button\n                    className={styles.uploadLinkBtn}\n                    primary={false}\n                    startIcon={uploadPlusIcon}\n                    label=\"Add Digital Product Link\"\n                    onClick={() => setOpenProductLinkCard(!openProductLinkCard)}\n                  />\n                </div>\n              )}\n            {openProductLinkCard ? (\n              <UploadProductLink\n                products={productLinks}\n                onClose={() => setOpenProductLinkCard(!openProductLinkCard)}\n                onSave={(link) => {\n                  setProductFiles([]);\n                  setProductLinks([{ type: 'url', value: link }]);\n                }}\n              />\n            ) : ''}\n          </div>\n          <div className={styles.orDivider}>\n            <div />\n            <span>Or</span>\n            <div />\n          </div>\n          <div className={styles.uploadFilesContainer}>\n            <p className={styles.uploadFileText}>Upload a File</p>\n            <FilesUploader\n              files={productFiles}\n              accept=\"\"\n              label=\"Upload your file here\"\n              onChange={(data) => {\n                setProductLinks([]);\n                setProductFiles(data);\n              }}\n              isMulti={false}\n            />\n          </div>\n        </div>\n      </div>\n      <div>\n        {isDesktop ? (\n          <Button\n            className={styles.borderRadiusNone}\n            primary={true}\n            size=\"large\"\n            label=\"Save\"\n            onClick={() => {\n              if (eitherIsMandatory) {\n                if (productLinks.length === 0 && productFiles.length === 0) {\n                  Snackbar.showError('Either of the links should be filled in order to proceed.');\n                  return;\n                }\n              }\n              onUpload(productLinks.length === 0 ? productFiles : productLinks);\n              onSave();\n            }}\n            fullWidth\n          />\n        ) : (\n          <FooterButton>\n            <Button\n              className={styles.borderRadiusNone}\n              primary={true}\n              size=\"large\"\n              label=\"Save\"\n              onClick={() => {\n                if (eitherIsMandatory) {\n                  if (productLinks.length === 0 && productFiles.length === 0) {\n                    Snackbar.showError('Either of the links should be filled in order to proceed.');\n                    return;\n                  }\n                }\n                onUpload(productLinks.length === 0 ? productFiles : productLinks);\n                onSave();\n              }}\n              fullWidth\n            />\n          </FooterButton>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst UploadProduct = ({\n  onBack,\n  onUpload,\n  onSave,\n  digitalProducts,\n  eitherIsMandatory\n}) => {\n  const [isOpen, setIsOpen] = useState(true);\n  const isDesktop = useDesktop();\n\n  const back = () => {\n    setIsOpen(false);\n    onBack();\n  };\n\n  if (isDesktop) {\n    return (\n      <SideDrawer\n        isOpen={isOpen}\n        title=\"Upload Product link\"\n        backButton={true}\n        onClose={back}>\n        <UploadForm\n          onUpload={onUpload}\n          digitalProducts={digitalProducts}\n          onSave={onSave}\n          eitherIsMandatory={eitherIsMandatory}\n        />\n      </SideDrawer>\n    );\n  }\n\n  return (\n    <Drawer open={isOpen}>\n      <Header\n        title=\"Upload Product link\"\n        onBack={back}\n        showFaq={true} />\n      <UploadForm\n        onUpload={onUpload}\n        digitalProducts={digitalProducts}\n        onSave={onSave}\n        eitherIsMandatory={eitherIsMandatory}\n      />\n    </Drawer>\n  );\n};\n\nUploadProduct.propTypes = {\n  onBack: PropTypes.func,\n  onUpload: PropTypes.func,\n  onSave: PropTypes.func,\n  digitalProducts: PropTypes.array,\n  eitherIsMandatory: PropTypes.bool\n};\n\nUploadProduct.defaultProps = {\n  onBack: () => { },\n  onUpload: () => { },\n  onSave: () => { },\n  digitalProducts: [],\n  eitherIsMandatory: false\n};\n\nUploadForm.propTypes = {\n  onUpload: PropTypes.func,\n  onSave: PropTypes.func,\n  digitalProducts: PropTypes.array,\n  eitherIsMandatory: PropTypes.bool\n};\n\nUploadForm.defaultProps = {\n  onUpload: () => { },\n  onSave: () => { },\n  digitalProducts: [],\n  eitherIsMandatory: false\n};\n\nUploadProductLink.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n  products: PropTypes.array.isRequired\n};\n\nUploadProductLink.defaultProps = {};\n\nProductLinkCard.propTypes = {\n  products: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n\nProductLinkCard.defaultProps = {};\n\nexport default UploadProduct;\n"]},"metadata":{},"sourceType":"module"}