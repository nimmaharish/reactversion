{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/sellerProfile/SellerProfile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, createRef } from 'react';\nimport cx from 'classnames';\nimport { useHistory } from 'react-router-dom';\nimport { getCountries } from \"../../utils/countries\";\nimport { FormikInput } from 'phoenix-components';\nimport notVerifiedImage from \"../../assets/images/sellerProfile/notVerified.svg\";\nimport verifiedImage from \"../../assets/images/sellerProfile/verified.svg\";\nimport { Button, ReactInput, Clickable } from 'phoenix-components';\nimport { useShop } from \"../../contexts/userContext\";\nimport * as Yup from 'yup';\nimport { User as UserApi } from \"../../api\";\nimport Header from \"../products/Header\";\nimport { Dialog, DialogContent } from '@material-ui/core';\nimport closeIcon from \"../../assets/images/shippingModes/close.svg\";\nimport whatsappIcon from \"../../assets/images/sellerProfile/whatsapp.svg\";\nimport messageIcon from \"../../assets/images/sellerProfile/sms.svg\";\nimport { BottomDrawer } from \"../../components/shared/BottomDrawer\";\nimport { FooterButton } from \"../../components/common/FooterButton\"; // import { Drawer } from 'components/shared/Drawer';\n\nimport _ from 'lodash';\nimport { Formik } from 'formik';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport SnackBar from \"../../services/snackbar\";\nimport Loader from \"../../services/loader\";\nimport { useUser } from \"../../hooks/user\";\nimport { useDesktop, useUserRefresh } from \"../../contexts\";\nimport { SideDrawer } from \"../../components/shared/SideDrawer\";\nimport { Drawer } from '@material-ui/core';\nimport { getInitialValues, schema } from \"./utils\";\nimport styles from \"./SellerProfile.module.css\";\n\nfunction SellerProfile() {\n  _s();\n\n  const isDesktop = useDesktop();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [verified, setVerified] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const [popUp, setPopUp] = useState(false);\n  const [otp, setOtp] = useState(['', '', '', '', '', '']);\n  const [otpType, setOtpType] = useState('');\n  const [showOtp, setShowOtp] = useState(false);\n  const [originalPhone, setOriginalPhone] = useState('');\n  const {\n    country\n  } = useShop();\n  const history = useHistory();\n  const [result, setResult] = useState(null);\n  const [identifier, setIdentifier] = useState('');\n\n  const refs = _.range(0, 6).map(() => /*#__PURE__*/createRef());\n\n  const [seconds, setSeconds] = useState(0);\n  const [err, setErr] = useState('');\n  const [user, refreshUser] = useUser();\n  const userContextRefresh = useUserRefresh();\n\n  const getLabel = (onlyCode = false) => {\n    const countries = getCountries();\n    const countre = countries.find(x => x.countryName === (country === null || country === void 0 ? void 0 : country.toLowerCase()));\n\n    if (country.length === 0) {\n      return '';\n    }\n\n    if (onlyCode) {\n      return countre.dial;\n    }\n\n    return `${countre.label} (${countre.dial})`;\n  };\n\n  const emailValidation = Yup.object().shape({\n    email: Yup.string().required().email('Please enter a valid email id')\n  });\n\n  const getOnlyNumber = () => {\n    const search = getLabel(true);\n    const replaceWith = '';\n    const pieces = phone.split(search);\n    const resultingString = pieces.join(replaceWith);\n    return resultingString;\n  };\n\n  const submit = async values => {\n    Loader.show();\n\n    try {\n      try {\n        const payload = {\n          firstName,\n          lastName,\n          ...values\n        };\n        await UserApi.updateSeller(payload);\n        refreshUser();\n        userContextRefresh();\n\n        if (!isDesktop) {\n          history.push('/manage');\n        } else {\n          history.goBack();\n        }\n\n        Loader.hide();\n      } catch (e) {\n        var _e$response, _e$response$data;\n\n        Loader.hide();\n        const error = e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message;\n\n        if (error) {\n          if (error.toLowerCase() === 'validation error') {\n            setErr('Number already exists');\n            return;\n          }\n        }\n\n        return;\n      }\n    } catch (e) {\n      Loader.hide();\n    }\n  };\n\n  const genOTP = (type, hideOTPBox = false) => {\n    Loader.show();\n\n    if (type === 'message') {\n      firebase.auth().signInWithPhoneNumber(`${getLabel(true)}${getOnlyNumber()}`, window.recaptchaVerifier).then(confirmationResult => {\n        SnackBar.show('OTP Sent');\n        setResult(confirmationResult);\n\n        if (!hideOTPBox) {\n          setShowOtp(true);\n          setPopUp(false);\n        }\n\n        setSeconds(59);\n        Loader.hide(); // ...\n      }).catch(error => {\n        var _error$response, _error$response$data;\n\n        if (error !== null && error !== void 0 && (_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.message) {\n          var _error$response2, _error$response2$data;\n\n          setErr(error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message);\n        }\n\n        SnackBar.showError(error);\n        Loader.hide(); // Error; SMS not sent\n        // ...\n      });\n      return; // [END auth_phone_signin]\n    }\n\n    UserApi.sendPhoneOTC({\n      type: 'whatsapp',\n      phone: `${getLabel(true)}${getOnlyNumber()}`\n    }).then(x => {\n      setIdentifier((x === null || x === void 0 ? void 0 : x.identifier) || '');\n      setShowOtp(true);\n      setPopUp(false);\n      setSeconds(59);\n      Loader.hide();\n    }).catch(error => {\n      var _error$response3, _error$response3$data;\n\n      if (error !== null && error !== void 0 && (_error$response3 = error.response) !== null && _error$response3 !== void 0 && (_error$response3$data = _error$response3.data) !== null && _error$response3$data !== void 0 && _error$response3$data.message) {\n        var _error$response4, _error$response4$data;\n\n        setErr(error === null || error === void 0 ? void 0 : (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message);\n      }\n\n      Loader.hide();\n      SnackBar.showError(error); // Error; SMS not sent\n      // ...\n    });\n  };\n\n  useEffect(() => {\n    const firebaseConfig = {\n      apiKey: 'AIzaSyCl3t5cIetw8ypSXfaH6DZ9ds5n1-_8Bk4',\n      authDomain: 'windo-beta.firebaseapp.com',\n      projectId: 'windo-beta',\n      storageBucket: 'windo-beta.appspot.com',\n      messagingSenderId: '40104794528',\n      appId: '1:40104794528:web:f70156e6011cab5104ecc5',\n      measurementId: 'G-T82PVXB1QF'\n    };\n\n    if (firebase.apps.length > 0) {\n      firebase.app();\n    } else {\n      firebase.initializeApp(firebaseConfig);\n    }\n\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('sign-in-button', {\n      size: 'invisible'\n    });\n  }, []);\n  useEffect(() => {\n    if (user) {\n      const x = user;\n      setPhone((x === null || x === void 0 ? void 0 : x.phone) || '');\n      setOriginalPhone((x === null || x === void 0 ? void 0 : x.phone) || '');\n      setEmail(x === null || x === void 0 ? void 0 : x.email);\n      setFirstName(x === null || x === void 0 ? void 0 : x.firstName);\n      setLastName(x === null || x === void 0 ? void 0 : x.lastName);\n\n      if (x !== null && x !== void 0 && x.phone && x !== null && x !== void 0 && x.email && x !== null && x !== void 0 && x.firstName && x !== null && x !== void 0 && x.lastName) {\n        setVerified(true);\n      } else {\n        setVerified(false);\n      }\n    }\n  }, [JSON.stringify(user)]);\n  useEffect(() => {\n    if (seconds > 0 && showOtp) {\n      const timeout = setTimeout(() => {\n        setSeconds(seconds - 1);\n      }, 1000);\n      return () => {\n        if (timeout) {\n          clearTimeout(timeout);\n        }\n      };\n    }\n  }, [seconds]);\n\n  const setOtpCh = (e, idx) => {\n    const {\n      value\n    } = e.target;\n\n    if (/^[0-9]{6}$/.test(value)) {\n      e.stopPropagation();\n      e.preventDefault();\n      setOtp([...value]);\n      return;\n    }\n\n    if (idx + 1 < 6 && e.target.value !== '') {\n      var _refs;\n\n      if ((_refs = refs[idx + 1]) !== null && _refs !== void 0 && _refs.current) {\n        refs[idx + 1].current.focus();\n      }\n    }\n\n    [otp[idx]] = e.target.value;\n    setOtp([...otp]);\n  };\n\n  const onKeyDown = idx => e => {\n    if (e.keyCode === 8 && idx > 0) {\n      var _refs2, _refs2$current;\n\n      if ((_refs2 = refs[idx - 1]) !== null && _refs2 !== void 0 && (_refs2$current = _refs2.current) !== null && _refs2$current !== void 0 && _refs2$current.focus) {\n        refs[idx - 1].current.focus();\n\n        if (idx === 5 && otp[idx]) {\n          otp[5] = '';\n          setOtp([...otp]);\n          return;\n        }\n\n        if (otp[idx] === '' || otp[idx] === null) {\n          otp[idx - 1] = '';\n          setOtp([...otp]);\n        }\n      }\n    }\n  };\n\n  const onOtpPaste = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    let value = (e.clipboardData || window.clipboardData).getData('text');\n    value = value.trim();\n\n    if (/^[0-9]{6}$/.test(value)) {\n      setOtp([...value]);\n    }\n  };\n\n  const verifyOtp = async () => {\n    Loader.show();\n    const txPhone = `${getLabel(true)}${getOnlyNumber()}`;\n\n    try {\n      if (otpType === 'message') {\n        const res = await result.confirm(otp.join(''));\n        const idToken = await res.user.getIdToken();\n        const payload = {\n          phone: txPhone,\n          identifier,\n          type: 'phone',\n          token: idToken\n        };\n        const data = await UserApi.validatePhone(payload);\n        setVerified(true);\n        refreshUser();\n        submit();\n\n        if (data) {\n          SnackBar.show('Verified Successfully');\n          setShowOtp(false);\n          setOriginalPhone(txPhone);\n          refreshUser();\n        }\n\n        return;\n      }\n\n      const payload = {\n        phone: txPhone,\n        identifier,\n        type: 'whatsapp',\n        code: otp.join('')\n      };\n      const data = await UserApi.validatePhone(payload);\n      setVerified(true);\n      refreshUser();\n      submit();\n\n      if (data) {\n        SnackBar.show('Verified Successfully');\n        setShowOtp(false);\n      }\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n\n      const error = e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.message;\n\n      if (error) {\n        SnackBar.show(error, 'error');\n        return;\n      }\n\n      SnackBar.show('Something went wrong', 'error');\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const isSameEntered = originalPhone !== getLabel(true) + getOnlyNumber();\n  const showOtpButton = (phone === null || phone === void 0 ? void 0 : phone.length) > 0 && isSameEntered;\n  const buttonLabel = showOtpButton ? 'Send OTP' : 'Update';\n\n  if (isDesktop) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n      enableReinitialize: true,\n      initialValues: getInitialValues({\n        firstName,\n        lastName\n      } || {}),\n      onSubmit: submit,\n      validationSchema: schema,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }\n    }, ({\n      submitForm\n    }) => /*#__PURE__*/React.createElement(SideDrawer, {\n      backButton: true,\n      title: \"Seller Profile\",\n      onClose: () => history.goBack(),\n      onClick: showOtpButton ? () => setPopUp(true) : submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.mainContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.desktopContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: verified ? verifiedImage : notVerifiedImage,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 19\n      }\n    }, \"Verification status:\", /*#__PURE__*/React.createElement(\"span\", {\n      className: verified ? styles.verified : styles.notVerified,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }\n    }, ' ', verified ? 'Verified' : 'Not Verified')), /*#__PURE__*/React.createElement(\"div\", {\n      className: cx(styles.top),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      variant: \"outlined\",\n      name: \"firstName\",\n      type: \"text\",\n      label: \"First Name\",\n      inputProps: {\n        onChange: e => setFirstName(e.target.value)\n      },\n      placeholder: \"Your name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: cx(styles.top),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      variant: \"outlined\",\n      name: \"lastName\",\n      type: \"text\",\n      label: \"Last Name\",\n      inputProps: {\n        onChange: e => setLastName(e.target.value)\n      },\n      placeholder: \"Your name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: cx(styles.top),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ReactInput, {\n      label: \"E-Mail ID\",\n      placeholder: \"Enter Email\",\n      pattern: emailValidation,\n      setValue: e => setEmail(e),\n      readonly: true,\n      value: email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: cx(styles.top),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ReactInput, {\n      startLabelMain: \"Phone\",\n      startLabel: getLabel(),\n      placeholder: \"Phone number\",\n      value: getOnlyNumber(),\n      setValue: e => {\n        setPhone(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.buttonD,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"large\",\n      primary: true,\n      label: buttonLabel,\n      onClick: showOtpButton ? () => setPopUp(true) : submitForm,\n      disabled: otp.length !== 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 19\n      }\n    })), popUp && /*#__PURE__*/React.createElement(Drawer, {\n      anchor: \"bottom\",\n      open: !!popUp,\n      onClose: () => {\n        setPopUp(false);\n      },\n      PaperProps: {\n        classes: {\n          root: styles.paper\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.drawer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: closeIcon,\n      alt: \"\",\n      className: styles.img2,\n      onClick: () => setPopUp(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.title2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 25\n      }\n    }, \"Would you like to receive OTP through Message or Whatsapp\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.icons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.half,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.imgSec,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: messageIcon,\n      alt: \"\",\n      onClick: () => {\n        setOtpType('message');\n        genOTP('message', false);\n        setOtp(['', '', '', '', '', '']);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 29\n      }\n    }, \"SMS\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.half,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.imgSec,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: whatsappIcon,\n      alt: \"\",\n      onClick: () => {\n        setOtpType('whatsapp');\n        genOTP('whatsapp', false);\n        setOtp(['', '', '', '', '', '']);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 29\n      }\n    }, \"Whatsapp\"))))), showOtp && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Drawer, {\n      anchor: \"bottom\",\n      open: !!showOtp,\n      onClose: () => setShowOtp(false),\n      PaperProps: {\n        classes: {\n          root: styles.paper2\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: closeIcon,\n      alt: \"\",\n      className: styles.img2,\n      onClick: () => setShowOtp(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: cx(styles.loginContainer, styles.otpScreen),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.drawerTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 27\n      }\n    }, otpType === 'whatsapp' ? 'Whatsapp OTP' : 'Message OTP'), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.otpText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 27\n      }\n    }, \"Please enter the OTP sent to \\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 29\n      }\n    }, `${getLabel(true)}-${phone.trim()}`)), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.otpContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 27\n      }\n    }, _.range(0, 6).map(i => /*#__PURE__*/React.createElement(\"input\", {\n      ref: refs[i],\n      key: i,\n      autoFocus: i === 0,\n      onChange: e => setOtpCh(e, i),\n      type: \"number\",\n      minLength: 1,\n      maxLength: 1,\n      value: otp[i] || '',\n      onKeyDown: onKeyDown(i),\n      onPaste: onOtpPaste,\n      autoComplete: \"one-time-code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.timerContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 29\n      }\n    }, \"00:\", seconds.toString().padStart(2, '0'))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.resendCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 29\n      }\n    }, \"Didn't receive the OTP?\"), /*#__PURE__*/React.createElement(Clickable, {\n      className: styles.resendCodeButton,\n      onClick: () => {\n        if (seconds > 0) {\n          SnackBar.show(`Wait for ${seconds} seconds before retrying`, 'warning');\n          return;\n        }\n\n        genOTP(otpType === 'whatsapp' ? 'whatsapp' : 'message', true);\n        setOtp(['', '', '', '', '', '']);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 29\n      }\n    }, \"Resend OTP\")), err.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 29\n      }\n    }, err), /*#__PURE__*/React.createElement(Button, {\n      size: \"large\",\n      label: \"Submit\",\n      fullWidth: true,\n      primary: true,\n      disabled: otp.length !== 6,\n      onClick: verifyOtp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 27\n      }\n    })))))))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"sign-in-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.shopSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    onBack: () => history.goBack(),\n    title: \"Seller Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"sign-in-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: getInitialValues({\n      firstName,\n      lastName\n    } || {}),\n    onSubmit: submit,\n    validationSchema: schema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 7\n    }\n  }, ({\n    submitForm\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: verified ? verifiedImage : notVerifiedImage,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 15\n    }\n  }, \"Verification status:\", /*#__PURE__*/React.createElement(\"span\", {\n    className: verified ? styles.verified : styles.notVerified,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 17\n    }\n  }, ' ', verified ? 'Verified' : 'Not Verified')), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.top),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    variant: \"outlined\",\n    name: \"firstName\",\n    type: \"text\",\n    inputProps: {\n      onChange: e => setFirstName(e.target.value)\n    },\n    label: \"First Name\",\n    placeholder: \"Your name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.top),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    variant: \"outlined\",\n    name: \"lastName\",\n    type: \"text\",\n    inputProps: {\n      onChange: e => setLastName(e.target.value)\n    },\n    label: \"Last Name\",\n    placeholder: \"Your name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.top),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ReactInput, {\n    label: \"E-Mail ID\",\n    placeholder: \"Enter Email\",\n    pattern: emailValidation,\n    setValue: e => setEmail(e),\n    readonly: true,\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.top),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ReactInput, {\n    startLabelMain: \"Phone\",\n    startLabel: getLabel(),\n    placeholder: \"Phone number\",\n    value: getOnlyNumber(),\n    setValue: e => {\n      setPhone(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    bordered: false,\n    onClick: showOtpButton ? () => setPopUp(true) : submitForm,\n    size: \"large\",\n    label: buttonLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 15\n    }\n  })))), popUp && /*#__PURE__*/React.createElement(Dialog, {\n    open: true,\n    onClose: () => setPopUp(false),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.drawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: closeIcon,\n    alt: \"\",\n    className: styles.img,\n    onClick: () => setPopUp(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 17\n    }\n  }, \"Would you like to receive OTP through Message or Whatsapp\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.half,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.imgSec,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: messageIcon,\n    alt: \"\",\n    onClick: () => {\n      setOtpType('message');\n      genOTP('message', false);\n      setOtp(['', '', '', '', '', '']);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 21\n    }\n  }, \"SMS\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.half,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.imgSec,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: whatsappIcon,\n    alt: \"\",\n    onClick: () => {\n      setOtpType('whatsapp');\n      genOTP('whatsapp', false);\n      setOtp(['', '', '', '', '', '']);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 21\n    }\n  }, \"Whatsapp\")))))), showOtp && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BottomDrawer, {\n    onClose: () => setShowOtp(false),\n    closeButton: true,\n    title: otpType === 'whatsapp' ? 'Whatsapp OTP' : 'Message OTP',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.loginContainer, styles.otpScreen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.otpText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 15\n    }\n  }, \"Please enter the OTP sent to \\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 17\n    }\n  }, `${getLabel(true)}-${phone.trim()}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.otpContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 15\n    }\n  }, _.range(0, 6).map(i => /*#__PURE__*/React.createElement(\"input\", {\n    ref: refs[i],\n    key: i,\n    autoFocus: i === 0,\n    onChange: e => setOtpCh(e, i),\n    type: \"number\",\n    minLength: 1,\n    maxLength: 1,\n    value: otp[i] || '',\n    onKeyDown: onKeyDown(i),\n    onPaste: onOtpPaste,\n    autoComplete: \"one-time-code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.timerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 17\n    }\n  }, \"00:\", seconds.toString().padStart(2, '0'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.resendCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 17\n    }\n  }, \"Didn't receive the OTP?\"), /*#__PURE__*/React.createElement(Clickable, {\n    className: styles.resendCodeButton,\n    onClick: () => {\n      if (seconds > 0) {\n        SnackBar.show(`Wait for ${seconds} seconds before retrying`, 'warning');\n        return;\n      }\n\n      genOTP(otpType === 'whatsapp' ? 'whatsapp' : 'message', true);\n      setOtp(['', '', '', '', '', '']);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 17\n    }\n  }, \"Resend OTP\")), err.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 17\n    }\n  }, err), /*#__PURE__*/React.createElement(FooterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    label: \"Submit\",\n    fullWidth: true,\n    primary: true,\n    disabled: otp.length !== 6,\n    onClick: verifyOtp,\n    boardered: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 17\n    }\n  }))))));\n}\n\n_s(SellerProfile, \"hemNSZdK75VKsRZJt3BAavy5w/k=\", false, function () {\n  return [useDesktop, useShop, useHistory, useUser, useUserRefresh];\n});\n\n_c = SellerProfile;\nexport default SellerProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"SellerProfile\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/sellerProfile/SellerProfile.jsx"],"names":["React","useEffect","useState","createRef","cx","useHistory","getCountries","FormikInput","Button","ReactInput","Clickable","useShop","Yup","User","UserApi","Header","Dialog","DialogContent","BottomDrawer","FooterButton","_","Formik","firebase","SnackBar","Loader","useUser","useDesktop","useUserRefresh","SideDrawer","Drawer","getInitialValues","schema","styles","SellerProfile","isDesktop","firstName","setFirstName","lastName","setLastName","verified","setVerified","phone","setPhone","email","setEmail","popUp","setPopUp","otp","setOtp","otpType","setOtpType","showOtp","setShowOtp","originalPhone","setOriginalPhone","country","history","result","setResult","identifier","setIdentifier","refs","range","map","seconds","setSeconds","err","setErr","user","refreshUser","userContextRefresh","getLabel","onlyCode","countries","countre","find","x","countryName","toLowerCase","length","dial","label","emailValidation","object","shape","string","required","getOnlyNumber","search","replaceWith","pieces","split","resultingString","join","submit","values","show","payload","updateSeller","push","goBack","hide","e","error","response","data","message","genOTP","type","hideOTPBox","auth","signInWithPhoneNumber","window","recaptchaVerifier","then","confirmationResult","catch","showError","sendPhoneOTC","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","app","initializeApp","RecaptchaVerifier","size","JSON","stringify","timeout","setTimeout","clearTimeout","setOtpCh","idx","value","target","test","stopPropagation","preventDefault","current","focus","onKeyDown","keyCode","onOtpPaste","clipboardData","getData","trim","verifyOtp","txPhone","res","confirm","idToken","getIdToken","token","validatePhone","code","isSameEntered","showOtpButton","buttonLabel","submitForm","mainContainer","desktopContainer","image","verifiedImage","notVerifiedImage","text","notVerified","top","onChange","buttonD","classes","root","paper","drawer","closeIcon","img2","title2","icons","half","imgSec","messageIcon","whatsappIcon","paper2","loginContainer","otpScreen","drawerTitle","otpText","number","otpContainer","i","timerContainer","toString","padStart","resendCode","resendCodeButton","shopSection","button","img","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, createRef } from 'react';\nimport cx from 'classnames';\nimport { useHistory } from 'react-router-dom';\nimport { getCountries } from 'utils/countries';\nimport { FormikInput } from 'phoenix-components';\nimport notVerifiedImage from 'assets/images/sellerProfile/notVerified.svg';\nimport verifiedImage from 'assets/images/sellerProfile/verified.svg';\nimport { Button, ReactInput, Clickable, } from 'phoenix-components';\nimport { useShop } from 'contexts/userContext';\nimport * as Yup from 'yup';\nimport { User as UserApi } from 'api';\nimport Header from 'containers/products/Header';\nimport { Dialog, DialogContent } from '@material-ui/core';\nimport closeIcon from 'assets/images/shippingModes/close.svg';\nimport whatsappIcon from 'assets/images/sellerProfile/whatsapp.svg';\nimport messageIcon from 'assets/images/sellerProfile/sms.svg';\nimport { BottomDrawer } from 'components/shared/BottomDrawer';\nimport { FooterButton } from 'components/common/FooterButton';\n// import { Drawer } from 'components/shared/Drawer';\nimport _ from 'lodash';\nimport { Formik } from 'formik';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport SnackBar from 'services/snackbar';\nimport Loader from 'services/loader';\nimport { useUser } from 'hooks/user';\nimport { useDesktop, useUserRefresh } from 'contexts';\n\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { Drawer } from '@material-ui/core';\nimport { getInitialValues, schema } from './utils';\nimport styles from './SellerProfile.module.css';\n\nfunction SellerProfile() {\n  const isDesktop = useDesktop();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [verified, setVerified] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const [popUp, setPopUp] = useState(false);\n  const [otp, setOtp] = useState(['', '', '', '', '', '']);\n  const [otpType, setOtpType] = useState('');\n  const [showOtp, setShowOtp] = useState(false);\n  const [originalPhone, setOriginalPhone] = useState('');\n  const { country } = useShop();\n  const history = useHistory();\n  const [result, setResult] = useState(null);\n  const [identifier, setIdentifier] = useState('');\n  const refs = _.range(0, 6)\n    .map(() => createRef());\n  const [seconds, setSeconds] = useState(0);\n  const [err, setErr] = useState('');\n\n  const [user, refreshUser] = useUser();\n  const userContextRefresh = useUserRefresh();\n\n  const getLabel = (onlyCode = false) => {\n    const countries = getCountries();\n    const countre = countries.find(x => x.countryName === country?.toLowerCase());\n    if (country.length === 0) {\n      return '';\n    }\n    if (onlyCode) {\n      return countre.dial;\n    }\n    return `${countre.label} (${countre.dial})`;\n  };\n\n  const emailValidation = Yup.object()\n    .shape({\n      email: Yup.string()\n        .required()\n        .email('Please enter a valid email id'),\n    });\n\n  const getOnlyNumber = () => {\n    const search = getLabel(true);\n    const replaceWith = '';\n    const pieces = phone.split(search);\n    const resultingString = pieces.join(replaceWith);\n    return resultingString;\n  };\n\n  const submit = async (values) => {\n    Loader.show();\n    try {\n      try {\n        const payload = { firstName, lastName, ...values };\n        await UserApi.updateSeller(payload);\n        refreshUser();\n        userContextRefresh();\n        if (!isDesktop) {\n          history.push('/manage');\n        } else {\n          history.goBack();\n        }\n        Loader.hide();\n      } catch (e) {\n        Loader.hide();\n        const error = e?.response?.data?.message;\n        if (error) {\n          if (error.toLowerCase() === 'validation error') {\n            setErr('Number already exists');\n            return;\n          }\n        }\n        return;\n      }\n    } catch (e) {\n      Loader.hide();\n    }\n  };\n\n  const genOTP = (type, hideOTPBox = false) => {\n    Loader.show();\n    if (type === 'message') {\n      firebase.auth().signInWithPhoneNumber(`${getLabel(true)}${getOnlyNumber()}`, window.recaptchaVerifier)\n        .then((confirmationResult) => {\n          SnackBar.show('OTP Sent');\n          setResult(confirmationResult);\n          if (!hideOTPBox) {\n            setShowOtp(true);\n            setPopUp(false);\n          }\n          setSeconds(59);\n          Loader.hide();\n          // ...\n        }).catch((error) => {\n          if (error?.response?.data?.message) {\n            setErr(error?.response?.data?.message);\n          }\n          SnackBar.showError(error);\n          Loader.hide();\n          // Error; SMS not sent\n          // ...\n        });\n      return;\n      // [END auth_phone_signin]\n    }\n    UserApi.sendPhoneOTC({ type: 'whatsapp', phone: `${getLabel(true)}${getOnlyNumber()}` })\n      .then((x) => {\n        setIdentifier(x?.identifier || '');\n        setShowOtp(true);\n        setPopUp(false);\n        setSeconds(59);\n        Loader.hide();\n      })\n      .catch((error) => {\n        if (error?.response?.data?.message) {\n          setErr(error?.response?.data?.message);\n        }\n        Loader.hide();\n        SnackBar.showError(error);\n        // Error; SMS not sent\n        // ...\n      });\n  };\n\n  useEffect(() => {\n    const firebaseConfig = {\n      apiKey: 'AIzaSyCl3t5cIetw8ypSXfaH6DZ9ds5n1-_8Bk4',\n      authDomain: 'windo-beta.firebaseapp.com',\n      projectId: 'windo-beta',\n      storageBucket: 'windo-beta.appspot.com',\n      messagingSenderId: '40104794528',\n      appId: '1:40104794528:web:f70156e6011cab5104ecc5',\n      measurementId: 'G-T82PVXB1QF'\n    };\n    if (firebase.apps.length > 0) {\n      firebase.app();\n    } else {\n      firebase.initializeApp(firebaseConfig);\n    }\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('sign-in-button', {\n      size: 'invisible',\n    });\n  }, []);\n\n  useEffect(() => {\n    if (user) {\n      const x = user;\n      setPhone(x?.phone || '');\n      setOriginalPhone(x?.phone || '');\n      setEmail(x?.email);\n      setFirstName(x?.firstName);\n      setLastName(x?.lastName);\n      if (x?.phone && x?.email && x?.firstName && x?.lastName) {\n        setVerified(true);\n      } else {\n        setVerified(false);\n      }\n    }\n  }, [JSON.stringify(user)]);\n\n  useEffect(() => {\n    if (seconds > 0 && showOtp) {\n      const timeout = setTimeout(() => {\n        setSeconds(seconds - 1);\n      }, 1000);\n      return () => {\n        if (timeout) {\n          clearTimeout(timeout);\n        }\n      };\n    }\n  }, [seconds]);\n\n  const setOtpCh = (e, idx) => {\n    const { value } = e.target;\n    if (/^[0-9]{6}$/.test(value)) {\n      e.stopPropagation();\n      e.preventDefault();\n      setOtp([...value]);\n      return;\n    }\n    if (idx + 1 < 6 && e.target.value !== '') {\n      if (refs[idx + 1]?.current) {\n        refs[idx + 1].current.focus();\n      }\n    }\n    [otp[idx]] = e.target.value;\n    setOtp([...otp]);\n  };\n\n  const onKeyDown = (idx) => (e) => {\n    if (e.keyCode === 8 && idx > 0) {\n      if (refs[idx - 1]?.current?.focus) {\n        refs[idx - 1].current.focus();\n        if (idx === 5 && otp[idx]) {\n          otp[5] = '';\n          setOtp([...otp]);\n          return;\n        }\n        if (otp[idx] === '' || otp[idx] === null) {\n          otp[idx - 1] = '';\n          setOtp([...otp]);\n        }\n      }\n    }\n  };\n\n  const onOtpPaste = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    let value = (e.clipboardData || window.clipboardData).getData('text');\n    value = value.trim();\n    if (/^[0-9]{6}$/.test(value)) {\n      setOtp([...value]);\n    }\n  };\n\n  const verifyOtp = async () => {\n    Loader.show();\n    const txPhone = `${getLabel(true)}${getOnlyNumber()}`;\n    try {\n      if (otpType === 'message') {\n        const res = await result.confirm(otp.join(''));\n        const idToken = await res.user.getIdToken();\n        const payload = {\n          phone: txPhone,\n          identifier,\n          type: 'phone',\n          token: idToken,\n        };\n        const data = await UserApi.validatePhone(payload);\n        setVerified(true);\n        refreshUser();\n        submit();\n        if (data) {\n          SnackBar.show('Verified Successfully');\n          setShowOtp(false);\n          setOriginalPhone(txPhone);\n          refreshUser();\n        }\n        return;\n      }\n      const payload = {\n        phone: txPhone,\n        identifier,\n        type: 'whatsapp',\n        code: otp.join(''),\n      };\n      const data = await UserApi.validatePhone(payload);\n      setVerified(true);\n      refreshUser();\n      submit();\n      if (data) {\n        SnackBar.show('Verified Successfully');\n        setShowOtp(false);\n      }\n    } catch (e) {\n      const error = e?.response?.data?.message;\n      if (error) {\n        SnackBar.show(error, 'error');\n        return;\n      }\n      SnackBar.show('Something went wrong', 'error');\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const isSameEntered = originalPhone !== (getLabel(true) + getOnlyNumber());\n  const showOtpButton = phone?.length > 0 && isSameEntered;\n  const buttonLabel = showOtpButton ? 'Send OTP' : 'Update';\n\n  if (isDesktop) {\n    return (\n      <>\n        <Formik\n          enableReinitialize={true}\n          initialValues={getInitialValues({ firstName, lastName } || {})}\n          onSubmit={submit}\n          validationSchema={schema}\n        >\n          {({ submitForm }) => (\n            <SideDrawer\n              backButton={true}\n              title=\"Seller Profile\"\n              onClose={() => history.goBack()}\n              onClick={showOtpButton ? () => setPopUp(true) : submitForm}\n            >\n              <div className={styles.mainContainer}>\n                <div className={styles.desktopContainer}>\n                  <div className={styles.image}>\n                    <img src={verified ? verifiedImage : notVerifiedImage} alt=\"\" />\n                  </div>\n                  <div className={styles.text}>\n                    Verification status:\n                    <span className={verified ? styles.verified : styles.notVerified}>\n                      {' '}\n                      {verified ? 'Verified' : 'Not Verified'}\n                    </span>\n                  </div>\n                  <div className={cx(styles.top)}>\n                    <FormikInput\n                      variant=\"outlined\"\n                      name=\"firstName\"\n                      type=\"text\"\n                      label=\"First Name\"\n                      inputProps={{\n                        onChange: (e) => setFirstName(e.target.value)\n                      }}\n                      placeholder=\"Your name\" />\n                  </div>\n                  <div className={cx(styles.top)}>\n                    <FormikInput\n                      variant=\"outlined\"\n                      name=\"lastName\"\n                      type=\"text\"\n                      label=\"Last Name\"\n                      inputProps={{\n                        onChange: (e) => setLastName(e.target.value)\n                      }}\n                      placeholder=\"Your name\" />\n                  </div>\n                  <div className={cx(styles.top)}>\n                    <ReactInput\n                      label=\"E-Mail ID\"\n                      placeholder=\"Enter Email\"\n                      pattern={emailValidation}\n                      setValue={e => setEmail(e)}\n                      readonly={true}\n                      value={email}\n                    />\n                  </div>\n                  <div className={cx(styles.top)}>\n                    <ReactInput\n                      startLabelMain=\"Phone\"\n                      startLabel={getLabel()}\n                      placeholder=\"Phone number\"\n                      value={getOnlyNumber()}\n                      setValue={(e) => {\n                        setPhone(e);\n                      }}\n                    />\n                  </div>\n                </div>\n                <div className={styles.buttonD}>\n                  <Button\n                    size=\"large\"\n                    primary={true}\n                    label={buttonLabel}\n                    onClick={showOtpButton ? () => setPopUp(true) : submitForm}\n                    disabled={otp.length !== 6}\n                  />\n                </div>\n                {\n                  popUp && (\n                    <Drawer\n                      anchor=\"bottom\"\n                      open={!!popUp}\n                      onClose={() => {\n                        setPopUp(false);\n                      }}\n                      PaperProps={{\n                        classes: {\n                          root: styles.paper,\n                        }\n                      }}\n                    >\n                      <div className={styles.drawer}>\n                        <img src={closeIcon} alt=\"\" className={styles.img2} onClick={() => setPopUp(false)} />\n                        <div className={styles.title2}>\n                          Would you like to receive OTP through Message or Whatsapp\n                        </div>\n                        <div className={styles.icons}>\n                          <div className={styles.half}>\n                            <div className={styles.imgSec}>\n                              <img\n                                src={messageIcon}\n                                alt=\"\"\n                                onClick={() => {\n                                  setOtpType('message');\n                                  genOTP('message', false);\n                                  setOtp(['', '', '', '', '', '']);\n                                }}\n                              />\n                            </div>\n                            <div className={styles.label}>SMS</div>\n                          </div>\n                          <div className={styles.half}>\n                            <div className={styles.imgSec}>\n                              <img\n                                src={whatsappIcon}\n                                alt=\"\"\n                                onClick={() => {\n                                  setOtpType('whatsapp');\n                                  genOTP('whatsapp', false);\n                                  setOtp(['', '', '', '', '', '']);\n                                }}\n                              />\n                            </div>\n                            <div className={styles.label}>Whatsapp</div>\n                          </div>\n                        </div>\n                      </div>\n                    </Drawer>\n                  )\n                }\n                {showOtp && (\n                  <>\n                    <Drawer\n                      anchor=\"bottom\"\n                      open={!!showOtp}\n                      onClose={() => setShowOtp(false)}\n                      PaperProps={{\n                        classes: {\n                          root: styles.paper2,\n                        }\n                      }}\n                    >\n                      <div>\n                        <img src={closeIcon} alt=\"\" className={styles.img2} onClick={() => setShowOtp(false)} />\n                        <div className={cx(styles.loginContainer, styles.otpScreen)}>\n                          <div className={styles.drawerTitle}>\n                            {otpType === 'whatsapp' ? 'Whatsapp OTP' : 'Message OTP'}\n                          </div>\n                          <div className={styles.otpText}>\n                            Please enter the OTP sent to\n                            &nbsp;\n                            <span className={styles.number}>{`${getLabel(true)}-${phone.trim()}`}</span>\n                          </div>\n                          <div className={styles.otpContainer}>\n                            {_.range(0, 6)\n                              .map((i) => (\n                                <input\n                                  ref={refs[i]}\n                                  key={i}\n                                  autoFocus={i === 0}\n                                  onChange={(e) => setOtpCh(e, i)}\n                                  type=\"number\"\n                                  minLength={1}\n                                  maxLength={1}\n                                  value={otp[i] || ''}\n                                  onKeyDown={onKeyDown(i)}\n                                  onPaste={onOtpPaste}\n                                  autoComplete=\"one-time-code\"\n                                />\n                              ))}\n                          </div>\n                          <div className={styles.timerContainer}>\n                            <div>\n                              00:\n                              {seconds.toString()\n                                .padStart(2, '0')}\n                            </div>\n                          </div>\n                          <div className={styles.resendCode}>\n                            <div>Didn't receive the OTP?</div>\n                            <Clickable\n                              className={styles.resendCodeButton}\n                              onClick={() => {\n                                if (seconds > 0) {\n                                  SnackBar.show(`Wait for ${seconds} seconds before retrying`, 'warning');\n                                  return;\n                                }\n                                genOTP(otpType === 'whatsapp' ? 'whatsapp' : 'message', true);\n                                setOtp(['', '', '', '', '', '']);\n                              }}\n                            >\n                              Resend OTP\n                            </Clickable>\n                          </div>\n                          {err.length > 0 && (\n                            <div className={styles.error}>\n                              {err}\n                            </div>\n                          )}\n                          <Button\n                            size=\"large\"\n                            label=\"Submit\"\n                            fullWidth\n                            primary={true}\n                            disabled={otp.length !== 6}\n                            onClick={verifyOtp}\n                          />\n                        </div>\n                      </div>\n                    </Drawer>\n                  </>\n                )}\n              </div>\n            </SideDrawer>\n          )}\n        </Formik>\n        <div id=\"sign-in-button\" />\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.shopSection}>\n      <Header onBack={() => history.goBack()} title=\"Seller Profile\" />\n      <div id=\"sign-in-button\" />\n      <Formik\n        enableReinitialize={true}\n        initialValues={getInitialValues({ firstName, lastName } || {})}\n        onSubmit={submit}\n        validationSchema={schema}\n      >\n        {({ submitForm }) => (\n          <>\n            <div className={styles.mainContainer}>\n              <div className={styles.image}>\n                <img src={verified ? verifiedImage : notVerifiedImage} alt=\"\" />\n              </div>\n              <div className={styles.text}>\n                Verification status:\n                <span className={verified ? styles.verified : styles.notVerified}>\n                  {' '}\n                  {verified ? 'Verified' : 'Not Verified'}\n                </span>\n              </div>\n              <div className={cx(styles.top)}>\n                <FormikInput\n                  variant=\"outlined\"\n                  name=\"firstName\"\n                  type=\"text\"\n                  inputProps={{\n                    onChange: (e) => setFirstName(e.target.value)\n                  }}\n                  label=\"First Name\"\n                  placeholder=\"Your name\" />\n              </div>\n              <div className={cx(styles.top)}>\n                <FormikInput\n                  variant=\"outlined\"\n                  name=\"lastName\"\n                  type=\"text\"\n                  inputProps={{\n                    onChange: (e) => setLastName(e.target.value)\n                  }}\n                  label=\"Last Name\"\n                  placeholder=\"Your name\" />\n              </div>\n              <div className={cx(styles.top)}>\n                <ReactInput\n                  label=\"E-Mail ID\"\n                  placeholder=\"Enter Email\"\n                  pattern={emailValidation}\n                  setValue={e => setEmail(e)}\n                  readonly={true}\n                  value={email} />\n              </div>\n              <div className={cx(styles.top)}>\n                <ReactInput\n                  startLabelMain=\"Phone\"\n                  startLabel={getLabel()}\n                  placeholder=\"Phone number\"\n                  value={getOnlyNumber()}\n                  setValue={(e) => {\n                    setPhone(e);\n                  }} />\n              </div>\n            </div>\n            <div className={styles.button}>\n              <Button\n                fullWidth\n                bordered={false}\n                onClick={showOtpButton ? () => setPopUp(true) : submitForm}\n                size=\"large\"\n                label={buttonLabel} />\n            </div>\n          </>\n        )}\n      </Formik>\n      {\n        popUp && (\n          <Dialog open={true} onClose={() => setPopUp(false)} fullWidth>\n            <DialogContent>\n              <div className={styles.drawer}>\n                <img src={closeIcon} alt=\"\" className={styles.img} onClick={() => setPopUp(false)} />\n                <div className={styles.title}>\n                  Would you like to receive OTP through Message or Whatsapp\n                </div>\n                <div className={styles.icons}>\n                  <div className={styles.half}>\n                    <div className={styles.imgSec}>\n                      <img\n                        src={messageIcon}\n                        alt=\"\"\n                        onClick={() => {\n                          setOtpType('message');\n                          genOTP('message', false);\n                          setOtp(['', '', '', '', '', '']);\n                        }}\n                      />\n                    </div>\n                    <div className={styles.label}>SMS</div>\n                  </div>\n                  <div className={styles.half}>\n                    <div className={styles.imgSec}>\n                      <img\n                        src={whatsappIcon}\n                        alt=\"\"\n                        onClick={() => {\n                          setOtpType('whatsapp');\n                          genOTP('whatsapp', false);\n                          setOtp(['', '', '', '', '', '']);\n                        }}\n                      />\n                    </div>\n                    <div className={styles.label}>Whatsapp</div>\n                  </div>\n                </div>\n              </div>\n            </DialogContent>\n          </Dialog>\n        )\n      }\n      {showOtp && (\n        <>\n          <BottomDrawer\n            onClose={() => setShowOtp(false)}\n            closeButton\n            title={otpType === 'whatsapp' ? 'Whatsapp OTP' : 'Message OTP'}\n          >\n            <div className={cx(styles.loginContainer, styles.otpScreen)}>\n              <div className={styles.otpText}>\n                Please enter the OTP sent to\n                &nbsp;\n                <span className={styles.number}>{`${getLabel(true)}-${phone.trim()}`}</span>\n              </div>\n              <div className={styles.otpContainer}>\n                {_.range(0, 6)\n                  .map((i) => (\n                    <input\n                      ref={refs[i]}\n                      key={i}\n                      autoFocus={i === 0}\n                      onChange={(e) => setOtpCh(e, i)}\n                      type=\"number\"\n                      minLength={1}\n                      maxLength={1}\n                      value={otp[i] || ''}\n                      onKeyDown={onKeyDown(i)}\n                      onPaste={onOtpPaste}\n                      autoComplete=\"one-time-code\"\n                    />\n                  ))}\n              </div>\n              <div className={styles.timerContainer}>\n                <div>\n                  00:\n                  {seconds.toString()\n                    .padStart(2, '0')}\n                </div>\n              </div>\n              <div className={styles.resendCode}>\n                <div>Didn't receive the OTP?</div>\n                <Clickable\n                  className={styles.resendCodeButton}\n                  onClick={() => {\n                    if (seconds > 0) {\n                      SnackBar.show(`Wait for ${seconds} seconds before retrying`, 'warning');\n                      return;\n                    }\n                    genOTP(otpType === 'whatsapp' ? 'whatsapp' : 'message', true);\n                    setOtp(['', '', '', '', '', '']);\n                  }}\n                >\n                  Resend OTP\n                </Clickable>\n              </div>\n              {err.length > 0 && (\n                <div className={styles.error}>\n                  {err}\n                </div>\n              )}\n              <FooterButton>\n                <Button\n                  size=\"large\"\n                  label=\"Submit\"\n                  fullWidth\n                  primary={true}\n                  disabled={otp.length !== 6}\n                  onClick={verifyOtp}\n                  boardered={false}\n                />\n              </FooterButton>\n            </div>\n          </BottomDrawer>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default SellerProfile;\n"]},"metadata":{},"sourceType":"module"}