{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/payments/Filters.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport cx from 'classnames';\nimport { isEmpty } from 'lodash';\nimport { Button, Drawer } from '@material-ui/core';\nimport { Button as Btn } from 'phoenix-components';\nimport notAppliedIcon from \"../../assets/images/payments/filter.svg\";\nimport appliedIcon from \"../../assets/images/payments/filterSel.svg\";\nimport clearIcon from \"../../assets/images/payments/clear.svg\";\nimport { useHistory } from 'react-router-dom';\nimport { useQueryParams } from \"../../hooks\";\nimport { usePaymentRules } from \"../../contexts/userContext\";\nimport { useDesktop } from \"../../contexts\";\nimport unchecked from \"../../assets/images/payments/unselect.svg\";\nimport checked from \"../../assets/v2/products/checked.svg\";\nimport { SideDrawer } from \"../../components/shared/SideDrawer\";\nimport { psFilterList } from \"./utils\";\nimport styles from \"./Filters.module.css\";\n\nfunction Filters() {\n  _s();\n\n  const [openPm, togglePm] = useState(null);\n  const [openPs, togglePs] = useState(null);\n  const paymentRules = usePaymentRules(true);\n  const history = useHistory();\n  const params = useQueryParams();\n  const isDesktop = useDesktop();\n  const isModeSelected = params.has('pm');\n  const isStatusSelected = params.has('ps'); // intermediate state to push query params on btn click\n\n  const [pmToPush, togglePmToPush] = useState([]);\n  const [psToPush, togglePsToPush] = useState([]);\n\n  const appliedFilters = () => {\n    let pmFilters = [];\n    let psFilters = [];\n\n    if (isModeSelected) {\n      const value = params.get('pm');\n      pmFilters = !isEmpty(value) ? value === null || value === void 0 ? void 0 : value.split(',') : [];\n    }\n\n    const value = params.get('ps');\n    psFilters = !isEmpty(value) ? value === null || value === void 0 ? void 0 : value.split(',') : [];\n    return pmFilters.concat(psFilters);\n  };\n\n  const all = paymentRules.map(x => ({\n    label: x.name,\n    value: x.value\n  }));\n\n  const appliedFilterLabels = value => {\n    const pm = all.find(x => x.value === value);\n\n    if (pm) {\n      return pm.label;\n    }\n\n    const ps = psFilterList.find(x => x.value === value);\n\n    if (ps) {\n      return ps.label;\n    }\n\n    return value;\n  };\n\n  const openPmDrawer = e => {\n    togglePm(e.currentTarget);\n  };\n\n  const closePmDrawer = () => {\n    togglePm(false);\n  };\n\n  const openPsDrawer = e => {\n    togglePs(e.currentTarget);\n  };\n\n  const closePsDrawer = () => {\n    togglePs(false);\n  };\n\n  const clearFilters = () => {\n    params.delete('pm');\n    params.delete('ps');\n    togglePsToPush([]);\n    togglePmToPush([]);\n    history.push({\n      search: params.toString()\n    });\n  };\n\n  const getValues = type => {\n    var _value$split;\n\n    const value = params.get(type);\n    const values = type === 'pm' ? pmToPush : psToPush;\n    const items = (value === null || value === void 0 ? void 0 : (_value$split = value.split(',')) === null || _value$split === void 0 ? void 0 : _value$split.filter(x => x.length > 0)) || values;\n    return items;\n  };\n\n  const removeSelectedFilter = item => {\n    if (isModeSelected) {\n      var _value$split2;\n\n      const value = params.get('pm');\n      const items = (value === null || value === void 0 ? void 0 : (_value$split2 = value.split(',')) === null || _value$split2 === void 0 ? void 0 : _value$split2.filter(x => x !== item && x.length > 0)) || [];\n\n      if (isEmpty(items)) {\n        params.delete('pm');\n      } else {\n        params.set('pm', items);\n      }\n\n      history.push({\n        search: params.toString()\n      });\n      togglePmToPush(items);\n    }\n\n    if (isStatusSelected) {\n      var _value$split3;\n\n      const value = params.get('ps');\n      const items = (value === null || value === void 0 ? void 0 : (_value$split3 = value.split(',')) === null || _value$split3 === void 0 ? void 0 : _value$split3.filter(x => x !== item && x.length > 0)) || [];\n\n      if (isEmpty(items)) {\n        params.delete('ps');\n      } else {\n        params.set('ps', items);\n      }\n\n      togglePsToPush(items);\n    }\n\n    history.push({\n      search: params.toString()\n    });\n  };\n\n  const handleChange = (isSelected, value, mode) => {\n    const selected = getValues(mode);\n\n    if (isSelected) {\n      const items = selected.concat(value);\n\n      if (mode === 'pm') {\n        togglePmToPush(items);\n      }\n\n      togglePsToPush(items);\n    } else {\n      const items = selected.filter(x => x !== value);\n\n      if (mode === 'pm') {\n        togglePmToPush(items);\n      }\n\n      togglePsToPush(items);\n    }\n  };\n\n  const isSelected = (item, mode) => {\n    const value = params.get(mode);\n    const values = mode === 'pm' ? pmToPush : psToPush;\n    const items = (value === null || value === void 0 ? void 0 : value.split(',')) || [];\n    return items.indexOf(item === null || item === void 0 ? void 0 : item.value) > -1 || values.includes(item === null || item === void 0 ? void 0 : item.value);\n  };\n\n  const pmBody = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, !isDesktop && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, \"Payment Mode\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, all.map((x, i) => /*#__PURE__*/React.createElement(\"li\", {\n    className: cx(styles.item, isSelected(x, 'pm') && styles.active),\n    key: i,\n    role: \"presentation\",\n    onClick: () => handleChange(!isSelected(x, 'pm'), x.value, 'pm'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, x.label, /*#__PURE__*/React.createElement(\"img\", {\n    src: isSelected(x, 'pm') ? checked : unchecked,\n    className: styles.icon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  })))), !isDesktop && /*#__PURE__*/React.createElement(Btn, {\n    onClick: () => {\n      if (pmToPush.length === 0) {\n        params.delete('pm');\n      } else {\n        params.set('pm', pmToPush);\n        history.push({\n          search: params.toString()\n        });\n      }\n\n      closePmDrawer();\n    },\n    bordered: false,\n    fullWidth: true,\n    label: \"APPLY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }));\n\n  const psBody = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }, !isDesktop && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, \"Payment Status\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, psFilterList.map((x, i) => /*#__PURE__*/React.createElement(\"li\", {\n    className: cx(styles.item, isSelected(x, 'ps') && styles.active),\n    key: i,\n    role: \"presentation\",\n    onClick: () => handleChange(!isSelected(x, 'ps'), x.value, 'ps'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, x.label, /*#__PURE__*/React.createElement(\"img\", {\n    src: isSelected(x, 'ps') ? checked : unchecked,\n    className: styles.icon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  })))), !isDesktop && /*#__PURE__*/React.createElement(Btn, {\n    onClick: () => {\n      if (psToPush.length === 0) {\n        params.delete('ps');\n      } else {\n        params.set('ps', psToPush);\n        history.push({\n          search: params.toString()\n        });\n      }\n\n      closePsDrawer();\n    },\n    bordered: false,\n    fullWidth: true,\n    label: \"APPLY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }));\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isDesktop && !!openPm && /*#__PURE__*/React.createElement(SideDrawer, {\n    backButton: true,\n    onClick: () => {\n      if (pmToPush.length === 0) {\n        params.delete('pm');\n      } else {\n        params.set('pm', pmToPush);\n        history.push({\n          search: params.toString()\n        });\n      }\n\n      closePmDrawer();\n    },\n    onClose: () => {\n      closePmDrawer();\n    },\n    button: true,\n    btnLabel: \"Apply\",\n    title: \"Payment Mode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, pmBody()), !isDesktop && /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"bottom\",\n    open: !!openPm,\n    onClose: () => {\n      closePmDrawer();\n    },\n    PaperProps: {\n      classes: {\n        root: styles.paper\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }, pmBody()), isDesktop && !!openPs && /*#__PURE__*/React.createElement(SideDrawer, {\n    backButton: true,\n    onClick: () => {\n      if (psToPush.length === 0) {\n        params.delete('ps');\n      } else {\n        params.set('ps', psToPush);\n        history.push({\n          search: params.toString()\n        });\n      }\n\n      closePsDrawer();\n    },\n    onClose: () => {\n      closePsDrawer();\n    },\n    button: true,\n    btnLabel: \"Apply\",\n    title: \"Payment Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }\n  }, psBody()), !isDesktop && /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"bottom\",\n    open: !!openPs,\n    onClose: () => {\n      closePsDrawer();\n    },\n    PaperProps: {\n      classes: {\n        root: styles.paper\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }\n  }, psBody()), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: openPmDrawer,\n    className: cx(styles.button, {\n      [styles.btnActive]: isModeSelected\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }\n  }, \"Payment Mode\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.spacer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: openPsDrawer,\n    className: cx(styles.button, {\n      [styles.btnActive]: isStatusSelected\n    }),\n    endIcon: /*#__PURE__*/React.createElement(\"img\", {\n      src: isStatusSelected ? appliedIcon : notAppliedIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }\n  }, \"Payment Status\")), (isModeSelected || isStatusSelected) && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.appliedSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: clearFilters,\n    className: cx(styles.button, styles.btnActive, styles.widthAuto),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 11\n    }\n  }, \"Clear Filters\"), appliedFilters().map(x => /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => removeSelectedFilter(x),\n    className: cx(styles.button, styles.widthAuto, styles.appliedbtn),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }\n  }, appliedFilterLabels(x), /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.delIcon,\n    src: clearIcon,\n    alt: \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 15\n    }\n  })))));\n}\n\n_s(Filters, \"xXLr8RdhpgaCpu7cRSh1mNX29bI=\", false, function () {\n  return [usePaymentRules, useHistory, useQueryParams, useDesktop];\n});\n\n_c = Filters;\nFilters.defaultProps = {};\nFilters.propTypes = {};\nexport default Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/payments/Filters.jsx"],"names":["React","useState","cx","isEmpty","Button","Drawer","Btn","useHistory","useQueryParams","usePaymentRules","useDesktop","SideDrawer","psFilterList","styles","Filters","openPm","togglePm","openPs","togglePs","paymentRules","history","params","isDesktop","isModeSelected","has","isStatusSelected","pmToPush","togglePmToPush","psToPush","togglePsToPush","appliedFilters","pmFilters","psFilters","value","get","split","concat","all","map","x","label","name","appliedFilterLabels","pm","find","ps","openPmDrawer","e","currentTarget","closePmDrawer","openPsDrawer","closePsDrawer","clearFilters","delete","push","search","toString","getValues","type","values","items","filter","length","removeSelectedFilter","item","set","handleChange","isSelected","mode","selected","indexOf","includes","pmBody","content","list","i","active","checked","unchecked","icon","psBody","classes","root","paper","container","button","btnActive","spacer","appliedIcon","notAppliedIcon","appliedSection","widthAuto","appliedbtn","delIcon","clearIcon","defaultProps","propTypes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport cx from 'classnames';\nimport { isEmpty } from 'lodash';\nimport { Button, Drawer } from '@material-ui/core';\nimport { Button as Btn } from 'phoenix-components';\nimport notAppliedIcon from 'assets/images/payments/filter.svg';\nimport appliedIcon from 'assets/images/payments/filterSel.svg';\nimport clearIcon from 'assets/images/payments/clear.svg';\nimport { useHistory } from 'react-router-dom';\nimport { useQueryParams } from 'hooks';\nimport {\n  usePaymentRules\n} from 'contexts/userContext';\nimport { useDesktop } from 'contexts';\nimport unchecked from 'assets/images/payments/unselect.svg';\nimport checked from 'assets/v2/products/checked.svg';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { psFilterList } from './utils';\nimport styles from './Filters.module.css';\n\nfunction Filters() {\n  const [openPm, togglePm] = useState(null);\n  const [openPs, togglePs] = useState(null);\n  const paymentRules = usePaymentRules(true);\n  const history = useHistory();\n  const params = useQueryParams();\n  const isDesktop = useDesktop();\n  const isModeSelected = params.has('pm');\n  const isStatusSelected = params.has('ps');\n  // intermediate state to push query params on btn click\n  const [pmToPush, togglePmToPush] = useState([]);\n  const [psToPush, togglePsToPush] = useState([]);\n\n  const appliedFilters = () => {\n    let pmFilters = [];\n    let psFilters = [];\n    if (isModeSelected) {\n      const value = params.get('pm');\n      pmFilters = !isEmpty(value) ? value?.split(',') : [];\n    }\n    const value = params.get('ps');\n    psFilters = !isEmpty(value) ? value?.split(',') : [];\n    return pmFilters.concat(psFilters);\n  };\n\n  const all = paymentRules.map(x => ({\n    label: x.name,\n    value: x.value\n  }));\n\n  const appliedFilterLabels = (value) => {\n    const pm = all.find(x => x.value === value);\n    if (pm) {\n      return pm.label;\n    }\n    const ps = psFilterList.find(x => x.value === value);\n    if (ps) {\n      return ps.label;\n    }\n    return value;\n  };\n\n  const openPmDrawer = (e) => {\n    togglePm(e.currentTarget);\n  };\n\n  const closePmDrawer = () => {\n    togglePm(false);\n  };\n\n  const openPsDrawer = (e) => {\n    togglePs(e.currentTarget);\n  };\n\n  const closePsDrawer = () => {\n    togglePs(false);\n  };\n\n  const clearFilters = () => {\n    params.delete('pm');\n    params.delete('ps');\n    togglePsToPush([]);\n    togglePmToPush([]);\n    history.push({\n      search: params.toString(),\n    });\n  };\n\n  const getValues = (type) => {\n    const value = params.get(type);\n    const values = type === 'pm' ? pmToPush : psToPush;\n    const items = value?.split(',')?.filter(x => x.length > 0) || values;\n    return items;\n  };\n\n  const removeSelectedFilter = (item) => {\n    if (isModeSelected) {\n      const value = params.get('pm');\n      const items = value?.split(',')?.filter(x => x !== item && x.length > 0) || [];\n      if (isEmpty(items)) {\n        params.delete('pm');\n      } else {\n        params.set('pm', items);\n      }\n      history.push({\n        search: params.toString(),\n      });\n      togglePmToPush(items);\n    }\n    if (isStatusSelected) {\n      const value = params.get('ps');\n      const items = value?.split(',')?.filter(x => x !== item && x.length > 0) || [];\n      if (isEmpty(items)) {\n        params.delete('ps');\n      } else {\n        params.set('ps', items);\n      }\n      togglePsToPush(items);\n    }\n    history.push({\n      search: params.toString(),\n    });\n  };\n\n  const handleChange = (isSelected, value, mode) => {\n    const selected = getValues(mode);\n    if (isSelected) {\n      const items = selected.concat(value);\n      if (mode === 'pm') {\n        togglePmToPush(items);\n      }\n      togglePsToPush(items);\n    } else {\n      const items = selected.filter(x => x !== value);\n      if (mode === 'pm') {\n        togglePmToPush(items);\n      }\n      togglePsToPush(items);\n    }\n  };\n\n  const isSelected = (item, mode) => {\n    const value = params.get(mode);\n    const values = mode === 'pm' ? pmToPush : psToPush;\n    const items = value?.split(',') || [];\n    return items.indexOf(item?.value) > -1 || values.includes(item?.value);\n  };\n\n  const pmBody = () => (\n    <div className={styles.content}>\n      {!isDesktop && (\n        <div className={styles.label}>\n          <div>\n            Payment Mode\n          </div>\n        </div>\n      )}\n      <ul className={styles.list}>\n        {all.map((x, i) => (\n          <li\n            className={cx(styles.item, isSelected(x, 'pm') && styles.active)}\n            key={i}\n            role=\"presentation\"\n            onClick={() => handleChange(!isSelected(x, 'pm'), x.value, 'pm')}\n          >\n            {x.label}\n            <img src={isSelected(x, 'pm') ? checked : unchecked} className={styles.icon} alt=\"\" />\n          </li>\n        ))}\n      </ul>\n      {!isDesktop && (\n        <Btn\n          onClick={() => {\n            if (pmToPush.length === 0) {\n              params.delete('pm');\n            } else {\n              params.set('pm', pmToPush);\n              history.push({\n                search: params.toString(),\n              });\n            }\n            closePmDrawer();\n          }}\n          bordered={false}\n          fullWidth\n          label=\"APPLY\" />\n      )}\n    </div>\n  );\n\n  const psBody = () => (\n    <div className={styles.content}>\n      {!isDesktop && (\n        <div className={styles.label}>\n          <div>\n            Payment Status\n          </div>\n        </div>\n      )}\n      <ul className={styles.list}>\n        {psFilterList.map((x, i) => (\n          <li\n            className={cx(styles.item, isSelected(x, 'ps') && styles.active)}\n            key={i}\n            role=\"presentation\"\n            onClick={() => handleChange(!isSelected(x, 'ps'), x.value, 'ps')}\n          >\n            {x.label}\n            <img src={isSelected(x, 'ps') ? checked : unchecked} className={styles.icon} alt=\"\" />\n          </li>\n        ))}\n      </ul>\n      {!isDesktop && (\n        <Btn\n          onClick={() => {\n            if (psToPush.length === 0) {\n              params.delete('ps');\n            } else {\n              params.set('ps', psToPush);\n              history.push({\n                search: params.toString(),\n              });\n            }\n            closePsDrawer();\n          }}\n          bordered={false}\n          fullWidth\n          label=\"APPLY\"\n        />\n      )}\n    </div>\n  );\n\n  return (\n    <>\n      {isDesktop && !!openPm && (\n        <SideDrawer\n          backButton={true}\n          onClick={() => {\n            if (pmToPush.length === 0) {\n              params.delete('pm');\n            } else {\n              params.set('pm', pmToPush);\n              history.push({\n                search: params.toString(),\n              });\n            }\n            closePmDrawer();\n          }}\n          onClose={() => {\n            closePmDrawer();\n          }}\n          button={true}\n          btnLabel=\"Apply\"\n          title=\"Payment Mode\"\n        >\n          {pmBody()}\n        </SideDrawer>\n      )}\n      {!isDesktop && (\n        <Drawer\n          anchor=\"bottom\"\n          open={!!openPm}\n          onClose={() => {\n            closePmDrawer();\n          }}\n          PaperProps={{\n            classes: {\n              root: styles.paper,\n            }\n          }}\n        >\n          {pmBody()}\n        </Drawer>\n      )}\n      {isDesktop && !!openPs && (\n        <SideDrawer\n          backButton={true}\n          onClick={() => {\n            if (psToPush.length === 0) {\n              params.delete('ps');\n            } else {\n              params.set('ps', psToPush);\n              history.push({\n                search: params.toString(),\n              });\n            }\n            closePsDrawer();\n          }}\n          onClose={() => {\n            closePsDrawer();\n          }}\n          button={true}\n          btnLabel=\"Apply\"\n          title=\"Payment Status\"\n        >\n          {psBody()}\n        </SideDrawer>\n      )}\n      {!isDesktop && (\n        <Drawer\n          anchor=\"bottom\"\n          open={!!openPs}\n          onClose={() => {\n            closePsDrawer();\n          }}\n          PaperProps={{\n            classes: {\n              root: styles.paper,\n            }\n          }}\n        >\n          {psBody()}\n        </Drawer>\n      )}\n      <div className={styles.container}>\n        <Button\n          onClick={openPmDrawer}\n          className={cx(styles.button, {\n            [styles.btnActive]: isModeSelected\n          })}\n        >\n          Payment Mode\n        </Button>\n        <div className={styles.spacer}></div>\n        <Button\n          onClick={openPsDrawer}\n          className={cx(styles.button, {\n            [styles.btnActive]: isStatusSelected\n          })}\n          endIcon={<img src={isStatusSelected ? appliedIcon : notAppliedIcon} alt=\"\" />}\n        >\n          Payment Status\n        </Button>\n      </div>\n      {(isModeSelected || isStatusSelected) && (\n        <div className={styles.appliedSection}>\n          <div\n            onClick={clearFilters}\n            className={cx(styles.button, styles.btnActive, styles.widthAuto)}\n          >\n            Clear Filters\n          </div>\n          {appliedFilters().map(x => (\n            <div\n              onClick={() => removeSelectedFilter(x)}\n              className={cx(styles.button, styles.widthAuto, styles.appliedbtn)}\n            >\n              {appliedFilterLabels(x)}\n              <img className={styles.delIcon} src={clearIcon} alt=\"delete\" />\n            </div>\n          ))}\n        </div>\n      )}\n    </>\n  );\n}\n\nFilters.defaultProps = {\n};\n\nFilters.propTypes = {\n};\n\nexport default Filters;\n"]},"metadata":{},"sourceType":"module"}