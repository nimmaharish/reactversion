{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/profile/theme/customThemes/Layout.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Loader from \"../../../../services/loader\";\nimport SnackBar from \"../../../../services/snackbar\";\nimport { useLayoutConfig } from \"../../../../hooks/common\";\nimport { Becca } from \"../../../../api\";\nimport { Formik } from 'formik';\nimport { ThemeCard } from \"../../../../components/themes/ThemeCard\";\nimport { Loading } from \"../../../../components/shared/Loading\";\nimport { layoutConfig } from \"./utils\";\nimport styles from \"./Layout.module.css\";\n\nfunction Layout() {\n  _s();\n\n  const [layout, loading, refresh] = useLayoutConfig();\n\n  const submitForm = async values => {\n    try {\n      Loader.show();\n      await Becca.updateUiConfig('layoutConfig', values);\n      refresh();\n      SnackBar.show('layout settings updated successfully', 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: layoutConfig(layout),\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.themesSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, Object.keys(layoutConfig(layout)).map(key => /*#__PURE__*/React.createElement(ThemeCard, {\n    name: key,\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }))));\n}\n\n_s(Layout, \"fjuiyspHt2+3EuecGqV47YIeaKg=\", false, function () {\n  return [useLayoutConfig];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/theme/customThemes/Layout.jsx"],"names":["React","Loader","SnackBar","useLayoutConfig","Becca","Formik","ThemeCard","Loading","layoutConfig","styles","Layout","layout","loading","refresh","submitForm","values","show","updateUiConfig","e","showError","hide","themesSection","Object","keys","map","key"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP;AACA,OAAOC,QAAP;AACA,SAASC,eAAT;AACA,SAASC,KAAT;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,SAAT;AACA,SAASC,OAAT;AACA,SAASC,YAAT;AACA,OAAOC,MAAP;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,OAAT,EAAkBC,OAAlB,IAA6BV,eAAe,EAAlD;;AAEA,QAAMW,UAAU,GAAG,MAAOC,MAAP,IAAkB;AACnC,QAAI;AACFd,MAAAA,MAAM,CAACe,IAAP;AACA,YAAMZ,KAAK,CAACa,cAAN,CAAqB,cAArB,EAAqCF,MAArC,CAAN;AACAF,MAAAA,OAAO;AACPX,MAAAA,QAAQ,CAACc,IAAT,CAAc,sCAAd,EAAsD,SAAtD;AACD,KALD,CAKE,OAAOE,CAAP,EAAU;AACVhB,MAAAA,QAAQ,CAACiB,SAAT,CAAmBD,CAAnB;AACD,KAPD,SAOU;AACRjB,MAAAA,MAAM,CAACmB,IAAP;AACD;AACF,GAXD;;AAaA,MAAIR,OAAJ,EAAa;AACX,wBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAED,sBACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAEJ,YAAY,CAACG,MAAD,CAD7B;AAEE,IAAA,QAAQ,EAAEG,UAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACY,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,IAAP,CAAYf,YAAY,CAACG,MAAD,CAAxB,EAAkCa,GAAlC,CAAsCC,GAAG,iBACxC,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEA,GAAjB;AAAsB,IAAA,GAAG,EAAEA,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAJF,CADF;AAYD;;GAlCQf,M;UAC4BP,e;;;KAD5BO,M;AAoCT,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport Loader from 'services/loader';\nimport SnackBar from 'services/snackbar';\nimport { useLayoutConfig } from 'hooks/common';\nimport { Becca } from 'api';\nimport { Formik } from 'formik';\nimport { ThemeCard } from 'components/themes/ThemeCard';\nimport { Loading } from 'components/shared/Loading';\nimport { layoutConfig } from './utils';\nimport styles from './Layout.module.css';\n\nfunction Layout() {\n  const [layout, loading, refresh] = useLayoutConfig();\n\n  const submitForm = async (values) => {\n    try {\n      Loader.show();\n      await Becca.updateUiConfig('layoutConfig', values);\n      refresh();\n      SnackBar.show('layout settings updated successfully', 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  if (loading) {\n    return (\n      <Loading />\n    );\n  }\n\n  return (\n    <Formik\n      initialValues={layoutConfig(layout)}\n      onSubmit={submitForm}\n    >\n      <div className={styles.themesSection}>\n        {Object.keys(layoutConfig(layout)).map(key => (\n          <ThemeCard name={key} key={key} />\n        ))}\n      </div>\n    </Formik>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}