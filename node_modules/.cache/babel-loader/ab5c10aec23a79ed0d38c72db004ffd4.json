{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useLayoutEffect, useState } from 'react';\nimport WebView from \"../services/webview\";\nexport function useGooglePlaySupported() {\n  _s();\n\n  const [state, setState] = useState(false);\n\n  const setSupported = async () => {\n    try {\n      if (!WebView.isWebView()) {\n        return;\n      }\n\n      const {\n        platform = 'web'\n      } = await WebView.platform();\n\n      if (platform !== 'android') {\n        return;\n      }\n\n      const {\n        result\n      } = await WebView.isFeatureSupported('subscribe');\n\n      if (result) {\n        setState(true);\n      }\n    } catch (e) {// ignore error\n    }\n  };\n\n  useLayoutEffect(() => {\n    setSupported();\n  }, []);\n  return state;\n}\n\n_s(useGooglePlaySupported, \"jghcEGA17oQfiTem+zE2IN5emvk=\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/hooks/webview.js"],"names":["useLayoutEffect","useState","WebView","useGooglePlaySupported","state","setState","setSupported","isWebView","platform","result","isFeatureSupported","e"],"mappings":";;AAAA,SAASA,eAAT,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,OAAP;AAEA,OAAO,SAASC,sBAAT,GAAkC;AAAA;;AACvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMK,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,UAAI,CAACJ,OAAO,CAACK,SAAR,EAAL,EAA0B;AACxB;AACD;;AACD,YAAM;AAAEC,QAAAA,QAAQ,GAAG;AAAb,UAAuB,MAAMN,OAAO,CAACM,QAAR,EAAnC;;AACA,UAAIA,QAAQ,KAAK,SAAjB,EAA4B;AAC1B;AACD;;AACD,YAAM;AAAEC,QAAAA;AAAF,UAAa,MAAMP,OAAO,CAACQ,kBAAR,CAA2B,WAA3B,CAAzB;;AACA,UAAID,MAAJ,EAAY;AACVJ,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,KAZD,CAYE,OAAOM,CAAP,EAAU,CACV;AACD;AACF,GAhBD;;AAkBAX,EAAAA,eAAe,CAAC,MAAM;AACpBM,IAAAA,YAAY;AACb,GAFc,EAEZ,EAFY,CAAf;AAIA,SAAOF,KAAP;AACD;;GA1BeD,sB","sourcesContent":["import { useLayoutEffect, useState } from 'react';\nimport WebView from 'services/webview';\n\nexport function useGooglePlaySupported() {\n  const [state, setState] = useState(false);\n\n  const setSupported = async () => {\n    try {\n      if (!WebView.isWebView()) {\n        return;\n      }\n      const { platform = 'web' } = await WebView.platform();\n      if (platform !== 'android') {\n        return;\n      }\n      const { result } = await WebView.isFeatureSupported('subscribe');\n      if (result) {\n        setState(true);\n      }\n    } catch (e) {\n      // ignore error\n    }\n  };\n\n  useLayoutEffect(() => {\n    setSupported();\n  }, []);\n\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}