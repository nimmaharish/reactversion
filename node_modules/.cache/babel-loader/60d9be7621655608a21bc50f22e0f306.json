{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/orders/v2/StatusDrawer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDesktop } from \"../../../contexts\";\nimport { SideDrawer } from \"../../shared/SideDrawer\";\nimport { BottomDrawer } from \"../../shared/BottomDrawer\";\nimport { Clickable } from 'phoenix-components';\nimport chevRight from \"../../../assets/v2/orders/chevRight.svg\";\nimport cx from 'classnames';\nimport { ItemSelectionDrawer } from \"./ItemSelectionDrawer\";\nimport { OrderStatusDrawer } from \"./OrderStatusDrawer\";\nimport { ShippingStatusDrawer } from \"./ShippingStatusDrawer\";\nimport chevDown from \"../../../assets/v2/orders/chevDown.svg\";\nimport { useOrderItemIds, useOrderItems } from \"../../../contexts/orderContext\";\nimport { PaymentStatusDrawer } from \"./PaymentStatusDrawer\";\nimport styles from \"./StatusDrawer.module.css\";\nconst STATUS_TYPES = [{\n  value: 'order',\n  label: 'Order Status'\n}, {\n  value: 'shipping',\n  label: 'Shipping Status'\n}, {\n  value: 'payment',\n  label: 'Payment Status'\n}];\nexport function StatusDrawer({\n  onClose\n}) {\n  _s();\n\n  const isDesktop = useDesktop();\n  const [statusType, setStatusType] = useState(null);\n  const allItems = useOrderItems();\n  const [items, setItems] = useState([]);\n  const itemIds = useOrderItemIds();\n\n  const onSetStatusType = type => e => {\n    e.stopPropagation();\n    setStatusType(type);\n\n    if (itemIds.length === 1 && statusType !== 'payment') {\n      setItems(allItems.filter(item => item._id === itemIds[0]));\n    }\n  };\n\n  const Component = isDesktop ? SideDrawer : BottomDrawer;\n\n  if (statusType === 'payment') {\n    return /*#__PURE__*/React.createElement(PaymentStatusDrawer, {\n      onClose: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (!items.length && (statusType === 'order' || statusType === 'shipping')) {\n    return /*#__PURE__*/React.createElement(ItemSelectionDrawer, {\n      onSubmit: setItems,\n      onClose: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    });\n  }\n\n  if (statusType === 'order') {\n    return /*#__PURE__*/React.createElement(OrderStatusDrawer, {\n      onClose: onClose,\n      items: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    });\n  }\n\n  if (statusType === 'shipping') {\n    return /*#__PURE__*/React.createElement(ShippingStatusDrawer, {\n      onClose: onClose,\n      items: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, {\n    title: \"Choose Status Type\",\n    backButton: true,\n    onClose: onClose,\n    classes: !isDesktop ? {\n      paper: styles.drawer,\n      heading: styles.bottomDrawerContainer\n    } : {},\n    onClick: isDesktop ? () => {} : undefined,\n    btnLabel: isDesktop ? 'Update' : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, !isDesktop && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.borderBottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, STATUS_TYPES.map(x => /*#__PURE__*/React.createElement(Clickable, {\n    key: x.value,\n    onClick: onSetStatusType(x.value),\n    className: cx(styles.radio),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, x.label), /*#__PURE__*/React.createElement(\"img\", {\n    src: chevRight,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })))), !isDesktop && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    onClick: onClose,\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"UPDATE STATUS\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: chevDown,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }))));\n}\n\n_s(StatusDrawer, \"cQLKK9XImz3Qfy/B8c/O4F49abE=\", false, function () {\n  return [useDesktop, useOrderItems, useOrderItemIds];\n});\n\n_c = StatusDrawer;\nStatusDrawer.propTypes = {\n  onClose: PropTypes.func.isRequired\n};\nStatusDrawer.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"StatusDrawer\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/orders/v2/StatusDrawer.jsx"],"names":["React","useState","PropTypes","useDesktop","SideDrawer","BottomDrawer","Clickable","cx","ItemSelectionDrawer","OrderStatusDrawer","ShippingStatusDrawer","useOrderItemIds","useOrderItems","PaymentStatusDrawer","styles","STATUS_TYPES","value","label","StatusDrawer","onClose","isDesktop","statusType","setStatusType","allItems","items","setItems","itemIds","onSetStatusType","type","e","stopPropagation","length","filter","item","_id","Component","paper","drawer","heading","bottomDrawerContainer","undefined","borderBottom","container","map","x","radio","chevRight","footer","button","chevDown","propTypes","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDesktop } from 'contexts';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { BottomDrawer } from 'components/shared/BottomDrawer';\nimport { Clickable } from 'phoenix-components';\nimport chevRight from 'assets/v2/orders/chevRight.svg';\nimport cx from 'classnames';\nimport { ItemSelectionDrawer } from 'components/orders/v2/ItemSelectionDrawer';\nimport { OrderStatusDrawer } from 'components/orders/v2/OrderStatusDrawer';\nimport { ShippingStatusDrawer } from 'components/orders/v2/ShippingStatusDrawer';\nimport chevDown from 'assets/v2/orders/chevDown.svg';\nimport { useOrderItemIds, useOrderItems } from 'contexts/orderContext';\nimport { PaymentStatusDrawer } from './PaymentStatusDrawer';\nimport styles from './StatusDrawer.module.css';\n\nconst STATUS_TYPES = [\n  {\n    value: 'order',\n    label: 'Order Status'\n  },\n  {\n    value: 'shipping',\n    label: 'Shipping Status'\n  },\n  {\n    value: 'payment',\n    label: 'Payment Status'\n  }\n];\n\nexport function StatusDrawer({ onClose }) {\n  const isDesktop = useDesktop();\n  const [statusType, setStatusType] = useState(null);\n  const allItems = useOrderItems();\n  const [items, setItems] = useState([]);\n  const itemIds = useOrderItemIds();\n\n  const onSetStatusType = (type) => (e) => {\n    e.stopPropagation();\n    setStatusType(type);\n    if (itemIds.length === 1 && statusType !== 'payment') {\n      setItems(allItems.filter(item => item._id === itemIds[0]));\n    }\n  };\n\n  const Component = isDesktop ? SideDrawer : BottomDrawer;\n\n  if (statusType === 'payment') {\n    return <PaymentStatusDrawer onClose={onClose} />;\n  }\n\n  if (!items.length && (statusType === 'order' || statusType === 'shipping')) {\n    return (\n      <ItemSelectionDrawer onSubmit={setItems} onClose={onClose} />\n    );\n  }\n\n  if (statusType === 'order') {\n    return (\n      <OrderStatusDrawer onClose={onClose} items={items} />\n    );\n  }\n\n  if (statusType === 'shipping') {\n    return (\n      <ShippingStatusDrawer onClose={onClose} items={items} />\n    );\n  }\n\n  return (\n    <Component\n      title=\"Choose Status Type\"\n      backButton\n      onClose={onClose}\n      classes={!isDesktop ? {\n        paper: styles.drawer,\n        heading: styles.bottomDrawerContainer,\n      } : {}}\n      onClick={isDesktop ? () => {\n      } : undefined}\n      btnLabel={isDesktop ? 'Update' : undefined}\n    >\n      {!isDesktop && (\n        <div className={styles.borderBottom} />\n      )}\n      <div className={styles.container}>\n        {STATUS_TYPES.map(x => (\n          <Clickable\n            key={x.value}\n            onClick={onSetStatusType(x.value)}\n            className={cx(styles.radio)}\n          >\n            <div>{x.label}</div>\n            <img src={chevRight} alt=\"\" />\n          </Clickable>\n        ))}\n      </div>\n      {!isDesktop && (\n        <div className={styles.footer}>\n          <Clickable onClick={onClose} className={styles.button}>\n            <span>\n              UPDATE STATUS\n            </span>\n            <img src={chevDown} alt=\"\" />\n          </Clickable>\n        </div>\n      )}\n    </Component>\n  );\n}\n\nStatusDrawer.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nStatusDrawer.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}