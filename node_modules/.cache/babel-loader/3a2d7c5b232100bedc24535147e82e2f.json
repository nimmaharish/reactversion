{"ast":null,"code":"(function (root, factory) {\n  'use strict'; // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n  /* istanbul ignore next */\n\n  if (typeof define === 'function' && define.amd) {\n    define('stackframe', [], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.StackFrame = factory();\n  }\n})(this, function () {\n  'use strict';\n\n  function _isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  function StackFrame(functionName, args, fileName, lineNumber, columnNumber, source) {\n    if (functionName !== undefined) {\n      this.setFunctionName(functionName);\n    }\n\n    if (args !== undefined) {\n      this.setArgs(args);\n    }\n\n    if (fileName !== undefined) {\n      this.setFileName(fileName);\n    }\n\n    if (lineNumber !== undefined) {\n      this.setLineNumber(lineNumber);\n    }\n\n    if (columnNumber !== undefined) {\n      this.setColumnNumber(columnNumber);\n    }\n\n    if (source !== undefined) {\n      this.setSource(source);\n    }\n  }\n\n  StackFrame.prototype = {\n    getFunctionName: function () {\n      return this.functionName;\n    },\n    setFunctionName: function (v) {\n      this.functionName = String(v);\n    },\n    getArgs: function () {\n      return this.args;\n    },\n    setArgs: function (v) {\n      if (Object.prototype.toString.call(v) !== '[object Array]') {\n        throw new TypeError('Args must be an Array');\n      }\n\n      this.args = v;\n    },\n    // NOTE: Property name may be misleading as it includes the path,\n    // but it somewhat mirrors V8's JavaScriptStackTraceApi\n    // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's\n    // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14\n    getFileName: function () {\n      return this.fileName;\n    },\n    setFileName: function (v) {\n      this.fileName = String(v);\n    },\n    getLineNumber: function () {\n      return this.lineNumber;\n    },\n    setLineNumber: function (v) {\n      if (!_isNumber(v)) {\n        throw new TypeError('Line Number must be a Number');\n      }\n\n      this.lineNumber = Number(v);\n    },\n    getColumnNumber: function () {\n      return this.columnNumber;\n    },\n    setColumnNumber: function (v) {\n      if (!_isNumber(v)) {\n        throw new TypeError('Column Number must be a Number');\n      }\n\n      this.columnNumber = Number(v);\n    },\n    getSource: function () {\n      return this.source;\n    },\n    setSource: function (v) {\n      this.source = String(v);\n    },\n    toString: function () {\n      var functionName = this.getFunctionName() || '{anonymous}';\n      var args = '(' + (this.getArgs() || []).join(',') + ')';\n      var fileName = this.getFileName() ? '@' + this.getFileName() : '';\n      var lineNumber = _isNumber(this.getLineNumber()) ? ':' + this.getLineNumber() : '';\n      var columnNumber = _isNumber(this.getColumnNumber()) ? ':' + this.getColumnNumber() : '';\n      return functionName + args + fileName + lineNumber + columnNumber;\n    }\n  };\n  return StackFrame;\n});","map":{"version":3,"sources":["/home/harish/windo/phoenix/node_modules/@elastic/apm-rum-core/node_modules/stackframe/stackframe.js"],"names":["root","factory","define","amd","exports","module","StackFrame","_isNumber","n","isNaN","parseFloat","isFinite","functionName","args","fileName","lineNumber","columnNumber","source","undefined","setFunctionName","setArgs","setFileName","setLineNumber","setColumnNumber","setSource","prototype","getFunctionName","v","String","getArgs","Object","toString","call","TypeError","getFileName","getLineNumber","Number","getColumnNumber","getSource","join"],"mappings":"AAAC,WAAUA,IAAV,EAAgBC,OAAhB,EAAyB;AACtB,eADsB,CAEtB;;AAEA;;AACA,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAC5CD,IAAAA,MAAM,CAAC,YAAD,EAAe,EAAf,EAAmBD,OAAnB,CAAN;AACH,GAFD,MAEO,IAAI,OAAOG,OAAP,KAAmB,QAAvB,EAAiC;AACpCC,IAAAA,MAAM,CAACD,OAAP,GAAiBH,OAAO,EAAxB;AACH,GAFM,MAEA;AACHD,IAAAA,IAAI,CAACM,UAAL,GAAkBL,OAAO,EAAzB;AACH;AACJ,CAZA,EAYC,IAZD,EAYO,YAAY;AAChB;;AACA,WAASM,SAAT,CAAmBC,CAAnB,EAAsB;AAClB,WAAO,CAACC,KAAK,CAACC,UAAU,CAACF,CAAD,CAAX,CAAN,IAAyBG,QAAQ,CAACH,CAAD,CAAxC;AACH;;AAED,WAASF,UAAT,CAAoBM,YAApB,EAAkCC,IAAlC,EAAwCC,QAAxC,EAAkDC,UAAlD,EAA8DC,YAA9D,EAA4EC,MAA5E,EAAoF;AAChF,QAAIL,YAAY,KAAKM,SAArB,EAAgC;AAC5B,WAAKC,eAAL,CAAqBP,YAArB;AACH;;AACD,QAAIC,IAAI,KAAKK,SAAb,EAAwB;AACpB,WAAKE,OAAL,CAAaP,IAAb;AACH;;AACD,QAAIC,QAAQ,KAAKI,SAAjB,EAA4B;AACxB,WAAKG,WAAL,CAAiBP,QAAjB;AACH;;AACD,QAAIC,UAAU,KAAKG,SAAnB,EAA8B;AAC1B,WAAKI,aAAL,CAAmBP,UAAnB;AACH;;AACD,QAAIC,YAAY,KAAKE,SAArB,EAAgC;AAC5B,WAAKK,eAAL,CAAqBP,YAArB;AACH;;AACD,QAAIC,MAAM,KAAKC,SAAf,EAA0B;AACtB,WAAKM,SAAL,CAAeP,MAAf;AACH;AACJ;;AAEDX,EAAAA,UAAU,CAACmB,SAAX,GAAuB;AACnBC,IAAAA,eAAe,EAAE,YAAY;AACzB,aAAO,KAAKd,YAAZ;AACH,KAHkB;AAInBO,IAAAA,eAAe,EAAE,UAAUQ,CAAV,EAAa;AAC1B,WAAKf,YAAL,GAAoBgB,MAAM,CAACD,CAAD,CAA1B;AACH,KANkB;AAQnBE,IAAAA,OAAO,EAAE,YAAY;AACjB,aAAO,KAAKhB,IAAZ;AACH,KAVkB;AAWnBO,IAAAA,OAAO,EAAE,UAAUO,CAAV,EAAa;AAClB,UAAIG,MAAM,CAACL,SAAP,CAAiBM,QAAjB,CAA0BC,IAA1B,CAA+BL,CAA/B,MAAsC,gBAA1C,EAA4D;AACxD,cAAM,IAAIM,SAAJ,CAAc,uBAAd,CAAN;AACH;;AACD,WAAKpB,IAAL,GAAYc,CAAZ;AACH,KAhBkB;AAkBnB;AACA;AACA;AACA;AACAO,IAAAA,WAAW,EAAE,YAAY;AACrB,aAAO,KAAKpB,QAAZ;AACH,KAxBkB;AAyBnBO,IAAAA,WAAW,EAAE,UAAUM,CAAV,EAAa;AACtB,WAAKb,QAAL,GAAgBc,MAAM,CAACD,CAAD,CAAtB;AACH,KA3BkB;AA6BnBQ,IAAAA,aAAa,EAAE,YAAY;AACvB,aAAO,KAAKpB,UAAZ;AACH,KA/BkB;AAgCnBO,IAAAA,aAAa,EAAE,UAAUK,CAAV,EAAa;AACxB,UAAI,CAACpB,SAAS,CAACoB,CAAD,CAAd,EAAmB;AACf,cAAM,IAAIM,SAAJ,CAAc,8BAAd,CAAN;AACH;;AACD,WAAKlB,UAAL,GAAkBqB,MAAM,CAACT,CAAD,CAAxB;AACH,KArCkB;AAuCnBU,IAAAA,eAAe,EAAE,YAAY;AACzB,aAAO,KAAKrB,YAAZ;AACH,KAzCkB;AA0CnBO,IAAAA,eAAe,EAAE,UAAUI,CAAV,EAAa;AAC1B,UAAI,CAACpB,SAAS,CAACoB,CAAD,CAAd,EAAmB;AACf,cAAM,IAAIM,SAAJ,CAAc,gCAAd,CAAN;AACH;;AACD,WAAKjB,YAAL,GAAoBoB,MAAM,CAACT,CAAD,CAA1B;AACH,KA/CkB;AAiDnBW,IAAAA,SAAS,EAAE,YAAY;AACnB,aAAO,KAAKrB,MAAZ;AACH,KAnDkB;AAoDnBO,IAAAA,SAAS,EAAE,UAAUG,CAAV,EAAa;AACpB,WAAKV,MAAL,GAAcW,MAAM,CAACD,CAAD,CAApB;AACH,KAtDkB;AAwDnBI,IAAAA,QAAQ,EAAE,YAAW;AACjB,UAAInB,YAAY,GAAG,KAAKc,eAAL,MAA0B,aAA7C;AACA,UAAIb,IAAI,GAAG,MAAM,CAAC,KAAKgB,OAAL,MAAkB,EAAnB,EAAuBU,IAAvB,CAA4B,GAA5B,CAAN,GAAyC,GAApD;AACA,UAAIzB,QAAQ,GAAG,KAAKoB,WAAL,KAAsB,MAAM,KAAKA,WAAL,EAA5B,GAAkD,EAAjE;AACA,UAAInB,UAAU,GAAGR,SAAS,CAAC,KAAK4B,aAAL,EAAD,CAAT,GAAmC,MAAM,KAAKA,aAAL,EAAzC,GAAiE,EAAlF;AACA,UAAInB,YAAY,GAAGT,SAAS,CAAC,KAAK8B,eAAL,EAAD,CAAT,GAAqC,MAAM,KAAKA,eAAL,EAA3C,GAAqE,EAAxF;AACA,aAAOzB,YAAY,GAAGC,IAAf,GAAsBC,QAAtB,GAAiCC,UAAjC,GAA8CC,YAArD;AACH;AA/DkB,GAAvB;AAkEA,SAAOV,UAAP;AACH,CA1GA,CAAD","sourcesContent":["(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function () {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function StackFrame(functionName, args, fileName, lineNumber, columnNumber, source) {\n        if (functionName !== undefined) {\n            this.setFunctionName(functionName);\n        }\n        if (args !== undefined) {\n            this.setArgs(args);\n        }\n        if (fileName !== undefined) {\n            this.setFileName(fileName);\n        }\n        if (lineNumber !== undefined) {\n            this.setLineNumber(lineNumber);\n        }\n        if (columnNumber !== undefined) {\n            this.setColumnNumber(columnNumber);\n        }\n        if (source !== undefined) {\n            this.setSource(source);\n        }\n    }\n\n    StackFrame.prototype = {\n        getFunctionName: function () {\n            return this.functionName;\n        },\n        setFunctionName: function (v) {\n            this.functionName = String(v);\n        },\n\n        getArgs: function () {\n            return this.args;\n        },\n        setArgs: function (v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        // NOTE: Property name may be misleading as it includes the path,\n        // but it somewhat mirrors V8's JavaScriptStackTraceApi\n        // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's\n        // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14\n        getFileName: function () {\n            return this.fileName;\n        },\n        setFileName: function (v) {\n            this.fileName = String(v);\n        },\n\n        getLineNumber: function () {\n            return this.lineNumber;\n        },\n        setLineNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Line Number must be a Number');\n            }\n            this.lineNumber = Number(v);\n        },\n\n        getColumnNumber: function () {\n            return this.columnNumber;\n        },\n        setColumnNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Column Number must be a Number');\n            }\n            this.columnNumber = Number(v);\n        },\n\n        getSource: function () {\n            return this.source;\n        },\n        setSource: function (v) {\n            this.source = String(v);\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    return StackFrame;\n}));\n"]},"metadata":{},"sourceType":"script"}