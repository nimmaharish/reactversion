{"ast":null,"code":"import Loader from \"../services/loader\";\nimport Storage from \"../services/storage\";\nlet counter = 0;\nexport const loaderInterceptor = axios => {\n  axios.interceptors.request.use(config => {\n    if (counter === 0) {\n      Loader.show();\n    }\n\n    counter++;\n    return config;\n  }, error => Promise.reject(error));\n  axios.interceptors.response.use(res => {\n    counter--;\n\n    if (counter === 0) {\n      Loader.hide();\n    }\n\n    return Promise.resolve(res);\n  }, err => {\n    counter--;\n\n    if (counter === 0) {\n      Loader.hide();\n    }\n\n    return Promise.reject(err);\n  });\n};\nexport const authInterceptor = axios => {\n  axios.interceptors.request.use(config => {\n    config.headers.Authorization = Storage.getItem('token');\n    return config;\n  }, error => error);\n  axios.interceptors.response.use(res => res, err => Promise.reject(err));\n};","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/api/interceptors.js"],"names":["Loader","Storage","counter","loaderInterceptor","axios","interceptors","request","use","config","show","error","Promise","reject","response","res","hide","resolve","err","authInterceptor","headers","Authorization","getItem"],"mappings":"AAAA,OAAOA,MAAP;AACA,OAAOC,OAAP;AAEA,IAAIC,OAAO,GAAG,CAAd;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAC1CA,EAAAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,MAAM,IAAI;AACvC,QAAIN,OAAO,KAAK,CAAhB,EAAmB;AACjBF,MAAAA,MAAM,CAACS,IAAP;AACD;;AACDP,IAAAA,OAAO;AACP,WAAOM,MAAP;AACD,GAND,EAMGE,KAAK,IAAIC,OAAO,CAACC,MAAR,CAAeF,KAAf,CANZ;AAQAN,EAAAA,KAAK,CAACC,YAAN,CAAmBQ,QAAnB,CAA4BN,GAA5B,CAAgCO,GAAG,IAAI;AACrCZ,IAAAA,OAAO;;AACP,QAAIA,OAAO,KAAK,CAAhB,EAAmB;AACjBF,MAAAA,MAAM,CAACe,IAAP;AACD;;AACD,WAAOJ,OAAO,CAACK,OAAR,CAAgBF,GAAhB,CAAP;AACD,GAND,EAMGG,GAAG,IAAI;AACRf,IAAAA,OAAO;;AACP,QAAIA,OAAO,KAAK,CAAhB,EAAmB;AACjBF,MAAAA,MAAM,CAACe,IAAP;AACD;;AACD,WAAOJ,OAAO,CAACC,MAAR,CAAeK,GAAf,CAAP;AACD,GAZD;AAaD,CAtBM;AAwBP,OAAO,MAAMC,eAAe,GAAId,KAAD,IAAW;AACxCA,EAAAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,MAAM,IAAI;AACvCA,IAAAA,MAAM,CAACW,OAAP,CAAeC,aAAf,GAA+BnB,OAAO,CAACoB,OAAR,CAAgB,OAAhB,CAA/B;AACA,WAAOb,MAAP;AACD,GAHD,EAGGE,KAAK,IAAIA,KAHZ;AAKAN,EAAAA,KAAK,CAACC,YAAN,CAAmBQ,QAAnB,CAA4BN,GAA5B,CAAgCO,GAAG,IAAIA,GAAvC,EAA4CG,GAAG,IAAIN,OAAO,CAACC,MAAR,CAAeK,GAAf,CAAnD;AACD,CAPM","sourcesContent":["import Loader from 'services/loader';\nimport Storage from 'services/storage';\n\nlet counter = 0;\n\nexport const loaderInterceptor = (axios) => {\n  axios.interceptors.request.use(config => {\n    if (counter === 0) {\n      Loader.show();\n    }\n    counter++;\n    return config;\n  }, error => Promise.reject(error));\n\n  axios.interceptors.response.use(res => {\n    counter--;\n    if (counter === 0) {\n      Loader.hide();\n    }\n    return Promise.resolve(res);\n  }, err => {\n    counter--;\n    if (counter === 0) {\n      Loader.hide();\n    }\n    return Promise.reject(err);\n  });\n};\n\nexport const authInterceptor = (axios) => {\n  axios.interceptors.request.use(config => {\n    config.headers.Authorization = Storage.getItem('token');\n    return config;\n  }, error => error);\n\n  axios.interceptors.response.use(res => res, err => Promise.reject(err));\n};\n"]},"metadata":{},"sourceType":"module"}