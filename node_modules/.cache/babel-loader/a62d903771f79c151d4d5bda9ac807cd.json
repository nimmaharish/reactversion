{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/userProfile/CreateProductDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog, DialogContent } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport { getInitialProductValues, marshallProductData } from \"../posts/utils\";\nimport { productSchema } from \"../posts/schema\";\nimport { CreateProduct } from \"../posts/CreateProduct\";\nimport { Button } from 'phoenix-components';\nimport { Nikon } from \"../../api\";\nimport SnackBar from \"../../services/snackbar\";\nimport { useDesktop } from \"../../contexts\";\nimport { useShop } from \"../../contexts/userContext\";\nimport Loader from \"../../services/loader\";\nimport styles from \"./CreateProductDialog.module.css\";\nexport function CreateProductDialog({\n  onClose,\n  id\n}) {\n  _s();\n\n  const shop = useShop();\n  const isDesktop = useDesktop();\n\n  const onSubmit = async (values, helpers) => {\n    helpers.setSubmitting(true);\n\n    try {\n      Loader.show();\n      const data = marshallProductData(values, shop);\n      await Nikon.createProduct(data, id);\n      SnackBar.show('Product will be created within few minutes', 'success');\n      onClose();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n\n    helpers.setSubmitting(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: true,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: getInitialProductValues({}),\n    validationSchema: productSchema,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, ({\n    submitForm\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CreateProduct, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }), isDesktop ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"Create Product\",\n    onClick: submitForm,\n    className: styles.createProductButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(Button, {\n    label: \"Create Product\",\n    onClick: submitForm,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })))));\n}\n\n_s(CreateProductDialog, \"M1/jqnEyKD1Ta6/2Ft/5EsJbJ3I=\", false, function () {\n  return [useShop, useDesktop];\n});\n\n_c = CreateProductDialog;\nCreateProductDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired\n};\nCreateProductDialog.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProductDialog\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/userProfile/CreateProductDialog.jsx"],"names":["React","PropTypes","Dialog","DialogContent","Formik","getInitialProductValues","marshallProductData","productSchema","CreateProduct","Button","Nikon","SnackBar","useDesktop","useShop","Loader","styles","CreateProductDialog","onClose","id","shop","isDesktop","onSubmit","values","helpers","setSubmitting","show","data","createProduct","e","showError","hide","submitForm","createProductButton","propTypes","func","isRequired","string","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog, DialogContent } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport { getInitialProductValues, marshallProductData } from 'components/posts/utils';\nimport { productSchema } from 'components/posts/schema';\nimport { CreateProduct } from 'components/posts/CreateProduct';\nimport { Button } from 'phoenix-components';\nimport { Nikon } from 'api';\nimport SnackBar from 'services/snackbar';\nimport { useDesktop } from 'contexts';\nimport { useShop } from 'contexts/userContext';\nimport Loader from 'services/loader';\nimport styles from './CreateProductDialog.module.css';\n\nexport function CreateProductDialog({\n  onClose,\n  id\n}) {\n  const shop = useShop();\n  const isDesktop = useDesktop();\n  const onSubmit = async (values, helpers) => {\n    helpers.setSubmitting(true);\n    try {\n      Loader.show();\n      const data = marshallProductData(values, shop);\n      await Nikon.createProduct(data, id);\n      SnackBar.show('Product will be created within few minutes', 'success');\n      onClose();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n    helpers.setSubmitting(false);\n  };\n  return (\n    <Dialog open={true} onClose={onClose}>\n      <DialogContent>\n        <Formik\n          initialValues={getInitialProductValues({})}\n          validationSchema={productSchema}\n          onSubmit={onSubmit}\n        >\n          {({ submitForm }) => (\n            <>\n              <CreateProduct />\n              <br />\n              {isDesktop ? (\n                <div className=\"flexCenter\">\n                  <Button\n                    label=\"Create Product\"\n                    onClick={submitForm}\n                    className={styles.createProductButton}\n                  />\n                </div>\n              ) : (\n                <Button\n                  label=\"Create Product\"\n                  onClick={submitForm}\n                  fullWidth\n                />\n              )}\n            </>\n          )}\n        </Formik>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nCreateProductDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nCreateProductDialog.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}