{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/chat/ChatTile.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useQueryParams } from \"../../hooks\";\nimport Man from \"../../assets/images/chat/man.svg\";\nimport styles from \"./ChatTile.module.css\";\nexport function ChatTile({\n  room,\n  type\n}) {\n  _s();\n\n  const history = useHistory();\n  const params = useQueryParams();\n\n  const onClick = () => {\n    var _room$chat;\n\n    const roomId = type === 'people' ? room === null || room === void 0 ? void 0 : room._id : room === null || room === void 0 ? void 0 : (_room$chat = room.chat) === null || _room$chat === void 0 ? void 0 : _room$chat.roomId;\n\n    if (roomId) {\n      params.set('chat', roomId);\n      history.push({\n        search: params.toString()\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: onClick,\n    className: styles.chatBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: (room === null || room === void 0 ? void 0 : room.picture) || Man,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.center,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.line1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, (room === null || room === void 0 ? void 0 : room.userName) || ''), type === 'order' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.line2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, \"Order id : #\", room.orderId, ' ', \"-\", ' ', room.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.line3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, room.status)))), room.unread > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.unread,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, room.unread)), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(ChatTile, \"yUJTNhqNeuEWbL/TJN+Z8s/HFr4=\", false, function () {\n  return [useHistory, useQueryParams];\n});\n\n_c = ChatTile;\nChatTile.propTypes = {\n  room: PropTypes.object.isRequired,\n  type: PropTypes.string.isRequired\n};\nChatTile.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatTile\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/chat/ChatTile.jsx"],"names":["React","PropTypes","useHistory","useQueryParams","styles","ChatTile","room","type","history","params","onClick","roomId","_id","chat","set","push","search","toString","chatBody","icon","picture","Man","center","line1","userName","line2","orderId","title","line3","status","unread","divider","propTypes","object","isRequired","string","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useQueryParams } from 'hooks';\nimport Man from 'assets/images/chat/man.svg';\nimport styles from './ChatTile.module.css';\n\nexport function ChatTile({ room, type }) {\n  const history = useHistory();\n  const params = useQueryParams();\n\n  const onClick = () => {\n    const roomId = type === 'people' ? room?._id : room?.chat?.roomId;\n    if (roomId) {\n      params.set('chat', roomId);\n      history.push({\n        search: params.toString(),\n      });\n    }\n  };\n\n  return (\n    <>\n      <div onClick={onClick} className={styles.chatBody}>\n        <div className={styles.icon}>\n          <img src={room?.picture || Man} alt=\"\" />\n        </div>\n        <div className={styles.center}>\n          <div className={styles.line1}>\n            {room?.userName || ''}\n          </div>\n          {type === 'order' && (\n            <>\n              <div className={styles.line2}>\n                Order id : #\n                {room.orderId}\n                {' '}\n                -\n                {' '}\n                {room.title}\n              </div>\n              <div className={styles.line3}>\n                <div className={styles.status}>\n                  {room.status}\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n        {room.unread > 0 && <div className={styles.unread}>{room.unread}</div>}\n      </div>\n      <div className={styles.divider} />\n    </>\n  );\n}\n\nChatTile.propTypes = {\n  room: PropTypes.object.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nChatTile.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}