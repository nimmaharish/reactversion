{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/global/TranslateButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { loadTranslator, resetTranslatorBody } from \"../../utils/translate\";\nimport SnackBar from \"../../services/snackbar\";\nimport cookie from 'react-cookies';\nimport { useLanguage } from \"../../contexts\";\nimport _ from 'lodash';\nexport function TranslateButton() {\n  _s();\n\n  const [translator, setTranslator] = useState(null);\n  const lang = useLanguage();\n\n  const translatePage = async () => {\n    try {\n      if (translator) {\n        document.location.reload();\n        return;\n      }\n\n      const exists = cookie.load('googtrans');\n\n      if (!_.isEmpty(exists) && exists !== `/en/${lang}`) {\n        const {\n          host\n        } = window.location;\n        cookie.remove('googtrans', {\n          domain: host.includes('windo.live') ? '.windo.live' : host.includes('mywindo.shop') ? '.mywindo.shop' : 'localhost'\n        });\n      }\n\n      cookie.save('googtrans', `/en/${lang}`, {\n        path: '/'\n      });\n      const Translator = await loadTranslator();\n      const tr = new Translator({\n        pageLanguage: 'en',\n        autoDisplay: false\n      }, 'globalTranslator');\n      setTranslator(tr);\n      resetTranslatorBody();\n    } catch (e) {\n      SnackBar.showError(e);\n    }\n  };\n\n  useEffect(() => {\n    if (lang !== 'en') {\n      translatePage();\n    }\n\n    if (lang === 'en' && translator) {\n      document.location.reload();\n    }\n  }, [lang]);\n\n  if (lang === 'en') {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"globalTranslator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(TranslateButton, \"sO68ir3Do2Z0aN5h2pDJieU6g2M=\", false, function () {\n  return [useLanguage];\n});\n\n_c = TranslateButton;\nTranslateButton.propTypes = {};\nTranslateButton.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"TranslateButton\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/global/TranslateButton.jsx"],"names":["React","useEffect","useState","loadTranslator","resetTranslatorBody","SnackBar","cookie","useLanguage","_","TranslateButton","translator","setTranslator","lang","translatePage","document","location","reload","exists","load","isEmpty","host","window","remove","domain","includes","save","path","Translator","tr","pageLanguage","autoDisplay","e","showError","propTypes","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,EAAyBC,mBAAzB;AACA,OAAOC,QAAP;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,WAAT;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,SAASC,eAAT,GAA2B;AAAA;;AAChC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAMU,IAAI,GAAGL,WAAW,EAAxB;;AAEA,QAAMM,aAAa,GAAG,YAAY;AAChC,QAAI;AACF,UAAIH,UAAJ,EAAgB;AACdI,QAAAA,QAAQ,CAACC,QAAT,CAAkBC,MAAlB;AACA;AACD;;AACD,YAAMC,MAAM,GAAGX,MAAM,CAACY,IAAP,CAAY,WAAZ,CAAf;;AACA,UAAI,CAACV,CAAC,CAACW,OAAF,CAAUF,MAAV,CAAD,IAAsBA,MAAM,KAAM,OAAML,IAAK,EAAjD,EAAoD;AAClD,cAAM;AAAEQ,UAAAA;AAAF,YAAWC,MAAM,CAACN,QAAxB;AACAT,QAAAA,MAAM,CAACgB,MAAP,CAAc,WAAd,EAA2B;AACzBC,UAAAA,MAAM,EAAEH,IAAI,CAACI,QAAL,CAAc,YAAd,IACJ,aADI,GACYJ,IAAI,CAACI,QAAL,CAAc,cAAd,IAAgC,eAAhC,GAAkD;AAF7C,SAA3B;AAID;;AACDlB,MAAAA,MAAM,CAACmB,IAAP,CAAY,WAAZ,EAA0B,OAAMb,IAAK,EAArC,EAAwC;AAAEc,QAAAA,IAAI,EAAE;AAAR,OAAxC;AACA,YAAMC,UAAU,GAAG,MAAMxB,cAAc,EAAvC;AACA,YAAMyB,EAAE,GAAG,IAAID,UAAJ,CAAe;AACxBE,QAAAA,YAAY,EAAE,IADU;AAExBC,QAAAA,WAAW,EAAE;AAFW,OAAf,EAGR,kBAHQ,CAAX;AAIAnB,MAAAA,aAAa,CAACiB,EAAD,CAAb;AACAxB,MAAAA,mBAAmB;AACpB,KArBD,CAqBE,OAAO2B,CAAP,EAAU;AACV1B,MAAAA,QAAQ,CAAC2B,SAAT,CAAmBD,CAAnB;AACD;AACF,GAzBD;;AA2BA9B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,IAAI,KAAK,IAAb,EAAmB;AACjBC,MAAAA,aAAa;AACd;;AACD,QAAID,IAAI,KAAK,IAAT,IAAiBF,UAArB,EAAiC;AAC/BI,MAAAA,QAAQ,CAACC,QAAT,CAAkBC,MAAlB;AACD;AACF,GAPQ,EAON,CAACJ,IAAD,CAPM,CAAT;;AASA,MAAIA,IAAI,KAAK,IAAb,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD;;GAnDeH,e;UAEDF,W;;;KAFCE,e;AAqDhBA,eAAe,CAACwB,SAAhB,GAA4B,EAA5B;AAEAxB,eAAe,CAACyB,YAAhB,GAA+B,EAA/B","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { loadTranslator, resetTranslatorBody } from 'utils/translate';\nimport SnackBar from 'services/snackbar';\nimport cookie from 'react-cookies';\nimport { useLanguage } from 'contexts';\nimport _ from 'lodash';\n\nexport function TranslateButton() {\n  const [translator, setTranslator] = useState(null);\n  const lang = useLanguage();\n\n  const translatePage = async () => {\n    try {\n      if (translator) {\n        document.location.reload();\n        return;\n      }\n      const exists = cookie.load('googtrans');\n      if (!_.isEmpty(exists) && exists !== `/en/${lang}`) {\n        const { host } = window.location;\n        cookie.remove('googtrans', {\n          domain: host.includes('windo.live')\n            ? '.windo.live' : host.includes('mywindo.shop') ? '.mywindo.shop' : 'localhost',\n        });\n      }\n      cookie.save('googtrans', `/en/${lang}`, { path: '/' });\n      const Translator = await loadTranslator();\n      const tr = new Translator({\n        pageLanguage: 'en',\n        autoDisplay: false,\n      }, 'globalTranslator');\n      setTranslator(tr);\n      resetTranslatorBody();\n    } catch (e) {\n      SnackBar.showError(e);\n    }\n  };\n\n  useEffect(() => {\n    if (lang !== 'en') {\n      translatePage();\n    }\n    if (lang === 'en' && translator) {\n      document.location.reload();\n    }\n  }, [lang]);\n\n  if (lang === 'en') {\n    return null;\n  }\n\n  return (\n    <>\n      <div>\n        <div id=\"globalTranslator\" />\n      </div>\n    </>\n  );\n}\n\nTranslateButton.propTypes = {};\n\nTranslateButton.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}