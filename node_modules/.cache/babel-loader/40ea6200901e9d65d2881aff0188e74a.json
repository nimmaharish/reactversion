{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/profile/helloBar/Color.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Clickable } from 'phoenix-components';\nimport { useField } from 'formik';\nimport { useToggle } from \"../../../hooks/common\";\nimport editIcon from \"../../../assets/overview/edit.svg\";\nimport addIcon from \"../../../assets/overview/addIcon.svg\";\nimport { ColorDialog } from \"../../common/ColorDialog\";\nimport styles from \"./Color.module.css\";\nexport default function Color() {\n  _s();\n\n  const [{\n    value: color\n  },, {\n    setValue: setColor\n  }] = useField('background.colorValue');\n  const [openColorPicker, toggleColorPicker] = useToggle();\n\n  const setColorValue = value => {\n    setColor(value);\n    toggleColorPicker();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.textColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, (color === null || color === void 0 ? void 0 : color.length) > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, \" Selected Color\") : /*#__PURE__*/React.createElement(React.Fragment, null, \" Select Color\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Clickable, {\n    onClick: toggleColorPicker,\n    className: \"flexCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, (color === null || color === void 0 ? void 0 : color.length) > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.colorBox,\n    style: {\n      backgroundColor: color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: editIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: addIcon,\n    alt: \"\",\n    className: styles.imgA,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }), \"Pick Color\"))), openColorPicker && /*#__PURE__*/React.createElement(ColorDialog, {\n    onChange: setColorValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }));\n}\n\n_s(Color, \"jYbYFYSDN3PO6+sjpRZ3Cbgmh3Y=\", false, function () {\n  return [useField, useToggle];\n});\n\n_c = Color;\nColor.propTypes = {};\nColor.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"Color\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/profile/helloBar/Color.jsx"],"names":["React","Clickable","useField","useToggle","ColorDialog","styles","Color","value","color","setValue","setColor","openColorPicker","toggleColorPicker","setColorValue","textColor","title","length","colorBox","backgroundColor","editIcon","addIcon","imgA","propTypes","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,SAAT;;;AAGA,SAASC,WAAT;AACA,OAAOC,MAAP;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAAC;AAAEC,IAAAA,KAAK,EAAEC;AAAT,GAAD,GAAoB;AAAEC,IAAAA,QAAQ,EAAEC;AAAZ,GAApB,IAA8CR,QAAQ,CAAC,uBAAD,CAA5D;AACA,QAAM,CAACS,eAAD,EAAkBC,iBAAlB,IAAuCT,SAAS,EAAtD;;AAEA,QAAMU,aAAa,GAAIN,KAAD,IAAW;AAC/BG,IAAAA,QAAQ,CAACH,KAAD,CAAR;AACAK,IAAAA,iBAAiB;AAClB,GAHD;;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACS,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAET,MAAM,CAACU,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAAP,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEQ,MAAP,IAAgB,CAAhB,gBACC,4DADD,gBAGC,0DAJJ,CADF,eAQE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAEJ,iBADX;AAEE,IAAA,SAAS,EAAC,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,CAAAJ,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEQ,MAAP,IAAgB,CAAhB,gBACC,uDACE;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACY,QAAvB;AAAiC,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAEV;AAAnB,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,GAAG,EAAEW,QAAV;AAAoB,IAAA,GAAG,EAAC,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADD,gBAMC,uDACE;AACE,IAAA,GAAG,EAAEC,OADP;AAEE,IAAA,GAAG,EAAC,EAFN;AAGE,IAAA,SAAS,EAAEf,MAAM,CAACgB,IAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAVJ,CATF,CADF,EA+BGV,eAAe,iBACd,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEE,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCJ,CADF;AAqCD;;GA9CuBP,K;UAC8BJ,Q,EACPC,S;;;KAFvBG,K;AA+CxBA,KAAK,CAACgB,SAAN,GAAkB,EAAlB;AAEAhB,KAAK,CAACiB,YAAN,GAAqB,EAArB","sourcesContent":["import React from 'react';\nimport { Clickable } from 'phoenix-components';\nimport { useField } from 'formik';\nimport { useToggle } from 'hooks/common';\nimport editIcon from 'assets/overview/edit.svg';\nimport addIcon from 'assets/overview/addIcon.svg';\nimport { ColorDialog } from 'components/common/ColorDialog';\nimport styles from './Color.module.css';\n\nexport default function Color() {\n  const [{ value: color },, { setValue: setColor }] = useField('background.colorValue');\n  const [openColorPicker, toggleColorPicker] = useToggle();\n\n  const setColorValue = (value) => {\n    setColor(value);\n    toggleColorPicker();\n  };\n\n  return (\n    <div>\n      <div className={styles.textColor}>\n        <div className={styles.title}>\n          {color?.length > 0 ? (\n            <> Selected Color</>\n          ) : (\n            <> Select Color</>\n          )}\n        </div>\n        <div className=\"spacer\" />\n        <Clickable\n          onClick={toggleColorPicker}\n          className=\"flexCenter\"\n        >\n          {color?.length > 0 ? (\n            <>\n              <div className={styles.colorBox} style={{ backgroundColor: color }} />\n              <img src={editIcon} alt=\"\" />\n            </>\n          ) : (\n            <>\n              <img\n                src={addIcon}\n                alt=\"\"\n                className={styles.imgA}\n              />\n              Pick Color\n            </>\n          )}\n        </Clickable>\n      </div>\n      {openColorPicker && (\n        <ColorDialog onChange={setColorValue} />\n      )}\n    </div>\n  );\n}\nColor.propTypes = {};\n\nColor.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}