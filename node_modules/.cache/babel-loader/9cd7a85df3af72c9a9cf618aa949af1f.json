{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/orders/v2/OrderStatusDrawer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useToggle } from \"../../../hooks/common\";\nimport { DeleteAlert } from \"../../shared/DeleteAlert\";\nimport Loader from \"../../../services/loader\";\nimport { Factory } from \"../../../api\";\nimport Snackbar from \"../../../services/snackbar\";\nimport { useOrder, useRefresh } from \"../../../contexts/orderContext\";\nimport { ORDER_STATUS_LIST } from \"./statusUtils\";\nimport { CommonStatusDrawer } from \"./CommonStatusDrawer\";\nexport function OrderStatusDrawer({\n  onClose,\n  items\n}) {\n  _s();\n\n  const [note, setNote] = useState('');\n  const [cancelAlert, toggleCancelAlert] = useToggle();\n  const refreshOrder = useRefresh();\n  const order = useOrder();\n\n  const onUpdate = async (status, nt) => {\n    setNote(nt);\n\n    if (status === 'cancelled') {\n      toggleCancelAlert();\n      return;\n    }\n\n    try {\n      Loader.show();\n      await Factory.updateStatus(order._id, 'order', status, items.map(item => item._id), nt, {});\n      refreshOrder();\n      onClose();\n    } catch (e) {\n      Snackbar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onCancel = async () => {\n    toggleCancelAlert();\n\n    try {\n      Loader.show();\n      await Factory.updateStatus(order._id, 'order', 'cancelled', items.map(item => item._id), note, {}, []);\n      refreshOrder();\n      onClose();\n    } catch (e) {\n      Snackbar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, cancelAlert && /*#__PURE__*/React.createElement(DeleteAlert, {\n    primary: \"YES\",\n    secondary: \"No\",\n    title: \"Oops! Are you sure want to cancel this order?\",\n    onCancel: toggleCancelAlert,\n    onDelete: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CommonStatusDrawer, {\n    statusList: ORDER_STATUS_LIST,\n    onSubmit: onUpdate,\n    onClose: onClose,\n    title: \"Order Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(OrderStatusDrawer, \"w5XfI2622XSkkQ3o9fG+awWGGVI=\", false, function () {\n  return [useToggle, useRefresh, useOrder];\n});\n\n_c = OrderStatusDrawer;\nOrderStatusDrawer.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  items: PropTypes.array.isRequired\n};\nOrderStatusDrawer.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderStatusDrawer\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/orders/v2/OrderStatusDrawer.jsx"],"names":["React","useState","PropTypes","useToggle","DeleteAlert","Loader","Factory","Snackbar","useOrder","useRefresh","ORDER_STATUS_LIST","CommonStatusDrawer","OrderStatusDrawer","onClose","items","note","setNote","cancelAlert","toggleCancelAlert","refreshOrder","order","onUpdate","status","nt","show","updateStatus","_id","map","item","e","showError","hide","onCancel","propTypes","func","isRequired","array","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useToggle } from 'hooks/common';\nimport { DeleteAlert } from 'components/shared/DeleteAlert';\nimport Loader from 'services/loader';\nimport { Factory } from 'api';\nimport Snackbar from 'services/snackbar';\nimport { useOrder, useRefresh } from 'contexts/orderContext';\nimport { ORDER_STATUS_LIST } from './statusUtils';\nimport { CommonStatusDrawer } from './CommonStatusDrawer';\n\nexport function OrderStatusDrawer({\n  onClose,\n  items\n}) {\n  const [note, setNote] = useState('');\n  const [cancelAlert, toggleCancelAlert] = useToggle();\n  const refreshOrder = useRefresh();\n  const order = useOrder();\n\n  const onUpdate = async (status, nt) => {\n    setNote(nt);\n    if (status === 'cancelled') {\n      toggleCancelAlert();\n      return;\n    }\n    try {\n      Loader.show();\n      await Factory.updateStatus(order._id, 'order', status, items.map(item => item._id), nt, {});\n      refreshOrder();\n      onClose();\n    } catch (e) {\n      Snackbar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onCancel = async () => {\n    toggleCancelAlert();\n    try {\n      Loader.show();\n      await Factory.updateStatus(order._id, 'order', 'cancelled', items.map(item => item._id), note, {}, []);\n      refreshOrder();\n      onClose();\n    } catch (e) {\n      Snackbar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  return (\n    <>\n      {cancelAlert && (\n        <DeleteAlert\n          primary=\"YES\"\n          secondary=\"No\"\n          title=\"Oops! Are you sure want to cancel this order?\"\n          onCancel={toggleCancelAlert}\n          onDelete={onCancel}\n        />\n      )}\n      <CommonStatusDrawer\n        statusList={ORDER_STATUS_LIST}\n        onSubmit={onUpdate}\n        onClose={onClose}\n        title=\"Order Status\"\n      />\n    </>\n  );\n}\n\nOrderStatusDrawer.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  items: PropTypes.array.isRequired,\n};\n\nOrderStatusDrawer.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}