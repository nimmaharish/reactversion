{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/variants/Variants.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/no-multi-comp */\nimport React, { useContext, useState } from 'react';\nimport { Button, Checkbox, Dialog, DialogContent, FormControl, FormControlLabel, Grid, Radio, RadioGroup } from '@material-ui/core';\nimport Snackbar from \"../../services/snackbar\";\nimport WindoInput from \"../../components/common/Input\";\nimport { useHistory } from 'react-router-dom';\nimport cx from 'classnames';\nimport Upload from \"../../components/cards/Upload/Upload\";\nimport { ProductContext, useShop } from \"../../contexts\";\nimport PropTypes from 'prop-types';\nimport { Becca } from \"../../api\";\nimport Info from \"../../components/info/Info\";\nimport { get, set, pickBy } from 'lodash';\nimport { useQueryParams } from \"../../hooks\";\nimport Header from \"../products/Header\";\nimport sizeIcon from \"../../assets/images/products/create/size.svg\";\nimport colorIcon from \"../../assets/images/products/create/color.svg\";\nimport customIcon from \"../../assets/images/products/create/custom.svg\";\nimport moreIcon from \"../../assets/images/products/create/more.svg\";\nimport lessIcon from \"../../assets/images/products/create/less.svg\";\nimport Delete1 from \"../../assets/images/products/create/tag-del.svg\";\nimport Delete2 from \"../../assets/images/products/create/delVariant.svg\";\nimport ButtonComponent from \"../profile/ButtonComponent\";\nimport { PreviewVariants } from \"../../components/products\";\nimport styles from \"./Variants.module.css\";\n\nfunction Variants({\n  setVariants,\n  variants,\n  onBack,\n  selected,\n  isUpdate\n}) {\n  _s();\n\n  const {\n    mrp,\n    sp,\n    availableType,\n    available,\n    slab,\n    load,\n    id,\n    skuDeliveryCharges\n  } = useContext(ProductContext);\n  const [refresh, setRefresh] = useState(false);\n  const [openModal, setModal] = useState(false);\n  const [newVariant, setNewVariant] = useState(selected);\n  const [addVariantType, setAddVariantType] = useState('');\n  const [more, setMore] = useState(false);\n  const [, setIsSaveBtnClicked] = useState(false);\n  const history = useHistory();\n  const params = useQueryParams();\n  const openSub = params.has('openSub');\n  const shop = useShop(); // const isAnyNewVariants = !isEmpty(variants.find(x => x.isNew));\n\n  const getCustomType = x => Object.keys(x).find(x => x !== 'size' && x !== 'color') || '';\n\n  const getTypeValue = (x = {}, val) => x[val] || '';\n\n  const showVariant = openSub;\n  const sizeValue = getTypeValue((newVariant === null || newVariant === void 0 ? void 0 : newVariant.details) || {}, 'size');\n  const colorValue = getTypeValue((newVariant === null || newVariant === void 0 ? void 0 : newVariant.details) || {}, 'color');\n  const customTitle = getCustomType((newVariant === null || newVariant === void 0 ? void 0 : newVariant.details) || {});\n  const customValue = getTypeValue((newVariant === null || newVariant === void 0 ? void 0 : newVariant.details) || {}, customTitle);\n  const showAddSize = sizeValue.length === 0;\n  const showAddColor = colorValue.length === 0;\n  const showAddCustom = customTitle.length === 0 || customValue.length === 0;\n  const isNewOne = newVariant ? !(newVariant !== null && newVariant !== void 0 && newVariant.createdAt) ? true : !!(newVariant !== null && newVariant !== void 0 && newVariant.tempId) : true;\n\n  const reload = () => {\n    setRefresh(!refresh);\n    setTimeout(() => {\n      setRefresh(!refresh);\n    }, 100);\n  };\n\n  const deleteVariantKey = key => {\n    delete newVariant.details[key];\n    reload();\n  };\n\n  const generateVariants = type => {\n    let variant = {\n      type,\n      isNew: true,\n      isSaved: false,\n      isSamePrice: true,\n      amount: mrp || '',\n      discountedAmount: sp || '',\n      availableType,\n      available,\n      details: {\n        [type]: type === 'color' ? '#000000' : ''\n      },\n      tax: {\n        slab\n      },\n      images: [],\n      videos: [],\n      deliveryCharges: skuDeliveryCharges || false\n    };\n\n    if (newVariant) {\n      newVariant.details[type] = type === 'color' ? '#000000' : '';\n      variant = newVariant;\n    }\n\n    setAddVariantType(type);\n    setNewVariant(variant);\n    reload();\n    params.set('openSub', 'true');\n    history.push({\n      search: params.toString()\n    });\n  };\n\n  const setValue = (index, key, value) => {\n    // update only newly added variant\n    if (!index) {\n      set(newVariant, key, value);\n      setNewVariant(newVariant);\n      reload();\n      return;\n    }\n\n    const item = variants[index];\n    set(item, key, value);\n    setVariants(variants);\n    reload();\n  };\n\n  const getValue = (index, key, onlyValue = false) => {\n    const item = !index ? newVariant : variants[index];\n\n    if (key === 'deliveryCharges' || key === 'weight') {\n      return item[key];\n    }\n\n    const newItem = get(item, key);\n\n    if (newItem || newItem === 0) {\n      const type = newItem;\n\n      if (onlyValue) {\n        return type;\n      }\n\n      return {\n        [key]: type\n      };\n    }\n\n    return '';\n  };\n\n  const getCurrency = number => `${shop === null || shop === void 0 ? void 0 : shop.currency} ${number || 0}`;\n\n  const getPercentage = i => {\n    const original = getValue(i, 'amount', true);\n    const discounted = getValue(i, 'discountedAmount', true);\n    const percent = ((original - discounted) * 100 / original).toFixed();\n\n    if (sp <= 0 || mrp <= 0) {\n      return '';\n    }\n\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }\n    }, `Price to customer: ${getCurrency(sp)}`, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"strikeLine marginSLeftRight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, `${getCurrency(mrp)}`), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, `${percent}% OFF`));\n  };\n\n  const getSizeSection = () => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.head,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, \"Size\"), /*#__PURE__*/React.createElement(WindoInput, {\n    placeholder: \"Enter Size\",\n    value: sizeValue,\n    className: cx(styles.inputClass, styles.right8),\n    labelClassName: styles.labelClass,\n    type: \"text\",\n    setValue: e => {\n      setValue(null, 'details.size', e);\n    },\n    InputProps: {\n      classes: {\n        input: cx(styles.slug, styles.single1)\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }));\n\n  const getColorSection = () => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.head,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, \"Color\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.colorBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(WindoInput, {\n    value: colorValue,\n    className: cx(styles.inputClass, styles.right81),\n    labelClassName: styles.labelClass,\n    type: \"color\",\n    setValue: e => {\n      setValue(null, 'details.color', e);\n    },\n    InputProps: {\n      classes: {\n        input: cx(styles.slug, styles.single2)\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.vSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, \"Pick a color\"), /*#__PURE__*/React.createElement(WindoInput, {\n    value: colorValue,\n    className: cx(styles.inputClass, styles.right82),\n    type: \"color\",\n    setValue: e => {\n      setValue(null, 'details.color', e);\n    },\n    InputProps: {\n      classes: {\n        input: cx(styles.slug, styles.single3)\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }))));\n\n  const getCustomSection = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.tabSection1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.head,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, \"Custom\"), /*#__PURE__*/React.createElement(WindoInput, {\n    placeholder: \"Variant Type\" // helperText=\"e.g. Material, Box type, Accessories type\"\n    ,\n    value: customTitle === 'custom' ? '' : customTitle,\n    className: cx(styles.inputClass, styles.bottom8, 'marginMTopBottom'),\n    labelClassName: styles.labelClass,\n    setValue: e => {\n      const type = customTitle;\n      delete newVariant.details[type];\n      setValue(null, `details.${e}`, '');\n    },\n    InputProps: {\n      classes: {\n        input: cx(styles.slug, styles.single)\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(WindoInput, {\n    placeholder: \"Variant Value\",\n    value: customValue,\n    className: cx(styles.inputClass, styles.bottom8, 'marginMTopBottom'),\n    labelClassName: styles.labelClass,\n    setValue: e => {\n      const type = customTitle;\n      setValue(null, `details.${type}`, e);\n    },\n    InputProps: {\n      classes: {\n        input: cx(styles.slug, styles.single)\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  })));\n\n  const getTitle = () => {\n    if (!showVariant) {\n      return 'Variants';\n    }\n\n    if (addVariantType === 'size') {\n      return 'Add Size';\n    }\n\n    if (addVariantType === 'color') {\n      return 'Add Color';\n    }\n\n    return 'Add Custom';\n  };\n\n  const onTypeClick = value => {\n    setAddVariantType(value);\n    params.set('openSub', 'true');\n    history.push({\n      search: params.toString()\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    onBack: () => {\n      if (showVariant) {\n        const filterValues = pickBy(newVariant === null || newVariant === void 0 ? void 0 : newVariant.details, v => v.length > 0);\n        newVariant.details = filterValues;\n        setNewVariant(newVariant);\n      }\n\n      onBack();\n    },\n    title: getTitle(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }\n  }), !showVariant && /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }\n  }, showAddSize && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: cx(styles.btnSec, 'flexBetween'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.btnText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 15\n    }\n  }, \" Size \"), /*#__PURE__*/React.createElement(Button, {\n    className: cx(styles.btnBorder, 'capitalize bold'),\n    onClick: () => {\n      generateVariants('size');\n    },\n    startIcon: /*#__PURE__*/React.createElement(\"img\", {\n      src: sizeIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 15\n    }\n  }, \"Add Size\")), !showAddSize && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: cx(styles.btnSec),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.btnText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }, \" Size \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.chip1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"none\",\n    onClick: () => onTypeClick('size'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  }, ' ', sizeValue, ' '), /*#__PURE__*/React.createElement(\"img\", {\n    role: \"none\",\n    onClick: () => deleteVariantKey('size'),\n    className: styles.delIcon1,\n    src: Delete1,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 17\n    }\n  }))), showAddColor && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: cx(styles.btnSec, 'flexBetween'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.btnText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 15\n    }\n  }, \" Color \"), /*#__PURE__*/React.createElement(Button, {\n    className: cx(styles.btnBorder, 'capitalize bold'),\n    onClick: () => {\n      generateVariants('color');\n    },\n    startIcon: /*#__PURE__*/React.createElement(\"img\", {\n      src: colorIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 15\n    }\n  }, \"Add Color\")), !showAddColor && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: cx(styles.btnSec),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.btnText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 15\n    }\n  }, \" Color \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.chip1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.color,\n    role: \"none\",\n    onClick: () => onTypeClick('color'),\n    style: {\n      background: colorValue\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    role: \"none\",\n    onClick: () => deleteVariantKey('color'),\n    className: styles.delIcon1,\n    src: Delete1,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 17\n    }\n  }))), showAddCustom && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: cx(styles.btnSec, 'flexBetween'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.btnText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 15\n    }\n  }, \" Custom \"), /*#__PURE__*/React.createElement(Button, {\n    className: cx(styles.btnBorder, 'capitalize bold'),\n    onClick: () => {\n      generateVariants('custom');\n    },\n    startIcon: /*#__PURE__*/React.createElement(\"img\", {\n      src: customIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 15\n    }\n  }, \"Add Custom\")), !showAddCustom && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: cx(styles.btnSec),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.btnText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 15\n    }\n  }, \" Custom \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.chip1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"none\",\n    onClick: () => onTypeClick(customTitle),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 17\n    }\n  }, ' ', `${customTitle || 'N/A'} - ${customValue || 'N/A'}`, ' '), /*#__PURE__*/React.createElement(\"img\", {\n    role: \"none\",\n    onClick: () => deleteVariantKey(customTitle),\n    className: styles.delIcon1,\n    src: Delete1,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 17\n    }\n  }))), isNewOne && /*#__PURE__*/React.createElement(\"img\", {\n    role: \"none\",\n    onClick: () => {\n      const filtered = variants.filter(x => x.tempId !== (newVariant === null || newVariant === void 0 ? void 0 : newVariant.tempId));\n      setVariants(filtered);\n      onBack();\n    },\n    src: Delete2,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 13\n    }\n  }), (customTitle.length > 0 && customValue.length > 0 || sizeValue.length > 0 || colorValue.length > 0) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"marginSTopBottom fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PreviewVariants, {\n    variants: [newVariant],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fullWidth textCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonComponent, {\n    color: \"primary\",\n    text: isUpdate && newVariant !== null && newVariant !== void 0 && newVariant._id ? 'Update Variant' : 'Save Variant',\n    style: styles.blackButton,\n    onclick: async () => {\n      setIsSaveBtnClicked(true);\n\n      if (!isUpdate) {\n        const newItems = [...variants];\n\n        if (!(newVariant !== null && newVariant !== void 0 && newVariant.newId)) {\n          newVariant.newId = `new-${variants.length}`;\n          newVariant.isSaved = true;\n          newItems.push(newVariant);\n          setVariants(newItems);\n          onBack();\n          return;\n        }\n\n        const selectedVariant = variants.find(x => x.newId === newVariant.newId);\n        selectedVariant.isSaved = true;\n        variants[variants.indexOf(selectedVariant)] = selectedVariant;\n        const filtered = variants.map(x => x);\n        setVariants(filtered);\n        onBack();\n      }\n\n      if (isUpdate) {\n        try {\n          if (newVariant !== null && newVariant !== void 0 && newVariant.isNew) {\n            newVariant.skuId = id;\n            await Becca.createVariant(newVariant);\n            Snackbar.show('Variant saved');\n            load();\n            onBack();\n            return;\n          }\n\n          await Becca.updateVariant(newVariant._id, newVariant);\n          load();\n          onBack();\n        } catch (e) {\n          Snackbar.show('Variant update failed', 'error');\n        }\n\n        load();\n      }\n\n      setIsSaveBtnClicked(false);\n      Snackbar.show('Variant saved');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 17\n    }\n  })))), showVariant && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 9\n    }\n  }, !(addVariantType === 'size' || addVariantType === 'color') && getCustomSection(), addVariantType === 'size' && getSizeSection(), addVariantType === 'color' && getColorSection(), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setMore(!more),\n    className: styles.head1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 13\n    }\n  }, \" Configure Details \"), /*#__PURE__*/React.createElement(\"img\", {\n    src: !more ? moreIcon : lessIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 13\n    }\n  })), more && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.tabSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.labelClass1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 17\n    }\n  }, \"Product Price\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"end\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      onChange: e => setValue(null, 'isSamePrice', e.target.checked),\n      checked: newVariant === null || newVariant === void 0 ? void 0 : newVariant.isSamePrice,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 21\n      }\n    }),\n    classes: {\n      root: 'textCapital fs14'\n    },\n    label: \"Same as Original Price\",\n    labelPlacement: \"end\",\n    className: styles.same_mrp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 17\n    }\n  })), !(newVariant !== null && newVariant !== void 0 && newVariant.isSamePrice) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(WindoInput, {\n    value: getValue(null, 'amount', true),\n    className: cx(styles.inputClass, styles.right8),\n    labelClassName: styles.labelClass,\n    placeholder: \"0\",\n    label: \"Original Price\",\n    type: \"number\",\n    setValue: e => setValue(null, 'amount', e),\n    InputProps: {\n      classes: {\n        input: cx(styles.slug, styles.single)\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(WindoInput, {\n    value: getValue(null, 'discountedAmount', true),\n    className: styles.inputClass,\n    labelClassName: styles.labelClass,\n    placeholder: \"0\",\n    label: \"Price\",\n    type: \"number\",\n    setValue: e => {\n      const mrp = getValue(null, 'amount', true);\n      const isMin = parseFloat(mrp) < parseFloat(e);\n\n      if (isMin) {\n        setValue(null, 'discountedAmount', mrp);\n        Snackbar.show('Price should be less than Original Price', 'error');\n        return;\n      }\n\n      setValue(null, 'discountedAmount', e);\n    },\n    InputProps: {\n      classes: {\n        input: cx(styles.slug, styles.single)\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fs10 marginSTopBottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 21\n    }\n  }, getPercentage(null)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    className: \"marginSTopBottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.labelClass1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 19\n    }\n  }, \"Availability\"), /*#__PURE__*/React.createElement(RadioGroup, {\n    row: true,\n    \"aria-label\": \"position\",\n    name: \"position\",\n    value: getValue(null, 'availableType', true),\n    defaultValue: \"top\",\n    onChange: e => {\n      setValue(null, 'availableType', e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"finite\",\n    classes: {\n      root: 'textCapital fs14'\n    },\n    control: /*#__PURE__*/React.createElement(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 32\n      }\n    }),\n    label: \"Limited Stock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"infinite\",\n    classes: {\n      root: 'textCapital fs14'\n    },\n    control: /*#__PURE__*/React.createElement(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 32\n      }\n    }),\n    label: \"Always In-Stock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 15\n    }\n  }, newVariant.availableType === 'finite' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.labelClass1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 21\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(WindoInput, {\n    value: getValue(null, 'available', true),\n    className: cx(styles.inputClass, styles.right8),\n    labelClassName: styles.labelClass,\n    placeholder: \"0\",\n    type: \"number\",\n    setValue: e => setValue(null, 'available', e),\n    InputProps: {\n      classes: {\n        input: cx(styles.slug1, styles.single)\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    type: \"variant\",\n    items: [...getValue(null, 'images', true), ...getValue(null, 'videos', true)],\n    onSelect: x => {\n      const imgs = x.filter(x => x.ext !== 'mp4');\n      const vids = x.filter(x => x.ext === 'mp4');\n      setValue(null, 'images', imgs);\n      setValue(null, 'videos', vids);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 17\n    }\n  }))), getTypeValue(newVariant === null || newVariant === void 0 ? void 0 : newVariant.details, addVariantType).length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"marginSTopBottom fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PreviewVariants, {\n    variants: [{\n      details: {\n        [addVariantType]: getTypeValue(newVariant === null || newVariant === void 0 ? void 0 : newVariant.details, addVariantType)\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    className: styles.variant,\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonComponent, {\n    color: \"primary\",\n    text: \"Add\",\n    style: styles.blackButton,\n    onclick: () => {\n      const filterValues = pickBy(newVariant === null || newVariant === void 0 ? void 0 : newVariant.details, v => v.length > 0);\n      newVariant.details = filterValues;\n      setNewVariant(newVariant);\n      onBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.contens,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: openModal,\n    onClose: () => setModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Info, {\n    title: \"Pro Tip\",\n    text: 'Want to add more colors for a given size or more sizes for the same color?' + ' try creating new variant combinations. Eg: To create Size L,M of colors Red and White for each,' + ' Create Size L and add color Red as one variant and create another' + ' variant Size L and color White and so on.' + ' This is applicable for custom variants too.',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 13\n    }\n  })))));\n}\n\n_s(Variants, \"Bl9FC/HEI0q64QBwGsMnZ8NVSiA=\", false, function () {\n  return [useHistory, useQueryParams, useShop];\n});\n\n_c = Variants;\nVariants.propTypes = {\n  variants: PropTypes.array.isRequired,\n  setVariants: PropTypes.func.isRequired,\n  onBack: PropTypes.func.isRequired,\n  isUpdate: PropTypes.bool.isRequired,\n  selected: PropTypes.object\n};\nVariants.defaultProps = {\n  selected: null\n};\nexport default Variants;\n\nvar _c;\n\n$RefreshReg$(_c, \"Variants\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/variants/Variants.jsx"],"names":["React","useContext","useState","Button","Checkbox","Dialog","DialogContent","FormControl","FormControlLabel","Grid","Radio","RadioGroup","Snackbar","WindoInput","useHistory","cx","Upload","ProductContext","useShop","PropTypes","Becca","Info","get","set","pickBy","useQueryParams","Header","ButtonComponent","PreviewVariants","styles","Variants","setVariants","variants","onBack","selected","isUpdate","mrp","sp","availableType","available","slab","load","id","skuDeliveryCharges","refresh","setRefresh","openModal","setModal","newVariant","setNewVariant","addVariantType","setAddVariantType","more","setMore","setIsSaveBtnClicked","history","params","openSub","has","shop","getCustomType","x","Object","keys","find","getTypeValue","val","showVariant","sizeValue","details","colorValue","customTitle","customValue","showAddSize","length","showAddColor","showAddCustom","isNewOne","createdAt","tempId","reload","setTimeout","deleteVariantKey","key","generateVariants","type","variant","isNew","isSaved","isSamePrice","amount","discountedAmount","tax","images","videos","deliveryCharges","push","search","toString","setValue","index","value","item","getValue","onlyValue","newItem","getCurrency","number","currency","getPercentage","i","original","discounted","percent","toFixed","getSizeSection","head","inputClass","right8","labelClass","e","classes","input","slug","single1","getColorSection","colorBody","right81","single2","vSection","right82","single3","getCustomSection","tabSection1","bottom8","single","getTitle","onTypeClick","section","filterValues","v","main","btnSec","btnText","btnBorder","sizeIcon","chip1","delIcon1","Delete1","colorIcon","color","background","customIcon","filtered","filter","Delete2","_id","blackButton","newItems","newId","selectedVariant","indexOf","map","skuId","createVariant","show","updateVariant","content","head1","moreIcon","lessIcon","tabSection","labelClass1","target","checked","root","same_mrp","isMin","parseFloat","slug1","imgs","ext","vids","contens","propTypes","array","isRequired","func","bool","object","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-multi-comp */\nimport React, { useContext, useState } from 'react';\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogContent,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Radio,\n  RadioGroup\n} from '@material-ui/core';\nimport Snackbar from 'services/snackbar';\nimport WindoInput from 'components/common/Input';\nimport { useHistory } from 'react-router-dom';\nimport cx from 'classnames';\nimport Upload from 'components/cards/Upload/Upload';\nimport { ProductContext, useShop } from 'contexts';\nimport PropTypes from 'prop-types';\nimport { Becca } from 'api/index';\nimport Info from 'components/info/Info';\nimport {\n  get, set, pickBy\n} from 'lodash';\nimport { useQueryParams } from 'hooks';\nimport Header from 'containers/products/Header';\nimport sizeIcon from 'assets/images/products/create/size.svg';\nimport colorIcon from 'assets/images/products/create/color.svg';\nimport customIcon from 'assets/images/products/create/custom.svg';\nimport moreIcon from 'assets/images/products/create/more.svg';\nimport lessIcon from 'assets/images/products/create/less.svg';\nimport Delete1 from 'assets/images/products/create/tag-del.svg';\nimport Delete2 from 'assets/images/products/create/delVariant.svg';\nimport ButtonComponent from 'containers/profile/ButtonComponent';\nimport { PreviewVariants } from 'components/products';\nimport styles from './Variants.module.css';\n\nfunction Variants({\n  setVariants,\n  variants,\n  onBack,\n  selected,\n  isUpdate\n}) {\n  const {\n    mrp,\n    sp,\n    availableType,\n    available,\n    slab,\n    load,\n    id,\n    skuDeliveryCharges\n  } = useContext(ProductContext);\n  const [refresh, setRefresh] = useState(false);\n  const [openModal, setModal] = useState(false);\n  const [newVariant, setNewVariant] = useState(selected);\n  const [addVariantType, setAddVariantType] = useState('');\n  const [more, setMore] = useState(false);\n  const [, setIsSaveBtnClicked] = useState(false);\n  const history = useHistory();\n  const params = useQueryParams();\n  const openSub = params.has('openSub');\n  const shop = useShop();\n  // const isAnyNewVariants = !isEmpty(variants.find(x => x.isNew));\n  const getCustomType = (x) => Object.keys(x)\n    .find(x => x !== 'size' && x !== 'color') || '';\n  const getTypeValue = (x = {}, val) => x[val] || '';\n  const showVariant = openSub;\n  const sizeValue = getTypeValue(newVariant?.details || {}, 'size');\n  const colorValue = getTypeValue(newVariant?.details || {}, 'color');\n  const customTitle = getCustomType(newVariant?.details || {});\n  const customValue = getTypeValue(newVariant?.details || {}, customTitle);\n\n  const showAddSize = sizeValue.length === 0;\n  const showAddColor = colorValue.length === 0;\n  const showAddCustom = customTitle.length === 0 || customValue.length === 0;\n\n  const isNewOne = newVariant ? (!newVariant?.createdAt ? true : !!newVariant?.tempId) : true;\n\n  const reload = () => {\n    setRefresh(!refresh);\n    setTimeout(() => {\n      setRefresh(!refresh);\n    }, 100);\n  };\n\n  const deleteVariantKey = (key) => {\n    delete newVariant.details[key];\n    reload();\n  };\n\n  const generateVariants = (type) => {\n    let variant = {\n      type,\n      isNew: true,\n      isSaved: false,\n      isSamePrice: true,\n      amount: mrp || '',\n      discountedAmount: sp || '',\n      availableType,\n      available,\n      details: { [type]: type === 'color' ? '#000000' : '' },\n      tax: { slab },\n      images: [],\n      videos: [],\n      deliveryCharges: skuDeliveryCharges || false,\n    };\n    if (newVariant) {\n      newVariant.details[type] = type === 'color' ? '#000000' : '';\n      variant = newVariant;\n    }\n    setAddVariantType(type);\n    setNewVariant(variant);\n    reload();\n    params.set('openSub', 'true');\n    history.push({ search: params.toString() });\n  };\n\n  const setValue = (index, key, value) => {\n    // update only newly added variant\n    if (!index) {\n      set(newVariant, key, value);\n      setNewVariant(newVariant);\n      reload();\n      return;\n    }\n    const item = variants[index];\n    set(item, key, value);\n    setVariants(variants);\n    reload();\n  };\n\n  const getValue = (index, key, onlyValue = false) => {\n    const item = !index ? newVariant : variants[index];\n    if (key === 'deliveryCharges' || key === 'weight') {\n      return item[key];\n    }\n    const newItem = get(item, key);\n    if (newItem || newItem === 0) {\n      const type = newItem;\n      if (onlyValue) {\n        return type;\n      }\n      return { [key]: type };\n    }\n    return '';\n  };\n\n  const getCurrency = (number) => (`${shop?.currency} ${number || 0}`);\n\n  const getPercentage = (i) => {\n    const original = getValue(i, 'amount', true);\n    const discounted = getValue(i, 'discountedAmount', true);\n    const percent = (((original - discounted) * 100) / original).toFixed();\n    if (sp <= 0 || mrp <= 0) {\n      return '';\n    }\n    return (\n      <span>\n        {`Price to customer: ${getCurrency(sp)}`}\n        <span className=\"strikeLine marginSLeftRight\">{`${getCurrency(mrp)}`}</span>\n        <span>{`${percent}% OFF`}</span>\n      </span>\n    );\n  };\n\n  const getSizeSection = () => (\n    <Grid item xs={12}>\n      <div className={styles.head}>\n        Size\n      </div>\n      <WindoInput\n        placeholder=\"Enter Size\"\n        value={sizeValue}\n        className={cx(styles.inputClass, styles.right8)}\n        labelClassName={styles.labelClass}\n        type=\"text\"\n        setValue={(e) => {\n          setValue(null, 'details.size', e);\n        }}\n        InputProps={{\n          classes: {\n            input: cx(styles.slug, styles.single1),\n          },\n        }}\n      />\n    </Grid>\n  );\n\n  const getColorSection = () => (\n    <Grid item xs={12}>\n      <div className={styles.head}>\n        Color\n      </div>\n      <div className={styles.colorBody}>\n        <WindoInput\n          value={colorValue}\n          className={cx(styles.inputClass, styles.right81)}\n          labelClassName={styles.labelClass}\n          type=\"color\"\n          setValue={(e) => {\n            setValue(null, 'details.color', e);\n          }}\n          InputProps={{\n            classes: {\n              input: cx(styles.slug, styles.single2),\n            },\n          }}\n        />\n        <div className={styles.vSection}>\n          <label>\n            Pick a color\n          </label>\n          <WindoInput\n            value={colorValue}\n            className={cx(styles.inputClass, styles.right82)}\n            type=\"color\"\n            setValue={(e) => {\n              setValue(null, 'details.color', e);\n            }}\n            InputProps={{\n              classes: {\n                input: cx(styles.slug, styles.single3),\n              },\n            }}\n          />\n        </div>\n        {/* <WindoInput\n          value={colorValue}\n          className={cx(styles.inputClass, styles.right83)}\n          type=\"text\"\n          InputProps={{\n            classes: {\n              input: cx(styles.slug, styles.single),\n            },\n          }}\n          disabled\n        /> */}\n      </div>\n    </Grid>\n  );\n\n  const getCustomSection = () => (\n    <div className={styles.tabSection1}>\n      <Grid item xs={12}>\n        <div className={styles.head}>\n          Custom\n        </div>\n        <WindoInput\n          placeholder=\"Variant Type\"\n          // helperText=\"e.g. Material, Box type, Accessories type\"\n          value={customTitle === 'custom' ? '' : customTitle}\n          className={cx(styles.inputClass, styles.bottom8, 'marginMTopBottom')}\n          labelClassName={styles.labelClass}\n          setValue={(e) => {\n            const type = customTitle;\n            delete newVariant.details[type];\n            setValue(null, `details.${e}`, '');\n          }}\n          InputProps={{\n            classes: {\n              input: cx(styles.slug, styles.single),\n            },\n          }}\n        />\n        <WindoInput\n          placeholder=\"Variant Value\"\n          value={customValue}\n          className={cx(styles.inputClass, styles.bottom8, 'marginMTopBottom')}\n          labelClassName={styles.labelClass}\n          setValue={(e) => {\n            const type = customTitle;\n            setValue(null, `details.${type}`, e);\n          }}\n          InputProps={{\n            classes: {\n              input: cx(styles.slug, styles.single),\n            },\n          }}\n        />\n      </Grid>\n    </div>\n  );\n\n  const getTitle = () => {\n    if (!showVariant) {\n      return 'Variants';\n    }\n    if (addVariantType === 'size') {\n      return 'Add Size';\n    }\n    if (addVariantType === 'color') {\n      return 'Add Color';\n    }\n    return 'Add Custom';\n  };\n\n  const onTypeClick = (value) => {\n    setAddVariantType(value);\n    params.set('openSub', 'true');\n    history.push({ search: params.toString() });\n  };\n\n  return (\n    <div className={styles.section}>\n      <Header\n        onBack={() => {\n          if (showVariant) {\n            const filterValues = pickBy(newVariant?.details, v => v.length > 0);\n            newVariant.details = filterValues;\n            setNewVariant(newVariant);\n          }\n          onBack();\n        }}\n        title={getTitle()}\n      />\n      {!showVariant && (\n        <Grid container className={styles.main}>\n          {showAddSize && (\n            <Grid item xs={12} className={cx(styles.btnSec, 'flexBetween')}>\n              <div className={styles.btnText}> Size </div>\n              <Button\n                className={cx(styles.btnBorder, 'capitalize bold')}\n                onClick={() => {\n                  generateVariants('size');\n                }}\n                startIcon={(\n                  <img\n                    src={sizeIcon}\n                    alt=\"\"\n                  />\n                )}>\n                Add Size\n              </Button>\n            </Grid>\n          )}\n          {!showAddSize && (\n            <Grid item xs={12} className={cx(styles.btnSec)}>\n              <div className={styles.btnText}> Size </div>\n              <div className={styles.chip1}>\n                <span\n                  role=\"none\"\n                  onClick={() => onTypeClick('size')}\n                >\n                  {' '}\n                  {sizeValue}\n                  {' '}\n                </span>\n                <img\n                  role=\"none\"\n                  onClick={() => deleteVariantKey('size')}\n                  className={styles.delIcon1}\n                  src={Delete1}\n                  alt=\"\"\n                />\n              </div>\n            </Grid>\n          )}\n          {showAddColor && (\n            <Grid item xs={12} className={cx(styles.btnSec, 'flexBetween')}>\n              <div className={styles.btnText}> Color </div>\n              <Button\n                className={cx(styles.btnBorder, 'capitalize bold')}\n                onClick={() => {\n                  generateVariants('color');\n                }}\n                startIcon={(\n                  <img\n                    src={colorIcon}\n                    alt=\"\"\n                  />\n                )}>\n                Add Color\n              </Button>\n            </Grid>\n          )}\n          {!showAddColor && (\n            <Grid item xs={12} className={cx(styles.btnSec)}>\n              <div className={styles.btnText}> Color </div>\n              <div className={styles.chip1}>\n                <div\n                  className={styles.color}\n                  role=\"none\"\n                  onClick={() => onTypeClick('color')}\n                  style={{\n                    background: colorValue\n                  }}>\n                </div>\n                <img\n                  role=\"none\"\n                  onClick={() => deleteVariantKey('color')}\n                  className={styles.delIcon1}\n                  src={Delete1}\n                  alt=\"\"\n                />\n              </div>\n            </Grid>\n          )}\n          {showAddCustom && (\n            <Grid item xs={12} className={cx(styles.btnSec, 'flexBetween')}>\n              <div className={styles.btnText}> Custom </div>\n              <Button\n                className={cx(styles.btnBorder, 'capitalize bold')}\n                onClick={() => {\n                  generateVariants('custom');\n                }}\n                startIcon={(\n                  <img\n                    src={customIcon}\n                    alt=\"\"\n                  />\n                )}>\n                Add Custom\n              </Button>\n            </Grid>\n          )}\n          {!showAddCustom && (\n            <Grid item xs={12} className={cx(styles.btnSec)}>\n              <div className={styles.btnText}> Custom </div>\n              <div className={styles.chip1}>\n                <span\n                  role=\"none\"\n                  onClick={() => onTypeClick(customTitle)}\n                >\n                  {' '}\n                  {`${customTitle || 'N/A'} - ${customValue || 'N/A'}`}\n                  {' '}\n                </span>\n                <img\n                  role=\"none\"\n                  onClick={() => deleteVariantKey(customTitle)}\n                  className={styles.delIcon1}\n                  src={Delete1}\n                  alt=\"\"\n                />\n              </div>\n            </Grid>\n          )}\n          {isNewOne && (\n            <img\n              role=\"none\"\n              onClick={() => {\n                const filtered = variants.filter(x => x.tempId !== newVariant?.tempId);\n                setVariants(filtered);\n                onBack();\n              }}\n              src={Delete2}\n              alt=\"\"\n            />\n          )}\n          {((customTitle.length > 0 && customValue.length > 0)\n          || sizeValue.length > 0 || colorValue.length > 0) && (\n            <>\n              <div className=\"marginSTopBottom fullWidth\">\n                <PreviewVariants variants={[newVariant]} />\n              </div>\n              <div className=\"fullWidth textCenter\">\n                <ButtonComponent\n                  color=\"primary\"\n                  text={isUpdate && newVariant?._id ? 'Update Variant' : 'Save Variant'}\n                  style={styles.blackButton}\n                  onclick={async () => {\n                    setIsSaveBtnClicked(true);\n                    if (!isUpdate) {\n                      const newItems = [...variants];\n                      if (!newVariant?.newId) {\n                        newVariant.newId = `new-${variants.length}`;\n                        newVariant.isSaved = true;\n                        newItems.push(newVariant);\n                        setVariants(newItems);\n                        onBack();\n                        return;\n                      }\n                      const selectedVariant = variants.find(x => x.newId === newVariant.newId);\n                      selectedVariant.isSaved = true;\n                      variants[variants.indexOf(selectedVariant)] = selectedVariant;\n                      const filtered = variants.map(x => x);\n                      setVariants(filtered);\n                      onBack();\n                    }\n                    if (isUpdate) {\n                      try {\n                        if (newVariant?.isNew) {\n                          newVariant.skuId = id;\n                          await Becca.createVariant(newVariant);\n                          Snackbar.show('Variant saved');\n                          load();\n                          onBack();\n                          return;\n                        }\n                        await Becca.updateVariant(newVariant._id, newVariant);\n                        load();\n                        onBack();\n                      } catch (e) {\n                        Snackbar.show('Variant update failed', 'error');\n                      }\n                      load();\n                    }\n                    setIsSaveBtnClicked(false);\n                    Snackbar.show('Variant saved');\n                  }}\n                />\n              </div>\n            </>\n          )}\n        </Grid>\n      )}\n      {showVariant && (\n        <div className={styles.content}>\n          {!(addVariantType === 'size' || addVariantType === 'color') && getCustomSection()}\n          {(addVariantType === 'size') && getSizeSection()}\n          {(addVariantType === 'color') && getColorSection()}\n          <div\n            onClick={() => setMore(!more)}\n            className={styles.head1}\n          >\n            <div> Configure Details </div>\n            <img src={!more ? moreIcon : lessIcon} alt=\"\" />\n          </div>\n          {more && (\n            <div className={styles.tabSection}>\n              <Grid item xs={6}>\n                <div className={cx(styles.labelClass1)}>Product Price</div>\n              </Grid>\n              <Grid item xs={6}>\n                <FormControlLabel\n                  value=\"end\"\n                  control={(\n                    <Checkbox\n                      onChange={(e) => setValue(null, 'isSamePrice', e.target.checked)}\n                      checked={newVariant?.isSamePrice}\n                      color=\"primary\"\n                    />\n                  )}\n                  classes={{\n                    root: 'textCapital fs14',\n                  }}\n                  label=\"Same as Original Price\"\n                  labelPlacement=\"end\"\n                  className={styles.same_mrp}\n                />\n              </Grid>\n              {!newVariant?.isSamePrice && (\n                <>\n                  <Grid item xs={6}>\n                    <WindoInput\n                      value={getValue(null, 'amount', true)}\n                      className={cx(styles.inputClass, styles.right8)}\n                      labelClassName={styles.labelClass}\n                      placeholder=\"0\"\n                      label=\"Original Price\"\n                      type=\"number\"\n                      setValue={(e) => setValue(null, 'amount', e)}\n                      InputProps={{\n                        classes: {\n                          input: cx(styles.slug, styles.single),\n                        },\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <WindoInput\n                      value={getValue(null, 'discountedAmount', true)}\n                      className={styles.inputClass}\n                      labelClassName={styles.labelClass}\n                      placeholder=\"0\"\n                      label=\"Price\"\n                      type=\"number\"\n                      setValue={(e) => {\n                        const mrp = getValue(null, 'amount', true);\n                        const isMin = parseFloat(mrp) < parseFloat(e);\n                        if (isMin) {\n                          setValue(null, 'discountedAmount', mrp);\n                          Snackbar.show('Price should be less than Original Price', 'error');\n                          return;\n                        }\n                        setValue(null, 'discountedAmount', e);\n                      }}\n                      InputProps={{\n                        classes: {\n                          input: cx(styles.slug, styles.single),\n                        },\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className=\"fs10 marginSTopBottom\">{getPercentage(null)}</div>\n                  </Grid>\n                </>\n              )}\n              <Grid item xs={6} className=\"marginSTopBottom\">\n                <FormControl component=\"fieldset\">\n                  <div className={cx(styles.labelClass1)}>Availability</div>\n                  <RadioGroup\n                    row\n                    aria-label=\"position\"\n                    name=\"position\"\n                    value={getValue(null, 'availableType', true)}\n                    defaultValue=\"top\"\n                    onChange={(e) => {\n                      setValue(null, 'availableType', e.target.value);\n                    }}\n                  >\n                    <FormControlLabel\n                      value=\"finite\"\n                      classes={{\n                        root: 'textCapital fs14',\n                      }}\n                      control={<Radio color=\"primary\" />}\n                      label=\"Limited Stock\"\n                    />\n                    <FormControlLabel\n                      value=\"infinite\"\n                      classes={{\n                        root: 'textCapital fs14',\n                      }}\n                      control={<Radio color=\"primary\" />}\n                      label=\"Always In-Stock\"\n                    />\n                  </RadioGroup>\n                </FormControl>\n              </Grid>\n              <Grid item xs={3} className=\"\">\n                {newVariant.availableType === 'finite' && (\n                  <>\n                    <div className={cx(styles.labelClass1)}>Quantity</div>\n                    <WindoInput\n                      value={getValue(null, 'available', true)}\n                      className={cx(styles.inputClass, styles.right8)}\n                      labelClassName={styles.labelClass}\n                      placeholder=\"0\"\n                      type=\"number\"\n                      setValue={(e) => setValue(null, 'available', e)}\n                      InputProps={{\n                        classes: {\n                          input: cx(styles.slug1, styles.single),\n                        },\n                      }}\n                    />\n                  </>\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <Upload\n                  type=\"variant\"\n                  items={[...getValue(null, 'images', true), ...getValue(null, 'videos', true)]}\n                  onSelect={(x) => {\n                    const imgs = x.filter(x => x.ext !== 'mp4');\n                    const vids = x.filter(x => x.ext === 'mp4');\n                    setValue(null, 'images', imgs);\n                    setValue(null, 'videos', vids);\n                  }}\n                />\n              </Grid>\n            </div>\n          )}\n          {getTypeValue(newVariant?.details, addVariantType).length > 0 && (\n            <div className=\"marginSTopBottom fullWidth\">\n              <PreviewVariants\n                variants={[{ details: { [addVariantType]: getTypeValue(newVariant?.details, addVariantType) } }]}\n              />\n            </div>\n          )}\n          <Grid\n            className={styles.variant}\n            item\n            xs={12}\n          >\n            <ButtonComponent\n              color=\"primary\"\n              text=\"Add\"\n              style={styles.blackButton}\n              onclick={() => {\n                const filterValues = pickBy(newVariant?.details, v => v.length > 0);\n                newVariant.details = filterValues;\n                setNewVariant(newVariant);\n                onBack();\n              }}\n            />\n          </Grid>\n        </div>\n      )}\n      <div className={styles.contens}>\n        <Dialog\n          open={openModal}\n          onClose={() => setModal(false)}\n        >\n          <DialogContent>\n            <Info\n              title=\"Pro Tip\"\n              text={'Want to add more colors for a given size or more sizes for the same color?'\n               + ' try creating new variant combinations. Eg: To create Size L,M of colors Red and White for each,'\n               + ' Create Size L and add color Red as one variant and create another'\n               + ' variant Size L and color White and so on.'\n               + ' This is applicable for custom variants too.'}\n            />\n          </DialogContent>\n        </Dialog>\n      </div>\n    </div>\n  );\n}\n\nVariants.propTypes = {\n  variants: PropTypes.array.isRequired,\n  setVariants: PropTypes.func.isRequired,\n  onBack: PropTypes.func.isRequired,\n  isUpdate: PropTypes.bool.isRequired,\n  selected: PropTypes.object,\n};\n\nVariants.defaultProps = {\n  selected: null,\n};\n\nexport default Variants;\n"]},"metadata":{},"sourceType":"module"}