{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/profile/address/List.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Drawer } from \"../../../components/shared/Drawer\";\nimport styles from \"./List.module.css\";\nimport { Clickable } from 'phoenix-components';\nimport emptyAddress from \"../../../assets/images/address/empty.svg\";\nimport { useShop } from \"../../../contexts\";\nimport Info from \"../../../components/info/Info\";\nimport { Card } from \"../../../components/address/Card\";\nimport { useToggle } from \"../../../hooks/common\";\nimport addIcon from \"../../../assets/images/address/add.svg\";\nimport { AddressForm } from \"../../../components/address/lazy\";\nimport { useDesktop } from \"../../../contexts\";\nimport chevronLeftDesk from \"../../../assets/v2/common/chevronPrimaryLeft.svg\";\nimport { useHistory } from 'react-router-dom';\n\nfunction List() {\n  _s();\n\n  const shop = useShop();\n  const [open, toggleOpen] = useToggle(false);\n  const {\n    addresses = []\n  } = shop;\n  const isDesktop = useDesktop();\n  const history = useHistory();\n  return isDesktop ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => history.goBack(),\n    className: styles.maintitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.backIconForDesktop,\n    src: chevronLeftDesk,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"\\xA0\"), \"Shop Address\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, addresses.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.desktopContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Address Book\"), addresses.map(address => /*#__PURE__*/React.createElement(Card, {\n    address: address,\n    key: address._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    className: styles.add,\n    onClick: toggleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.addImg1,\n    src: addIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Add New Address\"))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.emptyGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.emptyAddress,\n    src: emptyAddress,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.emptyText1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"You don't have any address saved!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    className: styles.add,\n    onClick: toggleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.addImg1,\n    src: addIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }, \"Add New Address\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Info, {\n    title: \"Pro Tip\",\n    text: \"Your address is required for KYC and shipping purposes only. It will not be disclosed to customers or other stakeholders.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })), open && /*#__PURE__*/React.createElement(AddressForm, {\n    onClose: toggleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Drawer, {\n    title: \"Shop Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, addresses.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Saved Address\"), addresses.map(address => /*#__PURE__*/React.createElement(Card, {\n    address: address,\n    key: address._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.emptyAddress,\n    src: emptyAddress,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.emptyText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"You don't have any address saved!\")), /*#__PURE__*/React.createElement(Info, {\n    title: \"Pro Tip\",\n    text: \"Your address is required for shipping purposes only. It will not be disclosed to customers or other stakeholders.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), open && /*#__PURE__*/React.createElement(AddressForm, {\n    onClose: toggleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Clickable, {\n    className: styles.add,\n    onClick: toggleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.addImg,\n    src: addIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \" Add New Address \"))));\n}\n\n_s(List, \"z8tztlfzO+CkGwVi8jd3gybMvVA=\", false, function () {\n  return [useShop, useToggle, useDesktop, useHistory];\n});\n\n_c = List;\nList.propTypes = {};\nList.defaultProps = {};\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/address/List.jsx"],"names":["React","Drawer","styles","Clickable","useShop","Info","Card","useToggle","AddressForm","useDesktop","useHistory","List","shop","open","toggleOpen","addresses","isDesktop","history","container","goBack","maintitle","backIconForDesktop","chevronLeftDesk","main","length","desktopContainer","title","map","address","_id","add","addImg1","addIcon","emptyGrid","emptyAddress","emptyText1","info","body","emptyText","addImg","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Drawer } from 'components/shared/Drawer';\nimport styles from 'containers/profile/address/List.module.css';\nimport { Clickable } from 'phoenix-components';\nimport emptyAddress from 'assets/images/address/empty.svg';\nimport { useShop } from 'contexts';\nimport Info from 'components/info/Info';\nimport { Card } from 'components/address/Card';\nimport { useToggle } from 'hooks/common';\nimport addIcon from 'assets/images/address/add.svg';\nimport { AddressForm } from 'components/address/lazy';\nimport { useDesktop } from 'contexts';\nimport chevronLeftDesk from 'assets/v2/common/chevronPrimaryLeft.svg';\nimport { useHistory } from 'react-router-dom';\n\nfunction List() {\n  const shop = useShop();\n  const [open, toggleOpen] = useToggle(false);\n  const { addresses = [] } = shop;\n  const isDesktop = useDesktop();\n  const history = useHistory();\n  return (\n    isDesktop ? (\n      <div className={styles.container}>\n        <div onClick={() => history.goBack()} className={styles.maintitle}>\n          <img className={styles.backIconForDesktop} src={chevronLeftDesk} alt=\"\" />\n          <div>&nbsp;</div>\n          <div>&nbsp;</div>\n          Shop Address\n        </div>\n        <div className={styles.main}>\n          {addresses.length > 0 ? (\n            <>\n              <div className={styles.desktopContainer}>\n                <div className={styles.title}>Address Book</div>\n                {addresses.map(address => (\n                  <Card address={address} key={address._id} />\n                ))}\n                <div className=\"flexCenter\">\n                  <Clickable\n                    className={styles.add}\n                    onClick={toggleOpen}\n                  >\n                    <img className={styles.addImg1} src={addIcon} alt=\"\" />\n                    <span>Add New Address</span>\n                  </Clickable>\n                </div>\n              </div>\n            </>\n          ) : (\n            <div className={styles.emptyGrid}>\n              <div className=\"flexCenter\">\n                <img className={styles.emptyAddress} src={emptyAddress} alt=\"\" />\n              </div>\n              <div className={styles.emptyText1}>You don't have any address saved!</div>\n              <div className=\"flexCenter\">\n                <Clickable\n                  className={styles.add}\n                  onClick={toggleOpen}\n                >\n                  <img className={styles.addImg1} src={addIcon} alt=\"\" />\n                  <span>Add New Address</span>\n                </Clickable>\n              </div>\n            </div>\n          )}\n          <div className={styles.info}>\n            <Info\n              title=\"Pro Tip\"\n              text=\"Your address is required for KYC and shipping purposes only.\n          It will not be disclosed to customers or other stakeholders.\"\n            />\n          </div>\n          {open && (<AddressForm onClose={toggleOpen} />)}\n        </div>\n        <div className={styles.body}></div>\n      </div>\n    )\n      : (\n        <Drawer title=\"Shop Address\">\n          <div className={styles.main}>\n            {addresses.length > 0 ? (\n              <>\n                <div className={styles.title}>Saved Address</div>\n                {addresses.map(address => (\n                  <Card address={address} key={address._id} />\n                ))}\n              </>\n            ) : (\n              <>\n                <div className=\"flexCenter\">\n                  <img className={styles.emptyAddress} src={emptyAddress} alt=\"\" />\n                </div>\n                <div className={styles.emptyText}>You don't have any address saved!</div>\n              </>\n            )}\n            <Info\n              title=\"Pro Tip\"\n              text=\"Your address is required for shipping purposes only.\n          It will not be disclosed to customers or other stakeholders.\"\n            />\n            {open && (<AddressForm onClose={toggleOpen} />)}\n            <Clickable\n              className={styles.add}\n              onClick={toggleOpen}\n            >\n              <img className={styles.addImg} src={addIcon} alt=\"\" />\n              <span> Add New Address </span>\n            </Clickable>\n          </div>\n        </Drawer>\n      )\n  );\n}\n\nList.propTypes = {};\n\nList.defaultProps = {};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}