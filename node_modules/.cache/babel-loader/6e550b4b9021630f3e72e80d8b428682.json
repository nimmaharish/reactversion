{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from 'react';\nimport SnackBar from \"../services/snackbar\";\nimport { Nikon } from \"../api\";\nexport function useProfile() {\n  _s();\n\n  const [profile, setProfile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const refresh = useCallback(async () => {\n    if (loading) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setProfile(await Nikon.getProfile());\n    } catch (e) {\n      console.error(e);\n      SnackBar.show('something went wrong', 'error');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    refresh();\n  }, [refresh]);\n  return [profile, refresh, loading];\n}\n\n_s(useProfile, \"99dyBxB1IjsJuwiBKkiWY1OLZm0=\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/hooks/profile.js"],"names":["useCallback","useEffect","useState","SnackBar","Nikon","useProfile","profile","setProfile","loading","setLoading","refresh","getProfile","e","console","error","show"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,QAAP;AACA,SAASC,KAAT;AAEA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMQ,OAAO,GAAGV,WAAW,CAAC,YAAY;AACtC,QAAIQ,OAAJ,EAAa;AACX;AACD;;AACD,QAAI;AACFC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,MAAAA,UAAU,CAAC,MAAMH,KAAK,CAACO,UAAN,EAAP,CAAV;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACAT,MAAAA,QAAQ,CAACY,IAAT,CAAc,sBAAd,EAAsC,OAAtC;AACD,KAND,SAMU;AACRN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAb0B,EAaxB,EAbwB,CAA3B;AAeAR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO;AACR,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,SAAO,CAACJ,OAAD,EAAUI,OAAV,EAAmBF,OAAnB,CAAP;AACD;;GAxBeH,U","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport SnackBar from 'services/snackbar';\nimport { Nikon } from 'api';\n\nexport function useProfile() {\n  const [profile, setProfile] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const refresh = useCallback(async () => {\n    if (loading) {\n      return;\n    }\n    try {\n      setLoading(true);\n      setProfile(await Nikon.getProfile());\n    } catch (e) {\n      console.error(e);\n      SnackBar.show('something went wrong', 'error');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    refresh();\n  }, [refresh]);\n\n  return [profile, refresh, loading];\n}\n"]},"metadata":{},"sourceType":"module"}