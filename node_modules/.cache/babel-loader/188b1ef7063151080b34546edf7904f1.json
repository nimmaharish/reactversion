{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/orders/Filters.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport cx from 'classnames';\nimport { isEmpty } from 'lodash';\nimport { useQueryParams } from \"../../hooks\";\nimport { Button, Drawer } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport notAppliedIcon from \"../../assets/images/payments/filter.svg\";\nimport appliedIcon from \"../../assets/images/payments/filterSel.svg\";\nimport clearIcon from \"../../assets/images/payments/clear.svg\";\nimport unchecked from \"../../assets/images/payments/unselect.svg\";\nimport checked from \"../../assets/v2/products/checked.svg\";\nimport { useDesktop } from \"../../contexts\";\nimport { SideDrawer } from \"../../components/shared/SideDrawer\";\nimport { Button as Btn } from 'phoenix-components';\nimport { orderShippingStatusLabels, orderStatusLabels, paymentStatusLabels } from \"./utils\";\nimport styles from \"./Filters.module.css\";\n\nfunction Filters() {\n  _s();\n\n  const [openOrderStatus, toggleOpenOrderStatus] = useState(false);\n  const [openShippingStatus, toggleOpenShippingStatus] = useState(false);\n  const [openPaymentStatus, toggleOpenPaymentStatus] = useState(false);\n  const isDesktop = useDesktop();\n  const params = useQueryParams();\n  const history = useHistory();\n  const isOrderStatusSelected = params.has('os');\n  const isShippingStatusSelected = params.has('ss');\n  const isPaymentStatusSelected = params.has('ps'); // intermediate state to push query params on btn click\n\n  const [ssToPush, toggleSsToPush] = useState([]);\n  const [psToPush, togglePsToPush] = useState([]);\n  const [osToPush, toggleOsToPush] = useState([]); // fetch applied filters\n\n  const getItems = type => {\n    if (type === 0 || type === 'os') {\n      return osToPush;\n    }\n\n    if (type === 1 || type === 'ss') {\n      return ssToPush;\n    }\n\n    return psToPush;\n  };\n\n  const getValues = type => {\n    const value = params.get(type);\n    const items = !isEmpty(value) && getItems(type).length === 0 ? value === null || value === void 0 ? void 0 : value.split(',') : getItems(type);\n    return items;\n  };\n\n  const appliedFilters = () => {\n    let osFilters = [];\n    let ssFilters = [];\n    let psFilters = [];\n\n    if (isOrderStatusSelected) {\n      osFilters = getValues('os');\n    }\n\n    if (isShippingStatusSelected) {\n      ssFilters = getValues('ss');\n    }\n\n    if (isPaymentStatusSelected) {\n      psFilters = getValues('ps');\n    }\n\n    return osFilters.concat(ssFilters).concat(psFilters);\n  }; // fetch applied filters with label\n\n\n  const appliedFilterLabels = value => {\n    const os = orderStatusLabels.find(x => x.value === value);\n\n    if (os) {\n      return os.label;\n    }\n\n    const ss = orderShippingStatusLabels.find(x => x.value === value);\n\n    if (ss) {\n      return ss.label;\n    }\n\n    const ps = paymentStatusLabels.find(x => x.value === value);\n\n    if (ps) {\n      return ps.label;\n    }\n\n    return value;\n  }; // removed selected filter\n\n\n  const removeSelectedFilter = item => {\n    if (isOrderStatusSelected) {\n      const items = getValues('os').filter(x => x !== item);\n\n      if (isEmpty(items)) {\n        params.delete('os');\n      } else {\n        params.set('os', items);\n      }\n    }\n\n    if (isShippingStatusSelected) {\n      const items = getValues('ss').filter(x => x !== item);\n\n      if (isEmpty(items)) {\n        params.delete('ss');\n      } else {\n        params.set('ss', items);\n      }\n    }\n\n    if (isPaymentStatusSelected) {\n      const items = getValues('ps').filter(x => x !== item);\n\n      if (isEmpty(items)) {\n        params.delete('ps');\n      } else {\n        params.set('ps', items);\n      }\n    }\n\n    history.push({\n      search: params.toString()\n    });\n  }; // toggle / hide  modals\n\n\n  const toggleModal = type => {\n    if (type === 0) {\n      toggleOpenOrderStatus(!openOrderStatus);\n    }\n\n    if (type === 1) {\n      toggleOpenShippingStatus(!openShippingStatus);\n    }\n\n    if (type === 2) {\n      toggleOpenPaymentStatus(!openPaymentStatus);\n    }\n  }; // clear filters\n\n\n  const clearFilters = () => {\n    params.delete('ss');\n    params.delete('ps');\n    params.delete('os');\n    history.push({\n      search: params.toString()\n    });\n  };\n\n  const handleChange = (isSelected, value, mode) => {\n    const selected = getValues(mode);\n\n    if (isSelected) {\n      const items = selected.concat(value);\n\n      if (mode === 'os') {\n        toggleOsToPush(items);\n      } else if (mode === 'ps') {\n        togglePsToPush(items);\n      } else {\n        toggleSsToPush(items);\n      }\n    } else {\n      const items = selected.filter(x => x !== value);\n\n      if (mode === 'os') {\n        toggleOsToPush(items);\n      } else if (mode === 'ps') {\n        togglePsToPush(items);\n      } else {\n        toggleSsToPush(items);\n      }\n    }\n  };\n\n  const isSelected = (item, mode) => {\n    const value = getValues(mode);\n    return value.includes(item === null || item === void 0 ? void 0 : item.value);\n  };\n\n  const title = type => type === 0 ? 'Order Status' : type === 1 ? 'Shipping Status' : 'Payment Status';\n\n  const labels = type => type === 0 ? orderStatusLabels : type === 1 ? orderShippingStatusLabels : paymentStatusLabels;\n\n  const body = (type, param) => {\n    const label = title(type);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }\n    }, !isDesktop && /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: styles.icon,\n      src: appliedIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }), label)), /*#__PURE__*/React.createElement(\"ul\", {\n      className: styles.list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }, labels(type).map((x, i) => /*#__PURE__*/React.createElement(\"li\", {\n      className: cx(styles.item, isSelected(x, param) && styles.active),\n      key: i,\n      role: \"presentation\",\n      onClick: () => handleChange(!isSelected(x, param), x.value, param),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, x.label, /*#__PURE__*/React.createElement(\"img\", {\n      src: isSelected(x, param) ? checked : unchecked,\n      className: styles.icon1,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 16\n      }\n    })))), !isDesktop && /*#__PURE__*/React.createElement(Btn, {\n      onClick: () => {\n        const items = getItems(type);\n\n        if (items.length === 0) {\n          params.delete(param);\n        } else {\n          params.set(param, items);\n          history.push({\n            search: params.toString()\n          });\n        }\n\n        toggleModal(type);\n      },\n      bordered: false,\n      fullWidth: true,\n      label: \"APPLY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !isDesktop && /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"bottom\",\n    open: openOrderStatus,\n    onClose: () => {\n      toggleModal(0);\n    },\n    PaperProps: {\n      classes: {\n        root: styles.paper\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, body(0, 'os')), isDesktop && openOrderStatus && /*#__PURE__*/React.createElement(SideDrawer, {\n    backButton: true,\n    onClick: () => {\n      const items = getItems(0);\n      const param = 'os';\n\n      if (items.length === 0) {\n        params.delete(param);\n      } else {\n        params.set(param, items);\n        history.push({\n          search: params.toString()\n        });\n      }\n\n      toggleModal(0);\n    },\n    onClose: () => {\n      toggleModal(0);\n    },\n    button: true,\n    btnLabel: \"Apply\",\n    title: title(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  }, body(0, 'os')), !isDesktop && /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"bottom\",\n    open: openShippingStatus,\n    onClose: () => {\n      toggleModal(1);\n    },\n    PaperProps: {\n      classes: {\n        root: styles.paper\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, body(1, 'ss')), isDesktop && openShippingStatus && /*#__PURE__*/React.createElement(SideDrawer, {\n    backButton: true,\n    onClick: () => {\n      const items = getItems(1);\n      const param = 'ss';\n\n      if (items.length === 0) {\n        params.delete(param);\n      } else {\n        params.set(param, items);\n        history.push({\n          search: params.toString()\n        });\n      }\n\n      toggleModal(1);\n    },\n    onClose: () => {\n      toggleModal(1);\n    },\n    button: true,\n    btnLabel: \"Apply\",\n    title: title(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, body(1, 'ss')), !isDesktop && /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"bottom\",\n    open: openPaymentStatus,\n    onClose: () => {\n      toggleModal(2);\n    },\n    PaperProps: {\n      classes: {\n        root: styles.paper\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }\n  }, body(2, 'ps')), isDesktop && openPaymentStatus && /*#__PURE__*/React.createElement(SideDrawer, {\n    backButton: true,\n    onClick: () => {\n      const items = getItems(2);\n      const param = 'ps';\n\n      if (items.length === 0) {\n        params.delete(param);\n      } else {\n        params.set(param, items);\n        history.push({\n          search: params.toString()\n        });\n      }\n\n      toggleModal(2);\n    },\n    onClose: () => {\n      toggleModal(2);\n    },\n    button: true,\n    btnLabel: \"Apply\",\n    title: title(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }\n  }, body(2, 'ps')), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => toggleModal(0),\n    className: cx(styles.button, {\n      [styles.btnActive]: isOrderStatusSelected\n    }),\n    endIcon: /*#__PURE__*/React.createElement(\"img\", {\n      src: isOrderStatusSelected ? appliedIcon : notAppliedIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }\n  }, title(0)), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => toggleModal(1),\n    className: cx(styles.button, {\n      [styles.btnActive]: isShippingStatusSelected\n    }),\n    endIcon: /*#__PURE__*/React.createElement(\"img\", {\n      src: isShippingStatusSelected ? appliedIcon : notAppliedIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 9\n    }\n  }, title(1)), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => toggleModal(2),\n    className: cx(styles.button, {\n      [styles.btnActive]: isPaymentStatusSelected\n    }),\n    endIcon: /*#__PURE__*/React.createElement(\"img\", {\n      src: isPaymentStatusSelected ? appliedIcon : notAppliedIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }\n  }, title(2))), (isOrderStatusSelected || isShippingStatusSelected || isPaymentStatusSelected) && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.appliedSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: clearFilters,\n    className: cx(styles.button, styles.btnActive, styles.widthAuto),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 11\n    }\n  }, \"Clear Filters\"), appliedFilters().map(x => /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => removeSelectedFilter(x),\n    className: cx(styles.button, styles.widthAuto, styles.padLeft),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 13\n    }\n  }, appliedFilterLabels(x), /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.delIcon,\n    src: clearIcon,\n    alt: \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 15\n    }\n  })))));\n}\n\n_s(Filters, \"kGUG7jf9NIW7olpWXSZfzxjVNsY=\", false, function () {\n  return [useDesktop, useQueryParams, useHistory];\n});\n\n_c = Filters;\nFilters.defaultProps = {};\nFilters.propTypes = {};\nexport default Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/orders/Filters.jsx"],"names":["React","useState","cx","isEmpty","useQueryParams","Button","Drawer","useHistory","useDesktop","SideDrawer","Btn","orderShippingStatusLabels","orderStatusLabels","paymentStatusLabels","styles","Filters","openOrderStatus","toggleOpenOrderStatus","openShippingStatus","toggleOpenShippingStatus","openPaymentStatus","toggleOpenPaymentStatus","isDesktop","params","history","isOrderStatusSelected","has","isShippingStatusSelected","isPaymentStatusSelected","ssToPush","toggleSsToPush","psToPush","togglePsToPush","osToPush","toggleOsToPush","getItems","type","getValues","value","get","items","length","split","appliedFilters","osFilters","ssFilters","psFilters","concat","appliedFilterLabels","os","find","x","label","ss","ps","removeSelectedFilter","item","filter","delete","set","push","search","toString","toggleModal","clearFilters","handleChange","isSelected","mode","selected","includes","title","labels","body","param","content","icon","appliedIcon","list","map","i","active","checked","unchecked","icon1","classes","root","paper","container","button","btnActive","notAppliedIcon","appliedSection","widthAuto","padLeft","delIcon","clearIcon","defaultProps","propTypes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport cx from 'classnames';\nimport { isEmpty } from 'lodash';\nimport { useQueryParams } from 'hooks';\nimport { Button, Drawer } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport notAppliedIcon from 'assets/images/payments/filter.svg';\nimport appliedIcon from 'assets/images/payments/filterSel.svg';\nimport clearIcon from 'assets/images/payments/clear.svg';\nimport unchecked from 'assets/images/payments/unselect.svg';\nimport checked from 'assets/v2/products/checked.svg';\nimport { useDesktop } from 'contexts';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { Button as Btn } from 'phoenix-components';\nimport { orderShippingStatusLabels, orderStatusLabels, paymentStatusLabels } from './utils';\nimport styles from './Filters.module.css';\n\nfunction Filters() {\n  const [openOrderStatus, toggleOpenOrderStatus] = useState(false);\n  const [openShippingStatus, toggleOpenShippingStatus] = useState(false);\n  const [openPaymentStatus, toggleOpenPaymentStatus] = useState(false);\n  const isDesktop = useDesktop();\n  const params = useQueryParams();\n  const history = useHistory();\n\n  const isOrderStatusSelected = params.has('os');\n  const isShippingStatusSelected = params.has('ss');\n  const isPaymentStatusSelected = params.has('ps');\n\n  // intermediate state to push query params on btn click\n  const [ssToPush, toggleSsToPush] = useState([]);\n  const [psToPush, togglePsToPush] = useState([]);\n  const [osToPush, toggleOsToPush] = useState([]);\n\n  // fetch applied filters\n\n  const getItems = (type) => {\n    if (type === 0 || type === 'os') {\n      return osToPush;\n    } if (type === 1 || type === 'ss') {\n      return ssToPush;\n    }\n    return psToPush;\n  };\n\n  const getValues = (type) => {\n    const value = params.get(type);\n    const items = !isEmpty(value) && getItems(type).length === 0 ? value?.split(',') : getItems(type);\n    return items;\n  };\n\n  const appliedFilters = () => {\n    let osFilters = [];\n    let ssFilters = [];\n    let psFilters = [];\n    if (isOrderStatusSelected) {\n      osFilters = getValues('os');\n    }\n    if (isShippingStatusSelected) {\n      ssFilters = getValues('ss');\n    }\n    if (isPaymentStatusSelected) {\n      psFilters = getValues('ps');\n    }\n    return osFilters.concat(ssFilters).concat(psFilters);\n  };\n\n  // fetch applied filters with label\n\n  const appliedFilterLabels = (value) => {\n    const os = orderStatusLabels.find(x => x.value === value);\n    if (os) {\n      return os.label;\n    }\n    const ss = orderShippingStatusLabels.find(x => x.value === value);\n    if (ss) {\n      return ss.label;\n    }\n    const ps = paymentStatusLabels.find(x => x.value === value);\n    if (ps) {\n      return ps.label;\n    }\n    return value;\n  };\n\n  // removed selected filter\n\n  const removeSelectedFilter = (item) => {\n    if (isOrderStatusSelected) {\n      const items = getValues('os').filter(x => x !== item);\n      if (isEmpty(items)) {\n        params.delete('os');\n      } else {\n        params.set('os', items);\n      }\n    }\n    if (isShippingStatusSelected) {\n      const items = getValues('ss').filter(x => x !== item);\n      if (isEmpty(items)) {\n        params.delete('ss');\n      } else {\n        params.set('ss', items);\n      }\n    }\n    if (isPaymentStatusSelected) {\n      const items = getValues('ps').filter(x => x !== item);\n      if (isEmpty(items)) {\n        params.delete('ps');\n      } else {\n        params.set('ps', items);\n      }\n    }\n    history.push({\n      search: params.toString(),\n    });\n  };\n\n  // toggle / hide  modals\n\n  const toggleModal = (type) => {\n    if (type === 0) {\n      toggleOpenOrderStatus(!openOrderStatus);\n    }\n    if (type === 1) {\n      toggleOpenShippingStatus(!openShippingStatus);\n    }\n    if (type === 2) {\n      toggleOpenPaymentStatus(!openPaymentStatus);\n    }\n  };\n\n  // clear filters\n\n  const clearFilters = () => {\n    params.delete('ss');\n    params.delete('ps');\n    params.delete('os');\n    history.push({\n      search: params.toString(),\n    });\n  };\n\n  const handleChange = (isSelected, value, mode) => {\n    const selected = getValues(mode);\n    if (isSelected) {\n      const items = selected.concat(value);\n      if (mode === 'os') {\n        toggleOsToPush(items);\n      } else if (mode === 'ps') {\n        togglePsToPush(items);\n      } else {\n        toggleSsToPush(items);\n      }\n    } else {\n      const items = selected.filter(x => x !== value);\n      if (mode === 'os') {\n        toggleOsToPush(items);\n      } else if (mode === 'ps') {\n        togglePsToPush(items);\n      } else {\n        toggleSsToPush(items);\n      }\n    }\n  };\n\n  const isSelected = (item, mode) => {\n    const value = getValues(mode);\n    return value.includes(item?.value);\n  };\n\n  const title = (type) => (type === 0 ? 'Order Status' : type === 1 ? 'Shipping Status' : 'Payment Status');\n\n  const labels = (type) => (type === 0\n    ? orderStatusLabels\n    : (type === 1\n      ? orderShippingStatusLabels\n      : paymentStatusLabels\n    ));\n\n  const body = (type, param) => {\n    const label = title(type);\n    return (\n      <div className={styles.content}>\n        {!isDesktop && (\n          <div className={styles.label}>\n            <div className={styles.title}>\n              <img className={styles.icon} src={appliedIcon} alt=\"\" />\n              {label}\n            </div>\n          </div>\n        )}\n        <ul className={styles.list}>\n          {labels(type).map((x, i) => (\n            <li\n              className={cx(styles.item, isSelected(x, param) && styles.active)}\n              key={i}\n              role=\"presentation\"\n              onClick={() => handleChange(!isSelected(x, param), x.value, param)}\n            >\n              {x.label}\n              {<img src={isSelected(x, param) ? checked : unchecked} className={styles.icon1} alt=\"\" />}\n            </li>\n          ))}\n        </ul>\n        {!isDesktop && (\n          <Btn\n            onClick={() => {\n              const items = getItems(type);\n              if (items.length === 0) {\n                params.delete(param);\n              } else {\n                params.set(param, items);\n                history.push({\n                  search: params.toString(),\n                });\n              }\n              toggleModal(type);\n            }}\n            bordered={false}\n            fullWidth\n            label=\"APPLY\" />\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {!isDesktop && (\n        <Drawer\n          anchor=\"bottom\"\n          open={openOrderStatus}\n          onClose={() => {\n            toggleModal(0);\n          }}\n          PaperProps={{\n            classes: {\n              root: styles.paper,\n            }\n          }}\n        >\n          {body(0, 'os')}\n        </Drawer>\n      )}\n      {isDesktop && openOrderStatus && (\n        <SideDrawer\n          backButton={true}\n          onClick={() => {\n            const items = getItems(0);\n            const param = 'os';\n            if (items.length === 0) {\n              params.delete(param);\n            } else {\n              params.set(param, items);\n              history.push({\n                search: params.toString(),\n              });\n            }\n            toggleModal(0);\n          }}\n          onClose={() => {\n            toggleModal(0);\n          }}\n          button={true}\n          btnLabel=\"Apply\"\n          title={title(0)}\n        >\n          {body(0, 'os')}\n        </SideDrawer>\n      )}\n      {!isDesktop && (\n        <Drawer\n          anchor=\"bottom\"\n          open={openShippingStatus}\n          onClose={() => {\n            toggleModal(1);\n          }}\n          PaperProps={{\n            classes: {\n              root: styles.paper,\n            }\n          }}\n        >\n          {body(1, 'ss')}\n        </Drawer>\n      )}\n      {isDesktop && openShippingStatus && (\n        <SideDrawer\n          backButton={true}\n          onClick={() => {\n            const items = getItems(1);\n            const param = 'ss';\n            if (items.length === 0) {\n              params.delete(param);\n            } else {\n              params.set(param, items);\n              history.push({\n                search: params.toString(),\n              });\n            }\n            toggleModal(1);\n          }}\n          onClose={() => {\n            toggleModal(1);\n          }}\n          button={true}\n          btnLabel=\"Apply\"\n          title={title(1)}\n        >\n          {body(1, 'ss')}\n        </SideDrawer>\n      )}\n      {!isDesktop && (\n        <Drawer\n          anchor=\"bottom\"\n          open={openPaymentStatus}\n          onClose={() => {\n            toggleModal(2);\n          }}\n          PaperProps={{\n            classes: {\n              root: styles.paper,\n            }\n          }}\n        >\n          {body(2, 'ps')}\n        </Drawer>\n      )}\n      {isDesktop && openPaymentStatus && (\n        <SideDrawer\n          backButton={true}\n          onClick={() => {\n            const items = getItems(2);\n            const param = 'ps';\n            if (items.length === 0) {\n              params.delete(param);\n            } else {\n              params.set(param, items);\n              history.push({\n                search: params.toString(),\n              });\n            }\n            toggleModal(2);\n          }}\n          onClose={() => {\n            toggleModal(2);\n          }}\n          button={true}\n          btnLabel=\"Apply\"\n          title={title(2)}\n        >\n          {body(2, 'ps')}\n        </SideDrawer>\n      )}\n      <div className={styles.container}>\n        <Button\n          onClick={() => toggleModal(0)}\n          className={cx(styles.button, {\n            [styles.btnActive]: isOrderStatusSelected\n          })}\n          endIcon={<img src={isOrderStatusSelected ? appliedIcon : notAppliedIcon} alt=\"\" />}\n        >\n          {title(0)}\n        </Button>\n        <Button\n          onClick={() => toggleModal(1)}\n          className={cx(styles.button, {\n            [styles.btnActive]: isShippingStatusSelected\n          })}\n          endIcon={<img src={isShippingStatusSelected ? appliedIcon : notAppliedIcon} alt=\"\" />}\n        >\n          {title(1)}\n        </Button>\n        <Button\n          onClick={() => toggleModal(2)}\n          className={cx(styles.button, {\n            [styles.btnActive]: isPaymentStatusSelected\n          })}\n          endIcon={<img src={isPaymentStatusSelected ? appliedIcon : notAppliedIcon} alt=\"\" />}\n        >\n          {title(2)}\n        </Button>\n      </div>\n      {(isOrderStatusSelected\n      || isShippingStatusSelected\n      || isPaymentStatusSelected) && (\n        <div className={styles.appliedSection}>\n          <div\n            onClick={clearFilters}\n            className={cx(styles.button, styles.btnActive, styles.widthAuto)}\n          >\n            Clear Filters\n          </div>\n          {appliedFilters().map(x => (\n            <div\n              onClick={() => removeSelectedFilter(x)}\n              className={cx(styles.button, styles.widthAuto, styles.padLeft)}\n            >\n              {appliedFilterLabels(x)}\n              <img className={styles.delIcon} src={clearIcon} alt=\"delete\" />\n            </div>\n          ))}\n        </div>\n      )}\n    </>\n  );\n}\n\nFilters.defaultProps = {\n};\n\nFilters.propTypes = {\n};\n\nexport default Filters;\n"]},"metadata":{},"sourceType":"module"}