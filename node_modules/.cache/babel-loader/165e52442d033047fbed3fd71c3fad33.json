{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/userProfile/InstaImport.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unreachable */\n\n/* eslint-disable react/button-has-type */\nimport React, { useEffect, useState } from 'react';\nimport importIcon from \"../../assets/images/insta.png\";\nimport tipIcon from \"../../assets/images/tipIcon.svg\";\nimport { Dialog, DialogContent } from '@material-ui/core';\nimport SnackBar from \"../../services/snackbar\";\nimport Loader from \"../../services/loader\";\nimport { Nikon } from \"../../api\";\nimport PropTypes from 'prop-types';\nimport WebView from \"../../services/webview\";\nimport { useQueryParams } from \"../../hooks\";\nimport { useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport { Button, Clickable } from 'phoenix-components'; // import closeIcon from 'assets/images/common/close.svg';\n\nimport { useToggle } from \"../../hooks/common\";\nimport { UnlinkInstagram } from \"./UnlinkInstagram\";\nimport { useIsInstantSyncEnabled } from \"../../contexts/userContext\";\nimport EventManager from \"../../utils/events\";\nimport styles from \"./InstaImport.module.css\";\nimport { InstaMessage } from \"./InstaMessage\";\n\nconst getInstaUrl = () => {\n  const url = new URL('https://api.instagram.com/oauth/authorize');\n  url.searchParams.set('client_id', '1129552074233709');\n  url.searchParams.set('redirect_uri', `${document.location.protocol}//${document.location.host}/instagram`);\n  url.searchParams.set('response_type', 'code');\n  url.searchParams.set('scope', 'user_profile,user_media');\n  url.searchParams.set('force_authentication', '1');\n  return url.toString();\n};\n\nexport function InstaImport({\n  onClose,\n  profile,\n  page,\n  customButton\n}) {\n  _s();\n\n  var _profile$importImages, _profile$loginRequire, _profile$posts;\n\n  const [openPopup, setOpenPopup] = useState(false);\n  const [account, setAccount] = useState(null);\n  const [openUnlink, toggleUnlink] = useToggle(false);\n  const history = useHistory();\n  const params = useQueryParams();\n  const enabled = (_profile$importImages = profile === null || profile === void 0 ? void 0 : profile.importImages) !== null && _profile$importImages !== void 0 ? _profile$importImages : true;\n  const loginRequired = (_profile$loginRequire = profile === null || profile === void 0 ? void 0 : profile.loginRequired) !== null && _profile$loginRequire !== void 0 ? _profile$loginRequire : false;\n  const posts = (_profile$posts = profile === null || profile === void 0 ? void 0 : profile.posts) !== null && _profile$posts !== void 0 ? _profile$posts : 100;\n  const isInstantSyncEnabled = useIsInstantSyncEnabled();\n\n  const closeSyncPopup = () => {\n    setOpenPopup(false);\n    onClose();\n    history.replace('/overview');\n  };\n\n  const syncCode = async code => {\n    try {\n      Loader.show();\n      EventManager.emitEvent('instagram_account_synced');\n      await Nikon.syncInstagramProfile(code, `${document.location.href}`);\n      setOpenPopup(true);\n    } catch (e) {\n      SnackBar.showError(e);\n      history.replace('/overview');\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  useEffect(() => {\n    if (params.has('code')) {\n      syncCode(params.get('code'));\n    }\n  }, [params.has('code')]);\n\n  const importInstagram = async e => {\n    e.stopPropagation();\n\n    try {\n      const acc = await Nikon.getInstagramAccount();\n\n      if (!(acc !== null && acc !== void 0 && acc.loginRequired)) {\n        setAccount(acc);\n        return;\n      }\n\n      if (!WebView.isWebView()) {\n        window.location.href = getInstaUrl();\n        return;\n      }\n\n      Loader.show();\n      const {\n        code\n      } = await WebView.instagramLogin();\n      EventManager.emitEvent('instagram_account_synced');\n      await Nikon.syncInstagramProfile(code, 'https://seller.windo.live/instagram');\n      setOpenPopup(true);\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const syncNow = async () => {\n    if (!isInstantSyncEnabled) {\n      params.set('openPlans', 'generic');\n      history.push({\n        search: params.toString()\n      });\n      return;\n    }\n\n    Loader.show();\n\n    try {\n      await Nikon.syncInstagramNow();\n      SnackBar.show('Your posts will be synced with in next few minutes', 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onUnlinkSubmit = () => {\n    setOpenPopup(false);\n    setAccount(null);\n    toggleUnlink();\n    onClose();\n  };\n\n  if (openUnlink) {\n    return /*#__PURE__*/React.createElement(UnlinkInstagram, {\n      onSubmit: onUnlinkSubmit,\n      onClose: toggleUnlink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    });\n  }\n\n  if (enabled && !loginRequired && page === 'overview') {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, openPopup && /*#__PURE__*/React.createElement(InstaMessage, {\n    closeSyncPopup: closeSyncPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }), (page === 'settings' || page === 'posts') && customButton ? /*#__PURE__*/React.createElement(\"div\", {\n    onClick: importInstagram,\n    className: styles.shopSetting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, customButton) : /*#__PURE__*/React.createElement(React.Fragment, null, posts === 0 && /*#__PURE__*/React.createElement(React.Fragment, null, enabled ? /*#__PURE__*/React.createElement(\"div\", {\n    id: \"import\",\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    className: styles.syncButton,\n    onClick: importInstagram,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: importIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }), \"Import Instagram\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.disabledButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, \"Importing ...\"))), account !== null && /*#__PURE__*/React.createElement(Dialog, {\n    open: true,\n    fullWidth: true,\n    onClick: () => {\n      setAccount(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.contentGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.gridLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, \"User Name :\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.gridRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, account.userName || '')), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.contentGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.gridLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, \"Posts Imported :\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.gridRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, account.posts || 0)), account.lastSync && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.contentGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.gridLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }\n  }, \"Last Sync\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.lastSync,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }, moment(account.lastSync).format('lll')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.instaSyncTip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: tipIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.tipText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, \" Pro Tip\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.instaTipBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, \"Your instagram account is synced once everyday. It automatically imports new posts once in a day\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: syncNow,\n    label: \"Sync Now\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.unlinkButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, \"Do you want to unlink your Instagram account?\", /*#__PURE__*/React.createElement(Clickable, {\n    onClick: toggleUnlink,\n    style: {\n      color: 'var(--primary)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, \" Unlink\")))));\n}\n\n_s(InstaImport, \"znPETjqdiBNw4G8+Os3aNzATExQ=\", false, function () {\n  return [useToggle, useHistory, useQueryParams, useIsInstantSyncEnabled];\n});\n\n_c = InstaImport;\nInstaImport.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  page: PropTypes.string.isRequired,\n  customButton: PropTypes.any\n};\nInstaImport.defaultProps = {\n  customButton: null\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"InstaImport\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/userProfile/InstaImport.jsx"],"names":["React","useEffect","useState","importIcon","Dialog","DialogContent","SnackBar","Loader","Nikon","PropTypes","WebView","useQueryParams","useHistory","moment","Button","Clickable","useToggle","UnlinkInstagram","useIsInstantSyncEnabled","EventManager","styles","InstaMessage","getInstaUrl","url","URL","searchParams","set","document","location","protocol","host","toString","InstaImport","onClose","profile","page","customButton","openPopup","setOpenPopup","account","setAccount","openUnlink","toggleUnlink","history","params","enabled","importImages","loginRequired","posts","isInstantSyncEnabled","closeSyncPopup","replace","syncCode","code","show","emitEvent","syncInstagramProfile","href","e","showError","hide","has","get","importInstagram","stopPropagation","acc","getInstagramAccount","isWebView","window","instagramLogin","syncNow","push","search","syncInstagramNow","onUnlinkSubmit","shopSetting","button","syncButton","disabledButton","contentGrid","gridLeft","gridRight","userName","lastSync","format","instaSyncTip","tipIcon","tipText","instaTipBody","buttonContainer","unlinkButtonText","color","propTypes","func","isRequired","object","string","any","defaultProps"],"mappings":";;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP;;AAEA,SAASC,MAAT,EAAiBC,aAAjB,QAAsC,mBAAtC;AACA,OAAOC,QAAP;AACA,OAAOC,MAAP;AACA,SAASC,KAAT;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP;AACA,SAASC,cAAT;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,oBAAlC,C,CACA;;AACA,SAASC,SAAT;AACA,SAASC,eAAT;AACA,SACEC,uBADF;AAGA,OAAOC,YAAP;AACA,OAAOC,MAAP;AACA,SAASC,YAAT;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQ,2CAAR,CAAZ;AACAD,EAAAA,GAAG,CAACE,YAAJ,CAAiBC,GAAjB,CAAqB,WAArB,EAAkC,kBAAlC;AACAH,EAAAA,GAAG,CAACE,YAAJ,CAAiBC,GAAjB,CAAqB,cAArB,EAAsC,GAAEC,QAAQ,CAACC,QAAT,CAAkBC,QAAS,KAAIF,QAAQ,CAACC,QAAT,CAAkBE,IAAK,YAA9F;AACAP,EAAAA,GAAG,CAACE,YAAJ,CAAiBC,GAAjB,CAAqB,eAArB,EAAsC,MAAtC;AACAH,EAAAA,GAAG,CAACE,YAAJ,CAAiBC,GAAjB,CAAqB,OAArB,EAA8B,yBAA9B;AACAH,EAAAA,GAAG,CAACE,YAAJ,CAAiBC,GAAjB,CAAqB,sBAArB,EAA6C,GAA7C;AACA,SAAOH,GAAG,CAACQ,QAAJ,EAAP;AACD,CARD;;AAUA,OAAO,SAASC,WAAT,CAAqB;AAC1BC,EAAAA,OAD0B;AAE1BC,EAAAA,OAF0B;AAG1BC,EAAAA,IAH0B;AAI1BC,EAAAA;AAJ0B,CAArB,EAKJ;AAAA;;AAAA;;AACD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BpC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACqC,OAAD,EAAUC,UAAV,IAAwBtC,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACuC,UAAD,EAAaC,YAAb,IAA6B1B,SAAS,CAAC,KAAD,CAA5C;AACA,QAAM2B,OAAO,GAAG/B,UAAU,EAA1B;AAEA,QAAMgC,MAAM,GAAGjC,cAAc,EAA7B;AACA,QAAMkC,OAAO,4BAAGX,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEY,YAAZ,yEAA4B,IAAzC;AACA,QAAMC,aAAa,4BAAGb,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEa,aAAZ,yEAA6B,KAAhD;AACA,QAAMC,KAAK,qBAAGd,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEc,KAAZ,2DAAqB,GAAhC;AACA,QAAMC,oBAAoB,GAAG/B,uBAAuB,EAApD;;AAEA,QAAMgC,cAAc,GAAG,MAAM;AAC3BZ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAL,IAAAA,OAAO;AACPU,IAAAA,OAAO,CAACQ,OAAR,CAAgB,WAAhB;AACD,GAJD;;AAMA,QAAMC,QAAQ,GAAG,MAAMC,IAAN,IAAc;AAC7B,QAAI;AACF9C,MAAAA,MAAM,CAAC+C,IAAP;AACAnC,MAAAA,YAAY,CAACoC,SAAb,CAAuB,0BAAvB;AACA,YAAM/C,KAAK,CAACgD,oBAAN,CAA2BH,IAA3B,EAAkC,GAAE1B,QAAQ,CAACC,QAAT,CAAkB6B,IAAK,EAA3D,CAAN;AACAnB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KALD,CAKE,OAAOoB,CAAP,EAAU;AACVpD,MAAAA,QAAQ,CAACqD,SAAT,CAAmBD,CAAnB;AACAf,MAAAA,OAAO,CAACQ,OAAR,CAAgB,WAAhB;AACD,KARD,SAQU;AACR5C,MAAAA,MAAM,CAACqD,IAAP;AACD;AACF,GAZD;;AAcA3D,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI2C,MAAM,CAACiB,GAAP,CAAW,MAAX,CAAJ,EAAwB;AACtBT,MAAAA,QAAQ,CAACR,MAAM,CAACkB,GAAP,CAAW,MAAX,CAAD,CAAR;AACD;AACF,GAJQ,EAIN,CAAClB,MAAM,CAACiB,GAAP,CAAW,MAAX,CAAD,CAJM,CAAT;;AAMA,QAAME,eAAe,GAAG,MAAOL,CAAP,IAAa;AACnCA,IAAAA,CAAC,CAACM,eAAF;;AACA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMzD,KAAK,CAAC0D,mBAAN,EAAlB;;AACA,UAAI,EAACD,GAAD,aAACA,GAAD,eAACA,GAAG,CAAElB,aAAN,CAAJ,EAAyB;AACvBP,QAAAA,UAAU,CAACyB,GAAD,CAAV;AACA;AACD;;AACD,UAAI,CAACvD,OAAO,CAACyD,SAAR,EAAL,EAA0B;AACxBC,QAAAA,MAAM,CAACxC,QAAP,CAAgB6B,IAAhB,GAAuBnC,WAAW,EAAlC;AACA;AACD;;AACDf,MAAAA,MAAM,CAAC+C,IAAP;AACA,YAAM;AAAED,QAAAA;AAAF,UAAW,MAAM3C,OAAO,CAAC2D,cAAR,EAAvB;AACAlD,MAAAA,YAAY,CAACoC,SAAb,CAAuB,0BAAvB;AACA,YAAM/C,KAAK,CAACgD,oBAAN,CAA2BH,IAA3B,EAAiC,qCAAjC,CAAN;AACAf,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAfD,CAeE,OAAOoB,CAAP,EAAU;AACVpD,MAAAA,QAAQ,CAACqD,SAAT,CAAmBD,CAAnB;AACD,KAjBD,SAiBU;AACRnD,MAAAA,MAAM,CAACqD,IAAP;AACD;AACF,GAtBD;;AAwBA,QAAMU,OAAO,GAAG,YAAY;AAC1B,QAAI,CAACrB,oBAAL,EAA2B;AACzBL,MAAAA,MAAM,CAAClB,GAAP,CAAW,WAAX,EAAwB,SAAxB;AACAiB,MAAAA,OAAO,CAAC4B,IAAR,CAAa;AACXC,QAAAA,MAAM,EAAE5B,MAAM,CAACb,QAAP;AADG,OAAb;AAGA;AACD;;AACDxB,IAAAA,MAAM,CAAC+C,IAAP;;AACA,QAAI;AACF,YAAM9C,KAAK,CAACiE,gBAAN,EAAN;AACAnE,MAAAA,QAAQ,CAACgD,IAAT,CAAc,oDAAd,EAAoE,SAApE;AACD,KAHD,CAGE,OAAOI,CAAP,EAAU;AACVpD,MAAAA,QAAQ,CAACqD,SAAT,CAAmBD,CAAnB;AACD,KALD,SAKU;AACRnD,MAAAA,MAAM,CAACqD,IAAP;AACD;AACF,GAjBD;;AAmBA,QAAMc,cAAc,GAAG,MAAM;AAC3BpC,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,YAAY;AACZT,IAAAA,OAAO;AACR,GALD;;AAOA,MAAIQ,UAAJ,EAAgB;AACd,wBACE,oBAAC,eAAD;AAAiB,MAAA,QAAQ,EAAEiC,cAA3B;AAA2C,MAAA,OAAO,EAAEhC,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAED,MAAIG,OAAO,IAAI,CAACE,aAAZ,IAA6BZ,IAAI,KAAK,UAA1C,EAAsD;AACpD,WAAO,IAAP;AACD;;AAED,sBACE,0CACGE,SAAS,iBAAI,oBAAC,YAAD;AAAc,IAAA,cAAc,EAAEa,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhB,EAEG,CAACf,IAAI,KAAK,UAAT,IAAuBA,IAAI,KAAK,OAAjC,KAA6CC,YAA7C,gBACC;AAAK,IAAA,OAAO,EAAE2B,eAAd;AAA+B,IAAA,SAAS,EAAE3C,MAAM,CAACuD,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvC,YADH,CADD,gBAKC,0CACGY,KAAK,KAAK,CAAV,iBACC,0CACGH,OAAO,gBACN;AAAK,IAAA,EAAE,EAAC,QAAR;AAAiB,IAAA,SAAS,EAAEzB,MAAM,CAACwD,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAExD,MAAM,CAACyD,UADpB;AAEE,IAAA,OAAO,EAAEd,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAK,IAAA,GAAG,EAAE5D,UAAV;AAAsB,IAAA,GAAG,EAAC,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,qBADF,CADM,gBAWN;AAAK,IAAA,SAAS,EAAEiB,MAAM,CAAC0D,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAZJ,CAFJ,CAPJ,EA6BGvC,OAAO,KAAK,IAAZ,iBACC,oBAAC,MAAD;AACE,IAAA,IAAI,EAAE,IADR;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEpB,MAAM,CAAC2D,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAE3D,MAAM,CAAC4D,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAK,IAAA,SAAS,EAAE5D,MAAM,CAAC6D,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmC1C,OAAO,CAAC2C,QAAR,IAAoB,EAAvD,CAFF,CADF,eAKE;AAAK,IAAA,SAAS,EAAE9D,MAAM,CAAC2D,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAE3D,MAAM,CAAC4D,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,IAAA,SAAS,EAAE5D,MAAM,CAAC6D,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmC1C,OAAO,CAACS,KAAR,IAAiB,CAApD,CAFF,CALF,EASGT,OAAO,CAAC4C,QAAR,iBACC,uDACE;AAAK,IAAA,SAAS,EAAE/D,MAAM,CAAC2D,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAE3D,MAAM,CAAC4D,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAK,IAAA,SAAS,EAAE5D,MAAM,CAAC+D,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtE,MAAM,CAAC0B,OAAO,CAAC4C,QAAT,CAAN,CACEC,MADF,CACS,KADT,CADH,CAFF,CADF,CAVJ,eAqBE;AAAK,IAAA,SAAS,EAAEhE,MAAM,CAACiE,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEC,OAAV;AAAmB,IAAA,GAAG,EAAC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAElE,MAAM,CAACmE,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CArBF,eAyBE;AAAK,IAAA,SAAS,EAAEnE,MAAM,CAACoE,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wGAzBF,eA4BE;AAAK,IAAA,SAAS,EAAEpE,MAAM,CAACqE,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEnB,OADX;AAEE,IAAA,KAAK,EAAC,UAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA5BF,eAkCE;AAAK,IAAA,SAAS,EAAElD,MAAM,CAACsE,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEAEE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEhD,YAApB;AAAkC,IAAA,KAAK,EAAE;AAAEiD,MAAAA,KAAK,EAAE;AAAT,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CAlCF,CAPF,CA9BJ,CADF;AAiFD;;GAxLe3D,W;UAQqBhB,S,EACnBJ,U,EAEDD,c,EAIcO,uB;;;KAffc,W;AA0LhBA,WAAW,CAAC4D,SAAZ,GAAwB;AACtB3D,EAAAA,OAAO,EAAExB,SAAS,CAACoF,IAAV,CAAeC,UADF;AAEtB5D,EAAAA,OAAO,EAAEzB,SAAS,CAACsF,MAAV,CAAiBD,UAFJ;AAGtB3D,EAAAA,IAAI,EAAE1B,SAAS,CAACuF,MAAV,CAAiBF,UAHD;AAItB1D,EAAAA,YAAY,EAAE3B,SAAS,CAACwF;AAJF,CAAxB;AAOAjE,WAAW,CAACkE,YAAZ,GAA2B;AACzB9D,EAAAA,YAAY,EAAE;AADW,CAA3B","sourcesContent":["/* eslint-disable no-unreachable */\n/* eslint-disable react/button-has-type */\nimport React, { useEffect, useState } from 'react';\nimport importIcon from 'assets/images/insta.png';\nimport tipIcon from 'assets/images/tipIcon.svg';\nimport { Dialog, DialogContent } from '@material-ui/core';\nimport SnackBar from 'services/snackbar';\nimport Loader from 'services/loader';\nimport { Nikon } from 'api';\nimport PropTypes from 'prop-types';\nimport WebView from 'services/webview';\nimport { useQueryParams } from 'hooks';\nimport { useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport { Button, Clickable } from 'phoenix-components';\n// import closeIcon from 'assets/images/common/close.svg';\nimport { useToggle } from 'hooks/common';\nimport { UnlinkInstagram } from 'components/userProfile/UnlinkInstagram';\nimport {\n  useIsInstantSyncEnabled\n} from 'contexts/userContext';\nimport EventManager from 'utils/events';\nimport styles from './InstaImport.module.css';\nimport { InstaMessage } from './InstaMessage';\n\nconst getInstaUrl = () => {\n  const url = new URL('https://api.instagram.com/oauth/authorize');\n  url.searchParams.set('client_id', '1129552074233709');\n  url.searchParams.set('redirect_uri', `${document.location.protocol}//${document.location.host}/instagram`);\n  url.searchParams.set('response_type', 'code');\n  url.searchParams.set('scope', 'user_profile,user_media');\n  url.searchParams.set('force_authentication', '1');\n  return url.toString();\n};\n\nexport function InstaImport({\n  onClose,\n  profile,\n  page,\n  customButton,\n}) {\n  const [openPopup, setOpenPopup] = useState(false);\n  const [account, setAccount] = useState(null);\n  const [openUnlink, toggleUnlink] = useToggle(false);\n  const history = useHistory();\n\n  const params = useQueryParams();\n  const enabled = profile?.importImages ?? true;\n  const loginRequired = profile?.loginRequired ?? false;\n  const posts = profile?.posts ?? 100;\n  const isInstantSyncEnabled = useIsInstantSyncEnabled();\n\n  const closeSyncPopup = () => {\n    setOpenPopup(false);\n    onClose();\n    history.replace('/overview');\n  };\n\n  const syncCode = async code => {\n    try {\n      Loader.show();\n      EventManager.emitEvent('instagram_account_synced');\n      await Nikon.syncInstagramProfile(code, `${document.location.href}`);\n      setOpenPopup(true);\n    } catch (e) {\n      SnackBar.showError(e);\n      history.replace('/overview');\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  useEffect(() => {\n    if (params.has('code')) {\n      syncCode(params.get('code'));\n    }\n  }, [params.has('code')]);\n\n  const importInstagram = async (e) => {\n    e.stopPropagation();\n    try {\n      const acc = await Nikon.getInstagramAccount();\n      if (!acc?.loginRequired) {\n        setAccount(acc);\n        return;\n      }\n      if (!WebView.isWebView()) {\n        window.location.href = getInstaUrl();\n        return;\n      }\n      Loader.show();\n      const { code } = await WebView.instagramLogin();\n      EventManager.emitEvent('instagram_account_synced');\n      await Nikon.syncInstagramProfile(code, 'https://seller.windo.live/instagram');\n      setOpenPopup(true);\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const syncNow = async () => {\n    if (!isInstantSyncEnabled) {\n      params.set('openPlans', 'generic');\n      history.push({\n        search: params.toString(),\n      });\n      return;\n    }\n    Loader.show();\n    try {\n      await Nikon.syncInstagramNow();\n      SnackBar.show('Your posts will be synced with in next few minutes', 'success');\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onUnlinkSubmit = () => {\n    setOpenPopup(false);\n    setAccount(null);\n    toggleUnlink();\n    onClose();\n  };\n\n  if (openUnlink) {\n    return (\n      <UnlinkInstagram onSubmit={onUnlinkSubmit} onClose={toggleUnlink} />\n    );\n  }\n\n  if (enabled && !loginRequired && page === 'overview') {\n    return null;\n  }\n\n  return (\n    <>\n      {openPopup && <InstaMessage closeSyncPopup={closeSyncPopup} />}\n      {(page === 'settings' || page === 'posts') && customButton ? (\n        <div onClick={importInstagram} className={styles.shopSetting}>\n          {customButton}\n        </div>\n      ) : (\n        <>\n          {posts === 0 && (\n            <>\n              {enabled ? (\n                <div id=\"import\" className={styles.button}>\n                  <Clickable\n                    className={styles.syncButton}\n                    onClick={importInstagram}\n                  >\n                    <img src={importIcon} alt=\"\" />\n                    Import Instagram\n                  </Clickable>\n                </div>\n              ) : (\n                <div className={styles.disabledButton}>\n                  Importing ...\n                </div>\n              )}\n            </>\n          )}\n        </>\n      )}\n      {account !== null && (\n        <Dialog\n          open={true}\n          fullWidth\n          onClick={() => {\n            setAccount(null);\n          }}\n        >\n          <DialogContent>\n            <div className={styles.contentGrid}>\n              <div className={styles.gridLeft}>User Name :</div>\n              <div className={styles.gridRight}>{account.userName || ''}</div>\n            </div>\n            <div className={styles.contentGrid}>\n              <div className={styles.gridLeft}>Posts Imported :</div>\n              <div className={styles.gridRight}>{account.posts || 0}</div>\n            </div>\n            {account.lastSync && (\n              <>\n                <div className={styles.contentGrid}>\n                  <div className={styles.gridLeft}>Last Sync</div>\n                  <div className={styles.lastSync}>\n                    {moment(account.lastSync)\n                      .format('lll')}\n                  </div>\n                </div>\n              </>\n            )}\n\n            <div className={styles.instaSyncTip}>\n              <img src={tipIcon} alt=\"\" />\n              <div className={styles.tipText}> Pro Tip</div>\n            </div>\n            <div className={styles.instaTipBody}>\n              Your instagram account is synced once everyday. It automatically imports new posts once in a day\n            </div>\n            <div className={styles.buttonContainer}>\n              <Button\n                onClick={syncNow}\n                label=\"Sync Now\"\n              />\n            </div>\n            <div className={styles.unlinkButtonText}>\n              Do you want to unlink your Instagram account?\n              <Clickable onClick={toggleUnlink} style={{ color: 'var(--primary)' }}> Unlink</Clickable>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </>\n  );\n}\n\nInstaImport.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  page: PropTypes.string.isRequired,\n  customButton: PropTypes.any,\n};\n\nInstaImport.defaultProps = {\n  customButton: null,\n};\n"]},"metadata":{},"sourceType":"module"}