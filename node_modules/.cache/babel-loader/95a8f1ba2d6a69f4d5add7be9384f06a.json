{"ast":null,"code":"function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport { Span as otSpan } from 'opentracing/lib/span';\nimport { extend, getTimeOrigin } from '../common/utils';\nimport Transaction from '../performance-monitoring/transaction';\n\nvar Span = function (_otSpan) {\n  _inheritsLoose(Span, _otSpan);\n\n  function Span(tracer, span) {\n    var _this;\n\n    _this = _otSpan.call(this) || this;\n    _this.__tracer = tracer;\n    _this.span = span;\n    _this.isTransaction = span instanceof Transaction;\n    _this.spanContext = {\n      id: span.id,\n      traceId: span.traceId,\n      sampled: span.sampled\n    };\n    return _this;\n  }\n\n  var _proto = Span.prototype;\n\n  _proto._context = function _context() {\n    return this.spanContext;\n  };\n\n  _proto._tracer = function _tracer() {\n    return this.__tracer;\n  };\n\n  _proto._setOperationName = function _setOperationName(name) {\n    this.span.name = name;\n  };\n\n  _proto._addTags = function _addTags(keyValuePairs) {\n    var tags = extend({}, keyValuePairs);\n\n    if (tags.type) {\n      this.span.type = tags.type;\n      delete tags.type;\n    }\n\n    if (this.isTransaction) {\n      var userId = tags['user.id'];\n      var username = tags['user.username'];\n      var email = tags['user.email'];\n\n      if (userId || username || email) {\n        this.span.addContext({\n          user: {\n            id: userId,\n            username: username,\n            email: email\n          }\n        });\n        delete tags['user.id'];\n        delete tags['user.username'];\n        delete tags['user.email'];\n      }\n    }\n\n    this.span.addLabels(tags);\n  };\n\n  _proto._log = function _log(log, timestamp) {\n    if (log.event === 'error') {\n      if (log['error.object']) {\n        this.__tracer.errorLogging.logError(log['error.object']);\n      } else if (log.message) {\n        this.__tracer.errorLogging.logError(log.message);\n      }\n    }\n  };\n\n  _proto._finish = function _finish(finishTime) {\n    this.span.end();\n\n    if (finishTime) {\n      this.span._end = finishTime - getTimeOrigin();\n    }\n  };\n\n  return Span;\n}(otSpan);\n\nexport default Span;","map":{"version":3,"sources":["/home/harish/windo/phoenix/node_modules/@elastic/apm-rum-core/dist/es/opentracing/span.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","Span","otSpan","extend","getTimeOrigin","Transaction","_otSpan","tracer","span","_this","call","__tracer","isTransaction","spanContext","id","traceId","sampled","_proto","_context","_tracer","_setOperationName","name","_addTags","keyValuePairs","tags","type","userId","username","email","addContext","user","addLabels","_log","log","timestamp","event","errorLogging","logError","message","_finish","finishTime","end","_end"],"mappings":"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","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport { Span as otSpan } from 'opentracing/lib/span';\nimport { extend, getTimeOrigin } from '../common/utils';\nimport Transaction from '../performance-monitoring/transaction';\n\nvar Span = function (_otSpan) {\n  _inheritsLoose(Span, _otSpan);\n\n  function Span(tracer, span) {\n    var _this;\n\n    _this = _otSpan.call(this) || this;\n    _this.__tracer = tracer;\n    _this.span = span;\n    _this.isTransaction = span instanceof Transaction;\n    _this.spanContext = {\n      id: span.id,\n      traceId: span.traceId,\n      sampled: span.sampled\n    };\n    return _this;\n  }\n\n  var _proto = Span.prototype;\n\n  _proto._context = function _context() {\n    return this.spanContext;\n  };\n\n  _proto._tracer = function _tracer() {\n    return this.__tracer;\n  };\n\n  _proto._setOperationName = function _setOperationName(name) {\n    this.span.name = name;\n  };\n\n  _proto._addTags = function _addTags(keyValuePairs) {\n    var tags = extend({}, keyValuePairs);\n\n    if (tags.type) {\n      this.span.type = tags.type;\n      delete tags.type;\n    }\n\n    if (this.isTransaction) {\n      var userId = tags['user.id'];\n      var username = tags['user.username'];\n      var email = tags['user.email'];\n\n      if (userId || username || email) {\n        this.span.addContext({\n          user: {\n            id: userId,\n            username: username,\n            email: email\n          }\n        });\n        delete tags['user.id'];\n        delete tags['user.username'];\n        delete tags['user.email'];\n      }\n    }\n\n    this.span.addLabels(tags);\n  };\n\n  _proto._log = function _log(log, timestamp) {\n    if (log.event === 'error') {\n      if (log['error.object']) {\n        this.__tracer.errorLogging.logError(log['error.object']);\n      } else if (log.message) {\n        this.__tracer.errorLogging.logError(log.message);\n      }\n    }\n  };\n\n  _proto._finish = function _finish(finishTime) {\n    this.span.end();\n\n    if (finishTime) {\n      this.span._end = finishTime - getTimeOrigin();\n    }\n  };\n\n  return Span;\n}(otSpan);\n\nexport default Span;"]},"metadata":{},"sourceType":"module"}