{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/chat/ChatRoomDrawer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Drawer } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { useInfiniteRoom, useQueryParams } from \"../../hooks\";\nimport { SendMessage } from \"./SendMessage\";\nimport moment from 'moment';\nimport { BlackButton } from \"../buttons\";\nimport Man from \"../../assets/images/chat/man.svg\";\nimport chevronLeft from \"../../assets/images/chat/arrowBack.svg\";\nimport styles from \"./ChatRoomDrawer.module.css\";\n\nconst formatAt = at => moment(at).format('hh:mm a');\n\nexport function ChatRoomDrawer({\n  roomId\n}) {\n  _s();\n\n  const history = useHistory();\n  const params = useQueryParams();\n  const isPeopleChat = params.get('type') === 'people' || params.get('type') === undefined;\n  const [chats, names, loadMore, poll, hasMore] = useInfiniteRoom(roomId);\n  useEffect(() => {\n    const container = document.getElementById('chatRoom');\n\n    function handleResize() {\n      if (container) {\n        container.style.height = `${window.innerHeight - 90}px`;\n      }\n    }\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    if (container) {\n      setTimeout(() => {\n        container.scrollTo({\n          top: container.scrollHeight,\n          behavior: 'smooth'\n        });\n      }, 500);\n    }\n  });\n  return /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"left\",\n    open: true,\n    onClose: () => history.goBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.topBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: history.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.back,\n    src: chevronLeft,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, names.join(', ')), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"\\xA0\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.chatRoom,\n    id: \"chatRoom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, hasMore && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.loadMoreContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BlackButton, {\n    onClick: loadMore,\n    className: styles.loadMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"Load More\")), chats.map(({\n    key,\n    data: list\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    className: styles.dateBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.dateHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, key), list.map(chat => {\n    var _chat$by;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: chat._id,\n      className: styles.chat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, chat.by === 'you' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.you,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }\n    }, chat.message.data, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.at,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, formatAt(chat.at)))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.otherUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: ((_chat$by = chat.by) === null || _chat$by === void 0 ? void 0 : _chat$by.picture) || Man,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }\n    }, chat.message.data, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.at,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, formatAt(chat.at)))));\n  }))), isPeopleChat && chats.length === 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \" Customer visited your store! \")), /*#__PURE__*/React.createElement(SendMessage, {\n    roomId: roomId,\n    refresh: poll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(ChatRoomDrawer, \"u02bZORwNtipHYMXggNV/WB8KqE=\", false, function () {\n  return [useHistory, useQueryParams, useInfiniteRoom];\n});\n\n_c = ChatRoomDrawer;\nChatRoomDrawer.propTypes = {\n  roomId: PropTypes.string.isRequired\n};\nChatRoomDrawer.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoomDrawer\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/chat/ChatRoomDrawer.jsx"],"names":["React","useEffect","PropTypes","Drawer","useHistory","useInfiniteRoom","useQueryParams","SendMessage","moment","BlackButton","styles","formatAt","at","format","ChatRoomDrawer","roomId","history","params","isPeopleChat","get","undefined","chats","names","loadMore","poll","hasMore","container","document","getElementById","handleResize","style","height","window","innerHeight","addEventListener","setTimeout","scrollTo","top","scrollHeight","behavior","goBack","topBar","back","chevronLeft","heading","join","chatRoom","loadMoreContainer","map","key","data","list","dateBlock","dateHeading","chat","_id","by","you","message","otherUser","picture","Man","length","info","propTypes","string","isRequired","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,eAAT,EAA0BC,cAA1B;AACA,SAASC,WAAT;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,WAAT;;;AAGA,OAAOC,MAAP;;AAEA,MAAMC,QAAQ,GAAIC,EAAD,IAAQJ,MAAM,CAACI,EAAD,CAAN,CAAWC,MAAX,CAAkB,SAAlB,CAAzB;;AAEA,OAAO,SAASC,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAoC;AAAA;;AACzC,QAAMC,OAAO,GAAGZ,UAAU,EAA1B;AACA,QAAMa,MAAM,GAAGX,cAAc,EAA7B;AACA,QAAMY,YAAY,GAAGD,MAAM,CAACE,GAAP,CAAW,MAAX,MAAuB,QAAvB,IAAmCF,MAAM,CAACE,GAAP,CAAW,MAAX,MAAuBC,SAA/E;AACA,QAAM,CAACC,KAAD,EAAQC,KAAR,EAAeC,QAAf,EAAyBC,IAAzB,EAA+BC,OAA/B,IAA0CpB,eAAe,CAACU,MAAD,CAA/D;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAlB;;AACA,aAASC,YAAT,GAAwB;AACtB,UAAIH,SAAJ,EAAe;AACbA,QAAAA,SAAS,CAACI,KAAV,CAAgBC,MAAhB,GAA0B,GAAEC,MAAM,CAACC,WAAP,GAAqB,EAAG,IAApD;AACD;AACF;;AAEDD,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCL,YAAlC;AACAA,IAAAA,YAAY;;AAEZ,QAAIH,SAAJ,EAAe;AACbS,MAAAA,UAAU,CAAC,MAAM;AACfT,QAAAA,SAAS,CAACU,QAAV,CAAmB;AACjBC,UAAAA,GAAG,EAAEX,SAAS,CAACY,YADE;AAEjBC,UAAAA,QAAQ,EAAE;AAFO,SAAnB;AAID,OALS,EAKP,GALO,CAAV;AAMD;AACF,GAnBQ,CAAT;AAqBA,sBACE,oBAAC,MAAD;AACE,IAAA,MAAM,EAAC,MADT;AAEE,IAAA,IAAI,EAAE,IAFR;AAGE,IAAA,OAAO,EAAE,MAAMvB,OAAO,CAACwB,MAAR,EAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAK,IAAA,SAAS,EAAE9B,MAAM,CAACgB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEhB,MAAM,CAAC+B,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,OAAO,EAAEzB,OAAO,CAACwB,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAE9B,MAAM,CAACgC,IAAvB;AAA6B,IAAA,GAAG,EAAEC,WAAlC;AAA+C,IAAA,GAAG,EAAC,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAEjC,MAAM,CAACkC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,KAAK,CAACuB,IAAN,CAAW,IAAX,CADH,CAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,CADF,eAUE;AAAK,IAAA,SAAS,EAAEnC,MAAM,CAACoC,QAAvB;AAAiC,IAAA,EAAE,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,OAAO,iBACN;AAAK,IAAA,SAAS,EAAEf,MAAM,CAACqC,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAExB,QAAtB;AAAgC,IAAA,SAAS,EAAEb,MAAM,CAACa,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAFJ,EAQGF,KAAK,CAAC2B,GAAN,CAAU,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAI,EAAEC;AAAb,GAAD,kBACT;AAAK,IAAA,GAAG,EAAEF,GAAV;AAAe,IAAA,SAAS,EAAEvC,MAAM,CAAC0C,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAE1C,MAAM,CAAC2C,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCJ,GAArC,CADF,EAEGE,IAAI,CAACH,GAAL,CAASM,IAAI;AAAA;;AAAA,wBACZ;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,MAAA,SAAS,EAAE7C,MAAM,CAAC4C,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IAAI,CAACE,EAAL,KAAY,KAAZ,gBACC;AAAK,MAAA,SAAS,EAAE9C,MAAM,CAAC+C,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAE/C,MAAM,CAACgD,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,IAAI,CAACI,OAAL,CAAaR,IADhB,eAEE;AAAK,MAAA,SAAS,EAAExC,MAAM,CAACE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BD,QAAQ,CAAC2C,IAAI,CAAC1C,EAAN,CAApC,CAFF,CADF,CADD,gBAQC;AAAK,MAAA,SAAS,EAAEF,MAAM,CAACiD,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAE,aAAAL,IAAI,CAACE,EAAL,sDAASI,OAAT,KAAoBC,GAA9B;AAAmC,MAAA,GAAG,EAAC,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAEnD,MAAM,CAACgD,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,IAAI,CAACI,OAAL,CAAaR,IADhB,eAEE;AAAK,MAAA,SAAS,EAAExC,MAAM,CAACE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BD,QAAQ,CAAC2C,IAAI,CAAC1C,EAAN,CAApC,CAFF,CAFF,CATJ,CADY;AAAA,GAAb,CAFH,CADD,CARH,EAiCGM,YAAY,IAAIG,KAAK,CAACyC,MAAN,KAAiB,CAAjC,iBACC;AAAK,IAAA,SAAS,EAAEpD,MAAM,CAACqD,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAlCJ,CAVF,eA+CE,oBAAC,WAAD;AACE,IAAA,MAAM,EAAEhD,MADV;AAEE,IAAA,OAAO,EAAES,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/CF,CALF,CADF;AA4DD;;GAvFeV,c;UACEV,U,EACDE,c,EAEiCD,e;;;KAJlCS,c;AAyFhBA,cAAc,CAACkD,SAAf,GAA2B;AACzBjD,EAAAA,MAAM,EAAEb,SAAS,CAAC+D,MAAV,CAAiBC;AADA,CAA3B;AAIApD,cAAc,CAACqD,YAAf,GAA8B,EAA9B","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Drawer } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { useInfiniteRoom, useQueryParams } from 'hooks';\nimport { SendMessage } from 'components/chat/SendMessage';\nimport moment from 'moment';\nimport { BlackButton } from 'components/buttons';\nimport Man from 'assets/images/chat/man.svg';\nimport chevronLeft from 'assets/images/chat/arrowBack.svg';\nimport styles from './ChatRoomDrawer.module.css';\n\nconst formatAt = (at) => moment(at).format('hh:mm a');\n\nexport function ChatRoomDrawer({ roomId }) {\n  const history = useHistory();\n  const params = useQueryParams();\n  const isPeopleChat = params.get('type') === 'people' || params.get('type') === undefined;\n  const [chats, names, loadMore, poll, hasMore] = useInfiniteRoom(roomId);\n\n  useEffect(() => {\n    const container = document.getElementById('chatRoom');\n    function handleResize() {\n      if (container) {\n        container.style.height = `${window.innerHeight - 90}px`;\n      }\n    }\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    if (container) {\n      setTimeout(() => {\n        container.scrollTo({\n          top: container.scrollHeight,\n          behavior: 'smooth'\n        });\n      }, 500);\n    }\n  });\n\n  return (\n    <Drawer\n      anchor=\"left\"\n      open={true}\n      onClose={() => history.goBack()}\n    >\n      <div className={styles.container}>\n        <div className={styles.topBar}>\n          <div onClick={history.goBack}>\n            <img className={styles.back} src={chevronLeft} alt=\"\" />\n          </div>\n          <div className={styles.heading}>\n            {names.join(', ')}\n          </div>\n          <div>&nbsp;</div>\n        </div>\n        <div className={styles.chatRoom} id=\"chatRoom\">\n          {hasMore && (\n            <div className={styles.loadMoreContainer}>\n              <BlackButton onClick={loadMore} className={styles.loadMore}>\n                Load More\n              </BlackButton>\n            </div>\n          )}\n          {chats.map(({ key, data: list }) => (\n            <div key={key} className={styles.dateBlock}>\n              <div className={styles.dateHeading}>{key}</div>\n              {list.map(chat => (\n                <div key={chat._id} className={styles.chat}>\n                  {chat.by === 'you' ? (\n                    <div className={styles.you}>\n                      <div className={styles.message}>\n                        {chat.message.data}\n                        <div className={styles.at}>{formatAt(chat.at)}</div>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className={styles.otherUser}>\n                      <img src={chat.by?.picture || Man} alt=\"\" />\n                      <div className={styles.message}>\n                        {chat.message.data}\n                        <div className={styles.at}>{formatAt(chat.at)}</div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          ))}\n          {isPeopleChat && chats.length === 0 && (\n            <div className={styles.info}> Customer visited your store! </div>\n          )}\n        </div>\n        <SendMessage\n          roomId={roomId}\n          refresh={poll}\n        />\n      </div>\n    </Drawer>\n  );\n}\n\nChatRoomDrawer.propTypes = {\n  roomId: PropTypes.string.isRequired,\n};\n\nChatRoomDrawer.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}