{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/Container.jsx\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport React, { lazy, Suspense, useState } from 'react';\nimport Storage from \"./services/storage\";\nimport { Loading } from \"./components/shared/Loading\";\nimport { useCheckForWebUpdate } from \"./hooks/sync\";\nconst Main = /*#__PURE__*/lazy(_c = () => import(\n/* webpackChunkName: \"main-container\" */\n\"./layouts/LoggedInMainContainer\"));\n_c2 = Main;\nconst Login = /*#__PURE__*/lazy(_c3 = () => import(\n/* webpackChunkName: \"login\" */\n\"./containers/login/Login\"));\n_c4 = Login;\nconst NonLoggedInWeb = /*#__PURE__*/lazy(_c5 = () => import(\n/* webpackChunkName: \"non-logged-in-web\" */\n\"./layouts/NonLoggedInWeb\"));\n_c6 = NonLoggedInWeb;\n\nfunction Container() {\n  _s();\n\n  useCheckForWebUpdate();\n  const [loggedIn, setLogin] = useState(Storage.isLoggedIn());\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, loggedIn ? /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/web/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NonLoggedInWeb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    onLogin: () => setLogin(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  })))));\n}\n\n_s(Container, \"+gNZ8K6rkEG8grPsMmcN2XrSdHc=\", false, function () {\n  return [useCheckForWebUpdate];\n});\n\n_c7 = Container;\nexport default Container;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Main$lazy\");\n$RefreshReg$(_c2, \"Main\");\n$RefreshReg$(_c3, \"Login$lazy\");\n$RefreshReg$(_c4, \"Login\");\n$RefreshReg$(_c5, \"NonLoggedInWeb$lazy\");\n$RefreshReg$(_c6, \"NonLoggedInWeb\");\n$RefreshReg$(_c7, \"Container\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/Container.jsx"],"names":["BrowserRouter","Router","Route","Switch","React","lazy","Suspense","useState","Storage","Loading","useCheckForWebUpdate","Main","Login","NonLoggedInWeb","Container","loggedIn","setLogin","isLoggedIn"],"mappings":";;;AAAA,SACEA,aAAa,IAAIC,MADnB,EAC2BC,KAD3B,EACkCC,MADlC,QAEO,kBAFP;AAGA,OAAOC,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,OAAP;AACA,SAASC,OAAT;AACA,SAASC,oBAAT;AAEA,MAAMC,IAAI,gBAAGN,IAAI,MAAC,MAAM;AAAO;AAAP,kCAAP,CAAjB;MAAMM,I;AACN,MAAMC,KAAK,gBAAGP,IAAI,OAAC,MAAM;AAAO;AAAP,2BAAP,CAAlB;MAAMO,K;AACN,MAAMC,cAAc,gBAAGR,IAAI,OAAC,MAAM;AAAO;AAAP,2BAAP,CAA3B;MAAMQ,c;;AAEN,SAASC,SAAT,GAAqB;AAAA;;AACnBJ,EAAAA,oBAAoB;AACpB,QAAM,CAACK,QAAD,EAAWC,QAAX,IAAuBT,QAAQ,CAACC,OAAO,CAACS,UAAR,EAAD,CAArC;AAEA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,QAAQ,eACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGF,QAAQ,gBACP,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,gBAGP,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAAC,IAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CAPJ,CADF,CADF;AAqBD;;GAzBQF,S;UACPJ,oB;;;MADOI,S;AA2BT,eAAeA,SAAf","sourcesContent":["import {\n  BrowserRouter as Router, Route, Switch\n} from 'react-router-dom';\nimport React, { lazy, Suspense, useState } from 'react';\nimport Storage from 'services/storage';\nimport { Loading } from 'components/shared/Loading';\nimport { useCheckForWebUpdate } from 'hooks/sync';\n\nconst Main = lazy(() => import(/* webpackChunkName: \"main-container\" */ 'layouts/LoggedInMainContainer'));\nconst Login = lazy(() => import(/* webpackChunkName: \"login\" */ 'containers/login/Login'));\nconst NonLoggedInWeb = lazy(() => import(/* webpackChunkName: \"non-logged-in-web\" */ 'layouts/NonLoggedInWeb'));\n\nfunction Container() {\n  useCheckForWebUpdate();\n  const [loggedIn, setLogin] = useState(Storage.isLoggedIn());\n\n  return (\n    <Router>\n      <Suspense\n        fallback={(\n          <Loading />\n        )}>\n        {loggedIn ? (\n          <Main />\n        ) : (\n          <Switch>\n            <Route path=\"/web/*\">\n              <NonLoggedInWeb />\n            </Route>\n            <Route path=\"*\">\n              <Login onLogin={() => setLogin(true)} />\n            </Route>\n          </Switch>\n        )}\n      </Suspense>\n    </Router>\n  );\n}\n\nexport default Container;\n"]},"metadata":{},"sourceType":"module"}