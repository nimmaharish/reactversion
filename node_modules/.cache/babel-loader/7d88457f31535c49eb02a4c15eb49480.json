{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/shared/TermsDrawer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Drawer } from \"./Drawer\";\nimport { useField } from 'formik';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { Button } from 'phoenix-components';\nimport CONFIG from \"../../config\";\nimport { FooterButton } from \"../common/FooterButton\";\nimport { useDesktop } from \"../../contexts\";\nimport { cssStyle } from \"../../constants/tinymce\";\nimport { SideDrawer } from \"./SideDrawer\";\nimport styles from \"./TermsDrawer.module.css\";\nexport function TermsDrawer({\n  onClose,\n  title,\n  placeholder,\n  index,\n  onSubmit\n}) {\n  _s();\n\n  const [{\n    value: description\n  },, {\n    setValue\n  }] = useField(`tncs.${index}`);\n\n  const onChange = value => {\n    setValue(value);\n  };\n\n  const isDesktop = useDesktop();\n\n  if (isDesktop) {\n    return /*#__PURE__*/React.createElement(SideDrawer, {\n      backButton: true,\n      title: \"Shop Policy\",\n      classes: {\n        container: styles.customBody\n      },\n      onClose: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.editor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Editor, {\n      value: description || '',\n      apiKey: CONFIG.TINYMCE.key,\n      scriptLoading: {\n        async: true\n      },\n      init: {\n        menubar: false,\n        toolbar: false,\n        height: 'calc(100vh - 59px - 52px - 50px - 60px)',\n        width: '100%',\n        placeholder,\n        statusbar: false,\n        branding: false,\n        selector: 'textarea',\n        paste_data_images: false,\n        content_style: cssStyle,\n        plugins: ['paste']\n      },\n      onEditorChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Save\",\n      onClick: () => {\n        onSubmit();\n        onClose();\n      },\n      primary: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    onClose: onClose,\n    closeButton: true,\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.editor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Editor, {\n    value: description || '',\n    apiKey: CONFIG.TINYMCE.key,\n    scriptLoading: {\n      async: true\n    },\n    init: {\n      menubar: false,\n      toolbar: false,\n      height: 'calc(100vh - 59px - 52px - 50px - 16px)',\n      width: '100%',\n      placeholder,\n      statusbar: false,\n      branding: false,\n      selector: 'textarea',\n      paste_data_images: false,\n      plugins: ['paste'],\n      content_style: cssStyle\n    },\n    onEditorChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FooterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    bordered: false,\n    label: \"Save\",\n    onClick: () => {\n      onSubmit();\n      onClose();\n    },\n    primary: true,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }))));\n}\n\n_s(TermsDrawer, \"KukjY1yuuIBUjotgI7GVOZlszs4=\", false, function () {\n  return [useField, useDesktop];\n});\n\n_c = TermsDrawer;\nTermsDrawer.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  title: PropTypes.string,\n  placeholder: PropTypes.string,\n  index: PropTypes.number,\n  onSubmit: PropTypes.func\n};\nTermsDrawer.defaultProps = {\n  title: 'Add Description',\n  placeholder: 'Shop Terms & Policies',\n  index: 0,\n  onSubmit: () => {}\n};\nTermsDrawer.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"TermsDrawer\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/shared/TermsDrawer.jsx"],"names":["React","PropTypes","Drawer","useField","Editor","Button","CONFIG","FooterButton","useDesktop","cssStyle","SideDrawer","styles","TermsDrawer","onClose","title","placeholder","index","onSubmit","value","description","setValue","onChange","isDesktop","container","customBody","editor","TINYMCE","key","async","menubar","toolbar","height","width","statusbar","branding","selector","paste_data_images","content_style","plugins","button","section","propTypes","func","isRequired","string","number","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Drawer } from 'components/shared/Drawer';\nimport { useField } from 'formik';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { Button } from 'phoenix-components';\nimport CONFIG from 'config';\nimport { FooterButton } from 'components/common/FooterButton';\nimport { useDesktop } from 'contexts';\nimport { cssStyle } from 'constants/tinymce';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport styles from './TermsDrawer.module.css';\n\nexport function TermsDrawer({\n  onClose, title, placeholder, index, onSubmit\n}) {\n  const [{ value: description }, , { setValue }] = useField(`tncs.${index}`);\n  const onChange = (value) => {\n    setValue(value);\n  };\n  const isDesktop = useDesktop();\n\n  if (isDesktop) {\n    return (\n      <SideDrawer\n        backButton={true}\n        title=\"Shop Policy\"\n        classes={{\n          container: styles.customBody,\n        }}\n        onClose={onClose}\n      >\n        <div className={styles.editor}>\n          <Editor\n            value={description || ''}\n            apiKey={CONFIG.TINYMCE.key}\n            scriptLoading={{ async: true }}\n            init={{\n              menubar: false,\n              toolbar: false,\n              height: 'calc(100vh - 59px - 52px - 50px - 60px)',\n              width: '100%',\n              placeholder,\n              statusbar: false,\n              branding: false,\n              selector: 'textarea',\n              paste_data_images: false,\n              content_style: cssStyle,\n              plugins: [\n                'paste'\n              ],\n            }}\n            onEditorChange={onChange}\n          />\n        </div>\n        <div className={styles.button}>\n          <Button\n            label=\"Save\"\n            onClick={() => {\n              onSubmit();\n              onClose();\n            }}\n            primary\n            size=\"large\"\n          />\n        </div>\n      </SideDrawer>\n    );\n  }\n  return (\n    <Drawer\n      onClose={onClose}\n      closeButton\n      title={title}\n    >\n      <div className={styles.section}>\n        <div className={styles.editor}>\n          <Editor\n            value={description || ''}\n            apiKey={CONFIG.TINYMCE.key}\n            scriptLoading={{ async: true }}\n            init={{\n              menubar: false,\n              toolbar: false,\n              height: 'calc(100vh - 59px - 52px - 50px - 16px)',\n              width: '100%',\n              placeholder,\n              statusbar: false,\n              branding: false,\n              selector: 'textarea',\n              paste_data_images: false,\n              plugins: [\n                'paste'\n              ],\n              content_style: cssStyle,\n            }}\n            onEditorChange={onChange}\n          />\n        </div>\n        <FooterButton>\n          <Button\n            fullWidth\n            bordered={false}\n            label=\"Save\"\n            onClick={() => {\n              onSubmit();\n              onClose();\n            }}\n            primary\n            size=\"large\"\n          />\n        </FooterButton>\n      </div>\n    </Drawer>\n  );\n}\n\nTermsDrawer.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  title: PropTypes.string,\n  placeholder: PropTypes.string,\n  index: PropTypes.number,\n  onSubmit: PropTypes.func\n};\n\nTermsDrawer.defaultProps = {\n  title: 'Add Description',\n  placeholder: 'Shop Terms & Policies',\n  index: 0,\n  onSubmit: () => {}\n};\n\nTermsDrawer.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}