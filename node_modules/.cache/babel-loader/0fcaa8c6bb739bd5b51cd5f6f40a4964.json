{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Loader from \"../services/loader\";\nimport { Becca } from \"../api\";\nimport Snackbar from \"../services/snackbar\";\nexport function useFeatureRequests(filters = {}, sorts = {}) {\n  _s();\n\n  const [requests, setRequests] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n\n  const load = async () => {\n    try {\n      if (loading) {\n        return;\n      }\n\n      setLoading(true);\n\n      if (page === 0) {\n        Loader.show();\n      }\n\n      const data = await Becca.getFeatureRequests(page, filters, sorts);\n      setRequests([...requests, ...data]);\n\n      if (data.length === 0) {\n        setHasMore(false);\n      }\n\n      setPage(page + 1);\n    } catch (e) {\n      console.error(e);\n      Snackbar.show('Error Occurred', 'error');\n    } finally {\n      Loader.hide();\n      setLoading(false);\n    }\n  };\n\n  const loadMore = async ({\n    stopIndex = 10\n  } = {}) => {\n    if (loading) {\n      return;\n    }\n\n    const newPage = Math.floor(stopIndex / 10);\n\n    if (newPage <= page) {\n      return;\n    }\n\n    if (!hasMore) {\n      return;\n    }\n\n    await load();\n  };\n\n  const refresh = async () => {\n    try {\n      setLoading(true);\n      const data = await Becca.getFeatureRequests(0, filters, sorts);\n      setRequests([...data]);\n      setPage(0);\n      setHasMore(true);\n      setLoading(false);\n    } catch (e) {\n      console.error(e);\n      Snackbar.show('Error Occurred', 'error');\n    }\n  };\n\n  useEffect(() => {\n    refresh();\n  }, [JSON.stringify(filters), JSON.stringify(sorts)]);\n  return [requests, loadMore, hasMore, loading, refresh];\n}\n\n_s(useFeatureRequests, \"oeQ6TC3ilu8X8MnxQ2uzwA7dqDs=\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/hooks/featureRequest.js"],"names":["useEffect","useState","Loader","Becca","Snackbar","useFeatureRequests","filters","sorts","requests","setRequests","loading","setLoading","page","setPage","hasMore","setHasMore","load","show","data","getFeatureRequests","length","e","console","error","hide","loadMore","stopIndex","newPage","Math","floor","refresh","JSON","stringify"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport Loader from 'services/loader';\nimport { Becca } from 'api';\nimport Snackbar from 'services/snackbar';\n\nexport function useFeatureRequests(filters = {}, sorts = {}) {\n  const [requests, setRequests] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n\n  const load = async () => {\n    try {\n      if (loading) {\n        return;\n      }\n      setLoading(true);\n      if (page === 0) {\n        Loader.show();\n      }\n      const data = await Becca.getFeatureRequests(page, filters, sorts);\n      setRequests([...requests, ...data]);\n      if (data.length === 0) {\n        setHasMore(false);\n      }\n      setPage(page + 1);\n    } catch (e) {\n      console.error(e);\n      Snackbar.show('Error Occurred', 'error');\n    } finally {\n      Loader.hide();\n      setLoading(false);\n    }\n  };\n\n  const loadMore = async ({ stopIndex = 10 } = {}) => {\n    if (loading) {\n      return;\n    }\n    const newPage = Math.floor(stopIndex / 10);\n    if (newPage <= page) {\n      return;\n    }\n    if (!hasMore) {\n      return;\n    }\n    await load();\n  };\n\n  const refresh = async () => {\n    try {\n      setLoading(true);\n      const data = await Becca.getFeatureRequests(0, filters, sorts);\n      setRequests([...data]);\n      setPage(0);\n      setHasMore(true);\n      setLoading(false);\n    } catch (e) {\n      console.error(e);\n      Snackbar.show('Error Occurred', 'error');\n    }\n  };\n\n  useEffect(() => {\n    refresh();\n  }, [JSON.stringify(filters), JSON.stringify(sorts)]);\n\n  return [requests, loadMore, hasMore, loading, refresh];\n}\n"]},"metadata":{},"sourceType":"module"}