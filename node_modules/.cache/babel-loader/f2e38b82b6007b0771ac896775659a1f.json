{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { External } from \"../api\";\nimport { countryMap, getCurrencyByCountry } from \"../utils/countries\";\nexport function useCountryFromIP(initialCountry = '', initialCurrency = '', fetch = true) {\n  _s();\n\n  const [country, setCountry] = useState(initialCountry);\n  const [currency, setCurrency] = useState(initialCurrency);\n\n  const fetchCountry = async () => {\n    try {\n      const {\n        isoAlpha2: countryCode\n      } = await External.getCountry();\n      const name = countryMap[countryCode];\n\n      if (name) {\n        setCountry(name);\n        setCurrency(getCurrencyByCountry(name));\n      }\n    } catch (e) {\n      console.error(e); // Ignore error\n    }\n  };\n\n  useEffect(() => {\n    if (_.isEmpty(country) && fetch) {\n      fetchCountry();\n    }\n  }, []);\n  return [country, setCountry, currency, setCurrency];\n}\n\n_s(useCountryFromIP, \"Ev/H4gDToR/Wd+AS0AlntxxxE50=\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/hooks/utils.js"],"names":["useEffect","useState","_","External","countryMap","getCurrencyByCountry","useCountryFromIP","initialCountry","initialCurrency","fetch","country","setCountry","currency","setCurrency","fetchCountry","isoAlpha2","countryCode","getCountry","name","e","console","error","isEmpty"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,QAAT;AACA,SAASC,UAAT,EAAqBC,oBAArB;AAEA,OAAO,SAASC,gBAAT,CAA0BC,cAAc,GAAG,EAA3C,EAA+CC,eAAe,GAAG,EAAjE,EAAqEC,KAAK,GAAG,IAA7E,EAAmF;AAAA;;AACxF,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAACM,cAAD,CAAtC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAACO,eAAD,CAAxC;;AAEA,QAAMM,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAM;AAAEC,QAAAA,SAAS,EAAEC;AAAb,UAA6B,MAAMb,QAAQ,CAACc,UAAT,EAAzC;AACA,YAAMC,IAAI,GAAGd,UAAU,CAACY,WAAD,CAAvB;;AACA,UAAIE,IAAJ,EAAU;AACRP,QAAAA,UAAU,CAACO,IAAD,CAAV;AACAL,QAAAA,WAAW,CAACR,oBAAoB,CAACa,IAAD,CAArB,CAAX;AACD;AACF,KAPD,CAOE,OAAOC,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd,EADU,CAEV;AACD;AACF,GAZD;;AAcAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,CAAC,CAACoB,OAAF,CAAUZ,OAAV,KAAsBD,KAA1B,EAAiC;AAC/BK,MAAAA,YAAY;AACb;AACF,GAJQ,EAIN,EAJM,CAAT;AAMA,SAAO,CAACJ,OAAD,EAAUC,UAAV,EAAsBC,QAAtB,EAAgCC,WAAhC,CAAP;AACD;;GAzBeP,gB","sourcesContent":["import { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { External } from 'api';\nimport { countryMap, getCurrencyByCountry } from 'utils/countries';\n\nexport function useCountryFromIP(initialCountry = '', initialCurrency = '', fetch = true) {\n  const [country, setCountry] = useState(initialCountry);\n  const [currency, setCurrency] = useState(initialCurrency);\n\n  const fetchCountry = async () => {\n    try {\n      const { isoAlpha2: countryCode } = await External.getCountry();\n      const name = countryMap[countryCode];\n      if (name) {\n        setCountry(name);\n        setCurrency(getCurrencyByCountry(name));\n      }\n    } catch (e) {\n      console.error(e);\n      // Ignore error\n    }\n  };\n\n  useEffect(() => {\n    if (_.isEmpty(country) && fetch) {\n      fetchCountry();\n    }\n  }, []);\n\n  return [country, setCountry, currency, setCurrency];\n}\n"]},"metadata":{},"sourceType":"module"}