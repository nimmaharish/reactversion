{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nvar SemiCircleProgress = function SemiCircleProgress(_ref) {\n  var _ref$stroke = _ref.stroke,\n      stroke = _ref$stroke === undefined ? \"#02B732\" : _ref$stroke,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === undefined ? 10 : _ref$strokeWidth,\n      _ref$background = _ref.background,\n      background = _ref$background === undefined ? \"#D0D0CE\" : _ref$background,\n      _ref$diameter = _ref.diameter,\n      diameter = _ref$diameter === undefined ? 200 : _ref$diameter,\n      _ref$orientation = _ref.orientation,\n      orientation = _ref$orientation === undefined ? \"up\" : _ref$orientation,\n      _ref$direction = _ref.direction,\n      direction = _ref$direction === undefined ? \"right\" : _ref$direction,\n      _ref$showPercentValue = _ref.showPercentValue,\n      showPercentValue = _ref$showPercentValue === undefined ? false : _ref$showPercentValue,\n      percentage = _ref.percentage;\n  var coordinateForCircle = diameter / 2;\n  var radius = (diameter - 2 * strokeWidth) / 2;\n  var circumference = Math.PI * radius;\n  var percentageValue = void 0;\n\n  if (percentage > 100) {\n    percentageValue = 100;\n  } else if (percentage < 0) {\n    percentageValue = 0;\n  } else {\n    percentageValue = percentage;\n  }\n\n  var semiCirclePercentage = percentageValue * (circumference / 100);\n  var rotation = void 0;\n\n  if (orientation === \"down\") {\n    if (direction === \"left\") {\n      rotation = \"rotate(180deg) rotateY(180deg)\";\n    } else {\n      rotation = \"rotate(180deg)\";\n    }\n  } else {\n    if (direction === \"right\") {\n      rotation = \"rotateY(180deg)\";\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"semicircle-container\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(\"svg\", {\n    width: diameter,\n    height: diameter / 2,\n    style: {\n      transform: rotation,\n      overflow: \"hidden\"\n    }\n  }, React.createElement(\"circle\", {\n    cx: coordinateForCircle,\n    cy: coordinateForCircle,\n    r: radius,\n    fill: \"none\",\n    stroke: background,\n    strokeWidth: strokeWidth,\n    strokeDasharray: circumference,\n    style: {\n      strokeDashoffset: circumference\n    }\n  }), React.createElement(\"circle\", {\n    cx: coordinateForCircle,\n    cy: coordinateForCircle,\n    r: radius,\n    fill: \"none\",\n    stroke: stroke,\n    strokeWidth: strokeWidth,\n    strokeDasharray: circumference,\n    style: {\n      strokeDashoffset: semiCirclePercentage,\n      transition: \"stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s\"\n    }\n  })), showPercentValue && React.createElement(\"span\", {\n    className: \"semicircle-percent-value\",\n    style: {\n      width: \"100%\",\n      left: \"0\",\n      textAlign: \"center\",\n      bottom: orientation === \"down\" ? \"auto\" : \"0\",\n      position: \"absolute\"\n    }\n  }, percentage, \"%\"));\n};\n\nfunction percentageValidation(isRequired) {\n  return function (props, propName, componentName) {\n    var prop = props[propName];\n\n    if (prop == null) {\n      if (isRequired) {\n        throw new Error(\"Percentage is a required prop.\");\n      }\n    } else {\n      if (typeof prop !== \"number\") {\n        return new Error(\"Invalid percentage. Must be a number between 0 and 100.\");\n      }\n\n      if (props[propName] < 0 || props[propName] > 100) {\n        return new Error(\"Invalid percentage. Must be a number between 0 and 100.\");\n      }\n    }\n  };\n}\n\nvar percentageisRequired = percentageValidation(true);\nSemiCircleProgress.propTypes = {\n  stroke: PropTypes.string,\n  strokeWidth: PropTypes.number,\n  background: PropTypes.string,\n  diameter: PropTypes.number,\n  orientation: PropTypes.oneOf([\"up\", \"down\"]),\n  direction: PropTypes.oneOf([\"left\", \"right\"]),\n  showPercentValue: PropTypes.bool,\n  percentage: percentageisRequired\n};\nexport default SemiCircleProgress;","map":{"version":3,"sources":["/home/harish/windo/phoenix/node_modules/react-progressbar-semicircle/dist/index.es.js"],"names":["React","PropTypes","SemiCircleProgress","_ref","_ref$stroke","stroke","undefined","_ref$strokeWidth","strokeWidth","_ref$background","background","_ref$diameter","diameter","_ref$orientation","orientation","_ref$direction","direction","_ref$showPercentValue","showPercentValue","percentage","coordinateForCircle","radius","circumference","Math","PI","percentageValue","semiCirclePercentage","rotation","createElement","className","style","position","width","height","transform","overflow","cx","cy","r","fill","strokeDasharray","strokeDashoffset","transition","left","textAlign","bottom","percentageValidation","isRequired","props","propName","componentName","prop","Error","percentageisRequired","propTypes","string","number","oneOf","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nvar SemiCircleProgress = function SemiCircleProgress(_ref) {\n  var _ref$stroke = _ref.stroke,\n      stroke = _ref$stroke === undefined ? \"#02B732\" : _ref$stroke,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === undefined ? 10 : _ref$strokeWidth,\n      _ref$background = _ref.background,\n      background = _ref$background === undefined ? \"#D0D0CE\" : _ref$background,\n      _ref$diameter = _ref.diameter,\n      diameter = _ref$diameter === undefined ? 200 : _ref$diameter,\n      _ref$orientation = _ref.orientation,\n      orientation = _ref$orientation === undefined ? \"up\" : _ref$orientation,\n      _ref$direction = _ref.direction,\n      direction = _ref$direction === undefined ? \"right\" : _ref$direction,\n      _ref$showPercentValue = _ref.showPercentValue,\n      showPercentValue = _ref$showPercentValue === undefined ? false : _ref$showPercentValue,\n      percentage = _ref.percentage;\n\n  var coordinateForCircle = diameter / 2;\n  var radius = (diameter - 2 * strokeWidth) / 2;\n  var circumference = Math.PI * radius;\n\n  var percentageValue = void 0;\n  if (percentage > 100) {\n    percentageValue = 100;\n  } else if (percentage < 0) {\n    percentageValue = 0;\n  } else {\n    percentageValue = percentage;\n  }\n  var semiCirclePercentage = percentageValue * (circumference / 100);\n\n  var rotation = void 0;\n  if (orientation === \"down\") {\n    if (direction === \"left\") {\n      rotation = \"rotate(180deg) rotateY(180deg)\";\n    } else {\n      rotation = \"rotate(180deg)\";\n    }\n  } else {\n    if (direction === \"right\") {\n      rotation = \"rotateY(180deg)\";\n    }\n  }\n\n  return React.createElement(\n    \"div\",\n    { className: \"semicircle-container\", style: { position: \"relative\" } },\n    React.createElement(\n      \"svg\",\n      {\n        width: diameter,\n        height: diameter / 2,\n        style: { transform: rotation, overflow: \"hidden\" }\n      },\n      React.createElement(\"circle\", {\n        cx: coordinateForCircle,\n        cy: coordinateForCircle,\n        r: radius,\n        fill: \"none\",\n        stroke: background,\n        strokeWidth: strokeWidth,\n        strokeDasharray: circumference,\n        style: {\n          strokeDashoffset: circumference\n        }\n      }),\n      React.createElement(\"circle\", {\n        cx: coordinateForCircle,\n        cy: coordinateForCircle,\n        r: radius,\n        fill: \"none\",\n        stroke: stroke,\n        strokeWidth: strokeWidth,\n        strokeDasharray: circumference,\n        style: {\n          strokeDashoffset: semiCirclePercentage,\n          transition: \"stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s\"\n        }\n      })\n    ),\n    showPercentValue && React.createElement(\n      \"span\",\n      {\n        className: \"semicircle-percent-value\",\n        style: {\n          width: \"100%\",\n          left: \"0\",\n          textAlign: \"center\",\n          bottom: orientation === \"down\" ? \"auto\" : \"0\",\n          position: \"absolute\"\n        }\n      },\n      percentage,\n      \"%\"\n    )\n  );\n};\n\nfunction percentageValidation(isRequired) {\n  return function (props, propName, componentName) {\n    var prop = props[propName];\n    if (prop == null) {\n      if (isRequired) {\n        throw new Error(\"Percentage is a required prop.\");\n      }\n    } else {\n      if (typeof prop !== \"number\") {\n        return new Error(\"Invalid percentage. Must be a number between 0 and 100.\");\n      }\n      if (props[propName] < 0 || props[propName] > 100) {\n        return new Error(\"Invalid percentage. Must be a number between 0 and 100.\");\n      }\n    }\n  };\n}\n\nvar percentageisRequired = percentageValidation(true);\n\nSemiCircleProgress.propTypes = {\n  stroke: PropTypes.string,\n  strokeWidth: PropTypes.number,\n  background: PropTypes.string,\n  diameter: PropTypes.number,\n  orientation: PropTypes.oneOf([\"up\", \"down\"]),\n  direction: PropTypes.oneOf([\"left\", \"right\"]),\n  showPercentValue: PropTypes.bool,\n  percentage: percentageisRequired\n};\n\nexport default SemiCircleProgress;\n"]},"metadata":{},"sourceType":"module"}