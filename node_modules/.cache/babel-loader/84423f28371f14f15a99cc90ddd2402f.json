{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/profile/areasServed/Overview.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { useDesktop } from \"../../../contexts\";\nimport { Drawer } from \"../../../components/shared/Drawer\";\nimport { useHistory } from 'react-router-dom';\nimport distanceBasedIcon from \"../../../assets/images/areasServed/distanceBased.svg\";\nimport regionBasedIcon from \"../../../assets/images/areasServed/regionBased.svg\";\nimport { Clickable, Switch } from 'phoenix-components';\nimport checkedIcon from \"../../../assets/images/areasServed/checked.svg\";\nimport uncheckedIcon from \"../../../assets/images/areasServed/unchecked.svg\";\nimport rightArrowIcon from \"../../../assets/images/areasServed/rightArrow.svg\";\nimport distanceBasedMiniIcon from \"../../../assets/images/areasServed/distanceBasedMini.svg\";\nimport regionBasedMiniIcon from \"../../../assets/images/areasServed/regionBasedMini.svg\";\nimport { useQueryParams } from \"../../../hooks\";\nimport { useToggle } from \"../../../hooks/common\";\nimport plusIcon from \"../../../assets/images/areasServed/plus.svg\";\nimport { CountryDrawer } from \"../../../components/common/CountryDrawer\";\nimport _ from 'lodash';\nimport checkedBoxIcon from \"../../../assets/images/orders/multi/check.svg\";\nimport unCheckedBoxIcon from \"../../../assets/images/orders/multi/uncheck.svg\";\nimport styles from \"./Overview.module.css\";\nimport { getInitialValues, getInitialCountryValues, getInitialRegionValues, getIntialValuesForDistanceMatrix } from \"./utils\";\nimport Zones from \"./Zones\";\nimport { useState } from 'react';\nimport Distance from \"./Distance\";\nimport editIcon from \"../../../assets/images/areasServed/edit.svg\";\nimport { getCountries } from \"../../../utils/countries\"; // import { DebugValues } from 'components/formik';\n\nimport cx from 'classnames';\nimport { Becca } from \"../../../api\";\nimport { useAreaConfig } from \"../../../hooks/areasServed\";\nimport SnackBar from \"../../../services/snackbar\";\nimport Loader from \"../../../services/loader\";\nimport { Loading } from \"../../../components/shared/Loading\";\nimport chevronLeftDesk from \"../../../assets/v2/common/chevronPrimaryLeft.svg\";\nimport { useIsConditionalChargesEnabled } from \"../../../contexts/userContext\";\n\nfunction AreasServed() {\n  _s();\n\n  const isDesktop = useDesktop();\n  const params = useQueryParams();\n  const history = useHistory();\n  const isRegionConfig = params.get('region');\n  const isDistanceConfig = params.get('distance');\n  const [openCountryDrawer, toggleCountryDrawer] = useToggle(false);\n  const [countryType, setCountryType] = useState('');\n  const [openDistanceDrawer, toggleDistanceDrawer] = useToggle(false);\n  const [zoneId, setZoneId] = useState(null);\n  const [distanceId, setDistanceId] = useState(null);\n  const [countryId, setCountryId] = useState(null);\n  const [distanceType, setDistanceType] = useState(null);\n  const [config, refresh, isLoading] = useAreaConfig();\n  const [isZoneEdit, setIsZoneEdit] = useState(false);\n  const isConditionalChargesEnabled = useIsConditionalChargesEnabled();\n\n  const addZone = (values, countryId, type) => {\n    setCountryType(type);\n\n    if (type === \"included\") {\n      var _values$region, _values$region$countr, _values$region$countr2, _values$region2, _values$region2$count;\n\n      setZoneId(values === null || values === void 0 ? void 0 : (_values$region = values.region) === null || _values$region === void 0 ? void 0 : (_values$region$countr = _values$region.countries[countryId]) === null || _values$region$countr === void 0 ? void 0 : (_values$region$countr2 = _values$region$countr.regions) === null || _values$region$countr2 === void 0 ? void 0 : _values$region$countr2.length.toString());\n      const zoneObj = getInitialRegionValues();\n      setIsZoneEdit(false);\n      values === null || values === void 0 ? void 0 : (_values$region2 = values.region) === null || _values$region2 === void 0 ? void 0 : (_values$region2$count = _values$region2.countries[countryId]) === null || _values$region2$count === void 0 ? void 0 : _values$region2$count.regions.push(zoneObj);\n    }\n\n    return null;\n  };\n\n  const editZone = (countryId, zoneIdx) => {\n    setCountryId(countryId);\n    setZoneId(zoneIdx);\n    setIsZoneEdit(true);\n    return null;\n  };\n\n  const editDistanceZone = (zoneIdx, type) => {\n    setDistanceId(zoneIdx.toString());\n    setDistanceType(type);\n    toggleDistanceDrawer();\n    return null;\n  };\n\n  const onCountryChange = ({\n    value\n  }, countries, setValue) => {\n    if (countryType === \"included\") {\n      setValue('region.type', 'included');\n\n      if (_.isEmpty(countries.find(a => a.name === value))) {\n        const countryObj = getInitialCountryValues(countries, null);\n        countryObj.name = value;\n        countryObj.enabled = true;\n        setValue('region.countries', [...countries, countryObj]);\n      } else {\n        setValue('region.countries', countries.filter(s => s.name !== value));\n      }\n    } else {\n      setValue('region.type', 'excluded');\n\n      if (countries.includes(value)) {\n        setValue('region.excluded', [...countries.filter(s => s !== value)]);\n        return;\n      }\n\n      setValue('region.excluded', [...countries, value]);\n    }\n  };\n\n  const addDistanceZone = (values, setField, type) => {\n    var _values$distance$type;\n\n    const distanceObj = getIntialValuesForDistanceMatrix(); // const index = values?.distance[type]?.distanceMatrix?.length;\n    // setField('distance.active', true);\n\n    setField('distance.type', type); // setField(`distance[${type}].distanceMatrix[${index}]`, distanceObj)\n\n    setField(`distance[${type}].distanceMatrix`, [...(values === null || values === void 0 ? void 0 : (_values$distance$type = values.distance[type]) === null || _values$distance$type === void 0 ? void 0 : _values$distance$type.distanceMatrix), distanceObj]);\n    setDistanceType(type);\n    toggleDistanceDrawer(); // setDistanceId((values.distance[type].distanceMatrix.length === 0 ? 0 : values.distance[type].distanceMatrix.length -1).toString());\n\n    return null;\n  };\n\n  const types = ['included', 'excluded'];\n  const options = [{\n    title: 'Region-Based',\n    subtitle: 'Restrict by region',\n    icon: regionBasedIcon,\n    key: 'region'\n  }, {\n    title: 'Distance-Based',\n    subtitle: 'Restrict by distance',\n    icon: distanceBasedIcon,\n    key: 'distance'\n  }];\n\n  const onSubmit = async values => {\n    try {\n      Loader.show();\n      await Becca.createAreaConfig(values);\n      SnackBar.show('successfully Updated');\n      await refresh();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onSaveCountries = values => {\n    toggleCountryDrawer();\n    onSubmit(values);\n  };\n\n  const handleSwitchChange = async (idx, setField, values, submitForm) => {\n    setField(`region.countries[${idx}].enabled`, !values.region.countries[idx].enabled);\n    submitForm();\n  };\n\n  const handleSwitchChangeForDistance = async (idx, setField, values, type, submitForm) => {\n    setField(`distance[${type}].distanceMatrix[${idx}].enabled`, !values.distance[type].distanceMatrix[idx].enabled);\n    submitForm();\n  };\n\n  const handleOptionEnable = (setField, values, type, submitForm) => {\n    if (type === \"region\") {\n      var _values$region3, _values$region3$count;\n\n      setField('region.active', !values.region.active);\n\n      if (values.distance.active) {\n        setField('distance.active', false);\n      }\n\n      if ((values === null || values === void 0 ? void 0 : (_values$region3 = values.region) === null || _values$region3 === void 0 ? void 0 : (_values$region3$count = _values$region3.countries) === null || _values$region3$count === void 0 ? void 0 : _values$region3$count.length) === 0 && values.region.active !== true) {\n        params.set(type, true);\n        history.push({\n          search: params.toString()\n        });\n      }\n\n      submitForm();\n      return;\n    } else {\n      var _values$distance, _values$distance$incl, _values$distance$incl2;\n\n      setField('distance.active', !values.distance.active);\n\n      if (values.region.active) {\n        setField('region.active', false);\n      }\n\n      if ((values === null || values === void 0 ? void 0 : (_values$distance = values.distance) === null || _values$distance === void 0 ? void 0 : (_values$distance$incl = _values$distance.included) === null || _values$distance$incl === void 0 ? void 0 : (_values$distance$incl2 = _values$distance$incl.distanceMatrix) === null || _values$distance$incl2 === void 0 ? void 0 : _values$distance$incl2.length) === 0 && values.distance.active !== true) {\n        params.set(type, true);\n        history.push({\n          search: params.toString()\n        });\n      }\n\n      submitForm();\n      return;\n    }\n  };\n\n  const onSave = values => {\n    onSubmit(values);\n    setZoneId(null);\n  };\n\n  const getCountryDiv = (values, setField, type, submitForm) => {\n    var _values$region4, _values$region5;\n\n    return type === \"included\" ? values === null || values === void 0 ? void 0 : (_values$region4 = values.region) === null || _values$region4 === void 0 ? void 0 : _values$region4.countries.map((countryObj, idx) => {\n      var _getCountries$find, _countryObj$regions, _countryObj$regions2;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.countryDiv,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.flex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }\n      }, (_getCountries$find = getCountries().find(a => a.countryName === (countryObj === null || countryObj === void 0 ? void 0 : countryObj.name))) === null || _getCountries$find === void 0 ? void 0 : _getCountries$find.label, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.toggleSwitch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        active: countryObj === null || countryObj === void 0 ? void 0 : countryObj.enabled,\n        onChange: () => handleSwitchChange(idx, setField, values, submitForm),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.zoneDiv,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.zoneTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        onClick: () => {\n          setField(`region.countries[${idx}].whole`, !values.region.countries[idx].whole);\n          submitForm();\n        },\n        src: countryObj.whole ? checkedBoxIcon : unCheckedBoxIcon,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 29\n        }\n      }), \"\\xA0 Enable for entire country\"), !countryObj.whole && /*#__PURE__*/React.createElement(React.Fragment, null, countryObj === null || countryObj === void 0 ? void 0 : (_countryObj$regions = countryObj.regions) === null || _countryObj$regions === void 0 ? void 0 : _countryObj$regions.map((regionObj, zoneIdx) => /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.zoneEditDiv,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 38\n        }\n      }, _.upperCase(regionObj.name), /*#__PURE__*/React.createElement(\"img\", {\n        src: editIcon,\n        onClick: () => {\n          editZone(idx.toString(), zoneIdx.toString());\n        },\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 42\n        }\n      }))), /*#__PURE__*/React.createElement(Clickable, {\n        onClick: () => {\n          setCountryId(idx.toString());\n          addZone(values, idx, type);\n        },\n        className: cx(styles.addZoneDiv, {\n          [styles.borderTop]: ((_countryObj$regions2 = countryObj.regions) === null || _countryObj$regions2 === void 0 ? void 0 : _countryObj$regions2.length) === 0\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: plusIcon,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 33\n        }\n      }), \"\\xA0 Add Zones\"))));\n    }) : values === null || values === void 0 ? void 0 : (_values$region5 = values.region) === null || _values$region5 === void 0 ? void 0 : _values$region5.excluded.map(countryObj => /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.countryDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.flex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 25\n      }\n    }, countryObj)));\n  };\n\n  const getDistanceZone = (type, values, setField, submitForm) => {\n    var _values$distance$type2, _values$distance$type3;\n\n    return values === null || values === void 0 ? void 0 : (_values$distance$type2 = values.distance[type]) === null || _values$distance$type2 === void 0 ? void 0 : (_values$distance$type3 = _values$distance$type2.distanceMatrix) === null || _values$distance$type3 === void 0 ? void 0 : _values$distance$type3.map((distanceObj, idx) => /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.countryDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.flex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }\n    }, _.capitalize(distanceObj === null || distanceObj === void 0 ? void 0 : distanceObj.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.toggleSwitch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      active: distanceObj === null || distanceObj === void 0 ? void 0 : distanceObj.enabled,\n      onChange: () => handleSwitchChangeForDistance(idx, setField, values, type, submitForm),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.showInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }\n    }, `${distanceObj === null || distanceObj === void 0 ? void 0 : distanceObj.min} (${distanceObj === null || distanceObj === void 0 ? void 0 : distanceObj.type}) - ${distanceObj === null || distanceObj === void 0 ? void 0 : distanceObj.max} (${distanceObj === null || distanceObj === void 0 ? void 0 : distanceObj.type})`, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: () => editDistanceZone(idx, type),\n      src: editIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }))));\n  }; // const onClickOptions = (type) => {\n  //   if(type === \"region\"){\n  //   }\n  // }\n  //   if(type === \"region\"){\n  //     setField('region.active', true);\n  //     setField('distance.active', false);\n  //     return;\n  //   }else{\n  //       setField('distance.active', true);\n  //       setField('region.active', false);\n  //       return;\n  //   }\n  // }\n\n\n  const getLandingPage = (values, setField, submitForm) => options.map(obj => /*#__PURE__*/React.createElement(Clickable, {\n    onClick: () => {\n      if (!isConditionalChargesEnabled) {\n        params.set('openPlans', 'generic');\n        history.push({\n          search: params.toString()\n        });\n        return;\n      } else {\n        params.set(obj.key, true);\n        history.push({\n          search: params.toString()\n        });\n      }\n    },\n    className: styles.tab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: obj.icon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.optionsText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 11\n    }\n  }, obj.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.marginTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.subTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 11\n    }\n  }, obj.subtitle)), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.optionButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.radio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    onClick: e => {\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (!isConditionalChargesEnabled) {\n        params.set('openPlans', 'generic');\n        history.push({\n          search: params.toString()\n        });\n        return;\n      } else {\n        handleOptionEnable(setField, values, obj.key, submitForm);\n      }\n    },\n    src: obj.key === 'region' ? values.region.active ? checkedIcon : uncheckedIcon : values.distance.active ? checkedIcon : uncheckedIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.marginTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Clickable, {\n    onClick: () => {\n      if (!isConditionalChargesEnabled) {\n        params.set('openPlans', 'generic');\n        history.push({\n          search: params.toString()\n        });\n        return;\n      } else {\n        params.set(obj.key, true);\n        history.push({\n          search: params.toString()\n        });\n      }\n    },\n    className: styles.config,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }, \"Config\"))), /*#__PURE__*/React.createElement(Clickable, {\n    onClick: () => {\n      if (!isConditionalChargesEnabled) {\n        params.set('openPlans', 'generic');\n        history.push({\n          search: params.toString()\n        });\n        return;\n      } else {\n        params.set(obj.key, true);\n        history.push({\n          search: params.toString()\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.arrow,\n    src: rightArrowIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 11\n    }\n  })))));\n\n  const Component = isDesktop ? 'div' : Drawer;\n  const props = !isDesktop ? {\n    title: 'Areas Served',\n    onClose: () => {\n      history.goBack();\n    }\n  } : {\n    className: styles.desktopContainer\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: getInitialValues(config),\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    setFieldValue,\n    submitForm\n  }) =>\n  /*#__PURE__*/\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }\n  }), isDesktop && /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => history.goBack(),\n    className: styles.maintitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.backIconForDesktop,\n    src: chevronLeftDesk,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 11\n    }\n  }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 11\n    }\n  }, \"\\xA0\"), \"Areas Served\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 11\n    }\n  }, !isRegionConfig && !isDistanceConfig && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.initialText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 17\n    }\n  }, \"Define where you want to sell\"), getLandingPage(values, setFieldValue, submitForm)), (isRegionConfig || isDistanceConfig) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ConfigText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: isRegionConfig ? regionBasedMiniIcon : distanceBasedMiniIcon,\n    alt: \"ConfigBased\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.marginLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 19\n    }\n  }, isRegionConfig ? 'Restrict by Region' : 'Restrict by Distance')), types.map(type => {\n    var _values$region$countr3, _values$region6, _values$region6$exclu;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.configOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 23\n      }\n    }, isRegionConfig ? \"Add countries to\" : `${type === 'included' ? 'Inclusion' : 'Exclusion'} Zones in Miles/Km`, ' ', isRegionConfig && (type === 'included' ? 'include' : 'exclude')), /*#__PURE__*/React.createElement(\"img\", {\n      onClick: () => {\n        setFieldValue(isRegionConfig ? 'region.type' : 'distance.type', type);\n        submitForm();\n      },\n      src: isRegionConfig ? values.region.type === type ? checkedIcon : uncheckedIcon : values.distance.type === type ? checkedIcon : uncheckedIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 23\n      }\n    })), isDistanceConfig && getDistanceZone(type, values, setFieldValue, submitForm), isRegionConfig && (((_values$region$countr3 = values.region.countries) === null || _values$region$countr3 === void 0 ? void 0 : _values$region$countr3.length) > 0 || ((_values$region6 = values.region) === null || _values$region6 === void 0 ? void 0 : (_values$region6$exclu = _values$region6.excluded) === null || _values$region6$exclu === void 0 ? void 0 : _values$region6$exclu.length) > 0) && getCountryDiv(values, setFieldValue, type, submitForm), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.addCountries,\n      onClick: () => {\n        if (isRegionConfig) {\n          setCountryType(type);\n          toggleCountryDrawer();\n        } else {\n          addDistanceZone(values, setFieldValue, type);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: plusIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 23\n      }\n    }), \"\\xA0\", isRegionConfig ? 'Add Countries' : \"Add Zones\"));\n  }), /*#__PURE__*/React.createElement(Clickable, {\n    onClick: () => {\n      history.push('/manage/delivery');\n    },\n    className: cx(styles.configOptions, styles.f500, styles.tab),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 17\n    }\n  }, \"Add Shipping Charges\", /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.addCountries,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: plusIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 21\n    }\n  }), \"\\xA0 Add\"))), openCountryDrawer && /*#__PURE__*/React.createElement(CountryDrawer, {\n    onSelect: value => onCountryChange(value, countryType === 'included' ? values.region.countries : values.region.excluded, setFieldValue),\n    onBack: toggleCountryDrawer,\n    countriesList: countryType === 'included' ? values.region.countries : values.region.excluded,\n    multiSelect: true,\n    type: countryType,\n    onSave: () => onSaveCountries(values),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 15\n    }\n  }), openDistanceDrawer && /*#__PURE__*/React.createElement(Distance, {\n    onClose: toggleDistanceDrawer,\n    idx: distanceId || values.distance[distanceType].distanceMatrix.length - 1,\n    type: distanceType,\n    submitForm: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 36\n    }\n  }), zoneId && /*#__PURE__*/React.createElement(Zones, {\n    onClose: setZoneId,\n    countryId: countryId,\n    zoneId: zoneId,\n    onSave: submitForm,\n    isZoneEdit: isZoneEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 24\n    }\n  }))));\n}\n\n_s(AreasServed, \"luzwAS5XDIp5xv4HyGpWtRdnUig=\", false, function () {\n  return [useDesktop, useQueryParams, useHistory, useToggle, useToggle, useAreaConfig, useIsConditionalChargesEnabled];\n});\n\n_c = AreasServed;\nexport default AreasServed;\n\nvar _c;\n\n$RefreshReg$(_c, \"AreasServed\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/areasServed/Overview.jsx"],"names":["React","Formik","useDesktop","Drawer","useHistory","Clickable","Switch","useQueryParams","useToggle","CountryDrawer","_","styles","getInitialValues","getInitialCountryValues","getInitialRegionValues","getIntialValuesForDistanceMatrix","Zones","useState","Distance","getCountries","cx","Becca","useAreaConfig","SnackBar","Loader","Loading","useIsConditionalChargesEnabled","AreasServed","isDesktop","params","history","isRegionConfig","get","isDistanceConfig","openCountryDrawer","toggleCountryDrawer","countryType","setCountryType","openDistanceDrawer","toggleDistanceDrawer","zoneId","setZoneId","distanceId","setDistanceId","countryId","setCountryId","distanceType","setDistanceType","config","refresh","isLoading","isZoneEdit","setIsZoneEdit","isConditionalChargesEnabled","addZone","values","type","region","countries","regions","length","toString","zoneObj","push","editZone","zoneIdx","editDistanceZone","onCountryChange","value","setValue","isEmpty","find","a","name","countryObj","enabled","filter","s","includes","addDistanceZone","setField","distanceObj","distance","distanceMatrix","types","options","title","subtitle","icon","regionBasedIcon","key","distanceBasedIcon","onSubmit","show","createAreaConfig","e","showError","hide","onSaveCountries","handleSwitchChange","idx","submitForm","handleSwitchChangeForDistance","handleOptionEnable","active","set","search","included","onSave","getCountryDiv","map","countryDiv","flex","countryName","label","toggleSwitch","zoneDiv","zoneTitle","whole","checkedBoxIcon","unCheckedBoxIcon","regionObj","zoneEditDiv","upperCase","editIcon","addZoneDiv","borderTop","plusIcon","excluded","getDistanceZone","capitalize","showInput","min","max","getLandingPage","obj","tab","optionsText","marginTop","subTitle","optionButton","radio","stopPropagation","preventDefault","checkedIcon","uncheckedIcon","arrow","rightArrowIcon","Component","props","onClose","goBack","className","desktopContainer","setFieldValue","maintitle","backIconForDesktop","chevronLeftDesk","container","initialText","ConfigText","regionBasedMiniIcon","distanceBasedMiniIcon","marginLeft","configOptions","box","addCountries","f500"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport { useDesktop } from 'contexts';\nimport { Drawer } from 'components/shared/Drawer';\nimport { useHistory } from 'react-router-dom';\nimport distanceBasedIcon from 'assets/images/areasServed/distanceBased.svg';\nimport regionBasedIcon from 'assets/images/areasServed/regionBased.svg';\nimport { Clickable, Switch } from 'phoenix-components';\nimport checkedIcon from 'assets/images/areasServed/checked.svg';\nimport uncheckedIcon from 'assets/images/areasServed/unchecked.svg';\nimport rightArrowIcon from 'assets/images/areasServed/rightArrow.svg';\nimport distanceBasedMiniIcon from 'assets/images/areasServed/distanceBasedMini.svg';\nimport regionBasedMiniIcon from 'assets/images/areasServed/regionBasedMini.svg';\nimport { useQueryParams } from 'hooks';\nimport { useToggle } from 'hooks/common';\nimport plusIcon from 'assets/images/areasServed/plus.svg';\nimport { CountryDrawer } from 'components/common/CountryDrawer';\nimport _ from 'lodash';\nimport checkedBoxIcon from 'assets/images/orders/multi/check.svg';\nimport unCheckedBoxIcon from 'assets/images/orders/multi/uncheck.svg';\nimport styles from './Overview.module.css';\nimport { getInitialValues, getInitialCountryValues, getInitialRegionValues, \n    getIntialValuesForDistanceMatrix } from './utils';\nimport Zones from './Zones';\nimport { useState } from 'react';\nimport Distance from './Distance'\nimport editIcon from 'assets/images/areasServed/edit.svg';\nimport { getCountries } from 'utils/countries';\n// import { DebugValues } from 'components/formik';\nimport cx from 'classnames';\nimport { Becca } from 'api';\nimport {useAreaConfig} from 'hooks/areasServed';\nimport SnackBar from 'services/snackbar';\nimport Loader from 'services/loader';\nimport { Loading } from 'components/shared/Loading';\nimport chevronLeftDesk from 'assets/v2/common/chevronPrimaryLeft.svg';\nimport {\n  useIsConditionalChargesEnabled\n} from 'contexts/userContext';\n\n\nfunction AreasServed() {\n  const isDesktop = useDesktop();\n  const params = useQueryParams();\n  const history = useHistory();\n  const isRegionConfig = params.get('region');\n  const isDistanceConfig = params.get('distance');\n  const [openCountryDrawer, toggleCountryDrawer] = useToggle(false);\n  const [countryType, setCountryType] = useState('');\n  const [openDistanceDrawer, toggleDistanceDrawer] = useToggle(false);\n  const [zoneId, setZoneId] = useState(null);\n  const [distanceId, setDistanceId] = useState(null);\n  const [countryId, setCountryId] = useState(null);\n  const [distanceType, setDistanceType] = useState(null);\n  const [config,refresh,isLoading] = useAreaConfig();\n  const [isZoneEdit, setIsZoneEdit] = useState(false);\n  const isConditionalChargesEnabled = useIsConditionalChargesEnabled();\n\n\n  const addZone = (values,countryId, type) => {\n        setCountryType(type)\n      if(type === \"included\"){\n        setZoneId(values?.region?.countries[countryId]?.regions?.length.toString());\n        const zoneObj = getInitialRegionValues();\n        setIsZoneEdit(false);\n        values?.region?.countries[countryId]?.regions.push(zoneObj);\n      }\n      return null\n  };\n\n  const editZone = (countryId, zoneIdx ) =>{\n    setCountryId(countryId);\n    setZoneId(zoneIdx);\n    setIsZoneEdit(true);\n    return null;\n  }\n\n  const editDistanceZone = (zoneIdx, type ) =>{\n    setDistanceId(zoneIdx.toString());\n    setDistanceType(type);\n    toggleDistanceDrawer()\n    return null;\n  }\n   \n  const onCountryChange = ({ value }, countries, setValue) => {\n      if(countryType === \"included\"){\n        setValue('region.type', 'included');\n        if (_.isEmpty(countries.find(a => a.name === value))) {\n            const countryObj = getInitialCountryValues(countries, null);\n            countryObj.name = value;\n            countryObj.enabled = true;\n            setValue('region.countries', [...countries, countryObj]);\n          } else {\n            setValue('region.countries', countries.filter(s => s.name !== value));\n          }\n      }else{\n        setValue('region.type', 'excluded');\n          if(countries.includes(value)){\n            setValue('region.excluded', [...countries.filter(s => s !== value)]);\n            return;\n          }\n        setValue('region.excluded',  [...countries, value]);\n      }\n  };\n\n  const addDistanceZone = (values, setField,type)  =>{\n    const distanceObj = getIntialValuesForDistanceMatrix();\n    // const index = values?.distance[type]?.distanceMatrix?.length;\n    // setField('distance.active', true);\n    setField('distance.type', type);\n    // setField(`distance[${type}].distanceMatrix[${index}]`, distanceObj)\n    setField(`distance[${type}].distanceMatrix`, [...values?.distance[type]?.distanceMatrix, distanceObj])\n    setDistanceType(type);\n    toggleDistanceDrawer();\n    // setDistanceId((values.distance[type].distanceMatrix.length === 0 ? 0 : values.distance[type].distanceMatrix.length -1).toString());\n    return null;\n  }\n\n  const types = ['included', 'excluded'];\n\n  const options = [\n    {\n      title: 'Region-Based',\n      subtitle: 'Restrict by region',\n      icon: regionBasedIcon,\n      key: 'region',\n    },\n    {\n      title: 'Distance-Based',\n      subtitle: 'Restrict by distance',\n      icon: distanceBasedIcon,\n      key: 'distance',\n    }\n  ];\n\n  const onSubmit = async (values) => {\n    try {\n        Loader.show();\n       await Becca.createAreaConfig(values);\n            SnackBar.show('successfully Updated');\n            await refresh();\n      } catch (e) {\n        SnackBar.showError(e);\n      } finally {\n        Loader.hide();\n      }\n  };\n\n  const onSaveCountries = (values) => {\n    toggleCountryDrawer();\n    onSubmit(values);\n  };\n\n  const handleSwitchChange = async (idx, setField, values,submitForm) => {\n    setField(`region.countries[${idx}].enabled`, !values.region.countries[idx].enabled);\n    submitForm();\n  };\n  const handleSwitchChangeForDistance = async (idx, setField, values,type,submitForm) => {\n    setField(`distance[${type}].distanceMatrix[${idx}].enabled`, !values.distance[type].distanceMatrix[idx].enabled);\n    submitForm();\n  };\n\n  const handleOptionEnable = (setField, values,type, submitForm) => {\n    if(type === \"region\"){\n      setField('region.active', !values.region.active);\n      if(values.distance.active){\n      setField('distance.active', false);\n      }\n      if(values?.region?.countries?.length === 0 && values.region.active !== true){\n        params.set(type, true);\n        history.push({\n          search: params.toString(),\n        });\n      }\n      submitForm();\n      return;\n    }else{\n        setField('distance.active', !values.distance.active);\n        if(values.region.active){\n        setField('region.active', false);\n        }\n        if(values?.distance?.included?.distanceMatrix?.length === 0 && values.distance.active !== true){\n          params.set(type, true);\n          history.push({\n            search: params.toString(),\n          });\n        }\n        submitForm();\n        return;\n    }\n  }\n\n  const onSave = (values) =>{\n    onSubmit(values);\n    setZoneId(null);\n  }\n\n    const getCountryDiv = (values, setField, type,submitForm) =>\n    (\n        type === \"included\" ? (\n            values?.region?.countries.map((countryObj, idx) => (\n                <div className={styles.countryDiv}>\n                    <div className={styles.flex}>\n                        {(getCountries().find(a => a.countryName === countryObj?.name)?.label)}\n                        <div className={styles.toggleSwitch}>\n                            <Switch\n                                active={countryObj?.enabled}\n                                onChange={() => handleSwitchChange(idx, setField, values, submitForm)}\n                            />\n                        </div>\n                    </div>\n                    <div className={styles.zoneDiv}>\n                        <div className={styles.zoneTitle}>\n                            <img onClick={() => {setField(`region.countries[${idx}].whole`, !values.region.countries[idx].whole); submitForm()}}\n                                src={countryObj.whole ? checkedBoxIcon : unCheckedBoxIcon} alt=\"\" />\n                            &nbsp;\n                            Enable for entire country\n                        </div>\n                        {!countryObj.whole && (\n                            <>\n                                {countryObj?.regions?.map((regionObj, zoneIdx) => (\n                                     <div className={styles.zoneEditDiv}>\n                                         {_.upperCase(regionObj.name)}\n                                         <img src={editIcon} onClick={()=> {  editZone(idx.toString(), zoneIdx.toString())}} alt=\"\"/>\n                                     </div>\n                                ))}\n                            <Clickable onClick={() => { setCountryId(idx.toString()); addZone(values, idx, type) }} \n                            className={cx(styles.addZoneDiv ,{[styles.borderTop] : countryObj.regions?.length === 0})}>\n                                <img src={plusIcon} alt=\"\" />\n                                &nbsp;\n                                Add Zones\n                            </Clickable>\n                            </>\n                        )}\n                    </div>\n                </div>\n            ))\n        ) : \n            (\n                values?.region?.excluded.map((countryObj) => (\n                    <div className={styles.countryDiv}>\n                        <div className={styles.flex}>\n                            {(countryObj)}\n                        </div>\n                    </div>\n                ))  \n            )\n        \n    );\n\n\n  const getDistanceZone =(type, values, setField, submitForm) => (\n    values?.distance[type]?.distanceMatrix?.map((distanceObj, idx) => (\n        <div className={styles.countryDiv}>\n            <div className={styles.flex}>\n                {_.capitalize(distanceObj?.name)}\n                <div className={styles.toggleSwitch}>\n                    <Switch\n                    active={distanceObj?.enabled}\n                    onChange={() => handleSwitchChangeForDistance(idx, setField, values, type,submitForm)}\n                    />\n                </div>\n            </div>\n            <div className={styles.showInput}>\n                {`${distanceObj?.min} (${distanceObj?.type}) - ${distanceObj?.max} (${distanceObj?.type})`}\n                <img onClick={() => editDistanceZone(idx, type)} src={editIcon} alt='' />\n            </div>\n        </div>\n    )));\n\n  // const onClickOptions = (type) => {\n  //   if(type === \"region\"){\n      \n   \n  //   }\n  // }\n  //   if(type === \"region\"){\n  //     setField('region.active', true);\n  //     setField('distance.active', false);\n  //     return;\n  //   }else{\n  //       setField('distance.active', true);\n  //       setField('region.active', false);\n  //       return;\n  //   }\n  // }\n\n  const getLandingPage = (values, setField,submitForm) => (\n    options.map(obj => (\n      <Clickable  onClick={() => {\n        if (!isConditionalChargesEnabled) {\n          params.set('openPlans', 'generic');\n          history.push({\n            search: params.toString(),\n          });\n          return;\n        }else{\n          params.set(obj.key, true);\n          history.push({\n            search: params.toString(),\n          });\n        }\n      }} className={styles.tab}>\n      <div className={styles.options}>\n        <img src={obj.icon} alt=\"\" />\n        <div className={styles.optionsText}>\n          <span className={styles.title}>{obj.title}</span>\n          <div className={styles.marginTop} />\n          <span className={styles.subTitle}>{obj.subtitle}</span>\n        </div>\n        <div className={styles.optionButton}>\n          <div className={styles.radio}>\n            <img\n              onClick={(e) => {\n                e.stopPropagation();\n                e.preventDefault();\n                if (!isConditionalChargesEnabled) {\n                  params.set('openPlans', 'generic');\n                  history.push({\n                    search: params.toString(),\n                  });\n                  return;\n                }\n                else{\n                  handleOptionEnable(setField,values,obj.key, submitForm);\n                }\n              }}\n              src={obj.key === 'region'  ? (values.region.active ? checkedIcon : uncheckedIcon ):(\n               values.distance.active ? checkedIcon : uncheckedIcon)}\n              alt=\"\" />\n            <div className={styles.marginTop} />\n            <Clickable\n              onClick={() => {\n                if (!isConditionalChargesEnabled) {\n                  params.set('openPlans', 'generic');\n                  history.push({\n                    search: params.toString(),\n                  });\n                  return;\n                }else{\n                  params.set(obj.key, true);\n                  history.push({\n                    search: params.toString(),\n                  });\n                }\n              }}\n              className={styles.config}>\n              Config\n            </Clickable>\n          </div>\n        </div>\n        <Clickable\n          onClick={() => {\n            if (!isConditionalChargesEnabled) {\n              params.set('openPlans', 'generic');\n              history.push({\n                search: params.toString(),\n              });\n              return;\n            }else{\n            params.set(obj.key, true);\n            history.push({\n              search: params.toString(),\n            });\n          }\n          }}>\n          <img className={styles.arrow} src={rightArrowIcon} alt=\"\" />\n        </Clickable>\n      </div>\n      </Clickable>\n    ))\n\n  );\n\n  const Component = isDesktop ? 'div' : Drawer;\n  \n  const props = !isDesktop ? {\n    title: 'Areas Served',\n    onClose: () => {\n      history.goBack();\n    },\n  } : {\n    className: styles.desktopContainer,\n  };\n\n  if(isLoading) {\n      return (\n          <Loading />\n      )\n  }\n\n  return (\n    <Formik\n      initialValues={getInitialValues(config)}\n      onSubmit={onSubmit}\n    >\n      {({ values, setFieldValue, submitForm }) => (\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        <Component {...props}>\n          {isDesktop && (\n        <div onClick={() => history.goBack()} className={styles.maintitle}>\n          <img className={styles.backIconForDesktop} src={chevronLeftDesk} alt=\"\" />\n          <div>&nbsp;</div>\n          <div>&nbsp;</div>\n          Areas Served\n        </div>\n      )}\n          <div className={styles.container}>\n            {!isRegionConfig && !isDistanceConfig && (\n              <>\n                <div className={styles.initialText}>Define where you want to sell</div>\n                {getLandingPage(values, setFieldValue, submitForm)}\n              </>\n            )}\n            {(isRegionConfig || isDistanceConfig) && (\n              <>\n                <div className={styles.ConfigText}>\n                  <img src={isRegionConfig ? regionBasedMiniIcon : distanceBasedMiniIcon} alt=\"ConfigBased\" />\n                  <div className={styles.marginLeft}>\n                    {isRegionConfig ? 'Restrict by Region' : 'Restrict by Distance'}\n                  </div>\n                  \n                </div>\n                {types.map(type => (\n                  <div className={styles.configOptions}>\n                    <div className={styles.box}>\n                      <div>\n                        {isRegionConfig ? \"Add countries to\" : `${type === 'included' ? 'Inclusion':'Exclusion'} Zones in Miles/Km`}\n                        {' '}\n                        {isRegionConfig && ( type === 'included' ? 'include':'exclude')}\n                      </div>\n                      <img\n                        onClick={() => {setFieldValue(isRegionConfig ? 'region.type': 'distance.type', type); submitForm()}}\n                        src={isRegionConfig ? (values.region.type === type ? checkedIcon : uncheckedIcon) :\n                             (values.distance.type === type ? checkedIcon : uncheckedIcon)}\n                        alt=\"\" />\n                    </div>\n                    {isDistanceConfig && getDistanceZone(type, values, setFieldValue,submitForm )}\n                    {isRegionConfig && (values.region.countries?.length > 0 || values.region?.excluded?.length > 0) \n                     && getCountryDiv(values, setFieldValue,type, submitForm)}\n                    <div className={styles.addCountries} onClick={() => {\n                        if(isRegionConfig) {\n                            setCountryType(type);\n                            toggleCountryDrawer();\n                        }else{\n                            addDistanceZone(values,setFieldValue,type)\n                        }\n                    }}>\n                      <img src={plusIcon} alt=\"\" />\n                      &nbsp;\n                      {isRegionConfig ? 'Add Countries' : \"Add Zones\"}\n                    </div>\n                  </div>\n                ))}\n                <Clickable \n                onClick={() => {\n                  history.push('/manage/delivery');\n                }}\n                className={cx(styles.configOptions, styles.f500, styles.tab)}>\n                  Add Shipping Charges\n                  <div className={styles.addCountries}>\n                    <img src={plusIcon} alt=\"\"  />\n                    &nbsp;\n                    Add\n                  </div>\n                </Clickable>\n              </>\n            ) }\n            {openCountryDrawer && (\n              <CountryDrawer\n                onSelect={(value) => onCountryChange(value, (countryType === 'included' ? values.region.countries : values.region.excluded), setFieldValue)}\n                onBack={toggleCountryDrawer}\n                countriesList={countryType === 'included' ? values.region.countries : values.region.excluded}\n                multiSelect={true}\n                type={countryType}\n                onSave={() => onSaveCountries(values)} />\n            )}\n            {openDistanceDrawer && <Distance onClose={toggleDistanceDrawer} \n            idx={distanceId || values.distance[distanceType].distanceMatrix.length -1} type={distanceType} submitForm={submitForm}/>}\n            {zoneId && <Zones onClose={setZoneId} countryId={countryId} \n            zoneId={zoneId} onSave={submitForm} isZoneEdit={isZoneEdit} />}\n          </div>\n        </Component>\n      )}\n    </Formik>\n  );\n}\n\nexport default AreasServed;\n"]},"metadata":{},"sourceType":"module"}