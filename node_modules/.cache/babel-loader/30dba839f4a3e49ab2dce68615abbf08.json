{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/profile/marketingPixels/PixelCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Clickable, Switch } from 'phoenix-components';\nimport { useField, useFormikContext } from 'formik';\nimport _ from 'lodash';\nimport WebView from \"../../../services/webview\";\nimport cx from 'classnames';\nimport styles from \"./PixelCard.module.css\";\nexport function PixelCard({\n  icon,\n  title,\n  description,\n  blog,\n  onConnect,\n  name\n}) {\n  _s();\n\n  const [{\n    value\n  }] = useField(name);\n  const {\n    submitForm\n  } = useFormikContext();\n  const [{\n    value: enabled\n  },, {\n    setValue\n  }] = useField(`${name}.enabled`);\n  const connected = !_.isEmpty(value.id);\n\n  const onToggle = () => {\n    setValue(!enabled);\n    submitForm();\n  };\n\n  const openUrl = () => {\n    if (WebView.isWebView()) {\n      WebView.openUrl(blog);\n      return;\n    }\n\n    window.open(blog, '_blank');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.topRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.icon,\n    src: icon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), !connected && !_.isEmpty(blog) && /*#__PURE__*/React.createElement(Clickable, {\n    onClick: openUrl,\n    className: styles.greenLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Know More\"), connected && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.switch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: cx(styles.enabled, {\n      [styles.active]: value.enabled\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, value.enabled ? 'Active' : 'In Active'), /*#__PURE__*/React.createElement(Switch, {\n    active: value.enabled,\n    onChange: onToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, description), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onConnect,\n    label: connected ? 'Edit' : 'Connect',\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(PixelCard, \"qa+oehvZCoLnbAzM1GgaXXNls50=\", false, function () {\n  return [useField, useFormikContext, useField];\n});\n\n_c = PixelCard;\nPixelCard.propTypes = {\n  icon: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  blog: PropTypes.string,\n  onConnect: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\nPixelCard.defaultProps = {\n  blog: null\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PixelCard\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/profile/marketingPixels/PixelCard.jsx"],"names":["React","PropTypes","Button","Clickable","Switch","useField","useFormikContext","_","WebView","cx","styles","PixelCard","icon","title","description","blog","onConnect","name","value","submitForm","enabled","setValue","connected","isEmpty","id","onToggle","openUrl","isWebView","window","open","card","topRow","greenLink","switch","active","button","propTypes","string","isRequired","func","color","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Clickable, Switch } from 'phoenix-components';\nimport { useField, useFormikContext } from 'formik';\nimport _ from 'lodash';\nimport WebView from 'services/webview';\nimport cx from 'classnames';\nimport styles from './PixelCard.module.css';\n\nexport function PixelCard({\n  icon, title, description, blog, onConnect, name\n}) {\n  const [{ value }] = useField(name);\n  const { submitForm } = useFormikContext();\n  const [{ value: enabled }, , { setValue }] = useField(`${name}.enabled`);\n\n  const connected = !_.isEmpty(value.id);\n\n  const onToggle = () => {\n    setValue(!enabled);\n    submitForm();\n  };\n\n  const openUrl = () => {\n    if (WebView.isWebView()) {\n      WebView.openUrl(blog);\n      return;\n    }\n    window.open(blog, '_blank');\n  };\n\n  return (\n    <div className={styles.card}>\n      <div className={styles.topRow}>\n        <img className={styles.icon} src={icon} alt=\"\" />\n        <div className={styles.title}>{title}</div>\n        <div className=\"spacer\" />\n        {!connected && !_.isEmpty(blog) && (\n          <Clickable onClick={openUrl} className={styles.greenLink}>\n            Know More\n          </Clickable>\n        )}\n        {connected && (\n          <div className={styles.switch}>\n            <span\n              className={cx(styles.enabled, {\n                [styles.active]: value.enabled,\n              })}\n            >\n              {value.enabled ? 'Active' : 'In Active'}\n            </span>\n            <Switch active={value.enabled} onChange={onToggle} />\n          </div>\n        )}\n      </div>\n      <div className={styles.description}>\n        {description}\n      </div>\n      <div className={styles.button}>\n        <Button onClick={onConnect} label={connected ? 'Edit' : 'Connect'} fullWidth />\n      </div>\n    </div>\n  );\n}\n\nPixelCard.propTypes = {\n  icon: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  blog: PropTypes.string,\n  onConnect: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nPixelCard.defaultProps = {\n  blog: null,\n};\n"]},"metadata":{},"sourceType":"module"}