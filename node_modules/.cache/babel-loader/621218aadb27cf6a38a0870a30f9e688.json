{"ast":null,"code":"const ansiHTML = require('ansi-html');\n\nconst HtmlEntities = require('html-entities');\n\nconst theme = require('../theme');\n\nconst formatFilename = require('../utils/formatFilename');\n\nansiHTML.setColors(theme);\nconst entities = new HtmlEntities.Html5Entities();\n/**\n * @typedef {Object} CompileErrorTraceProps\n * @property {string} errorMessage\n */\n\n/**\n * A formatter that turns Webpack compile error messages into highlighted HTML source traces.\n * @param {Document} document\n * @param {HTMLElement} root\n * @param {CompileErrorTraceProps} props\n * @returns {void}\n */\n\nfunction CompileErrorTrace(document, root, props) {\n  const errorParts = props.errorMessage.split('\\n');\n  const errorMessage = errorParts.splice(1, 1)[0] // Strip filename from the error message\n  .replace(/^(.*:)\\s.*:(\\s.*)$/, '$1$2');\n  errorParts[0] = formatFilename(errorParts[0]);\n  errorParts.unshift(errorMessage);\n  const stackContainer = document.createElement('pre');\n  stackContainer.innerHTML = entities.decode(ansiHTML(entities.encode(errorParts.join('\\n'))));\n  stackContainer.style.fontFamily = ['\"Operator Mono SSm\"', '\"Operator Mono\"', '\"Fira Code Retina\"', '\"Fira Code\"', '\"FiraCode-Retina\"', '\"Andale Mono\"', '\"Lucida Console\"', 'Menlo', 'Consolas', 'Monaco', 'monospace'].join(', ');\n  stackContainer.style.margin = '0';\n  stackContainer.style.whiteSpace = 'pre-wrap';\n  root.appendChild(stackContainer);\n}\n\nmodule.exports = CompileErrorTrace;","map":{"version":3,"sources":["/home/harish/windo/phoenix/node_modules/customize-cra-react-refresh/node_modules/@pmmmwh/react-refresh-webpack-plugin/src/overlay/components/CompileErrorTrace.js"],"names":["ansiHTML","require","HtmlEntities","theme","formatFilename","setColors","entities","Html5Entities","CompileErrorTrace","document","root","props","errorParts","errorMessage","split","splice","replace","unshift","stackContainer","createElement","innerHTML","decode","encode","join","style","fontFamily","margin","whiteSpace","appendChild","module","exports"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAxB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,eAAD,CAA5B;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,UAAD,CAArB;;AACA,MAAMG,cAAc,GAAGH,OAAO,CAAC,yBAAD,CAA9B;;AAEAD,QAAQ,CAACK,SAAT,CAAmBF,KAAnB;AAEA,MAAMG,QAAQ,GAAG,IAAIJ,YAAY,CAACK,aAAjB,EAAjB;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,iBAAT,CAA2BC,QAA3B,EAAqCC,IAArC,EAA2CC,KAA3C,EAAkD;AAChD,QAAMC,UAAU,GAAGD,KAAK,CAACE,YAAN,CAAmBC,KAAnB,CAAyB,IAAzB,CAAnB;AACA,QAAMD,YAAY,GAAGD,UAAU,CAC5BG,MADkB,CACX,CADW,EACR,CADQ,EACL,CADK,EAEnB;AAFmB,GAGlBC,OAHkB,CAGV,oBAHU,EAGY,MAHZ,CAArB;AAIAJ,EAAAA,UAAU,CAAC,CAAD,CAAV,GAAgBR,cAAc,CAACQ,UAAU,CAAC,CAAD,CAAX,CAA9B;AACAA,EAAAA,UAAU,CAACK,OAAX,CAAmBJ,YAAnB;AAEA,QAAMK,cAAc,GAAGT,QAAQ,CAACU,aAAT,CAAuB,KAAvB,CAAvB;AACAD,EAAAA,cAAc,CAACE,SAAf,GAA2Bd,QAAQ,CAACe,MAAT,CAAgBrB,QAAQ,CAACM,QAAQ,CAACgB,MAAT,CAAgBV,UAAU,CAACW,IAAX,CAAgB,IAAhB,CAAhB,CAAD,CAAxB,CAA3B;AACAL,EAAAA,cAAc,CAACM,KAAf,CAAqBC,UAArB,GAAkC,CAChC,qBADgC,EAEhC,iBAFgC,EAGhC,oBAHgC,EAIhC,aAJgC,EAKhC,mBALgC,EAMhC,eANgC,EAOhC,kBAPgC,EAQhC,OARgC,EAShC,UATgC,EAUhC,QAVgC,EAWhC,WAXgC,EAYhCF,IAZgC,CAY3B,IAZ2B,CAAlC;AAaAL,EAAAA,cAAc,CAACM,KAAf,CAAqBE,MAArB,GAA8B,GAA9B;AACAR,EAAAA,cAAc,CAACM,KAAf,CAAqBG,UAArB,GAAkC,UAAlC;AAEAjB,EAAAA,IAAI,CAACkB,WAAL,CAAiBV,cAAjB;AACD;;AAEDW,MAAM,CAACC,OAAP,GAAiBtB,iBAAjB","sourcesContent":["const ansiHTML = require('ansi-html');\nconst HtmlEntities = require('html-entities');\nconst theme = require('../theme');\nconst formatFilename = require('../utils/formatFilename');\n\nansiHTML.setColors(theme);\n\nconst entities = new HtmlEntities.Html5Entities();\n\n/**\n * @typedef {Object} CompileErrorTraceProps\n * @property {string} errorMessage\n */\n\n/**\n * A formatter that turns Webpack compile error messages into highlighted HTML source traces.\n * @param {Document} document\n * @param {HTMLElement} root\n * @param {CompileErrorTraceProps} props\n * @returns {void}\n */\nfunction CompileErrorTrace(document, root, props) {\n  const errorParts = props.errorMessage.split('\\n');\n  const errorMessage = errorParts\n    .splice(1, 1)[0]\n    // Strip filename from the error message\n    .replace(/^(.*:)\\s.*:(\\s.*)$/, '$1$2');\n  errorParts[0] = formatFilename(errorParts[0]);\n  errorParts.unshift(errorMessage);\n\n  const stackContainer = document.createElement('pre');\n  stackContainer.innerHTML = entities.decode(ansiHTML(entities.encode(errorParts.join('\\n'))));\n  stackContainer.style.fontFamily = [\n    '\"Operator Mono SSm\"',\n    '\"Operator Mono\"',\n    '\"Fira Code Retina\"',\n    '\"Fira Code\"',\n    '\"FiraCode-Retina\"',\n    '\"Andale Mono\"',\n    '\"Lucida Console\"',\n    'Menlo',\n    'Consolas',\n    'Monaco',\n    'monospace',\n  ].join(', ');\n  stackContainer.style.margin = '0';\n  stackContainer.style.whiteSpace = 'pre-wrap';\n\n  root.appendChild(stackContainer);\n}\n\nmodule.exports = CompileErrorTrace;\n"]},"metadata":{},"sourceType":"script"}