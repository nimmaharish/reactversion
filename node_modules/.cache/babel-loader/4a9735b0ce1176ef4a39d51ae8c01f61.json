{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/common/ImagePicker.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport addIcon from \"../../assets/images/products/create/add.svg\";\nimport { FilePreview } from \"./FilePreview\";\nimport { compressImages } from \"../../utils/image\";\nimport Snackbar from \"../../services/snackbar\";\nimport Loader from \"../../services/loader\";\nimport { Becca } from \"../../api\";\nimport { inParallelWithLimit } from \"../../utils/parallel\";\nimport { Clickable } from 'phoenix-components';\nimport { usePostsMedia } from \"../../hooks/posts\";\nimport { useToggle } from \"../../hooks/common\";\nimport { MediaDrawer } from \"./MediaDrawer\";\nimport styles from \"./ImagePicker.module.css\";\nexport function ImagePicker({\n  images,\n  onChange,\n  accept,\n  isMulti,\n  label,\n  showCover,\n  size,\n  videos,\n  showLimit\n}) {\n  _s();\n\n  console.log(showLimit);\n  const [posts] = usePostsMedia();\n  const [open, toggleDrawer] = useToggle(false);\n  const [err, setErr] = useState();\n  const [err8, setErr8] = useState();\n\n  const removeImage = index => {\n    onChange(images.filter((_i, idx) => idx !== index));\n  };\n\n  const onCoverSelect = index => {\n    const otherItems = images.filter((_i, idx) => idx !== index);\n    const selectedItems = images.filter((_i, idx) => idx === index);\n    onChange([...selectedItems, ...otherItems]);\n  };\n\n  const onFileAdd = async e => {\n    Loader.show();\n    setErr(false);\n    setErr8(false);\n\n    try {\n      var _e$target;\n\n      if ((e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.files.length) > 7 || images.length > 7) {\n        setErr(false);\n        setErr8(true);\n        return;\n      }\n\n      const files = await compressImages([...e.target.files]);\n\n      if (files.length) {\n        let uploaded = await inParallelWithLimit(files, 3, async file => {\n          const fileName = file === null || file === void 0 ? void 0 : file.name;\n\n          try {\n            const payload = new FormData();\n            const ext = fileName.split('.').pop();\n            payload.append('name', fileName);\n            payload.append('purpose', 'shop');\n            payload.append('type', 'image');\n            payload.append('file', file);\n            const {\n              url\n            } = await Becca.uploadAsset(payload);\n            return {\n              url,\n              ext\n            };\n          } catch (e) {\n            Snackbar.show(`${fileName} failed to upload `, 'error');\n          }\n        });\n        uploaded = uploaded.filter(x => x).map(x => ({\n          url: x.url,\n          caption: ''\n        }));\n        onChange([...images, ...uploaded]);\n      }\n\n      if (files.length === 0) {\n        setErr(true);\n      }\n    } catch (e) {\n      Snackbar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onImageSelect = async e => {\n    toggleDrawer();\n    await onFileAdd(e);\n  };\n\n  const onDrawerSelect = images => {\n    toggleDrawer();\n    onChange(images);\n  };\n\n  if (images.length === 0) {\n    if (posts.length === 0) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, open && /*#__PURE__*/React.createElement(MediaDrawer, {\n        onChange: onDrawerSelect,\n        accept: accept,\n        isMulti: isMulti,\n        onClose: toggleDrawer,\n        posts: posts,\n        images: images,\n        onImageSelect: onImageSelect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.labelDesktop,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }, label), /*#__PURE__*/React.createElement(\"img\", {\n        src: addIcon,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        className: styles.input,\n        type: \"file\",\n        accept: accept,\n        onChange: onFileAdd,\n        multiple: isMulti,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, open && /*#__PURE__*/React.createElement(MediaDrawer, {\n      onChange: onDrawerSelect,\n      accept: accept,\n      isMulti: isMulti,\n      onClose: toggleDrawer,\n      posts: posts,\n      images: images,\n      onImageSelect: onImageSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Clickable, {\n      fullWidth: true,\n      className: styles.container1,\n      onClick: toggleDrawer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.labelDesktop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, label), /*#__PURE__*/React.createElement(\"img\", {\n      src: addIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    })), !err && show && /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.info,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, \" Maximum image upload size is 5MB and 50MB for video \"), err && /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, \"File is too big! Max image upload size is 5MB and 50MB for video\")));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, open && /*#__PURE__*/React.createElement(MediaDrawer, {\n    onChange: onDrawerSelect,\n    accept: accept,\n    isMulti: isMulti,\n    onClose: toggleDrawer,\n    posts: posts,\n    images: images,\n    onImageSelect: onImageSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, images.map((image, idx) => /*#__PURE__*/React.createElement(FilePreview, {\n    key: idx,\n    premium: size !== -1 && idx > size - 1,\n    onDelete: removeImage,\n    index: idx,\n    item: image,\n    onCoverClick: showCover ? onCoverSelect : null,\n    videos: videos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  })), posts.length === 0 && /*#__PURE__*/React.createElement(\"label\", {\n    className: styles.addBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: addIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: styles.input,\n    type: \"file\",\n    accept: accept,\n    onChange: onFileAdd,\n    multiple: isMulti,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  })), posts.length > 0 && isMulti && /*#__PURE__*/React.createElement(Clickable, {\n    className: styles.addBlock,\n    onClick: toggleDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: addIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Clickable, {\n    fullWidth: true,\n    className: styles.container1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, err8 && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, \"Maximum 8 Files Is Allowed\"))));\n}\n\n_s(ImagePicker, \"IurSX2mP6t+tA82YSpslM7KK+1s=\", false, function () {\n  return [usePostsMedia, useToggle];\n});\n\n_c = ImagePicker;\nImagePicker.propTypes = {\n  images: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  accept: PropTypes.string,\n  isMulti: PropTypes.bool,\n  showCover: PropTypes.bool,\n  label: PropTypes.string,\n  size: PropTypes.number,\n  videos: PropTypes.bool,\n  showLimit: PropTypes.bool\n};\nImagePicker.defaultProps = {\n  accept: undefined,\n  isMulti: false,\n  showCover: false,\n  label: 'Upload multiple photos or videos of your product',\n  size: -1,\n  videos: true,\n  showLimit: true\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePicker\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/common/ImagePicker.jsx"],"names":["React","useState","PropTypes","FilePreview","compressImages","Snackbar","Loader","Becca","inParallelWithLimit","Clickable","usePostsMedia","useToggle","MediaDrawer","styles","ImagePicker","images","onChange","accept","isMulti","label","showCover","size","videos","showLimit","console","log","posts","open","toggleDrawer","err","setErr","err8","setErr8","removeImage","index","filter","_i","idx","onCoverSelect","otherItems","selectedItems","onFileAdd","e","show","target","files","length","uploaded","file","fileName","name","payload","FormData","ext","split","pop","append","url","uploadAsset","x","map","caption","showError","hide","onImageSelect","onDrawerSelect","container","labelDesktop","addIcon","input","container1","info","error","row","image","addBlock","propTypes","array","isRequired","func","string","bool","number","defaultProps","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,WAAT;AACA,SAASC,cAAT;AACA,OAAOC,QAAP;AACA,OAAOC,MAAP;AACA,SAASC,KAAT;AACA,SAASC,mBAAT;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,aAAT;AACA,SAASC,SAAT;AACA,SAASC,WAAT;AACA,OAAOC,MAAP;AAEA,OAAO,SAASC,WAAT,CAAqB;AAC1BC,EAAAA,MAD0B;AAE1BC,EAAAA,QAF0B;AAG1BC,EAAAA,MAH0B;AAI1BC,EAAAA,OAJ0B;AAK1BC,EAAAA,KAL0B;AAM1BC,EAAAA,SAN0B;AAO1BC,EAAAA,IAP0B;AAQ1BC,EAAAA,MAR0B;AAS1BC,EAAAA;AAT0B,CAArB,EAUJ;AAAA;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,QAAM,CAACG,KAAD,IAAUhB,aAAa,EAA7B;AACA,QAAM,CAACiB,IAAD,EAAOC,YAAP,IAAuBjB,SAAS,CAAC,KAAD,CAAtC;AACA,QAAM,CAACkB,GAAD,EAAMC,MAAN,IAAgB7B,QAAQ,EAA9B;AACA,QAAM,CAAC8B,IAAD,EAAOC,OAAP,IAAkB/B,QAAQ,EAAhC;;AAEA,QAAMgC,WAAW,GAAIC,KAAD,IAAW;AAC7BlB,IAAAA,QAAQ,CAACD,MAAM,CAACoB,MAAP,CAAc,CAACC,EAAD,EAAKC,GAAL,KAAaA,GAAG,KAAKH,KAAnC,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMI,aAAa,GAAIJ,KAAD,IAAW;AAC/B,UAAMK,UAAU,GAAGxB,MAAM,CAACoB,MAAP,CAAc,CAACC,EAAD,EAAKC,GAAL,KAAaA,GAAG,KAAKH,KAAnC,CAAnB;AACA,UAAMM,aAAa,GAAGzB,MAAM,CAACoB,MAAP,CAAc,CAACC,EAAD,EAAKC,GAAL,KAAaA,GAAG,KAAKH,KAAnC,CAAtB;AACAlB,IAAAA,QAAQ,CAAC,CAAC,GAAGwB,aAAJ,EAAmB,GAAGD,UAAtB,CAAD,CAAR;AACD,GAJD;;AAMA,QAAME,SAAS,GAAG,MAAOC,CAAP,IAAa;AAC7BpC,IAAAA,MAAM,CAACqC,IAAP;AACAb,IAAAA,MAAM,CAAC,KAAD,CAAN;AACAE,IAAAA,OAAO,CAAC,KAAD,CAAP;;AACA,QAAI;AAAA;;AACF,UAAI,CAAAU,CAAC,SAAD,IAAAA,CAAC,WAAD,yBAAAA,CAAC,CAAEE,MAAH,wDAAWC,KAAX,CAAiBC,MAAjB,IAA0B,CAA1B,IAA+B/B,MAAM,CAAC+B,MAAP,GAAgB,CAAnD,EAAsD;AACpDhB,QAAAA,MAAM,CAAC,KAAD,CAAN;AACAE,QAAAA,OAAO,CAAC,IAAD,CAAP;AACA;AACD;;AACD,YAAMa,KAAK,GAAG,MAAMzC,cAAc,CAAC,CAAC,GAAGsC,CAAC,CAACE,MAAF,CAASC,KAAb,CAAD,CAAlC;;AACA,UAAIA,KAAK,CAACC,MAAV,EAAkB;AAChB,YAAIC,QAAQ,GAAG,MAAMvC,mBAAmB,CAACqC,KAAD,EAAQ,CAAR,EAAW,MAAMG,IAAN,IAAc;AAC/D,gBAAMC,QAAQ,GAAGD,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,IAAvB;;AACA,cAAI;AACF,kBAAMC,OAAO,GAAG,IAAIC,QAAJ,EAAhB;AACA,kBAAMC,GAAG,GAAGJ,QAAQ,CAACK,KAAT,CAAe,GAAf,EACTC,GADS,EAAZ;AAEAJ,YAAAA,OAAO,CAACK,MAAR,CAAe,MAAf,EAAuBP,QAAvB;AACAE,YAAAA,OAAO,CAACK,MAAR,CAAe,SAAf,EAA0B,MAA1B;AACAL,YAAAA,OAAO,CAACK,MAAR,CAAe,MAAf,EAAuB,OAAvB;AACAL,YAAAA,OAAO,CAACK,MAAR,CAAe,MAAf,EAAuBR,IAAvB;AACA,kBAAM;AAAES,cAAAA;AAAF,gBAAU,MAAMlD,KAAK,CAACmD,WAAN,CAAkBP,OAAlB,CAAtB;AACA,mBAAO;AACLM,cAAAA,GADK;AAELJ,cAAAA;AAFK,aAAP;AAID,WAbD,CAaE,OAAOX,CAAP,EAAU;AACVrC,YAAAA,QAAQ,CAACsC,IAAT,CAAe,GAAEM,QAAS,oBAA1B,EAA+C,OAA/C;AACD;AACF,SAlBuC,CAAxC;AAoBAF,QAAAA,QAAQ,GAAGA,QAAQ,CAACZ,MAAT,CAAgBwB,CAAC,IAAIA,CAArB,EACRC,GADQ,CACHD,CAAD,KAAQ;AACXF,UAAAA,GAAG,EAAEE,CAAC,CAACF,GADI;AAEXI,UAAAA,OAAO,EAAE;AAFE,SAAR,CADI,CAAX;AAKA7C,QAAAA,QAAQ,CAAC,CAAC,GAAGD,MAAJ,EAAY,GAAGgC,QAAf,CAAD,CAAR;AACD;;AACD,UAAIF,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;AACtBhB,QAAAA,MAAM,CAAC,IAAD,CAAN;AACD;AACF,KAtCD,CAsCE,OAAOY,CAAP,EAAU;AACVrC,MAAAA,QAAQ,CAACyD,SAAT,CAAmBpB,CAAnB;AACD,KAxCD,SAwCU;AACRpC,MAAAA,MAAM,CAACyD,IAAP;AACD;AACF,GA/CD;;AAiDA,QAAMC,aAAa,GAAG,MAAOtB,CAAP,IAAa;AACjCd,IAAAA,YAAY;AACZ,UAAMa,SAAS,CAACC,CAAD,CAAf;AACD,GAHD;;AAKA,QAAMuB,cAAc,GAAIlD,MAAD,IAAY;AACjCa,IAAAA,YAAY;AACZZ,IAAAA,QAAQ,CAACD,MAAD,CAAR;AACD,GAHD;;AAIA,MAAIA,MAAM,CAAC+B,MAAP,KAAkB,CAAtB,EAAyB;AACvB,QAAIpB,KAAK,CAACoB,MAAN,KAAiB,CAArB,EAAwB;AACtB,0BACE,0CACGnB,IAAI,iBACH,oBAAC,WAAD;AACE,QAAA,QAAQ,EAAEsC,cADZ;AAEE,QAAA,MAAM,EAAEhD,MAFV;AAGE,QAAA,OAAO,EAAEC,OAHX;AAIE,QAAA,OAAO,EAAEU,YAJX;AAKE,QAAA,KAAK,EAAEF,KALT;AAME,QAAA,MAAM,EAAEX,MANV;AAOE,QAAA,aAAa,EAAEiD,aAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAEnD,MAAM,CAACqD,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAErD,MAAM,CAACsD,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGhD,KADH,CADF,eAIE;AAAK,QAAA,GAAG,EAAEiD,OAAV;AAAmB,QAAA,GAAG,EAAC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF,eAOE;AACE,QAAA,SAAS,EAAEvD,MAAM,CAACwD,KADpB;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,MAAM,EAAEpD,MAHV;AAIE,QAAA,QAAQ,EAAEwB,SAJZ;AAKE,QAAA,QAAQ,EAAEvB,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CAZF,CADF;AA8BD;;AACD,wBACE,0CACGS,IAAI,iBACH,oBAAC,WAAD;AACE,MAAA,QAAQ,EAAEsC,cADZ;AAEE,MAAA,MAAM,EAAEhD,MAFV;AAGE,MAAA,OAAO,EAAEC,OAHX;AAIE,MAAA,OAAO,EAAEU,YAJX;AAKE,MAAA,KAAK,EAAEF,KALT;AAME,MAAA,MAAM,EAAEX,MANV;AAOE,MAAA,aAAa,EAAEiD,aAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAYE,oBAAC,SAAD;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,SAAS,EAAEnD,MAAM,CAACyD,UAAvC;AAAmD,MAAA,OAAO,EAAE1C,YAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAEf,MAAM,CAACqD,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAErD,MAAM,CAACsD,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhD,KADH,CADF,eAIE;AAAK,MAAA,GAAG,EAAEiD,OAAV;AAAmB,MAAA,GAAG,EAAC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,EAOG,CAACvC,GAAD,IAAOc,IAAP,iBACC;AAAK,MAAA,SAAS,EAAE9B,MAAM,CAAC0D,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DARJ,EAUG1C,GAAG,iBACF;AAAK,MAAA,SAAS,EAAEhB,MAAM,CAAC2D,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EAXJ,CAZF,CADF;AA+BD;;AAED,sBACE,0CACG7C,IAAI,iBACH,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAEsC,cADZ;AAEE,IAAA,MAAM,EAAEhD,MAFV;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,OAAO,EAAEU,YAJX;AAKE,IAAA,KAAK,EAAEF,KALT;AAME,IAAA,MAAM,EAAEX,MANV;AAOE,IAAA,aAAa,EAAEiD,aAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAYE;AAAK,IAAA,SAAS,EAAEnD,MAAM,CAAC4D,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1D,MAAM,CAAC6C,GAAP,CAAW,CAACc,KAAD,EAAQrC,GAAR,kBACV,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEA,GADP;AAEE,IAAA,OAAO,EAAEhB,IAAI,KAAK,CAAC,CAAV,IAAegB,GAAG,GAAGhB,IAAI,GAAG,CAFvC;AAGE,IAAA,QAAQ,EAAEY,WAHZ;AAIE,IAAA,KAAK,EAAEI,GAJT;AAKE,IAAA,IAAI,EAAEqC,KALR;AAME,IAAA,YAAY,EAAEtD,SAAS,GAAGkB,aAAH,GAAmB,IAN5C;AAOE,IAAA,MAAM,EAAEhB,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,EAYGI,KAAK,CAACoB,MAAN,KAAiB,CAAjB,iBACC;AAAO,IAAA,SAAS,EAAEjC,MAAM,CAAC8D,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEP,OAAV;AAAmB,IAAA,GAAG,EAAC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AACE,IAAA,SAAS,EAAEvD,MAAM,CAACwD,KADpB;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,MAAM,EAAEpD,MAHV;AAIE,IAAA,QAAQ,EAAEwB,SAJZ;AAKE,IAAA,QAAQ,EAAEvB,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAbJ,EAwBGQ,KAAK,CAACoB,MAAN,GAAe,CAAf,IAAoB5B,OAApB,iBACC,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEL,MAAM,CAAC8D,QAA7B;AAAuC,IAAA,OAAO,EAAE/C,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEwC,OAAV;AAAmB,IAAA,GAAG,EAAC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzBJ,eA6BE,oBAAC,SAAD;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,SAAS,EAAEvD,MAAM,CAACyD,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvC,IAAI,iBACH;AAAK,IAAA,SAAS,EAAElB,MAAM,CAAC2D,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFJ,CA7BF,CAZF,CADF;AAoDD;;GA3Me1D,W;UAYEJ,a,EACaC,S;;;KAbfG,W;AA4MhBA,WAAW,CAAC8D,SAAZ,GAAwB;AACtB7D,EAAAA,MAAM,EAAEb,SAAS,CAAC2E,KAAV,CAAgBC,UADF;AAEtB9D,EAAAA,QAAQ,EAAEd,SAAS,CAAC6E,IAAV,CAAeD,UAFH;AAGtB7D,EAAAA,MAAM,EAAEf,SAAS,CAAC8E,MAHI;AAItB9D,EAAAA,OAAO,EAAEhB,SAAS,CAAC+E,IAJG;AAKtB7D,EAAAA,SAAS,EAAElB,SAAS,CAAC+E,IALC;AAMtB9D,EAAAA,KAAK,EAAEjB,SAAS,CAAC8E,MANK;AAOtB3D,EAAAA,IAAI,EAAEnB,SAAS,CAACgF,MAPM;AAQtB5D,EAAAA,MAAM,EAAEpB,SAAS,CAAC+E,IARI;AAStB1D,EAAAA,SAAS,EAAErB,SAAS,CAAC+E;AATC,CAAxB;AAYAnE,WAAW,CAACqE,YAAZ,GAA2B;AACzBlE,EAAAA,MAAM,EAAEmE,SADiB;AAEzBlE,EAAAA,OAAO,EAAE,KAFgB;AAGzBE,EAAAA,SAAS,EAAE,KAHc;AAIzBD,EAAAA,KAAK,EAAE,kDAJkB;AAKzBE,EAAAA,IAAI,EAAE,CAAC,CALkB;AAMzBC,EAAAA,MAAM,EAAE,IANiB;AAOzBC,EAAAA,SAAS,EAAE;AAPc,CAA3B","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport addIcon from 'assets/images/products/create/add.svg';\nimport { FilePreview } from 'components/common/FilePreview';\nimport { compressImages } from 'utils/image';\nimport Snackbar from 'services/snackbar';\nimport Loader from 'services/loader';\nimport { Becca } from 'api';\nimport { inParallelWithLimit } from 'utils/parallel';\nimport { Clickable } from 'phoenix-components';\nimport { usePostsMedia } from 'hooks/posts';\nimport { useToggle } from 'hooks/common';\nimport { MediaDrawer } from 'components/common/MediaDrawer';\nimport styles from './ImagePicker.module.css';\n\nexport function ImagePicker({\n  images,\n  onChange,\n  accept,\n  isMulti,\n  label,\n  showCover,\n  size,\n  videos,\n  showLimit\n}) {\n  console.log(showLimit);\n  const [posts] = usePostsMedia();\n  const [open, toggleDrawer] = useToggle(false);\n  const [err, setErr] = useState();\n  const [err8, setErr8] = useState();\n\n  const removeImage = (index) => {\n    onChange(images.filter((_i, idx) => idx !== index));\n  };\n\n  const onCoverSelect = (index) => {\n    const otherItems = images.filter((_i, idx) => idx !== index);\n    const selectedItems = images.filter((_i, idx) => idx === index);\n    onChange([...selectedItems, ...otherItems]);\n  };\n\n  const onFileAdd = async (e) => {\n    Loader.show();\n    setErr(false);\n    setErr8(false);\n    try {\n      if (e?.target?.files.length > 7 || images.length > 7) {\n        setErr(false);\n        setErr8(true);\n        return;\n      }\n      const files = await compressImages([...e.target.files]);\n      if (files.length) {\n        let uploaded = await inParallelWithLimit(files, 3, async file => {\n          const fileName = file?.name;\n          try {\n            const payload = new FormData();\n            const ext = fileName.split('.')\n              .pop();\n            payload.append('name', fileName);\n            payload.append('purpose', 'shop');\n            payload.append('type', 'image');\n            payload.append('file', file);\n            const { url } = await Becca.uploadAsset(payload);\n            return {\n              url,\n              ext\n            };\n          } catch (e) {\n            Snackbar.show(`${fileName} failed to upload `, 'error');\n          }\n        });\n\n        uploaded = uploaded.filter(x => x)\n          .map((x) => ({\n            url: x.url,\n            caption: ''\n          }));\n        onChange([...images, ...uploaded]);\n      }\n      if (files.length === 0) {\n        setErr(true);\n      }\n    } catch (e) {\n      Snackbar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const onImageSelect = async (e) => {\n    toggleDrawer();\n    await onFileAdd(e);\n  };\n\n  const onDrawerSelect = (images) => {\n    toggleDrawer();\n    onChange(images);\n  };\n  if (images.length === 0) {\n    if (posts.length === 0) {\n      return (\n        <>\n          {open && (\n            <MediaDrawer\n              onChange={onDrawerSelect}\n              accept={accept}\n              isMulti={isMulti}\n              onClose={toggleDrawer}\n              posts={posts}\n              images={images}\n              onImageSelect={onImageSelect}\n            />\n          )}\n          <label>\n            <div className={styles.container}>\n              <div className={styles.labelDesktop}>\n                {label}\n              </div>\n              <img src={addIcon} alt=\"\" />\n            </div>\n            <input\n              className={styles.input}\n              type=\"file\"\n              accept={accept}\n              onChange={onFileAdd}\n              multiple={isMulti}\n            />\n          </label>\n        </>\n      );\n    }\n    return (\n      <>\n        {open && (\n          <MediaDrawer\n            onChange={onDrawerSelect}\n            accept={accept}\n            isMulti={isMulti}\n            onClose={toggleDrawer}\n            posts={posts}\n            images={images}\n            onImageSelect={onImageSelect}\n          />\n        )}\n        <Clickable fullWidth className={styles.container1} onClick={toggleDrawer}>\n          <div className={styles.container}>\n            <div className={styles.labelDesktop}>\n              {label}\n            </div>\n            <img src={addIcon} alt=\"\" />\n          </div>\n          {!err &&show && (\n            <div className={styles.info}> Maximum image upload size is 5MB and 50MB for video </div>\n          )}\n          {err && (\n            <div className={styles.error}>\n              File is too big! Max image upload size is 5MB and 50MB for video\n            </div>\n          )}\n        </Clickable>\n      </>\n    );\n  }\n\n  return (\n    <>\n      {open && (\n        <MediaDrawer\n          onChange={onDrawerSelect}\n          accept={accept}\n          isMulti={isMulti}\n          onClose={toggleDrawer}\n          posts={posts}\n          images={images}\n          onImageSelect={onImageSelect}\n        />\n      )}\n      <div className={styles.row}>\n        {images.map((image, idx) => (\n          <FilePreview\n            key={idx}\n            premium={size !== -1 && idx > size - 1}\n            onDelete={removeImage}\n            index={idx}\n            item={image}\n            onCoverClick={showCover ? onCoverSelect : null}\n            videos={videos}\n          />\n        ))}\n        {posts.length === 0 && (\n          <label className={styles.addBlock}>\n            <img src={addIcon} alt=\"\" />\n            <input\n              className={styles.input}\n              type=\"file\"\n              accept={accept}\n              onChange={onFileAdd}\n              multiple={isMulti}\n            />\n          </label>\n        )}\n        {posts.length > 0 && isMulti && (\n          <Clickable className={styles.addBlock} onClick={toggleDrawer}>\n            <img src={addIcon} alt=\"\" />\n          </Clickable>\n        )}\n        <Clickable fullWidth className={styles.container1}>\n          {err8 && (\n            <div className={styles.error}>\n              Maximum 8 Files Is Allowed\n            </div>\n          )}\n        </Clickable>\n      </div>\n    </>\n  );\n}\nImagePicker.propTypes = {\n  images: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  accept: PropTypes.string,\n  isMulti: PropTypes.bool,\n  showCover: PropTypes.bool,\n  label: PropTypes.string,\n  size: PropTypes.number,\n  videos: PropTypes.bool,\n  showLimit: PropTypes.bool\n};\n\nImagePicker.defaultProps = {\n  accept: undefined,\n  isMulti: false,\n  showCover: false,\n  label: 'Upload multiple photos or videos of your product',\n  size: -1,\n  videos: true,\n  showLimit: true\n};\n"]},"metadata":{},"sourceType":"module"}