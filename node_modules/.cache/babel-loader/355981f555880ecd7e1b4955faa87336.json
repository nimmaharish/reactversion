{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/profile/checkout/PaymentRules.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Drawer } from \"../../../components/shared/Drawer\";\nimport { Formik } from 'formik';\nimport { useDesktop, usePaymentRules, useRefreshShop, useShop } from \"../../../contexts\";\nimport Loader from \"../../../services/loader\";\nimport { Becca } from \"../../../api\";\nimport SnackBar from \"../../../services/snackbar\";\nimport { PaymentRuleCard } from \"./PaymentRuleCard\";\nimport { Button } from 'phoenix-components';\nimport PropTypes from 'prop-types';\nimport { FooterButton } from \"../../../components/common/FooterButton\";\nimport { SideDrawer } from \"../../../components/shared/SideDrawer\";\nimport emptyIcon from \"../../../assets/v2/settings/checkout/emptyPaymentRules.svg\";\nimport { useHistory } from 'react-router-dom';\nimport styles from \"./PaymentRules.module.css\";\nimport { marshall, schema } from \"./paymentRuleUtils\";\n\nfunction PaymentRules({\n  onClose\n}) {\n  _s();\n\n  const shop = useShop();\n  const paymentRules = usePaymentRules(false);\n  const refreshShop = useRefreshShop();\n  const isDesktop = useDesktop();\n  const history = useHistory();\n\n  const onActivatePayments = () => {\n    history.push('/manage/paymentModes');\n  };\n\n  const onSave = async values => {\n    try {\n      var _values$find, _values$find$partial, _values$find$partial$, _values$find2, _values$find2$partial;\n\n      Loader.show();\n      const checkout = (shop === null || shop === void 0 ? void 0 : shop.checkout) || {};\n      const checkIfPartialCodEnabled = ((_values$find = values.find(x => x.type === 'cod')) === null || _values$find === void 0 ? void 0 : (_values$find$partial = _values$find.partial) === null || _values$find$partial === void 0 ? void 0 : (_values$find$partial$ = _values$find$partial.type) === null || _values$find$partial$ === void 0 ? void 0 : _values$find$partial$.length) > 0 && ((_values$find2 = values.find(x => x.type === 'cod')) === null || _values$find2 === void 0 ? void 0 : (_values$find2$partial = _values$find2.partial) === null || _values$find2$partial === void 0 ? void 0 : _values$find2$partial.value) !== 0;\n\n      if (checkIfPartialCodEnabled) {\n        var _shop$paymentModes, _shop$paymentModes$on, _shop$paymentModes2, _shop$paymentModes2$c;\n\n        const checkIfAnyPaymentModeEnabled = (shop === null || shop === void 0 ? void 0 : (_shop$paymentModes = shop.paymentModes) === null || _shop$paymentModes === void 0 ? void 0 : (_shop$paymentModes$on = _shop$paymentModes.online) === null || _shop$paymentModes$on === void 0 ? void 0 : _shop$paymentModes$on.enabled) || (shop === null || shop === void 0 ? void 0 : (_shop$paymentModes2 = shop.paymentModes) === null || _shop$paymentModes2 === void 0 ? void 0 : (_shop$paymentModes2$c = _shop$paymentModes2.custompayment) === null || _shop$paymentModes2$c === void 0 ? void 0 : _shop$paymentModes2$c.enabled);\n\n        if (!checkIfAnyPaymentModeEnabled) {\n          SnackBar.showError('Any one payment should be enabled other than cash');\n          return;\n        }\n      }\n\n      checkout.paymentRules = marshall(values);\n      await Becca.updateShop({\n        checkout\n      });\n      SnackBar.show('Payment rules saved successfully', 'success');\n      refreshShop();\n      onClose();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const Component = isDesktop ? SideDrawer : Drawer;\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: paymentRules,\n    validationSchema: schema,\n    onSubmit: onSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, ({\n    values = [],\n    submitForm\n  }) => /*#__PURE__*/React.createElement(Component, {\n    title: \"Payment Rules\",\n    backButton: true,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, paymentRules.length === 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.empty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: emptyIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"No payment modes enabled.\"), /*#__PURE__*/React.createElement(Button, {\n    label: \"Activate Payments\",\n    onClick: onActivatePayments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  })), paymentRules.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, values.map((_v, idx) => /*#__PURE__*/React.createElement(PaymentRuleCard, {\n    key: idx,\n    index: idx,\n    partial: values[idx].type === 'cod',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }))), (paymentRules === null || paymentRules === void 0 ? void 0 : paymentRules.length) > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, isDesktop ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.buttonD,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"Save\",\n    size: \"large\",\n    bordered: true,\n    onClick: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(FooterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"Save\",\n    size: \"large\",\n    bordered: false,\n    fullWidth: true,\n    onClick: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  })))));\n}\n\n_s(PaymentRules, \"kYhDiWpuh/dlHI3pE1B2ORHA5Aw=\", false, function () {\n  return [useShop, usePaymentRules, useRefreshShop, useDesktop, useHistory];\n});\n\n_c = PaymentRules;\nPaymentRules.propTypes = {\n  onClose: PropTypes.func.isRequired\n};\nPaymentRules.defaultProps = {};\nexport default PaymentRules;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentRules\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/checkout/PaymentRules.jsx"],"names":["React","Drawer","Formik","useDesktop","usePaymentRules","useRefreshShop","useShop","Loader","Becca","SnackBar","PaymentRuleCard","Button","PropTypes","FooterButton","SideDrawer","useHistory","styles","marshall","schema","PaymentRules","onClose","shop","paymentRules","refreshShop","isDesktop","history","onActivatePayments","push","onSave","values","show","checkout","checkIfPartialCodEnabled","find","x","type","partial","length","value","checkIfAnyPaymentModeEnabled","paymentModes","online","enabled","custompayment","showError","updateShop","e","hide","Component","submitForm","empty","emptyIcon","container","map","_v","idx","buttonD","propTypes","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Drawer } from 'components/shared/Drawer';\nimport { Formik } from 'formik';\nimport {\n  useDesktop, usePaymentRules, useRefreshShop, useShop\n} from 'contexts';\nimport Loader from 'services/loader';\nimport { Becca } from 'api';\nimport SnackBar from 'services/snackbar';\nimport { PaymentRuleCard } from 'containers/profile/checkout/PaymentRuleCard';\nimport { Button } from 'phoenix-components';\nimport PropTypes from 'prop-types';\nimport { FooterButton } from 'components/common/FooterButton';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport emptyIcon from 'assets/v2/settings/checkout/emptyPaymentRules.svg';\nimport { useHistory } from 'react-router-dom';\nimport styles from './PaymentRules.module.css';\nimport { marshall, schema } from './paymentRuleUtils';\n\nfunction PaymentRules({ onClose }) {\n  const shop = useShop();\n  const paymentRules = usePaymentRules(false);\n  const refreshShop = useRefreshShop();\n  const isDesktop = useDesktop();\n  const history = useHistory();\n\n  const onActivatePayments = () => {\n    history.push('/manage/paymentModes');\n  };\n\n  const onSave = async (values) => {\n    try {\n      Loader.show();\n      const checkout = shop?.checkout || {};\n      const checkIfPartialCodEnabled = values.find(x => x.type === 'cod')?.partial?.type?.length > 0\n       && values.find(x => x.type === 'cod')?.partial?.value !== 0;\n      if (checkIfPartialCodEnabled) {\n        const checkIfAnyPaymentModeEnabled = shop?.paymentModes?.online?.enabled\n        || shop?.paymentModes?.custompayment?.enabled;\n        if (!checkIfAnyPaymentModeEnabled) {\n          SnackBar.showError('Any one payment should be enabled other than cash');\n          return;\n        }\n      }\n      checkout.paymentRules = marshall(values);\n      await Becca.updateShop({ checkout });\n      SnackBar.show('Payment rules saved successfully', 'success');\n      refreshShop();\n      onClose();\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const Component = isDesktop ? SideDrawer : Drawer;\n\n  return (\n    <Formik\n      initialValues={paymentRules}\n      validationSchema={schema}\n      onSubmit={onSave}\n    >\n      {({ values = [], submitForm }) => (\n        <Component\n          title=\"Payment Rules\"\n          backButton\n          onClose={onClose}\n        >\n          {paymentRules.length === 0 && (\n            <div className={styles.empty}>\n              <img src={emptyIcon} alt=\"\" />\n              <span>\n                No payment modes enabled.\n              </span>\n              <Button\n                label=\"Activate Payments\"\n                onClick={onActivatePayments}\n              />\n            </div>\n          )}\n          {paymentRules.length > 0 && (\n            <div className={styles.container}>\n              {values.map((_v, idx) => (\n                <PaymentRuleCard key={idx} index={idx} partial={values[idx].type === 'cod'} />\n              ))}\n            </div>\n          )}\n          {paymentRules?.length > 0 && (\n            <>\n              {isDesktop ? (\n                <div className={styles.buttonD}>\n                  <Button label=\"Save\" size=\"large\" bordered={true} onClick={submitForm} />\n                </div>\n              ) : (\n                <FooterButton>\n                  <Button label=\"Save\" size=\"large\" bordered={false} fullWidth onClick={submitForm} />\n                </FooterButton>\n              )}\n            </>\n          )}\n        </Component>\n      )}\n    </Formik>\n  );\n}\n\nPaymentRules.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nPaymentRules.defaultProps = {};\n\nexport default PaymentRules;\n"]},"metadata":{},"sourceType":"module"}