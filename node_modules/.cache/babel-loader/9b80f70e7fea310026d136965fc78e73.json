{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/profile/areasServed/Distance.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useField } from 'formik';\nimport { BottomDrawer } from \"../../../components/shared/BottomDrawer\";\nimport { useDesktop } from \"../../../contexts\";\nimport { PropTypes } from 'prop-types';\nimport { Button, FormikInput } from 'phoenix-components';\nimport { Select } from 'phoenix-components/lib/formik';\nimport { SideDrawer } from \"../../../components/shared/SideDrawer\";\nimport { FooterButton } from \"../../../components/common/FooterButton\"; // import { DebugValues } from 'components/formik';\n\nimport _ from 'lodash'; // import { getIntialValuesForDistanceMatrix } from './utils';\n\nimport styles from \"./Distance.module.css\";\nimport { distanceTypes } from \"./utils\";\n\nfunction Distance({\n  onClose,\n  idx,\n  type,\n  submitForm\n}) {\n  _s();\n\n  var _Object$values;\n\n  // const [{ value: distanceMatrix },, { setValue }] = useField(`distance[${type}].distanceMatrix`);\n  const [{\n    value: distanceArr\n  },, {\n    setValue: setDistanceArr\n  }] = useField(`distance[${type}].distanceMatrix`);\n  const [{\n    value\n  }] = useField(`distance[${type}].distanceMatrix[${+idx}]`);\n  const [,, {\n    setValue: setType\n  }] = useField(`distance[${type}].distanceMatrix[${+idx}].type`);\n  const isDesktop = useDesktop();\n  const basePath = `distance[${type}].distanceMatrix[${+idx}]`;\n\n  const deleteOnClose = () => {\n    var _value$name, _value$min, _value$max, _value$type;\n\n    if ((value === null || value === void 0 ? void 0 : (_value$name = value.name) === null || _value$name === void 0 ? void 0 : _value$name.length) === 0 || (value === null || value === void 0 ? void 0 : (_value$min = value.min) === null || _value$min === void 0 ? void 0 : _value$min.length) === 0 || (value === null || value === void 0 ? void 0 : (_value$max = value.max) === null || _value$max === void 0 ? void 0 : _value$max.length) === 0 || (value === null || value === void 0 ? void 0 : (_value$type = value.type) === null || _value$type === void 0 ? void 0 : _value$type.length) === 0) {\n      setDistanceArr(distanceArr.filter((_, index) => index !== idx));\n      onClose();\n    } else {\n      onClose();\n    }\n\n    return null;\n  };\n\n  const Component = isDesktop ? SideDrawer : BottomDrawer;\n\n  const getTitle = type => type === 'included' ? 'Inclusion' : 'Exclusion';\n\n  const props = !isDesktop ? {\n    title: `Define ${getTitle(type)} Zone`,\n    onClose: () => deleteOnClose(),\n    className: styles.title\n  } : {\n    title: 'Define Inclusion Zone',\n    className: styles.desktopContainer,\n    onClose: () => deleteOnClose(),\n    closeButton: true\n  };\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.spacer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }), \"Set a distance range for your store\", /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      label: \"Enter Zone Title\",\n      placeholder: \"e.g. Zone 1\",\n      type: \"text\",\n      variant: \"outlined\",\n      name: `${basePath}.name`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.spacer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      label: \"Unit of Distance\",\n      name: `${basePath}.type`,\n      onChange: val => {\n        setType(val.value);\n      },\n      options: distanceTypes,\n      value: distanceTypes.find(x => x.value === (value === null || value === void 0 ? void 0 : value.type)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.spacer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.width,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.width50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      label: `Min ${value === null || value === void 0 ? void 0 : value.type}`,\n      placeholder: \"e.g. 0\",\n      type: \"number\",\n      variant: \"outlined\",\n      name: `${basePath}.min`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.width50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      label: `Max ${value === null || value === void 0 ? void 0 : value.type}`,\n      placeholder: \"e.g. 500\",\n      type: \"number\",\n      variant: \"outlined\",\n      name: `${basePath}.max`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.spacer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FooterButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Create\",\n      primary: true,\n      disabled: !_.isEmpty(value) && (Object === null || Object === void 0 ? void 0 : (_Object$values = Object.values(value)) === null || _Object$values === void 0 ? void 0 : _Object$values.some(x => x === null || x === '')),\n      onClick: () => {\n        onClose();\n        submitForm();\n      },\n      className: styles.button,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }))))\n  );\n}\n\n_s(Distance, \"XgUBVhaWwndY4vdRxdtddTPgbxI=\", false, function () {\n  return [useField, useField, useField, useDesktop];\n});\n\n_c = Distance;\nDistance.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  idx: PropTypes.number.isRequired,\n  type: PropTypes.string.isRequired,\n  submitForm: PropTypes.func.isRequired\n};\nexport default Distance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Distance\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/areasServed/Distance.jsx"],"names":["React","useField","BottomDrawer","useDesktop","PropTypes","Button","FormikInput","Select","SideDrawer","FooterButton","_","styles","distanceTypes","Distance","onClose","idx","type","submitForm","value","distanceArr","setValue","setDistanceArr","setType","isDesktop","basePath","deleteOnClose","name","length","min","max","filter","index","Component","getTitle","props","title","className","desktopContainer","closeButton","spacer","input","val","find","x","width","width50","isEmpty","Object","values","some","button","propTypes","func","isRequired","number","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useField } from 'formik';\nimport { BottomDrawer } from 'components/shared/BottomDrawer';\nimport { useDesktop } from 'contexts';\nimport { PropTypes } from 'prop-types';\nimport {\n  Button,\n  FormikInput\n} from 'phoenix-components';\nimport { Select } from 'phoenix-components/lib/formik';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { FooterButton } from 'components/common/FooterButton';\n// import { DebugValues } from 'components/formik';\nimport _ from 'lodash';\n// import { getIntialValuesForDistanceMatrix } from './utils';\nimport styles from './Distance.module.css';\nimport { distanceTypes } from './utils';\n\nfunction Distance({\n  onClose, idx, type, submitForm\n}) {\n  // const [{ value: distanceMatrix },, { setValue }] = useField(`distance[${type}].distanceMatrix`);\n  const [{ value: distanceArr },, { setValue: setDistanceArr }] = useField(`distance[${type}].distanceMatrix`);\n  const [{ value }] = useField(`distance[${type}].distanceMatrix[${+idx}]`);\n  const [, , { setValue: setType }] = useField(`distance[${type}].distanceMatrix[${+idx}].type`);\n  const isDesktop = useDesktop();\n  const basePath = `distance[${type}].distanceMatrix[${+idx}]`;\n\n  const deleteOnClose = () => {\n    if (value?.name?.length === 0 || value?.min?.length === 0\n       || value?.max?.length === 0 || value?.type?.length === 0) {\n      setDistanceArr(distanceArr.filter((_, index) => index !== idx));\n      onClose();\n    } else {\n      onClose();\n    }\n    return null;\n  };\n\n  const Component = isDesktop ? SideDrawer : BottomDrawer;\n\n  const getTitle = (type) => (type === 'included' ? 'Inclusion' : 'Exclusion');\n  const props = !isDesktop ? {\n    title: `Define ${getTitle(type)} Zone`,\n    onClose: () => deleteOnClose(),\n    className: styles.title\n  } : {\n    title: 'Define Inclusion Zone',\n    className: styles.desktopContainer,\n    onClose: () => deleteOnClose(),\n    closeButton: true,\n  };\n\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <Component {...props}>\n      <div className={styles.spacer} />\n      Set a distance range for your store\n      <div className={styles.input}>\n        <FormikInput\n          label=\"Enter Zone Title\"\n          placeholder=\"e.g. Zone 1\"\n          type=\"text\"\n          variant=\"outlined\"\n          name={`${basePath}.name`}\n        />\n        <div className={styles.spacer} />\n        <Select\n          label=\"Unit of Distance\"\n          name={`${basePath}.type`}\n          onChange={(val) => {\n            setType(val.value);\n          }}\n          options={distanceTypes}\n          value={distanceTypes.find(x => x.value === value?.type)}\n        />\n        <div className={styles.spacer} />\n        <div className={styles.width}>\n          <div className={styles.width50}>\n            <FormikInput\n              label={`Min ${value?.type}`}\n              placeholder=\"e.g. 0\"\n              type=\"number\"\n              variant=\"outlined\"\n              name={`${basePath}.min`}\n            />\n          </div>\n          <div className={styles.width50}>\n            <FormikInput\n              label={`Max ${value?.type}`}\n              placeholder=\"e.g. 500\"\n              type=\"number\"\n              variant=\"outlined\"\n              name={`${basePath}.max`}\n            />\n          </div>\n        </div>\n        <div className={styles.spacer} />\n        <FooterButton>\n          <Button\n            label=\"Create\"\n            primary={true}\n            disabled={(!_.isEmpty(value)) && Object?.values(value)?.some(x => x === null || x === '')}\n            onClick={() => { onClose(); submitForm(); }}\n            className={styles.button}\n            fullWidth={true} />\n        </FooterButton>\n      </div>\n    </Component>\n  );\n}\n\nDistance.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  idx: PropTypes.number.isRequired,\n  type: PropTypes.string.isRequired,\n  submitForm: PropTypes.func.isRequired\n};\n\nexport default Distance;\n"]},"metadata":{},"sourceType":"module"}