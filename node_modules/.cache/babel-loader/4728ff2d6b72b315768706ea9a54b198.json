{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Factory } from \"../api\";\nimport Snackbar from \"../services/snackbar\";\nimport Loader from \"../services/loader\";\nimport { useOpenPlans } from \"../contexts\";\nexport function useOrders(page = 0, filters = {}, sorts = {}) {\n  _s();\n\n  const [orders, setOrders] = useState(null);\n\n  const refresh = async () => {\n    try {\n      setOrders((await Factory.getOrders(page, filters, sorts)) || []);\n    } catch (e) {\n      console.error(e);\n      Snackbar.show('Errror Occured', 'error');\n    }\n  };\n\n  useEffect(() => {\n    refresh();\n  }, []);\n  return [orders, refresh];\n}\n\n_s(useOrders, \"sEmDx4O2fuC1fpZNSrR+MBe7Cvg=\");\n\nexport function useNewOrders() {\n  _s2();\n\n  return useOrders(0, {\n    status: {\n      $in: ['payment successful', 'payment cod', 'created', 'direct payment']\n    }\n  }, {\n    createdAt: -1\n  });\n}\n\n_s2(useNewOrders, \"leejNQKkZTBxcCxtN+KCDFPOzsI=\", false, function () {\n  return [useOrders];\n});\n\nexport function useActiveOrders() {\n  _s3();\n\n  return useOrders(0, {\n    status: {\n      $not: {\n        $in: ['payment successful', 'payment cod', 'created', 'delivered', 'direct payment', 'cancelled', 'rto delivered', 'payment pending']\n      }\n    }\n  });\n}\n\n_s3(useActiveOrders, \"leejNQKkZTBxcCxtN+KCDFPOzsI=\", false, function () {\n  return [useOrders];\n});\n\nexport function useInfiniteOrders(filters = {}, sorts = {}) {\n  _s4();\n\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n\n  const fetchOrders = async p => {\n    try {\n      const {\n        api,\n        ...other\n      } = filters;\n\n      if (api === 'incart') {\n        const data = await Factory.getInCartOrders(p, other, sorts);\n        return data;\n      }\n\n      const data = await Factory.getOrders(p, other, sorts);\n      return data;\n    } catch (e) {\n      Snackbar.showError(e);\n    }\n  };\n\n  const loadMore = async ({\n    stopIndex = 10\n  } = {}) => {\n    if (loading) {\n      return;\n    }\n\n    const newPage = Math.floor(stopIndex / 10);\n\n    if (newPage <= page) {\n      return;\n    }\n\n    if (!hasMore) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      if (page === 0) {\n        Loader.show();\n      }\n\n      const data = await fetchOrders(page);\n      setOrders([...orders, ...data]);\n\n      if (data.length === 0) {\n        setHasMore(false);\n      }\n\n      setPage(page + 1);\n    } catch (e) {\n      console.error(e);\n      Snackbar.show('Error Occurred', 'error');\n    } finally {\n      Loader.hide();\n      setLoading(false);\n    }\n  };\n\n  const refresh = async () => {\n    setLoading(true);\n    setPage(0);\n    const data = await fetchOrders(0);\n    setOrders([...(data || [])]);\n    setPage(1);\n    setHasMore(true);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    refresh();\n  }, [JSON.stringify(filters), JSON.stringify(sorts)]);\n  return [orders, loadMore, hasMore, loading, refresh];\n}\n\n_s4(useInfiniteOrders, \"a1qRADbdrdc6g0Ry3AD52K9VPvs=\");\n\nexport function useOrder(id) {\n  _s5();\n\n  const [order, setOrder] = useState(null);\n  const [ids, setIds] = useState(null);\n  const openPlans = useOpenPlans(true, 'abandonCart');\n\n  const refresh = async () => {\n    if (!id) {\n      return;\n    }\n\n    try {\n      Loader.show();\n      setOrder(await Factory.getOrder(id));\n      setIds([]);\n    } catch (e) {\n      var _e$response, _e$response2;\n\n      console.error(e);\n\n      if ((e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.status) === 403 && (e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.data.message) === 'upgrade to premium plan') {\n        openPlans();\n        return;\n      }\n\n      Snackbar.show('Errror Occured', 'error');\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  useEffect(() => {\n    refresh();\n  }, [id]);\n  return [order, refresh, ids];\n}\n\n_s5(useOrder, \"Sm9CDPLKHh4omWeRjIaloZBICV4=\", false, function () {\n  return [useOpenPlans];\n});\n\nexport function useTrackOrder(id, grpId) {\n  _s6();\n\n  const [history, setHistory] = useState([]);\n\n  const refresh = async () => {\n    if (!id) {\n      return;\n    }\n\n    try {\n      if (grpId.length > 0) {\n        setHistory(await Factory.trackOrderWithGroup(id, grpId));\n      } else {\n        setHistory(await Factory.trackOrder(id));\n      }\n    } catch (e) {\n      console.error(e);\n      Snackbar.show('Errror Occured', 'error');\n    }\n  };\n\n  useEffect(() => {\n    refresh();\n  }, [id]);\n  return [history, refresh];\n}\n\n_s6(useTrackOrder, \"PUqjgfw0ccPwtx6QxD6fWqJYeMQ=\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/hooks/order.js"],"names":["useEffect","useState","Factory","Snackbar","Loader","useOpenPlans","useOrders","page","filters","sorts","orders","setOrders","refresh","getOrders","e","console","error","show","useNewOrders","status","$in","createdAt","useActiveOrders","$not","useInfiniteOrders","loading","setLoading","setPage","hasMore","setHasMore","fetchOrders","p","api","other","data","getInCartOrders","showError","loadMore","stopIndex","newPage","Math","floor","length","hide","JSON","stringify","useOrder","id","order","setOrder","ids","setIds","openPlans","getOrder","response","message","useTrackOrder","grpId","history","setHistory","trackOrderWithGroup","trackOrder"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Factory } from 'api';\nimport Snackbar from 'services/snackbar';\nimport Loader from 'services/loader';\nimport { useOpenPlans } from 'contexts';\n\nexport function useOrders(page = 0, filters = {}, sorts = {}) {\n  const [orders, setOrders] = useState(null);\n\n  const refresh = async () => {\n    try {\n      setOrders((await Factory.getOrders(page, filters, sorts)) || []);\n    } catch (e) {\n      console.error(e);\n      Snackbar.show('Errror Occured', 'error');\n    }\n  };\n\n  useEffect(() => {\n    refresh();\n  }, []);\n\n  return [orders, refresh];\n}\n\nexport function useNewOrders() {\n  return useOrders(0, {\n    status: {\n      $in: [\n        'payment successful', 'payment cod', 'created', 'direct payment'\n      ]\n    }\n  }, {\n    createdAt: -1,\n  });\n}\n\nexport function useActiveOrders() {\n  return useOrders(0, {\n    status: {\n      $not: {\n        $in: [\n          'payment successful', 'payment cod', 'created', 'delivered',\n          'direct payment', 'cancelled', 'rto delivered', 'payment pending'\n        ]\n      }\n    }\n  });\n}\n\nexport function useInfiniteOrders(filters = {}, sorts = {}) {\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n\n  const fetchOrders = async (p) => {\n    try {\n      const {\n        api,\n        ...other\n      } = filters;\n      if (api === 'incart') {\n        const data = await Factory.getInCartOrders(p, other, sorts);\n        return data;\n      }\n      const data = await Factory.getOrders(p, other, sorts);\n      return data;\n    } catch (e) {\n      Snackbar.showError(e);\n    }\n  };\n\n  const loadMore = async ({ stopIndex = 10 } = {}) => {\n    if (loading) {\n      return;\n    }\n    const newPage = Math.floor(stopIndex / 10);\n    if (newPage <= page) {\n      return;\n    }\n    if (!hasMore) {\n      return;\n    }\n    try {\n      setLoading(true);\n      if (page === 0) {\n        Loader.show();\n      }\n      const data = await fetchOrders(page);\n      setOrders([...orders, ...data]);\n      if (data.length === 0) {\n        setHasMore(false);\n      }\n      setPage(page + 1);\n    } catch (e) {\n      console.error(e);\n      Snackbar.show('Error Occurred', 'error');\n    } finally {\n      Loader.hide();\n      setLoading(false);\n    }\n  };\n\n  const refresh = async () => {\n    setLoading(true);\n    setPage(0);\n    const data = await fetchOrders(0);\n    setOrders([...(data || [])]);\n    setPage(1);\n    setHasMore(true);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    refresh();\n  }, [JSON.stringify(filters), JSON.stringify(sorts)]);\n\n  return [orders, loadMore, hasMore, loading, refresh];\n}\n\nexport function useOrder(id) {\n  const [order, setOrder] = useState(null);\n  const [ids, setIds] = useState(null);\n  const openPlans = useOpenPlans(true, 'abandonCart');\n\n  const refresh = async () => {\n    if (!id) {\n      return;\n    }\n    try {\n      Loader.show();\n      setOrder(await Factory.getOrder(id));\n      setIds([]);\n    } catch (e) {\n      console.error(e);\n      if (e?.response?.status === 403 && e?.response?.data.message === 'upgrade to premium plan') {\n        openPlans();\n        return;\n      }\n      Snackbar.show('Errror Occured', 'error');\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  useEffect(() => {\n    refresh();\n  }, [id]);\n\n  return [order, refresh, ids];\n}\n\nexport function useTrackOrder(id, grpId) {\n  const [history, setHistory] = useState([]);\n\n  const refresh = async () => {\n    if (!id) {\n      return;\n    }\n    try {\n      if (grpId.length > 0) {\n        setHistory(await Factory.trackOrderWithGroup(id, grpId));\n      } else {\n        setHistory(await Factory.trackOrder(id));\n      }\n    } catch (e) {\n      console.error(e);\n      Snackbar.show('Errror Occured', 'error');\n    }\n  };\n\n  useEffect(() => {\n    refresh();\n  }, [id]);\n\n  return [history, refresh];\n}\n"]},"metadata":{},"sourceType":"module"}