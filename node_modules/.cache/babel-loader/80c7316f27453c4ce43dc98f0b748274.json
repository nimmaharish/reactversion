{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/themes/ThemeCard.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"../../containers/profile/theme/customThemes/Layout.module.css\";\nimport dotIcon from \"../../assets/images/profile/dot.svg\";\nimport dotInactiveIcon from \"../../assets/images/profile/dotInactive.svg\";\nimport { Switch } from 'phoenix-components/lib/formik';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { LAYOUT_CONFIG } from \"../../containers/profile/theme/customThemes/utils\";\nimport { useField, useFormikContext } from 'formik';\nimport { useDesktop } from \"../../contexts\";\nexport function ThemeCard({\n  name\n}) {\n  _s();\n\n  const {\n    name: title,\n    images,\n    key\n  } = LAYOUT_CONFIG[name];\n  const isDesktop = useDesktop();\n  const [{\n    value: enabled\n  },, {\n    setValue\n  }] = useField(`${key}.enabled`);\n  const {\n    submitForm\n  } = useFormikContext();\n\n  const onChange = () => {\n    setValue(!enabled);\n    submitForm();\n  };\n\n  const image = images === null || images === void 0 ? void 0 : images[isDesktop ? 'desktop' : 'mobile'];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.cardMain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.switch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: enabled ? styles.active : styles.inActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: enabled ? dotIcon : dotInactiveIcon,\n    alt: \"\",\n    className: styles.dot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), enabled ? 'Active' : 'Inactive'), /*#__PURE__*/React.createElement(Switch, {\n    name: `${key}.enabled`,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.imgContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(ThemeCard, \"kBc6UpQHlPG2D6Cy8dgU24diA/Q=\", false, function () {\n  return [useDesktop, useField, useFormikContext];\n});\n\n_c = ThemeCard;\nThemeCard.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeCard\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/themes/ThemeCard.js"],"names":["styles","Switch","React","PropTypes","LAYOUT_CONFIG","useField","useFormikContext","useDesktop","ThemeCard","name","title","images","key","isDesktop","value","enabled","setValue","submitForm","onChange","image","cardMain","switch","active","inActive","dotIcon","dotInactiveIcon","dot","imgContainer","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,MAAP;;;AAGA,SAASC,MAAT,QAAuB,+BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,QAA3C;AACA,SAASC,UAAT;AAEA,OAAO,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA6B;AAAA;;AAClC,QAAM;AACJA,IAAAA,IAAI,EAAEC,KADF;AAEJC,IAAAA,MAFI;AAGJC,IAAAA;AAHI,MAIFR,aAAa,CAACK,IAAD,CAJjB;AAKA,QAAMI,SAAS,GAAGN,UAAU,EAA5B;AACA,QAAM,CAAC;AAAEO,IAAAA,KAAK,EAAEC;AAAT,GAAD,GAAuB;AAAEC,IAAAA;AAAF,GAAvB,IAAuCX,QAAQ,CAAE,GAAEO,GAAI,UAAR,CAArD;AAEA,QAAM;AAAEK,IAAAA;AAAF,MAAiBX,gBAAgB,EAAvC;;AAEA,QAAMY,QAAQ,GAAG,MAAM;AACrBF,IAAAA,QAAQ,CAAC,CAACD,OAAF,CAAR;AACAE,IAAAA,UAAU;AACX,GAHD;;AAKA,QAAME,KAAK,GAAGR,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAGE,SAAS,GAAG,SAAH,GAAe,QAA3B,CAApB;AAEA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAEb,MAAM,CAACoB,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEpB,MAAM,CAACU,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KADH,CADF,eAIE;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACqB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEN,OAAO,GAAGf,MAAM,CAACsB,MAAV,GAAmBtB,MAAM,CAACuB,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAER,OAAO,GAAGS,OAAH,GAAaC,eAD3B;AAEE,IAAA,GAAG,EAAC,EAFN;AAGE,IAAA,SAAS,EAAEzB,MAAM,CAAC0B,GAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMGX,OAAO,GAAG,QAAH,GAAc,UANxB,CADF,eASE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAG,GAAEH,GAAI,UADf;AAEE,IAAA,QAAQ,EAAEM,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAJF,CADF,eAoBE;AAAK,IAAA,SAAS,EAAElB,MAAM,CAAC2B,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAER,KAAV;AAAiB,IAAA,GAAG,EAAC,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApBF,CADF;AA0BD;;GA5CeX,S;UAMID,U,EAC2BF,Q,EAEtBC,gB;;;KATTE,S;AA8ChBA,SAAS,CAACoB,SAAV,GAAsB;AACpBnB,EAAAA,IAAI,EAAEN,SAAS,CAAC0B,MAAV,CAAiBC;AADH,CAAtB","sourcesContent":["import styles from 'containers/profile/theme/customThemes/Layout.module.css';\nimport dotIcon from 'assets/images/profile/dot.svg';\nimport dotInactiveIcon from 'assets/images/profile/dotInactive.svg';\nimport { Switch } from 'phoenix-components/lib/formik';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { LAYOUT_CONFIG } from 'containers/profile/theme/customThemes/utils';\nimport { useField, useFormikContext } from 'formik';\nimport { useDesktop } from 'contexts';\n\nexport function ThemeCard({ name }) {\n  const {\n    name: title,\n    images,\n    key\n  } = LAYOUT_CONFIG[name];\n  const isDesktop = useDesktop();\n  const [{ value: enabled }, , { setValue }] = useField(`${key}.enabled`);\n\n  const { submitForm } = useFormikContext();\n\n  const onChange = () => {\n    setValue(!enabled);\n    submitForm();\n  };\n\n  const image = images?.[isDesktop ? 'desktop' : 'mobile'];\n\n  return (\n    <>\n      <div className={styles.cardMain}>\n        <div className={styles.title}>\n          {title}\n        </div>\n        <div className={styles.switch}>\n          <div className={enabled ? styles.active : styles.inActive}>\n            <img\n              src={enabled ? dotIcon : dotInactiveIcon}\n              alt=\"\"\n              className={styles.dot}\n            />\n            {enabled ? 'Active' : 'Inactive'}\n          </div>\n          <Switch\n            name={`${key}.enabled`}\n            onChange={onChange}\n          />\n        </div>\n      </div>\n      <div className={styles.imgContainer}>\n        <img src={image} alt=\"\" />\n      </div>\n    </>\n  );\n}\n\nThemeCard.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}