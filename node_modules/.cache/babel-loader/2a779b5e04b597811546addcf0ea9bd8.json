{"ast":null,"code":"/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/* eslint-disable @typescript-eslint/typedef */\n\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\n\nexport function resolvedSyncPromise(value) {\n  return new SyncPromise(function (resolve) {\n    resolve(value);\n  });\n}\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\n\nexport function rejectedSyncPromise(reason) {\n  return new SyncPromise(function (_, reject) {\n    reject(reason);\n  });\n}\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\n\nvar SyncPromise =\n/** @class */\nfunction () {\n  function SyncPromise(executor) {\n    var _this = this;\n\n    this._state = 0\n    /* PENDING */\n    ;\n    this._handlers = [];\n    /** JSDoc */\n\n    this._resolve = function (value) {\n      _this._setResult(1\n      /* RESOLVED */\n      , value);\n    };\n    /** JSDoc */\n\n\n    this._reject = function (reason) {\n      _this._setResult(2\n      /* REJECTED */\n      , reason);\n    };\n    /** JSDoc */\n\n\n    this._setResult = function (state, value) {\n      if (_this._state !== 0\n      /* PENDING */\n      ) {\n        return;\n      }\n\n      if (isThenable(value)) {\n        void value.then(_this._resolve, _this._reject);\n        return;\n      }\n\n      _this._state = state;\n      _this._value = value;\n\n      _this._executeHandlers();\n    };\n    /** JSDoc */\n\n\n    this._executeHandlers = function () {\n      if (_this._state === 0\n      /* PENDING */\n      ) {\n        return;\n      }\n\n      var cachedHandlers = _this._handlers.slice();\n\n      _this._handlers = [];\n      cachedHandlers.forEach(function (handler) {\n        if (handler[0]) {\n          return;\n        }\n\n        if (_this._state === 1\n        /* RESOLVED */\n        ) {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          handler[1](_this._value);\n        }\n\n        if (_this._state === 2\n        /* REJECTED */\n        ) {\n          handler[2](_this._value);\n        }\n\n        handler[0] = true;\n      });\n    };\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n  /** JSDoc */\n\n\n  SyncPromise.prototype.then = function (onfulfilled, onrejected) {\n    var _this = this;\n\n    return new SyncPromise(function (resolve, reject) {\n      _this._handlers.push([false, function (result) {\n        if (!onfulfilled) {\n          // TODO: ¯\\_(ツ)_/¯\n          // TODO: FIXME\n          resolve(result);\n        } else {\n          try {\n            resolve(onfulfilled(result));\n          } catch (e) {\n            reject(e);\n          }\n        }\n      }, function (reason) {\n        if (!onrejected) {\n          reject(reason);\n        } else {\n          try {\n            resolve(onrejected(reason));\n          } catch (e) {\n            reject(e);\n          }\n        }\n      }]);\n\n      _this._executeHandlers();\n    });\n  };\n  /** JSDoc */\n\n\n  SyncPromise.prototype.catch = function (onrejected) {\n    return this.then(function (val) {\n      return val;\n    }, onrejected);\n  };\n  /** JSDoc */\n\n\n  SyncPromise.prototype.finally = function (onfinally) {\n    var _this = this;\n\n    return new SyncPromise(function (resolve, reject) {\n      var val;\n      var isRejected;\n      return _this.then(function (value) {\n        isRejected = false;\n        val = value;\n\n        if (onfinally) {\n          onfinally();\n        }\n      }, function (reason) {\n        isRejected = true;\n        val = reason;\n\n        if (onfinally) {\n          onfinally();\n        }\n      }).then(function () {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val);\n      });\n    });\n  };\n\n  return SyncPromise;\n}();\n\nexport { SyncPromise };","map":{"version":3,"sources":["../src/syncpromise.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst enum States {\n  /** Pending */\n  PENDING = 0,\n  /** Resolved / OK */\n  RESOLVED = 1,\n  /** Rejected / Error */\n  REJECTED = 2,\n}\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States = States.PENDING;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]> = [];\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}