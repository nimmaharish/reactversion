{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/desktop/product/bulk/Upload.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { useQueryParams } from \"../../../../hooks\";\nimport { useHistory } from 'react-router-dom';\nimport { Button } from 'phoenix-components';\nimport SnackBar from \"../../../../services/snackbar\";\nimport { Becca } from \"../../../../api\";\nimport { useIsBulkEnabled } from \"../../../../contexts/userContext\";\nimport Loader from \"../../../../services/loader\";\nimport Kbc from \"../../../knowBaseCards/KnowBaseCards\";\nimport styles from \"./Upload.module.css\";\nexport function Upload({\n  onChange\n}) {\n  _s();\n\n  const [file, setFile] = useState(null);\n  const history = useHistory();\n  const params = useQueryParams();\n  const [dragging, setDrag] = useState(false);\n  const isBulkEnabled = useIsBulkEnabled();\n  console.log(isBulkEnabled);\n\n  const validateAndSetFile = file => {\n    if (!['xlsx', 'xls'].includes(file.name.split('.').pop().toLowerCase())) {\n      SnackBar.show('upload excel file', 'warning');\n      return;\n    }\n\n    setFile(file);\n  };\n\n  const onDrop = e => {\n    e.preventDefault();\n    const {\n      files\n    } = e.dataTransfer;\n    validateAndSetFile(files[0]);\n    setDrag(false);\n  };\n\n  const onDrag = value => e => {\n    e.preventDefault();\n    setDrag(value);\n  };\n\n  const onFileAdd = e => {\n    if (!isBulkEnabled) {\n      params.set('openPlans', 'generic');\n      history.push({\n        search: params.toString()\n      });\n      return;\n    }\n\n    const fileObj = e.target.files[0];\n    validateAndSetFile(fileObj);\n  };\n\n  const handleFileUpload = async () => {\n    Loader.show();\n\n    try {\n      const payload = new FormData();\n      payload.append('file', file);\n      const result = await Becca.parseProductXLSX(payload);\n\n      if (!(result !== null && result !== void 0 && result.length)) {\n        SnackBar.showError('products not found in sheet');\n        return;\n      }\n\n      onChange(result);\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Upload products from CSV file\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.subHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Download sample\", ' ', /*#__PURE__*/React.createElement(\"a\", {\n    className: styles.link,\n    href: \"https://becca-cdn.windo.live/templates/windo-bulk-product-upload-sample.xlsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"XLSX template\"), ' ', \"to see an example of the format required\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onDrop: onDrop,\n    onDragEnter: onDrag(true),\n    onDragOver: onDrag(true),\n    onDragLeave: onDrag(false),\n    className: cx(styles.fileContainer, {\n      [styles.dragging]: dragging\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, file && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.fileName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, file.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, file ? 'Replace' : 'Add'), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.drag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"or drag files to upload\")), /*#__PURE__*/React.createElement(\"input\", {\n    className: styles.input,\n    type: \"file\",\n    accept: \".xlsx, .xls\",\n    onChange: onFileAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })), file && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.upload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"Continue\",\n    onClick: handleFileUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexCenter fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Kbc, {\n    type: \"bulkProductCreation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Upload, \"rpyFL4qd4lkCzR01a7gG2XZV5UE=\", false, function () {\n  return [useHistory, useQueryParams, useIsBulkEnabled];\n});\n\n_c = Upload;\nUpload.propTypes = {\n  onChange: PropTypes.func.isRequired\n};\nUpload.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/desktop/product/bulk/Upload.jsx"],"names":["React","useState","PropTypes","cx","useQueryParams","useHistory","Button","SnackBar","Becca","useIsBulkEnabled","Loader","Kbc","styles","Upload","onChange","file","setFile","history","params","dragging","setDrag","isBulkEnabled","console","log","validateAndSetFile","includes","name","split","pop","toLowerCase","show","onDrop","e","preventDefault","files","dataTransfer","onDrag","value","onFileAdd","set","push","search","toString","fileObj","target","handleFileUpload","payload","FormData","append","result","parseProductXLSX","length","showError","hide","container","heading","subHeading","link","fileContainer","fileName","button","drag","input","upload","propTypes","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { useQueryParams } from 'hooks';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from 'phoenix-components';\nimport SnackBar from 'services/snackbar';\nimport { Becca } from 'api';\nimport { useIsBulkEnabled } from 'contexts/userContext';\nimport Loader from 'services/loader';\nimport Kbc from 'components/knowBaseCards/KnowBaseCards';\nimport styles from './Upload.module.css';\n\nexport function Upload({ onChange }) {\n  const [file, setFile] = useState(null);\n  const history = useHistory();\n  const params = useQueryParams();\n  const [dragging, setDrag] = useState(false);\n  const isBulkEnabled = useIsBulkEnabled();\n  console.log(isBulkEnabled);\n\n  const validateAndSetFile = file => {\n    if (!['xlsx', 'xls'].includes(file.name.split('.')\n      .pop()\n      .toLowerCase())) {\n      SnackBar.show('upload excel file', 'warning');\n      return;\n    }\n    setFile(file);\n  };\n\n  const onDrop = (e) => {\n    e.preventDefault();\n    const { files } = e.dataTransfer;\n    validateAndSetFile(files[0]);\n    setDrag(false);\n  };\n\n  const onDrag = (value) => (e) => {\n    e.preventDefault();\n    setDrag(value);\n  };\n\n  const onFileAdd = (e) => {\n    if (!isBulkEnabled) {\n      params.set('openPlans', 'generic');\n      history.push({\n        search: params.toString(),\n      });\n      return;\n    }\n    const fileObj = e.target.files[0];\n    validateAndSetFile(fileObj);\n  };\n\n  const handleFileUpload = async () => {\n    Loader.show();\n    try {\n      const payload = new FormData();\n      payload.append('file', file);\n      const result = await Becca.parseProductXLSX(payload);\n      if (!result?.length) {\n        SnackBar.showError('products not found in sheet');\n        return;\n      }\n      onChange(result);\n    } catch (e) {\n      SnackBar.showError(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.heading}>Upload products from CSV file</div>\n      <div className={styles.subHeading}>\n        Download sample\n        {' '}\n        <a\n          className={styles.link}\n          href=\"https://becca-cdn.windo.live/templates/windo-bulk-product-upload-sample.xlsx\"\n        >\n          XLSX template\n        </a>\n        {' '}\n        to see an example of the format required\n      </div>\n      <label>\n        <div\n          onDrop={onDrop}\n          onDragEnter={onDrag(true)}\n          onDragOver={onDrag(true)}\n          onDragLeave={onDrag(false)}\n          className={cx(styles.fileContainer, {\n            [styles.dragging]: dragging,\n          })}\n        >\n          {file && (\n            <div className={styles.fileName}>{file.name}</div>\n          )}\n          <div className={styles.button}>\n            {file ? 'Replace' : 'Add'}\n          </div>\n          <span className={styles.drag}>or drag files to upload</span>\n        </div>\n        <input\n          className={styles.input}\n          type=\"file\"\n          accept=\".xlsx, .xls\"\n          onChange={onFileAdd}\n        />\n      </label>\n      {file && (\n        <div className={styles.upload}>\n          <Button\n            label=\"Continue\"\n            onClick={handleFileUpload}\n          />\n        </div>\n      )}\n      <div className=\"flexCenter fullWidth\">\n        <Kbc type=\"bulkProductCreation\" />\n      </div>\n    </div>\n  );\n}\n\nUpload.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nUpload.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}