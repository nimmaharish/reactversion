{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/wallet/Wallet.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Drawer } from \"../../components/shared/Drawer\";\nimport { useWallet } from \"../../hooks/wallet\";\nimport { Loading } from \"../../components/shared/Loading\";\nimport { StatusSelectionBar } from \"../../components/shared/StatusSelectionBar\";\nimport { useQueryParams } from \"../../hooks\";\nimport { useHistory } from 'react-router-dom';\nimport { WalletCredits } from \"../../components/wallet/WalletCredits\";\nimport { WalletBalance } from \"../../components/wallet/WalletBalance\";\nimport Loader from \"../../services/loader\";\nimport { SnackBar } from \"../../services\";\nimport { Piggy } from \"../../api\";\nimport { useDesktop } from \"../../contexts\";\nimport { Button } from 'phoenix-components';\nimport styles from \"./Wallet.module.css\";\nconst stateList = [{\n  label: 'Windo Cash',\n  value: 'cash'\n}, {\n  label: 'Windo Credits',\n  value: 'credits'\n}];\n\nfunction Wallet() {\n  _s();\n\n  const [wallet, refresh, loading] = useWallet();\n  const params = useQueryParams();\n  const state = params.get('type') || 'cash';\n  const history = useHistory();\n  const isDesktop = useDesktop();\n\n  const checkStatus = async (pgTid, id, interval) => {\n    try {\n      const {\n        status\n      } = await Piggy.pollPayment(id, pgTid);\n\n      if (status === 'received') {\n        if (interval) {\n          clearInterval(interval);\n        }\n\n        Loader.hide();\n        SnackBar.show('Windo Cash added successfully!', 'success');\n        refresh();\n        history.replace('/payments?open=1&tab=wallet&type=cash&state=credits');\n        return true;\n      }\n\n      if (status === 'failed') {\n        if (interval) {\n          clearInterval(interval);\n        }\n\n        Loader.hide();\n        SnackBar.show('Payment failed try again', 'error');\n        refresh();\n        history.replace('/payments?open=1&tab=wallet&type=cash&state=credits');\n        return true;\n      }\n    } catch (e) {\n      console.error(e);\n    }\n\n    return false;\n  };\n\n  const pollStatus = async (pgTid, id) => {\n    Loader.show();\n    const interval = setInterval(async () => {\n      checkStatus(pgTid, id, interval);\n    }, 5000);\n  };\n\n  useEffect(() => {\n    if (params.has('payment')) {\n      pollStatus(params.get('pgTid'), params.get('id'));\n    }\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const onStateChange = val => {\n    params.set('type', val);\n    params.delete('state');\n    history.replace({\n      search: params.toString()\n    });\n  };\n\n  return isDesktop ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.desktopContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.desktopButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    primary: false,\n    onClick: () => onStateChange('cash'),\n    label: \"Windo Cash\",\n    className: state === 'cash' ? null : styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    primary: false,\n    onClick: () => onStateChange('credits'),\n    label: \"Windo Credits\",\n    className: state === 'cash' ? styles.button : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  })), state === 'credits' && /*#__PURE__*/React.createElement(WalletCredits, {\n    wallet: wallet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }), state === 'cash' && /*#__PURE__*/React.createElement(WalletBalance, {\n    wallet: wallet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 30\n    }\n  }))) : /*#__PURE__*/React.createElement(Drawer, {\n    title: \"Wallet Transactions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StatusSelectionBar, {\n    tabClassName: styles.tabClassName,\n    className: styles.tab,\n    activeClass: styles.tabActive,\n    items: stateList,\n    onChange: onStateChange,\n    active: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), state === 'credits' && /*#__PURE__*/React.createElement(WalletCredits, {\n    wallet: wallet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 33\n    }\n  }), state === 'cash' && /*#__PURE__*/React.createElement(WalletBalance, {\n    wallet: wallet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 30\n    }\n  }));\n}\n\n_s(Wallet, \"dyhyXZwHyOzZqzUK7tHY0/aTXgU=\", false, function () {\n  return [useWallet, useQueryParams, useHistory, useDesktop];\n});\n\n_c = Wallet;\nWallet.propTypes = {};\nWallet.defaultProps = {};\nexport default Wallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/wallet/Wallet.jsx"],"names":["React","useEffect","Drawer","useWallet","Loading","StatusSelectionBar","useQueryParams","useHistory","WalletCredits","WalletBalance","Loader","SnackBar","Piggy","useDesktop","Button","styles","stateList","label","value","Wallet","wallet","refresh","loading","params","state","get","history","isDesktop","checkStatus","pgTid","id","interval","status","pollPayment","clearInterval","hide","show","replace","e","console","error","pollStatus","setInterval","has","onStateChange","val","set","delete","search","toString","main","desktopContainer","desktopButton","button","tabClassName","tab","tabActive","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Drawer } from 'components/shared/Drawer';\nimport { useWallet } from 'hooks/wallet';\nimport { Loading } from 'components/shared/Loading';\nimport { StatusSelectionBar } from 'components/shared/StatusSelectionBar';\nimport { useQueryParams } from 'hooks';\nimport { useHistory } from 'react-router-dom';\nimport { WalletCredits } from 'components/wallet/WalletCredits';\nimport { WalletBalance } from 'components/wallet/WalletBalance';\nimport Loader from 'services/loader';\nimport { SnackBar } from 'services';\nimport { Piggy } from 'api';\nimport { useDesktop } from 'contexts';\nimport { Button } from 'phoenix-components';\nimport styles from './Wallet.module.css';\n\nconst stateList = [\n  {\n    label: 'Windo Cash',\n    value: 'cash',\n  },\n  {\n    label: 'Windo Credits',\n    value: 'credits',\n  }\n];\n\nfunction Wallet() {\n  const [wallet, refresh, loading] = useWallet();\n  const params = useQueryParams();\n  const state = params.get('type') || 'cash';\n  const history = useHistory();\n  const isDesktop = useDesktop();\n\n  const checkStatus = async (pgTid, id, interval) => {\n    try {\n      const { status } = await Piggy.pollPayment(id, pgTid);\n      if (status === 'received') {\n        if (interval) {\n          clearInterval(interval);\n        }\n        Loader.hide();\n        SnackBar.show('Windo Cash added successfully!', 'success');\n        refresh();\n        history.replace('/payments?open=1&tab=wallet&type=cash&state=credits');\n        return true;\n      }\n      if (status === 'failed') {\n        if (interval) {\n          clearInterval(interval);\n        }\n        Loader.hide();\n        SnackBar.show('Payment failed try again', 'error');\n        refresh();\n        history.replace('/payments?open=1&tab=wallet&type=cash&state=credits');\n        return true;\n      }\n    } catch (e) {\n      console.error(e);\n    }\n    return false;\n  };\n\n  const pollStatus = async (pgTid, id) => {\n    Loader.show();\n    const interval = setInterval(async () => {\n      checkStatus(pgTid, id, interval);\n    }, 5000);\n  };\n\n  useEffect(() => {\n    if (params.has('payment')) {\n      pollStatus(params.get('pgTid'), params.get('id'));\n    }\n  }, []);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const onStateChange = (val) => {\n    params.set('type', val);\n    params.delete('state');\n    history.replace({\n      search: params.toString(),\n    });\n  };\n\n  return (isDesktop ? (\n    <div className={styles.main}>\n      <div className={styles.desktopContainer}>\n        <div className={styles.desktopButton}>\n          <Button\n            primary={false}\n            onClick={() => onStateChange('cash')}\n            label=\"Windo Cash\"\n            className={state === 'cash' ? null : styles.button}\n          />\n          <Button\n            primary={false}\n            onClick={() => onStateChange('credits')}\n            label=\"Windo Credits\"\n            className={state === 'cash' ? styles.button : null}\n          />\n        </div>\n        {state === 'credits' && <WalletCredits wallet={wallet} />}\n        {state === 'cash' && <WalletBalance wallet={wallet} />}\n      </div>\n    </div>\n  )\n    : (\n      <Drawer title=\"Wallet Transactions\">\n        <StatusSelectionBar\n          tabClassName={styles.tabClassName}\n          className={styles.tab}\n          activeClass={styles.tabActive}\n          items={stateList}\n          onChange={onStateChange}\n          active={state}\n        />\n        {state === 'credits' && <WalletCredits wallet={wallet} />}\n        {state === 'cash' && <WalletBalance wallet={wallet} />}\n      </Drawer>\n    )\n  );\n}\n\nWallet.propTypes = {};\n\nWallet.defaultProps = {};\n\nexport default Wallet;\n"]},"metadata":{},"sourceType":"module"}