{"ast":null,"code":"const ErrorStackParser = require('error-stack-parser');\n\nconst theme = require('../theme');\n\nconst formatFilename = require('../utils/formatFilename');\n/**\n * @typedef {Object} RuntimeErrorStackProps\n * @property {Error} error\n */\n\n/**\n * A formatter that turns runtime error stacks into highlighted HTML stacks.\n * @param {Document} document\n * @param {HTMLElement} root\n * @param {RuntimeErrorStackProps} props\n * @returns {void}\n */\n\n\nfunction RuntimeErrorStack(document, root, props) {\n  const stackTitle = document.createElement('h4');\n  stackTitle.innerText = 'Call Stack';\n  stackTitle.style.color = '#' + theme.white;\n  stackTitle.style.fontSize = '1.0625rem';\n  stackTitle.style.fontWeight = '500';\n  stackTitle.style.lineHeight = '1.3';\n  stackTitle.style.margin = '0 0 0.5rem';\n  const stackContainer = document.createElement('div');\n  stackContainer.style.fontSize = '0.8125rem';\n  stackContainer.style.lineHeight = '1.3';\n  stackContainer.style.whiteSpace = 'pre-wrap';\n  let errorStacks;\n\n  try {\n    errorStacks = ErrorStackParser.parse(props.error);\n  } catch (e) {\n    errorStacks = [];\n    stackContainer.innerHTML = 'No stack trace is available for this error!';\n  }\n\n  for (let i = 0; i < Math.min(errorStacks.length, 10); i += 1) {\n    const currentStack = errorStacks[i];\n    const functionName = document.createElement('code');\n    functionName.innerHTML = '&emsp;' + currentStack.functionName || '(anonymous function)';\n    functionName.style.color = '#' + theme.yellow;\n    functionName.style.fontFamily = ['\"Operator Mono SSm\"', '\"Operator Mono\"', '\"Fira Code Retina\"', '\"Fira Code\"', '\"FiraCode-Retina\"', '\"Andale Mono\"', '\"Lucida Console\"', 'Menlo', 'Consolas', 'Monaco', 'monospace'].join(', ');\n    const fileName = document.createElement('div');\n    fileName.innerHTML = '&emsp;&emsp;' + formatFilename(currentStack.fileName) + ':' + currentStack.lineNumber + ':' + currentStack.columnNumber;\n    fileName.style.color = '#' + theme.white;\n    fileName.style.fontSize = '0.6875rem';\n    fileName.style.marginBottom = '0.25rem';\n    stackContainer.appendChild(functionName);\n    stackContainer.appendChild(fileName);\n  }\n\n  root.appendChild(stackTitle);\n  root.appendChild(stackContainer);\n}\n\nmodule.exports = RuntimeErrorStack;","map":{"version":3,"sources":["/home/harish/windo/phoenix/node_modules/customize-cra-react-refresh/node_modules/@pmmmwh/react-refresh-webpack-plugin/src/overlay/components/RuntimeErrorStack.js"],"names":["ErrorStackParser","require","theme","formatFilename","RuntimeErrorStack","document","root","props","stackTitle","createElement","innerText","style","color","white","fontSize","fontWeight","lineHeight","margin","stackContainer","whiteSpace","errorStacks","parse","error","e","innerHTML","i","Math","min","length","currentStack","functionName","yellow","fontFamily","join","fileName","lineNumber","columnNumber","marginBottom","appendChild","module","exports"],"mappings":"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","sourcesContent":["const ErrorStackParser = require('error-stack-parser');\nconst theme = require('../theme');\nconst formatFilename = require('../utils/formatFilename');\n\n/**\n * @typedef {Object} RuntimeErrorStackProps\n * @property {Error} error\n */\n\n/**\n * A formatter that turns runtime error stacks into highlighted HTML stacks.\n * @param {Document} document\n * @param {HTMLElement} root\n * @param {RuntimeErrorStackProps} props\n * @returns {void}\n */\nfunction RuntimeErrorStack(document, root, props) {\n  const stackTitle = document.createElement('h4');\n  stackTitle.innerText = 'Call Stack';\n  stackTitle.style.color = '#' + theme.white;\n  stackTitle.style.fontSize = '1.0625rem';\n  stackTitle.style.fontWeight = '500';\n  stackTitle.style.lineHeight = '1.3';\n  stackTitle.style.margin = '0 0 0.5rem';\n\n  const stackContainer = document.createElement('div');\n  stackContainer.style.fontSize = '0.8125rem';\n  stackContainer.style.lineHeight = '1.3';\n  stackContainer.style.whiteSpace = 'pre-wrap';\n\n  let errorStacks;\n  try {\n    errorStacks = ErrorStackParser.parse(props.error);\n  } catch (e) {\n    errorStacks = [];\n    stackContainer.innerHTML = 'No stack trace is available for this error!';\n  }\n\n  for (let i = 0; i < Math.min(errorStacks.length, 10); i += 1) {\n    const currentStack = errorStacks[i];\n\n    const functionName = document.createElement('code');\n    functionName.innerHTML = '&emsp;' + currentStack.functionName || '(anonymous function)';\n    functionName.style.color = '#' + theme.yellow;\n    functionName.style.fontFamily = [\n      '\"Operator Mono SSm\"',\n      '\"Operator Mono\"',\n      '\"Fira Code Retina\"',\n      '\"Fira Code\"',\n      '\"FiraCode-Retina\"',\n      '\"Andale Mono\"',\n      '\"Lucida Console\"',\n      'Menlo',\n      'Consolas',\n      'Monaco',\n      'monospace',\n    ].join(', ');\n\n    const fileName = document.createElement('div');\n    fileName.innerHTML =\n      '&emsp;&emsp;' +\n      formatFilename(currentStack.fileName) +\n      ':' +\n      currentStack.lineNumber +\n      ':' +\n      currentStack.columnNumber;\n    fileName.style.color = '#' + theme.white;\n    fileName.style.fontSize = '0.6875rem';\n    fileName.style.marginBottom = '0.25rem';\n\n    stackContainer.appendChild(functionName);\n    stackContainer.appendChild(fileName);\n  }\n\n  root.appendChild(stackTitle);\n  root.appendChild(stackContainer);\n}\n\nmodule.exports = RuntimeErrorStack;\n"]},"metadata":{},"sourceType":"script"}