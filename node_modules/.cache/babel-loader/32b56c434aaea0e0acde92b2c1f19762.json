{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/orders/v2/CommonStatusDrawer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Button, Clickable, Radio } from 'phoenix-components';\nimport { useDesktop, useShop } from \"../../../contexts\";\nimport { allowedCountries } from \"../../../constants/shop\";\nimport { useToggle } from \"../../../hooks/common\";\nimport { SideDrawer } from \"../../shared/SideDrawer\";\nimport { BottomDrawer } from \"../../shared/BottomDrawer\";\nimport UploadProduct from \"../../products/UploadProduct.jsx\";\nimport { NoteDialog } from \"./NoteDialog\";\nimport Alert from \"../../shared/alert/Alert\";\nimport { DeleteAlert } from \"../../shared/DeleteAlert.jsx\";\nimport styles from \"./StatusDrawer.module.css\";\nexport function CommonStatusDrawer({\n  onClose,\n  onSubmit,\n  statusList,\n  onStartShipping,\n  showStartShipping,\n  title,\n  items\n}) {\n  _s();\n\n  var _shop$country, _digitalProducts$2;\n\n  const shop = useShop();\n  const [status, setStatus] = useState(null);\n  const [openNote, toggleNote] = useToggle();\n  const [openAlert, toggleAlert] = useToggle();\n  const isDesktop = useDesktop();\n  const isCountryEnabled = allowedCountries.includes(shop === null || shop === void 0 ? void 0 : (_shop$country = shop.country) === null || _shop$country === void 0 ? void 0 : _shop$country.toLowerCase());\n  const [openUploadCard, toggleUploadCard] = useState(false);\n  const [openSendProduct, toggleSendProduct] = useState(false);\n  const digitalProducts = items.filter(product => (product === null || product === void 0 ? void 0 : product.productType) === 'digital');\n  const isDigital = (digitalProducts === null || digitalProducts === void 0 ? void 0 : digitalProducts.length) > 0;\n  console.log(isDigital);\n\n  const onSetStatus = value => e => {\n    e.stopPropagation();\n    setStatus(value);\n  };\n\n  const onUpdate = nt => {\n    var _digitalProducts$;\n\n    if (!status) {\n      toggleAlert();\n      return;\n    }\n\n    onSubmit(status, nt, (_digitalProducts$ = digitalProducts[0]) === null || _digitalProducts$ === void 0 ? void 0 : _digitalProducts$.links);\n  };\n\n  const onUpdateWithNote = nt => {\n    toggleNote();\n    onUpdate(nt);\n  };\n\n  const openNoteDialog = () => {\n    if (!status) {\n      toggleAlert();\n      return;\n    }\n\n    toggleNote();\n  };\n\n  const Component = isDesktop ? SideDrawer : BottomDrawer;\n  return /*#__PURE__*/React.createElement(Component, {\n    title: title,\n    backButton: true,\n    onClose: onClose,\n    classes: isDesktop ? undefined : {\n      heading: styles.bottomDrawerContainer\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, isDigital && title === 'Shipping Status' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.sendProductBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, openSendProduct ? /*#__PURE__*/React.createElement(DeleteAlert, {\n    title: \"Your digital product will be sent by mail to the customer and the status of the order will be updated as Delivered.\",\n    primary: \"Confirm\",\n    onCancel: () => toggleSendProduct(!openSendProduct),\n    onDelete: () => {\n      if (!status) {\n        onStartShipping();\n      } else onUpdate();\n\n      toggleSendProduct(!openSendProduct);\n      toggleUploadCard(!openUploadCard);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }) : null, openUploadCard ? /*#__PURE__*/React.createElement(UploadProduct, {\n    onBack: () => toggleUploadCard(!openUploadCard),\n    onUpload: product => {\n      digitalProducts[0].links = [];\n      digitalProducts[0].links.push(...product);\n    },\n    onSave: () => {\n      setStatus('delivered');\n      toggleSendProduct(true);\n    },\n    digitalProducts: (_digitalProducts$2 = digitalProducts[0]) === null || _digitalProducts$2 === void 0 ? void 0 : _digitalProducts$2.links,\n    eitherIsMandatory: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }) : null) : null, openNote && /*#__PURE__*/React.createElement(NoteDialog, {\n    onSubmit: onUpdateWithNote,\n    onClose: toggleNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), openAlert && /*#__PURE__*/React.createElement(Alert, {\n    btnText: \"Ok\",\n    text: \"Select Status\",\n    onClick: toggleAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), !isDesktop && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.borderBottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, showStartShipping && isCountryEnabled && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.shippingButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: !isDesktop,\n    size: \"large\",\n    label: isDigital ? 'Send Product' : 'Ship Via Partner',\n    onClick: isDigital ? () => toggleUploadCard(!openUploadCard) : onStartShipping,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.statuses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, statusList.map(x => /*#__PURE__*/React.createElement(Clickable, {\n    key: x.value,\n    onClick: onSetStatus(x.value),\n    className: cx(styles.radio, {\n      [styles.selected]: status === x.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, x.label), /*#__PURE__*/React.createElement(Radio, {\n    label: \"\",\n    value: x.value,\n    selected: status === x.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.bottomButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    className: styles.secondary,\n    onClick: openNoteDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, \"Update Status With Note\"), /*#__PURE__*/React.createElement(Clickable, {\n    className: styles.primary,\n    onClick: () => onUpdate(''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, \"Update Status\")));\n}\n\n_s(CommonStatusDrawer, \"V/3TrFnkrghKpV7UsIecQD219VU=\", false, function () {\n  return [useShop, useToggle, useToggle, useDesktop];\n});\n\n_c = CommonStatusDrawer;\nCommonStatusDrawer.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  statusList: PropTypes.array.isRequired,\n  onStartShipping: PropTypes.func,\n  showStartShipping: PropTypes.bool,\n  title: PropTypes.string,\n  items: PropTypes.array\n};\nCommonStatusDrawer.defaultProps = {\n  onStartShipping: () => {},\n  showStartShipping: false,\n  title: 'Update',\n  items: []\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CommonStatusDrawer\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/orders/v2/CommonStatusDrawer.jsx"],"names":["React","useState","PropTypes","cx","Button","Clickable","Radio","useDesktop","useShop","allowedCountries","useToggle","SideDrawer","BottomDrawer","UploadProduct","NoteDialog","Alert","DeleteAlert","styles","CommonStatusDrawer","onClose","onSubmit","statusList","onStartShipping","showStartShipping","title","items","shop","status","setStatus","openNote","toggleNote","openAlert","toggleAlert","isDesktop","isCountryEnabled","includes","country","toLowerCase","openUploadCard","toggleUploadCard","openSendProduct","toggleSendProduct","digitalProducts","filter","product","productType","isDigital","length","console","log","onSetStatus","value","e","stopPropagation","onUpdate","nt","links","onUpdateWithNote","openNoteDialog","Component","undefined","heading","bottomDrawerContainer","sendProductBtn","push","borderBottom","container","shippingButton","statuses","map","x","radio","selected","label","bottomButtons","secondary","primary","propTypes","func","isRequired","array","bool","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Button, Clickable, Radio } from 'phoenix-components';\n\nimport { useDesktop, useShop } from 'contexts';\n\nimport { allowedCountries } from 'constants/shop';\n\nimport { useToggle } from 'hooks/common';\n\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { BottomDrawer } from 'components/shared/BottomDrawer';\nimport UploadProduct from 'components/products/UploadProduct.jsx';\nimport { NoteDialog } from 'components/orders/v2/NoteDialog';\nimport Alert from 'components/shared/alert/Alert';\nimport { DeleteAlert } from 'components/shared/DeleteAlert.jsx';\n\nimport styles from './StatusDrawer.module.css';\n\nexport function CommonStatusDrawer({\n  onClose,\n  onSubmit,\n  statusList,\n  onStartShipping,\n  showStartShipping,\n  title,\n  items\n}) {\n  const shop = useShop();\n  const [status, setStatus] = useState(null);\n  const [openNote, toggleNote] = useToggle();\n  const [openAlert, toggleAlert] = useToggle();\n  const isDesktop = useDesktop();\n  const isCountryEnabled = allowedCountries.includes(shop?.country?.toLowerCase());\n  const [openUploadCard, toggleUploadCard] = useState(false);\n  const [openSendProduct, toggleSendProduct] = useState(false);\n  const digitalProducts = items.filter(product => product?.productType === 'digital');\n  const isDigital = digitalProducts?.length > 0;\n\n  console.log(isDigital);\n  const onSetStatus = (value) => (e) => {\n    e.stopPropagation();\n    setStatus(value);\n  };\n\n  const onUpdate = (nt) => {\n    if (!status) {\n      toggleAlert();\n      return;\n    }\n    onSubmit(status, nt, digitalProducts[0]?.links);\n  };\n\n  const onUpdateWithNote = (nt) => {\n    toggleNote();\n    onUpdate(nt);\n  };\n\n  const openNoteDialog = () => {\n    if (!status) {\n      toggleAlert();\n      return;\n    }\n    toggleNote();\n  };\n\n  const Component = isDesktop ? SideDrawer : BottomDrawer;\n\n  return (\n    <Component\n      title={title}\n      backButton\n      onClose={onClose}\n      classes={isDesktop ? undefined : {\n        heading: styles.bottomDrawerContainer,\n      }}\n    >\n      {isDigital && title === 'Shipping Status' ? (\n        <div className={styles.sendProductBtn}>\n          {openSendProduct ? (\n            <DeleteAlert\n              title=\"Your digital product will be sent by mail to the customer and\n               the status of the order will be updated as Delivered.\"\n              primary=\"Confirm\"\n              onCancel={() => toggleSendProduct(!openSendProduct)}\n              onDelete={() => {\n                if (!status) {\n                  onStartShipping();\n                } else onUpdate();\n                toggleSendProduct(!openSendProduct);\n                toggleUploadCard(!openUploadCard);\n              }}\n            />\n          ) : null}\n          {openUploadCard ? (\n            <UploadProduct\n              onBack={() => toggleUploadCard(!openUploadCard)}\n              onUpload={(product) => {\n                digitalProducts[0].links = [];\n                digitalProducts[0].links.push(...product);\n              }}\n              onSave={() => {\n                setStatus('delivered');\n                toggleSendProduct(true);\n              }}\n              digitalProducts={digitalProducts[0]?.links}\n              eitherIsMandatory={true}\n            />\n          ) : null}\n        </div>\n      ) : null}\n\n      {openNote && (\n        <NoteDialog onSubmit={onUpdateWithNote} onClose={toggleNote} />\n      )}\n      {openAlert && (\n        <Alert btnText=\"Ok\" text=\"Select Status\" onClick={toggleAlert} />\n      )}\n      {!isDesktop && (\n        <div className={styles.borderBottom} />\n      )}\n      <div className={styles.container}>\n        {showStartShipping && isCountryEnabled && (\n          <div className={styles.shippingButton}>\n            <Button\n              fullWidth={!isDesktop}\n              size=\"large\"\n              label={isDigital ? 'Send Product' : 'Ship Via Partner'}\n              onClick={isDigital ? () => toggleUploadCard(!openUploadCard) : onStartShipping} />\n          </div>\n        )}\n        <div className={styles.statuses}>\n          {statusList.map(x => (\n            <Clickable\n              key={x.value}\n              onClick={onSetStatus(x.value)}\n              className={cx(styles.radio, {\n                [styles.selected]: status === x.value,\n              })}\n            >\n              <div>{x.label}</div>\n              <Radio\n                label=\"\"\n                value={x.value}\n                selected={status === x.value}\n              />\n            </Clickable>\n          ))}\n        </div>\n      </div>\n      <div className={styles.bottomButtons}>\n        <Clickable\n          className={styles.secondary}\n          onClick={openNoteDialog}\n        >\n          Update Status With Note\n        </Clickable>\n        <Clickable className={styles.primary} onClick={() => onUpdate('')}>\n          Update Status\n        </Clickable>\n      </div>\n    </Component>\n  );\n}\n\nCommonStatusDrawer.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  statusList: PropTypes.array.isRequired,\n  onStartShipping: PropTypes.func,\n  showStartShipping: PropTypes.bool,\n  title: PropTypes.string,\n  items: PropTypes.array\n};\n\nCommonStatusDrawer.defaultProps = {\n  onStartShipping: () => { },\n  showStartShipping: false,\n  title: 'Update',\n  items: []\n};\n"]},"metadata":{},"sourceType":"module"}