{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/userProfile/PostDrawer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQueryParams } from \"../../hooks\";\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Drawer } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport chevronLeft from \"../../assets/images/chat/arrowBack.svg\";\nimport { usePost } from \"../../hooks/posts\";\nimport Player from \"../shared/Player/Carousel\";\nimport { Loading } from \"../shared/Loading\";\nimport delIcon from \"../../assets/images/post/del.svg\";\nimport Loader from \"../../services/loader\";\nimport { Nikon } from \"../../api\";\nimport SnackBar from \"../../services/snackbar\";\nimport { CreateProductDialog } from \"./CreateProductDialog\";\nimport { useToggle } from \"../../hooks/common\";\nimport { SideDrawer } from \"../shared/SideDrawer\";\nimport { Button } from 'phoenix-components';\nimport { DeleteAlert } from \"../shared/DeleteAlert\";\nimport { useDesktop } from \"../../contexts\";\nimport styles from \"./PostDrawer.module.css\";\nexport function PostDrawer() {\n  _s();\n\n  var _post$images;\n\n  const params = useQueryParams();\n  const history = useHistory();\n  const id = params.get('post');\n  const [post, loading] = usePost(id);\n  const [openProduct, toggleProduct] = useToggle();\n  const [openDel, toggleOpenDel] = useToggle(false);\n  const isDesktop = useDesktop();\n\n  if (!id) {\n    return null;\n  }\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    });\n  }\n\n  const media = [...((_post$images = post.images) !== null && _post$images !== void 0 ? _post$images : [])].map(i => ({ ...i,\n    type: 'image'\n  }));\n\n  if (post.video) {\n    media.push({\n      url: post.video,\n      type: 'video'\n    });\n  }\n\n  const delPost = async () => {\n    if (!(post !== null && post !== void 0 && post.pid)) {\n      history.goBack();\n      return;\n    }\n\n    try {\n      Loader.show();\n      await Nikon.deletePosts([post.pid]);\n      history.goBack();\n    } catch (e) {\n      SnackBar.show('something went wrong, try again', 'error');\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isDesktop ? /*#__PURE__*/React.createElement(SideDrawer, {\n    onClose: () => history.goBack(),\n    backButton: true,\n    title: \"Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.containerDesk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Swiper, {\n    grabCursor: true,\n    initialSlide: 0,\n    spaceBetween: 30,\n    watchOverflow: true,\n    className: styles.swiper,\n    centeredSlides: true,\n    pagination: {\n      clickable: true\n    },\n    slidesPerView: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, media.map((el, i) => /*#__PURE__*/React.createElement(SwiperSlide, {\n    key: i,\n    className: styles.slide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, el.type === 'image' ? /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.image,\n    src: el.url,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Player, {\n    item: el,\n    className: styles.video,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.del,\n    onClick: () => toggleOpenDel(!openDel),\n    src: delIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  })), openDel && /*#__PURE__*/React.createElement(DeleteAlert, {\n    title: \"Delete Post\",\n    subTitle: \"Sure you want to delete the posts\",\n    onCancel: () => toggleOpenDel(!openDel),\n    primary: \"Delete\",\n    onDelete: delPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, post.desc), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.hashTags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, (post.hashTags || []).map(tag => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.hashTag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, tag))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"Add as Product\",\n    onClick: toggleProduct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }))), openProduct && /*#__PURE__*/React.createElement(CreateProductDialog, {\n    onClose: toggleProduct,\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"bottom\",\n    open: true,\n    onClose: () => history.goBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.topBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: history.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.back,\n    src: chevronLeft,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Swiper, {\n    grabCursor: true,\n    initialSlide: 0,\n    spaceBetween: 30,\n    watchOverflow: true,\n    className: styles.swiper,\n    centeredSlides: true,\n    pagination: {\n      clickable: true\n    },\n    slidesPerView: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, media.map((el, i) => /*#__PURE__*/React.createElement(SwiperSlide, {\n    key: i,\n    className: styles.slide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, el.type === 'image' ? /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.image,\n    src: el.url,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Player, {\n    item: el,\n    className: styles.video,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.del,\n    onClick: () => toggleOpenDel(!openDel),\n    src: delIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  })), openDel && /*#__PURE__*/React.createElement(DeleteAlert, {\n    title: \"Delete Post\",\n    subTitle: \"Sure you want to delete the posts\",\n    onCancel: () => toggleOpenDel(!openDel),\n    primary: \"Delete\",\n    onDelete: delPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, post.desc), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.hashTags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, (post.hashTags || []).map(tag => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.hashTag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }\n  }, tag))), /*#__PURE__*/React.createElement(Button, {\n    label: \"Add as Product\",\n    onClick: toggleProduct,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }))), openProduct && /*#__PURE__*/React.createElement(CreateProductDialog, {\n    onClose: toggleProduct,\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  })));\n}\n\n_s(PostDrawer, \"2qyNKir/QwdkxtBa6MEtV7JODls=\", false, function () {\n  return [useQueryParams, useHistory, usePost, useToggle, useToggle, useDesktop];\n});\n\n_c = PostDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDrawer\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/userProfile/PostDrawer.jsx"],"names":["React","useQueryParams","Swiper","SwiperSlide","Drawer","useHistory","usePost","Player","Loading","Loader","Nikon","SnackBar","CreateProductDialog","useToggle","SideDrawer","Button","DeleteAlert","useDesktop","styles","PostDrawer","params","history","id","get","post","loading","openProduct","toggleProduct","openDel","toggleOpenDel","isDesktop","media","images","map","i","type","video","push","url","delPost","pid","goBack","show","deletePosts","e","hide","containerDesk","swiper","clickable","el","slide","image","del","delIcon","main","description","desc","hashTags","tag","hashTag","container","topBar","back","chevronLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useQueryParams } from 'hooks';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Drawer } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport chevronLeft from 'assets/images/chat/arrowBack.svg';\nimport { usePost } from 'hooks/posts';\nimport Player from 'components/shared/Player/Carousel';\nimport { Loading } from 'components/shared/Loading';\nimport delIcon from 'assets/images/post/del.svg';\nimport Loader from 'services/loader';\nimport { Nikon } from 'api';\nimport SnackBar from 'services/snackbar';\nimport { CreateProductDialog } from 'components/userProfile/CreateProductDialog';\nimport { useToggle } from 'hooks/common';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { Button } from 'phoenix-components';\nimport { DeleteAlert } from 'components/shared/DeleteAlert';\nimport { useDesktop } from 'contexts';\nimport styles from './PostDrawer.module.css';\n\nexport function PostDrawer() {\n  const params = useQueryParams();\n  const history = useHistory();\n  const id = params.get('post');\n  const [post, loading] = usePost(id);\n  const [openProduct, toggleProduct] = useToggle();\n  const [openDel, toggleOpenDel] = useToggle(false);\n  const isDesktop = useDesktop();\n\n  if (!id) {\n    return null;\n  }\n\n  if (loading) {\n    return (\n      <Loading />\n    );\n  }\n\n  const media = [...(post.images ?? [])].map(i => ({\n    ...i,\n    type: 'image'\n  }));\n\n  if (post.video) {\n    media.push({\n      url: post.video,\n      type: 'video'\n    });\n  }\n\n  const delPost = async () => {\n    if (!post?.pid) {\n      history.goBack();\n      return;\n    }\n    try {\n      Loader.show();\n      await Nikon.deletePosts([post.pid]);\n      history.goBack();\n    } catch (e) {\n      SnackBar.show('something went wrong, try again', 'error');\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  return (\n    <>\n      {isDesktop ? (\n        <SideDrawer\n          onClose={() => history.goBack()}\n          backButton={true}\n          title=\"Post\"\n        >\n          <div className={styles.containerDesk}>\n            <Swiper\n              grabCursor={true}\n              initialSlide={0}\n              spaceBetween={30}\n              watchOverflow={true}\n              className={styles.swiper}\n              centeredSlides={true}\n              pagination={{ clickable: true }}\n              slidesPerView=\"auto\"\n            >\n              {media.map((el, i) => (\n                <SwiperSlide\n                  key={i}\n                  className={styles.slide}\n                >\n                  {el.type === 'image' ? (\n                    <img\n                      className={styles.image}\n                      src={el.url}\n                      alt=\"\"\n                    />\n                  ) : (\n                    <div>\n                      <Player item={el} className={styles.video} />\n                    </div>\n                  )}\n                </SwiperSlide>\n              ))}\n              <img\n                className={styles.del}\n                onClick={() => toggleOpenDel(!openDel)}\n                src={delIcon}\n                alt=\"\"\n              />\n            </Swiper>\n            {openDel && (\n              <DeleteAlert\n                title=\"Delete Post\"\n                subTitle=\"Sure you want to delete the posts\"\n                onCancel={() => toggleOpenDel(!openDel)}\n                primary=\"Delete\"\n                onDelete={delPost}\n              />\n            )}\n            <div className={styles.main}>\n              <div className={styles.description}>\n                {post.desc}\n              </div>\n              <div className={styles.hashTags}>\n                {(post.hashTags || []).map(tag => (\n                  <div className={styles.hashTag}>{tag}</div>\n                ))}\n              </div>\n              <div className=\"flexCenter\">\n\n                <Button\n                  label=\"Add as Product\"\n                  onClick={toggleProduct}\n                />\n              </div>\n            </div>\n            {openProduct && (\n              <CreateProductDialog\n                onClose={toggleProduct}\n                id={id}\n              />\n            )}\n          </div>\n        </SideDrawer>\n      ) : (\n        <Drawer\n          anchor=\"bottom\"\n          open={true}\n          onClose={() => history.goBack()}\n        >\n          <div className={styles.container}>\n            <div className={styles.topBar}>\n              <div onClick={history.goBack}>\n                <img className={styles.back} src={chevronLeft} alt=\"\" />\n              </div>\n            </div>\n\n            <Swiper\n              grabCursor={true}\n              initialSlide={0}\n              spaceBetween={30}\n              watchOverflow={true}\n              className={styles.swiper}\n              centeredSlides={true}\n              pagination={{ clickable: true }}\n              slidesPerView=\"auto\"\n            >\n              {media.map((el, i) => (\n                <SwiperSlide\n                  key={i}\n                  className={styles.slide}\n                >\n                  {el.type === 'image' ? (\n                    <img\n                      className={styles.image}\n                      src={el.url}\n                      alt=\"\"\n                    />\n                  ) : (\n                    <div>\n                      <Player item={el} className={styles.video} />\n                    </div>\n                  )}\n                </SwiperSlide>\n              ))}\n              <img\n                className={styles.del}\n                onClick={() => toggleOpenDel(!openDel)}\n                src={delIcon}\n                alt=\"\"\n              />\n            </Swiper>\n            {openDel && (\n              <DeleteAlert\n                title=\"Delete Post\"\n                subTitle=\"Sure you want to delete the posts\"\n                onCancel={() => toggleOpenDel(!openDel)}\n                primary=\"Delete\"\n                onDelete={delPost}\n              />\n            )}\n            <div className={styles.main}>\n              <div className={styles.description}>\n                {post.desc}\n              </div>\n              <div className={styles.hashTags}>\n                {(post.hashTags || []).map(tag => (\n                  <div className={styles.hashTag}>{tag}</div>\n                ))}\n              </div>\n              <Button\n                label=\"Add as Product\"\n                onClick={toggleProduct}\n                fullWidth\n              />\n            </div>\n          </div>\n          {openProduct && (\n            <CreateProductDialog\n              onClose={toggleProduct}\n              id={id}\n            />\n          )}\n        </Drawer>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}