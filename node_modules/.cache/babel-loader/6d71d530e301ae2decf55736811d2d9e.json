{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/payments/Accordion.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useToggle } from \"../../hooks/common\";\nimport PropTypes from 'prop-types';\nimport chevUp from \"../../assets/v2/settings/paymentModes/chevUp.svg\";\nimport chevDown from \"../../assets/v2/settings/paymentModes/chevDown.svg\";\nimport paypalIcon from \"../../assets/images/payments/pp.svg\";\nimport rzPaylIcon from \"../../assets/images/payments/rp.svg\";\nimport stripeIcon from \"../../assets/images/payments/sp.svg\";\nimport cashFreeIcon from \"../../assets/images/payments/cf.svg\";\nimport cx from 'classnames';\nimport styles from \"./Accordion.module.css\";\n\nfunction Accordion({\n  children,\n  label,\n  name,\n  isActive\n}) {\n  _s();\n\n  const [show, toggleShow] = useToggle(true);\n\n  const getIcon = () => {\n    if (name === 'paypal') {\n      return paypalIcon;\n    }\n\n    if (name === 'razorpay') {\n      return rzPaylIcon;\n    }\n\n    if (name === 'stripe') {\n      return stripeIcon;\n    }\n\n    if (name === 'cashfree') {\n      return cashFreeIcon;\n    }\n\n    return '';\n  };\n\n  const chevIcon = show ? chevUp : chevDown;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.head, {\n      [styles.bigPad]: !getIcon(),\n      [styles.noBottomBorder]: show\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.label,\n    onClick: toggleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, getIcon() && /*#__PURE__*/React.createElement(\"img\", {\n    src: getIcon(),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }), label), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.status, {\n      [styles.inactive]: !isActive\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, isActive ? 'Active' : 'Inactive'), /*#__PURE__*/React.createElement(\"img\", {\n    onClick: toggleShow,\n    src: chevIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }))), show && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, children));\n}\n\n_s(Accordion, \"ehkuBKlDGaOl7QbDaxjHpHdMYXU=\", false, function () {\n  return [useToggle];\n});\n\n_c = Accordion;\nAccordion.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node.isRequired, PropTypes.arrayOf(PropTypes.node).isRequired]).isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  isActive: PropTypes.bool\n};\nAccordion.defaultProps = {\n  name: '',\n  isActive: false\n};\nexport default Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/payments/Accordion.jsx"],"names":["React","useToggle","PropTypes","cx","styles","Accordion","children","label","name","isActive","show","toggleShow","getIcon","paypalIcon","rzPaylIcon","stripeIcon","cashFreeIcon","chevIcon","chevUp","chevDown","main","head","bigPad","noBottomBorder","status","inactive","body","propTypes","oneOfType","node","isRequired","arrayOf","string","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useToggle } from 'hooks/common';\nimport PropTypes from 'prop-types';\nimport chevUp from 'assets/v2/settings/paymentModes/chevUp.svg';\nimport chevDown from 'assets/v2/settings/paymentModes/chevDown.svg';\nimport paypalIcon from 'assets/images/payments/pp.svg';\nimport rzPaylIcon from 'assets/images/payments/rp.svg';\nimport stripeIcon from 'assets/images/payments/sp.svg';\nimport cashFreeIcon from 'assets/images/payments/cf.svg';\nimport cx from 'classnames';\nimport styles from './Accordion.module.css';\n\nfunction Accordion({\n  children, label, name, isActive\n}) {\n  const [show, toggleShow] = useToggle(true);\n\n  const getIcon = () => {\n    if (name === 'paypal') {\n      return paypalIcon;\n    }\n    if (name === 'razorpay') {\n      return rzPaylIcon;\n    }\n    if (name === 'stripe') {\n      return stripeIcon;\n    }\n    if (name === 'cashfree') {\n      return cashFreeIcon;\n    }\n    return '';\n  };\n\n  const chevIcon = show ? chevUp : chevDown;\n  return (\n    <div className={styles.main}>\n      <div\n        className={cx(styles.head, {\n          [styles.bigPad]: !getIcon(),\n          [styles.noBottomBorder]: show\n        })}>\n        <div className={styles.label} onClick={toggleShow}>\n          {getIcon() && <img src={getIcon()} alt=\"\" />}\n          {label}\n        </div>\n        <div className=\"flexCenter\">\n          <div className={cx(styles.status, { [styles.inactive]: !isActive })}>\n            {isActive ? 'Active' : 'Inactive'}\n          </div>\n          <img onClick={toggleShow} src={chevIcon} alt=\"\" />\n        </div>\n      </div>\n      {show && (\n        <div className={styles.body}>\n          {children}\n        </div>\n      )}\n    </div>\n  );\n}\n\nAccordion.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node.isRequired,\n    PropTypes.arrayOf(PropTypes.node).isRequired\n  ]).isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  isActive: PropTypes.bool\n};\n\nAccordion.defaultProps = {\n  name: '',\n  isActive: false\n};\n\nexport default Accordion;\n"]},"metadata":{},"sourceType":"module"}