{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/profile/delivery/DeliveryByZoneForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Drawer } from \"../../shared/Drawer\";\nimport { useDesktop } from \"../../../contexts\";\nimport { Clickable } from 'phoenix-components';\nimport cx from 'classnames';\nimport checkedCheckBox from \"../../../assets/images/areasServed/checkedCheckBox.svg\";\nimport uncheckedCheckBox from \"../../../assets/images/areasServed/uncheckedCheckBox.svg\";\nimport checkedIcon from \"../../../assets/images/areasServed/checked.svg\";\nimport uncheckedIcon from \"../../../assets/images/areasServed/unchecked.svg\";\nimport { Button } from 'phoenix-components';\nimport _ from 'lodash';\nimport { SideDrawer } from \"../../shared/SideDrawer\";\nimport styles from \"./DeliveryByZoneForm.module.css\";\nexport function DeliveryByZoneForm({\n  onClose,\n  zones,\n  onSave,\n  selectedZones\n}) {\n  _s();\n\n  const isDesktop = useDesktop();\n  const [activeZones, setActiveZone] = useState(selectedZones);\n  const Component = isDesktop ? SideDrawer : Drawer;\n  const props = !isDesktop ? {\n    title: 'Select Zones',\n    onClose\n  } : {\n    className: styles.desktopContainer,\n    backButton: true,\n    title: 'Select Zones',\n    onClose\n  };\n\n  const checkIsZoneEnabled = id => {\n    const zones = activeZones === null || activeZones === void 0 ? void 0 : activeZones.find(zone => zone._id === id);\n    return _.isEmpty(zones);\n  };\n\n  const onEnable = zoneObj => {\n    if (!_.isEmpty(activeZones === null || activeZones === void 0 ? void 0 : activeZones.find(zone => zone._id === zoneObj._id))) {\n      setActiveZone(activeZones === null || activeZones === void 0 ? void 0 : activeZones.filter(zone => zone._id !== zoneObj._id));\n    } else {\n      setActiveZone(prev => [...prev, zoneObj]);\n    }\n  };\n\n  const enableWholeCountry = countryObj => {\n    var _zones$data, _zones$data$find$regi;\n\n    if (!_.isEmpty(activeZones === null || activeZones === void 0 ? void 0 : activeZones.find(zone => zone._id === countryObj._id))) {\n      setActiveZone(activeZones === null || activeZones === void 0 ? void 0 : activeZones.filter(zone => zone._id !== countryObj._id));\n      return;\n    }\n\n    const filteredZones = (_zones$data = zones.data) === null || _zones$data === void 0 ? void 0 : (_zones$data$find$regi = _zones$data.find(zone => zone._id === countryObj._id).region) === null || _zones$data$find$regi === void 0 ? void 0 : _zones$data$find$regi.reduce((acc, region) => [...acc, region._id], []);\n\n    if ((filteredZones === null || filteredZones === void 0 ? void 0 : filteredZones.length) > 0) {\n      setActiveZone(activeZones.filter(zone => !filteredZones.includes(zone._id)));\n    }\n\n    setActiveZone(prev => [...prev, countryObj]);\n  };\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, zones === null || zones === void 0 ? void 0 : zones.map(obj => {\n      var _obj$region, _obj$region2;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Clickable, {\n        className: cx(styles.flexbetween, styles.green),\n        onClick: () => enableWholeCountry(obj),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, _.capitalize(obj.name), /*#__PURE__*/React.createElement(\"img\", {\n        src: !checkIsZoneEnabled(obj._id) ? checkedIcon : uncheckedIcon,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      })), (obj === null || obj === void 0 ? void 0 : (_obj$region = obj.region) === null || _obj$region === void 0 ? void 0 : _obj$region.length) > 0 && /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.box2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }, obj === null || obj === void 0 ? void 0 : (_obj$region2 = obj.region) === null || _obj$region2 === void 0 ? void 0 : _obj$region2.map(zone => /*#__PURE__*/React.createElement(Clickable, {\n        className: cx(styles.flexStart, styles.paddingTop, styles.f12),\n        onClick: () => {\n          onEnable(zone);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: styles.marginRight,\n        src: !checkIsZoneEnabled(obj._id) ? checkedCheckBox : !checkIsZoneEnabled(zone._id) ? checkedCheckBox : uncheckedCheckBox,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }), zone.name))));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Save\",\n      fullwidth: true,\n      className: styles.saveButton,\n      variant: \"primary\",\n      onClick: () => onSave(activeZones),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }))))\n  );\n}\n\n_s(DeliveryByZoneForm, \"Jar+3PP2NVkUCYwWs+QZMVzxfgc=\", false, function () {\n  return [useDesktop];\n});\n\n_c = DeliveryByZoneForm;\nDeliveryByZoneForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  zones: PropTypes.object.isRequired,\n  onSave: PropTypes.func.isRequired,\n  selectedZones: PropTypes.array.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliveryByZoneForm\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/profile/delivery/DeliveryByZoneForm.jsx"],"names":["React","useState","PropTypes","Drawer","useDesktop","Clickable","cx","Button","_","SideDrawer","styles","DeliveryByZoneForm","onClose","zones","onSave","selectedZones","isDesktop","activeZones","setActiveZone","Component","props","title","className","desktopContainer","backButton","checkIsZoneEnabled","id","find","zone","_id","isEmpty","onEnable","zoneObj","filter","prev","enableWholeCountry","countryObj","filteredZones","data","region","reduce","acc","length","includes","container","map","obj","card","flexbetween","green","capitalize","name","checkedIcon","uncheckedIcon","box2","flexStart","paddingTop","f12","marginRight","checkedCheckBox","uncheckedCheckBox","saveButton","propTypes","func","isRequired","object","array"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Drawer } from 'components/shared/Drawer';\n\nimport { useDesktop } from 'contexts';\n\nimport {\n  Clickable\n} from 'phoenix-components';\nimport cx from 'classnames';\nimport checkedCheckBox from 'assets/images/areasServed/checkedCheckBox.svg';\nimport uncheckedCheckBox from 'assets/images/areasServed/uncheckedCheckBox.svg';\nimport checkedIcon from 'assets/images/areasServed/checked.svg';\nimport uncheckedIcon from 'assets/images/areasServed/unchecked.svg';\nimport { Button } from 'phoenix-components';\nimport _ from 'lodash';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport styles from './DeliveryByZoneForm.module.css';\n\nexport function DeliveryByZoneForm({\n  onClose, zones, onSave, selectedZones\n}) {\n  const isDesktop = useDesktop();\n  const [activeZones, setActiveZone] = useState(selectedZones);\n\n  const Component = isDesktop ? SideDrawer : Drawer;\n  const props = !isDesktop ? {\n    title: 'Select Zones',\n    onClose,\n  } : {\n    className: styles.desktopContainer,\n    backButton: true,\n    title: 'Select Zones',\n    onClose,\n  };\n\n  const checkIsZoneEnabled = (id) => {\n    const zones = activeZones?.find(zone => zone._id === id);\n    return _.isEmpty(zones);\n  };\n\n  const onEnable = (zoneObj) => {\n    if (!_.isEmpty(activeZones?.find(zone => zone._id === zoneObj._id))) {\n      setActiveZone(activeZones?.filter(zone => zone._id !== zoneObj._id));\n    } else {\n      setActiveZone(prev => [...prev, zoneObj]);\n    }\n  };\n\n  const enableWholeCountry = (countryObj) => {\n    if (!_.isEmpty(activeZones?.find(zone => zone._id === countryObj._id))) {\n      setActiveZone(activeZones?.filter(zone => zone._id !== countryObj._id));\n      return;\n    }\n    const filteredZones = zones.data?.find(zone => zone._id === countryObj._id)\n      .region?.reduce((acc, region) => [...acc, region._id], []);\n    if (filteredZones?.length > 0) {\n      setActiveZone(activeZones.filter(zone => !filteredZones.includes(zone._id)));\n    }\n    setActiveZone(prev => [...prev, countryObj]);\n  };\n\n  return (\n  // eslint-disable-next-line react/jsx-props-no-spreading\n    <Component {...props}>\n      <div className={styles.container}>\n        {zones?.map(obj => (\n          <div className={styles.card}>\n            <Clickable\n              className={cx(styles.flexbetween, styles.green)}\n              onClick={() => enableWholeCountry(obj)}>\n              {_.capitalize(obj.name)}\n              <img src={!checkIsZoneEnabled(obj._id) ? checkedIcon : uncheckedIcon} alt=\"\" />\n            </Clickable>\n            {obj?.region?.length > 0 && (\n              <div className={styles.box2}>\n                {obj?.region?.map(zone => (\n                  <Clickable\n                    className={cx(styles.flexStart, styles.paddingTop, styles.f12)}\n                    onClick={() => { onEnable(zone); }}\n                  >\n                    <img\n                      className={styles.marginRight}\n                      src={!checkIsZoneEnabled(obj._id) ? checkedCheckBox\n                        : (!checkIsZoneEnabled(zone._id) ? checkedCheckBox : uncheckedCheckBox)}\n                      alt=\"\" />\n                    {zone.name}\n                  </Clickable>\n                ))}\n              </div>\n            )}\n          </div>\n        ))}\n        <div className={styles.container}>\n          <Button\n            label=\"Save\"\n            fullwidth={true}\n            className={styles.saveButton}\n            variant=\"primary\"\n            onClick={() => onSave(activeZones)} />\n        </div>\n      </div>\n    </Component>\n  );\n}\nDeliveryByZoneForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  zones: PropTypes.object.isRequired,\n  onSave: PropTypes.func.isRequired,\n  selectedZones: PropTypes.array.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}