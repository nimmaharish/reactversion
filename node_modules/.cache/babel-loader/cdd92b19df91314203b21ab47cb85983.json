{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/orders/v2/DigitalShippingCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Clickable } from 'phoenix-components';\nimport chevUp from \"../../../assets/v2/orders/chevUpPrimary.svg\";\nimport chevDown from \"../../../assets/v2/orders/chevDownPrimary.svg\";\nimport uploadIcon from \"../../../assets/images/uploader.svg\";\nimport { FilesUploader } from \"../../common/FilesUploader\";\nimport UploadProduct from \"../../products/UploadProduct.jsx\";\nimport { DeleteAlert } from \"../../shared/DeleteAlert.jsx\";\nimport { useToggle } from \"../../../hooks/common\";\nimport styles from \"./DigitalShippingCard.module.css\";\n\nfunction DigitalShippingCard({\n  digitalProducts,\n  onUpload\n}) {\n  _s();\n\n  const [open, toggleOpen] = useToggle(true);\n  const productLinks = digitalProducts.filter(product => product.type === 'url');\n  const productFiles = digitalProducts.filter(product => product.type === 'file');\n  const isEmpty = productFiles.length === 0 && productLinks.length === 0;\n  const [openForm, toggleOpenForm] = useToggle(false);\n  const [openSendProduct, toggleSendProduct] = useToggle(false);\n  const [links, setLinks] = useState([]);\n\n  const uploadForm = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    onClick: () => toggleOpenForm(!openForm),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.uploadCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.filesUploader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.image,\n    src: uploadIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, \"Upload your file here\"))))), openForm && /*#__PURE__*/React.createElement(UploadProduct, {\n    onBack: () => {\n      toggleOpenForm(!openForm);\n    },\n    onUpload: setLinks,\n    onSave: () => {\n      toggleSendProduct(!openSendProduct);\n    },\n    eitherIsMandatory: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), openSendProduct && /*#__PURE__*/React.createElement(DeleteAlert, {\n    title: \"Your digital product will be sent by mail to the customer and the status of the order will be updated as Delivered.\",\n    primary: \"Confirm\",\n    onCancel: () => {\n      toggleSendProduct(!openSendProduct);\n    },\n    onDelete: () => {\n      onUpload(links);\n      toggleSendProduct(!openSendProduct);\n      toggleOpenForm(!openForm);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    onClick: () => toggleOpen(!open),\n    className: styles.opener,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Shipping Details\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: open ? chevUp : chevDown,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.accordionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, open && productLinks.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Digital Product Link:\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.linkText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, productLinks[0].value)), open && productFiles.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.uploaderContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.uploadFileText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Uploaded file:\"), /*#__PURE__*/React.createElement(FilesUploader, {\n    files: productFiles,\n    accept: \"\",\n    label: \"Uploaded File\",\n    disabled: false,\n    onChange: () => {},\n    isMulti: false,\n    showClose: false,\n    showImg: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })), open && isEmpty && uploadForm()));\n}\n\n_s(DigitalShippingCard, \"UT2gyL1YptuU2dZX3rre5D4h464=\", false, function () {\n  return [useToggle, useToggle, useToggle];\n});\n\n_c = DigitalShippingCard;\nDigitalShippingCard.propTypes = {\n  digitalProducts: PropTypes.array,\n  onUpload: PropTypes.func.isRequired\n};\nDigitalShippingCard.defaultProps = {\n  digitalProducts: []\n};\nexport default DigitalShippingCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DigitalShippingCard\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/orders/v2/DigitalShippingCard.jsx"],"names":["React","useState","PropTypes","Clickable","FilesUploader","UploadProduct","DeleteAlert","useToggle","styles","DigitalShippingCard","digitalProducts","onUpload","open","toggleOpen","productLinks","filter","product","type","productFiles","isEmpty","length","openForm","toggleOpenForm","openSendProduct","toggleSendProduct","links","setLinks","uploadForm","uploadCard","filesUploader","image","uploadIcon","label","container","opener","title","chevUp","chevDown","accordionContainer","linkText","value","uploaderContainer","uploadFileText","propTypes","array","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Clickable } from 'phoenix-components';\n\nimport chevUp from 'assets/v2/orders/chevUpPrimary.svg';\nimport chevDown from 'assets/v2/orders/chevDownPrimary.svg';\nimport uploadIcon from 'assets/images/uploader.svg';\n\nimport { FilesUploader } from 'components/common/FilesUploader';\nimport UploadProduct from 'components/products/UploadProduct.jsx';\nimport { DeleteAlert } from 'components/shared/DeleteAlert.jsx';\n\nimport { useToggle } from 'hooks/common';\n\nimport styles from './DigitalShippingCard.module.css';\n\nfunction DigitalShippingCard({ digitalProducts, onUpload }) {\n  const [open, toggleOpen] = useToggle(true);\n  const productLinks = digitalProducts.filter((product) => product.type === 'url');\n  const productFiles = digitalProducts.filter((product) => product.type === 'file');\n  const isEmpty = productFiles.length === 0 && productLinks.length === 0;\n  const [openForm, toggleOpenForm] = useToggle(false);\n  const [openSendProduct, toggleSendProduct] = useToggle(false);\n  const [links, setLinks] = useState([]);\n\n  const uploadForm = () => (\n    <>\n      <div>\n        <Clickable onClick={() => toggleOpenForm(!openForm)} fullWidth>\n          <div className={styles.uploadCard}>\n            <div className={styles.filesUploader}>\n              <img className={styles.image} src={uploadIcon} alt=\"\" />\n              <div className={styles.label}>\n                Upload your file here\n              </div>\n            </div>\n          </div>\n        </Clickable>\n      </div>\n      {\n        openForm && (\n          <UploadProduct\n            onBack={() => {\n              toggleOpenForm(!openForm);\n            }}\n            onUpload={setLinks}\n            onSave={() => {\n              toggleSendProduct(!openSendProduct);\n            }}\n            eitherIsMandatory={true}\n          />\n        )\n      }\n      {\n        openSendProduct\n        && (\n          <DeleteAlert\n            title=\"Your digital product will be sent by mail to the customer and\n               the status of the order will be updated as Delivered.\"\n            primary=\"Confirm\"\n            onCancel={() => {\n              toggleSendProduct(!openSendProduct);\n            }}\n            onDelete={() => {\n              onUpload(links);\n              toggleSendProduct(!openSendProduct);\n              toggleOpenForm(!openForm);\n            }}\n          />\n        )\n      }\n    </>\n  );\n\n  return (\n    <div className={styles.container}>\n      <Clickable onClick={() => toggleOpen(!open)} className={styles.opener}>\n        <span className={styles.title}>Shipping Details</span>\n        <span className=\"spacer\" />\n        <img src={open ? chevUp : chevDown} alt=\"\" />\n      </Clickable>\n      <div className={styles.accordionContainer}>\n        {open && productLinks.length > 0 && (\n          <div>\n            <p>Digital Product Link:</p>\n            <p className={styles.linkText}>{productLinks[0].value}</p>\n          </div>\n        )}\n        {open && productFiles.length > 0 && (\n          <div className={styles.uploaderContainer}>\n            <p className={styles.uploadFileText}>Uploaded file:</p>\n            <FilesUploader\n              files={productFiles}\n              accept=\"\"\n              label=\"Uploaded File\"\n              disabled={false}\n              onChange={() => { }}\n              isMulti={false}\n              showClose={false}\n              showImg={false}\n            />\n          </div>\n        )}\n        {open && isEmpty && uploadForm()}\n      </div>\n    </div>\n  );\n}\n\nDigitalShippingCard.propTypes = {\n  digitalProducts: PropTypes.array,\n  onUpload: PropTypes.func.isRequired\n};\n\nDigitalShippingCard.defaultProps = {\n  digitalProducts: [],\n};\n\nexport default DigitalShippingCard;\n"]},"metadata":{},"sourceType":"module"}