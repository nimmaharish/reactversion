{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/products/Drawers/ProductPopUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useInfiniteProducts } from \"../../../hooks\";\nimport cx from 'classnames';\nimport { Dialog } from '@material-ui/core';\nimport { Grid, InfiniteLoader } from 'react-virtualized';\nimport { LightBlueTile } from \"../../../components/cards\";\nimport closeIcon from \"../../../assets/images/orders/list/close.svg\"; // import cx from 'classnames';\n// import { SideDrawer } from 'components/shared/SideDrawer';\n\nimport { Button, Clickable } from 'phoenix-components';\nimport emptyProducts from \"../../../assets/overview/products.svg\";\nimport styles from \"../../../components/shared/ProductsDrawer.module.css\";\nimport checkIcon from \"../../../assets/v2/products/checked.svg\";\nimport uncheckIcon from \"../../../assets/v2/products/unchecked.svg\";\nexport default function ProductsPopUp({\n  initial = [],\n  onClose,\n  filters = {},\n  btnText,\n  allowCheck\n}) {\n  _s();\n\n  const [products, setProducts] = useState(initial);\n  const [productList = [], loadMore, hasMore] = useInfiniteProducts(filters);\n  const productSet = new Set(products);\n  const rowCount = hasMore ? 10000 : productList.length;\n\n  const isLoaded = i => !!productList[i];\n\n  const height = window.screen.height - 126 - 16;\n  const cellWidth = (window.screen.width - 32) / 4;\n\n  const tagProduct = product => e => {\n    const id = product._id;\n    e.stopPropagation();\n\n    if (productSet.has(id)) {\n      productSet.delete(id);\n      setProducts([...productSet]);\n      return;\n    }\n\n    productSet.add(id);\n    setProducts([...productSet]);\n  };\n\n  const onSectionRendered = onRowsRendered => ({\n    columnStartIndex,\n    columnStopIndex,\n    rowStartIndex,\n    rowStopIndex\n  }) => {\n    const startIndex = rowStartIndex * 3 + columnStartIndex;\n    const stopIndex = rowStopIndex * 3 + columnStopIndex;\n    onRowsRendered({\n      startIndex,\n      stopIndex\n    });\n  };\n\n  const tagProducts = () => {\n    onClose([...productSet]);\n  };\n\n  useEffect(() => {\n    const container = document.getElementById('resize');\n\n    function handleResize() {\n      if (container) {\n        container.style.height = `${window.innerHeight - 115}px`;\n      }\n    }\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    if (container) {\n      setTimeout(() => {\n        container.scrollTo({\n          top: container.scrollHeight,\n          behavior: 'smooth'\n        });\n      }, 500);\n    }\n  }); // eslint-disable-next-line react/no-multi-comp\n\n  const renderCell = el => {\n    const idx = el.rowIndex * 3 + el.columnIndex;\n\n    if (idx >= productList.length) {\n      return null;\n    }\n\n    const product = productList[idx];\n    const [image] = product.images || [];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: el.key,\n      onClick: tagProduct(product),\n      style: el.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LightBlueTile, {\n      className: styles.block,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.img,\n      style: {\n        backgroundImage: `url(${image === null || image === void 0 ? void 0 : image.url})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.checkBoxContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, allowCheck && /*#__PURE__*/React.createElement(\"img\", {\n      src: productSet.has(product._id) ? checkIcon : uncheckIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, product.title.length > 30 ? `${product.title.slice(0, 30)}...` : product.title)));\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: true,\n    onClose: () => onClose(initial),\n    maxWidth: \"md\",\n    PaperProps: {\n      classes: {\n        root: styles.paper\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.productPopUpContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.icon, 'flexEnd'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    onClick: () => onClose(initial),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: closeIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.overflow,\n    id: \"resize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, (productList === null || productList === void 0 ? void 0 : productList.length) > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InfiniteLoader, {\n    loadMoreRows: loadMore,\n    isRowLoaded: isLoaded,\n    rowCount: rowCount,\n    minimumBatchSize: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, ({\n    onRowsRendered,\n    registerChild\n  }) => /*#__PURE__*/React.createElement(Grid, {\n    onSectionRendered: onSectionRendered(onRowsRendered),\n    ref: registerChild,\n    cellRenderer: renderCell,\n    columnCount: 2,\n    columnWidth: cellWidth,\n    height: height,\n    rowCount: Math.ceil(rowCount / 3),\n    rowHeight: 176,\n    style: {\n      display: 'flex'\n    },\n    width: window.screen.width - 360,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.tagButtonContainerD,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    onClick: tagProducts,\n    label: btnText.length > 0 ? btnText : `Tag ${productSet.size} Products`,\n    className: styles.tagButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.emptyProducts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: emptyProducts,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.emptyProductText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, \"No recently added products\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.tagButtonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, allowCheck && /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    onClick: tagProducts,\n    label: btnText.length > 0 ? btnText : `Tag ${productSet.size} Products`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }))))));\n}\n\n_s(ProductsPopUp, \"Vy/+nu+rz7SZWVFeJmh1yzlzSS8=\", false, function () {\n  return [useInfiniteProducts];\n});\n\n_c = ProductsPopUp;\nProductsPopUp.propTypes = {\n  initial: PropTypes.array,\n  onClose: PropTypes.func.isRequired,\n  filters: PropTypes.object,\n  btnText: PropTypes.string,\n  allowCheck: PropTypes.bool\n};\nProductsPopUp.defaultProps = {\n  filters: {},\n  initial: [],\n  btnText: '',\n  allowCheck: true\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsPopUp\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/products/Drawers/ProductPopUp.jsx"],"names":["React","useState","useEffect","PropTypes","useInfiniteProducts","cx","Dialog","Grid","InfiniteLoader","LightBlueTile","Button","Clickable","styles","ProductsPopUp","initial","onClose","filters","btnText","allowCheck","products","setProducts","productList","loadMore","hasMore","productSet","Set","rowCount","length","isLoaded","i","height","window","screen","cellWidth","width","tagProduct","product","e","id","_id","stopPropagation","has","delete","add","onSectionRendered","onRowsRendered","columnStartIndex","columnStopIndex","rowStartIndex","rowStopIndex","startIndex","stopIndex","tagProducts","container","document","getElementById","handleResize","style","innerHeight","addEventListener","setTimeout","scrollTo","top","scrollHeight","behavior","renderCell","el","idx","rowIndex","columnIndex","image","images","key","block","img","backgroundImage","url","checkBoxContainer","checkIcon","uncheckIcon","title","slice","classes","root","paper","productPopUpContainer","icon","closeIcon","overflow","registerChild","Math","ceil","display","tagButtonContainerD","size","tagButton","emptyProducts","emptyProductText","tagButtonContainer","propTypes","array","func","isRequired","object","string","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useInfiniteProducts } from 'hooks';\nimport cx from 'classnames';\nimport {\n  Dialog\n} from '@material-ui/core';\nimport { Grid, InfiniteLoader } from 'react-virtualized';\nimport { LightBlueTile } from 'components/cards';\nimport closeIcon from 'assets/images/orders/list/close.svg';\n// import cx from 'classnames';\n// import { SideDrawer } from 'components/shared/SideDrawer';\nimport { Button, Clickable } from 'phoenix-components';\nimport emptyProducts from 'assets/overview/products.svg';\nimport styles from 'components/shared/ProductsDrawer.module.css';\nimport checkIcon from 'assets/v2/products/checked.svg';\nimport uncheckIcon from 'assets/v2/products/unchecked.svg';\n\nexport default function ProductsPopUp({\n  initial = [],\n  onClose,\n  filters = {},\n  btnText,\n  allowCheck,\n}) {\n  const [products, setProducts] = useState(initial);\n  const [productList = [], loadMore, hasMore] = useInfiniteProducts(filters);\n  const productSet = new Set(products);\n  const rowCount = hasMore ? 10000 : productList.length;\n  const isLoaded = i => !!productList[i];\n\n  const height = window.screen.height - 126 - 16;\n  const cellWidth = (window.screen.width - 32) / 4;\n\n  const tagProduct = product => e => {\n    const id = product._id;\n    e.stopPropagation();\n    if (productSet.has(id)) {\n      productSet.delete(id);\n      setProducts([...productSet]);\n      return;\n    }\n    productSet.add(id);\n    setProducts([...productSet]);\n  };\n\n  const onSectionRendered = (onRowsRendered) => ({\n    columnStartIndex,\n    columnStopIndex,\n    rowStartIndex,\n    rowStopIndex\n  }) => {\n    const startIndex = rowStartIndex * 3 + columnStartIndex;\n    const stopIndex = rowStopIndex * 3 + columnStopIndex;\n\n    onRowsRendered({\n      startIndex,\n      stopIndex\n    });\n  };\n\n  const tagProducts = () => {\n    onClose([...productSet]);\n  };\n\n  useEffect(() => {\n    const container = document.getElementById('resize');\n    function handleResize() {\n      if (container) {\n        container.style.height = `${window.innerHeight - 115}px`;\n      }\n    }\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    if (container) {\n      setTimeout(() => {\n        container.scrollTo({\n          top: container.scrollHeight,\n          behavior: 'smooth'\n        });\n      }, 500);\n    }\n  });\n\n  // eslint-disable-next-line react/no-multi-comp\n  const renderCell = (el) => {\n    const idx = el.rowIndex * 3 + el.columnIndex;\n    if (idx >= productList.length) {\n      return null;\n    }\n    const product = productList[idx];\n    const [image] = product.images || [];\n\n    return (\n      <div key={el.key} onClick={tagProduct(product)} style={el.style}>\n        <LightBlueTile className={styles.block}>\n          <div className={styles.img} style={{ backgroundImage: `url(${image?.url})` }}>\n            <div className={styles.checkBoxContainer}>\n              {allowCheck && (\n                <img src={productSet.has(product._id) ? checkIcon : uncheckIcon} alt=\"\" />\n              )}\n            </div>\n          </div>\n          <div\n            className={styles.title}\n          >\n            {product.title.length > 30 ? `${product.title.slice(0, 30)}...` : product.title}\n          </div>\n        </LightBlueTile>\n      </div>\n    );\n  };\n\n  return (\n    <Dialog\n      open={true}\n      onClose={() => onClose(initial)}\n      maxWidth=\"md\"\n      PaperProps={{\n        classes: {\n          root: styles.paper,\n        }\n      }}\n    >\n      <div className={styles.productPopUpContainer}>\n        <div className={cx(styles.icon, 'flexEnd')}>\n          <Clickable\n            onClick={() => onClose(initial)}>\n            <img src={closeIcon} alt=\"\" />\n          </Clickable>\n        </div>\n        <div className={styles.overflow} id=\"resize\">\n          {productList?.length > 0 ? (\n            <>\n              <InfiniteLoader\n                loadMoreRows={loadMore}\n                isRowLoaded={isLoaded}\n                rowCount={rowCount}\n                minimumBatchSize={10}\n              >\n                {({\n                  onRowsRendered,\n                  registerChild\n                }) => (\n                  <Grid\n                    onSectionRendered={onSectionRendered(onRowsRendered)}\n                    ref={registerChild}\n                    cellRenderer={renderCell}\n                    columnCount={2}\n                    columnWidth={cellWidth}\n                    height={height}\n                    rowCount={Math.ceil(rowCount / 3)}\n                    rowHeight={176}\n                    style={{ display: 'flex' }}\n                    width={window.screen.width - 360}\n                  />\n                )}\n              </InfiniteLoader>\n              <div className={styles.tagButtonContainerD}>\n                <Button\n                  size=\"large\"\n                  onClick={tagProducts}\n                  label={btnText.length > 0 ? btnText : `Tag ${productSet.size} Products`}\n                  className={styles.tagButton}\n                />\n              </div>\n            </>\n          ) : (\n            <>\n              <div className={styles.emptyProducts}>\n                <img src={emptyProducts} alt=\"\" />\n                <div className={styles.emptyProductText}>\n                  No recently added products\n                </div>\n              </div>\n              <div className={styles.tagButtonContainer}>\n                {allowCheck && (\n                  <Button\n                    size=\"large\"\n                    onClick={tagProducts}\n                    label={btnText.length > 0 ? btnText : `Tag ${productSet.size} Products`}\n                  />\n                )}\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </Dialog>\n  );\n}\n\nProductsPopUp.propTypes = {\n  initial: PropTypes.array,\n  onClose: PropTypes.func.isRequired,\n  filters: PropTypes.object,\n  btnText: PropTypes.string,\n  allowCheck: PropTypes.bool,\n};\n\nProductsPopUp.defaultProps = {\n  filters: {},\n  initial: [],\n  btnText: '',\n  allowCheck: true,\n};\n"]},"metadata":{},"sourceType":"module"}