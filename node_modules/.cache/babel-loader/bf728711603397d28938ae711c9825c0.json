{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Loader from \"../services/loader\";\nimport { Becca, Factory } from \"../api\";\nimport Snackbar from \"../services/snackbar\";\nexport function useInfiniteRatings(id, sorts = {}) {\n  _s();\n\n  const [ratings, setRatings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n\n  const loadMore = async ({\n    stopIndex = 10\n  } = {}) => {\n    if (loading) {\n      return;\n    }\n\n    const newPage = Math.floor(stopIndex / 10);\n\n    if (newPage <= page) {\n      return;\n    }\n\n    if (!hasMore) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      if (page === 0) {\n        Loader.show();\n      }\n\n      const data = await Becca.getSkuRatings(id, page, sorts);\n      setRatings([...ratings, ...data]);\n\n      if (data.length === 0) {\n        setHasMore(false);\n      }\n\n      setPage(page + 1);\n    } catch (e) {\n      console.error(e);\n      Snackbar.show('Error Occurred', 'error');\n    } finally {\n      Loader.hide();\n      setLoading(false);\n    }\n  };\n\n  const refresh = async () => {\n    try {\n      setLoading(true);\n      const data = await Becca.getSkuRatings(id, 0, sorts);\n      setRatings([...data]);\n      setPage(1);\n      setHasMore(true);\n      setLoading(false);\n    } catch (e) {\n      console.error(e);\n      Snackbar.show('Error Occurred', 'error');\n    }\n  };\n\n  useEffect(() => {\n    refresh();\n  }, [JSON.stringify(sorts)]);\n  return [ratings, loadMore, hasMore, loading, refresh];\n}\n\n_s(useInfiniteRatings, \"6fma3sPg8Y4V/4qfdYUR2855J/M=\");\n\nexport function useOrdersInfiniteRatings(sorts = {}) {\n  _s2();\n\n  const [ratings, setRatings] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n\n  const loadMore = async ({\n    stopIndex = 10\n  } = {}) => {\n    if (loading) {\n      return;\n    }\n\n    const newPage = Math.floor(stopIndex / 10);\n\n    if (newPage <= page) {\n      return;\n    }\n\n    if (!hasMore) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      if (page === 0) {\n        Loader.show();\n      }\n\n      const data = await Factory.getShopRatings(page, sorts);\n      setRatings([...ratings, ...data]);\n\n      if (data.length === 0) {\n        setHasMore(false);\n      }\n\n      setPage(page + 1);\n    } catch (e) {\n      console.error(e);\n      Snackbar.show('Error Occurred', 'error');\n    } finally {\n      Loader.hide();\n      setLoading(false);\n    }\n  };\n\n  const refresh = async () => {\n    try {\n      setLoading(true);\n      const data = await Factory.getShopRatings(0, sorts);\n      setRatings([...data]);\n      setPage(1);\n      setHasMore(true);\n      setLoading(false);\n    } catch (e) {\n      console.error(e);\n      Snackbar.show('Error Occurred', 'error');\n    }\n  };\n\n  useEffect(() => {\n    refresh();\n  }, [JSON.stringify(sorts)]);\n  return [ratings, loadMore, hasMore, loading, refresh];\n}\n\n_s2(useOrdersInfiniteRatings, \"g38acxQukpHta2/7lEtw2ayBBW8=\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/hooks/ratings.js"],"names":["useEffect","useState","Loader","Becca","Factory","Snackbar","useInfiniteRatings","id","sorts","ratings","setRatings","loading","setLoading","page","setPage","hasMore","setHasMore","loadMore","stopIndex","newPage","Math","floor","show","data","getSkuRatings","length","e","console","error","hide","refresh","JSON","stringify","useOrdersInfiniteRatings","getShopRatings"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport Loader from 'services/loader';\nimport { Becca, Factory } from 'api';\nimport Snackbar from 'services/snackbar';\n\nexport function useInfiniteRatings(id, sorts = {}) {\n  const [ratings, setRatings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n\n  const loadMore = async ({ stopIndex = 10 } = {}) => {\n    if (loading) {\n      return;\n    }\n    const newPage = Math.floor(stopIndex / 10);\n    if (newPage <= page) {\n      return;\n    }\n    if (!hasMore) {\n      return;\n    }\n    try {\n      setLoading(true);\n      if (page === 0) {\n        Loader.show();\n      }\n      const data = await Becca.getSkuRatings(id, page, sorts);\n      setRatings([...ratings, ...data]);\n      if (data.length === 0) {\n        setHasMore(false);\n      }\n      setPage(page + 1);\n    } catch (e) {\n      console.error(e);\n      Snackbar.show('Error Occurred', 'error');\n    } finally {\n      Loader.hide();\n      setLoading(false);\n    }\n  };\n\n  const refresh = async () => {\n    try {\n      setLoading(true);\n      const data = await Becca.getSkuRatings(id, 0, sorts);\n      setRatings([...data]);\n      setPage(1);\n      setHasMore(true);\n      setLoading(false);\n    } catch (e) {\n      console.error(e);\n      Snackbar.show('Error Occurred', 'error');\n    }\n  };\n\n  useEffect(() => {\n    refresh();\n  }, [JSON.stringify(sorts)]);\n\n  return [ratings, loadMore, hasMore, loading, refresh];\n}\n\nexport function useOrdersInfiniteRatings(sorts = {}) {\n  const [ratings, setRatings] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n\n  const loadMore = async ({ stopIndex = 10 } = {}) => {\n    if (loading) {\n      return;\n    }\n    const newPage = Math.floor(stopIndex / 10);\n    if (newPage <= page) {\n      return;\n    }\n    if (!hasMore) {\n      return;\n    }\n    try {\n      setLoading(true);\n      if (page === 0) {\n        Loader.show();\n      }\n      const data = await Factory.getShopRatings(page, sorts);\n      setRatings([...ratings, ...data]);\n      if (data.length === 0) {\n        setHasMore(false);\n      }\n      setPage(page + 1);\n    } catch (e) {\n      console.error(e);\n      Snackbar.show('Error Occurred', 'error');\n    } finally {\n      Loader.hide();\n      setLoading(false);\n    }\n  };\n\n  const refresh = async () => {\n    try {\n      setLoading(true);\n      const data = await Factory.getShopRatings(0, sorts);\n      setRatings([...data]);\n      setPage(1);\n      setHasMore(true);\n      setLoading(false);\n    } catch (e) {\n      console.error(e);\n      Snackbar.show('Error Occurred', 'error');\n    }\n  };\n\n  useEffect(() => {\n    refresh();\n  }, [JSON.stringify(sorts)]);\n\n  return [ratings, loadMore, hasMore, loading, refresh];\n}\n"]},"metadata":{},"sourceType":"module"}