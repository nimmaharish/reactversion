{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/shared/SnackBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { SnackBar as SB } from 'phoenix-components';\nimport { setCallbacks } from \"../../services/snackbar\";\nimport styles from \"./SnackBar.module.css\";\n\nfunction SnackBar() {\n  _s();\n\n  const [data, setData] = useState(null);\n  let timer = null;\n\n  function setMessage(msg, sev, timeout = 4000) {\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    setData({\n      severity: sev,\n      message: msg\n    });\n    timer = setTimeout(() => {\n      setData(null);\n    }, timeout);\n  }\n\n  function clearMessage() {\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    setData(null);\n  }\n\n  useEffect(() => {\n    setCallbacks(setMessage, clearMessage);\n  }, [setData]);\n\n  if (!data) {\n    return null;\n  }\n\n  const {\n    message,\n    severity\n  } = data;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SB, {\n    type: severity,\n    onClose: clearMessage,\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(SnackBar, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c = SnackBar;\nexport default SnackBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SnackBar\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/shared/SnackBar.jsx"],"names":["React","useEffect","useState","SnackBar","SB","setCallbacks","styles","data","setData","timer","setMessage","msg","sev","timeout","clearTimeout","severity","message","setTimeout","clearMessage","root"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAQ,IAAIC,EAArB,QAA+B,oBAA/B;AACA,SAASC,YAAT;AACA,OAAOC,MAAP;;AAEA,SAASH,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AAEA,MAAIO,KAAK,GAAG,IAAZ;;AAEA,WAASC,UAAT,CAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,OAAO,GAAG,IAAxC,EAA8C;AAC5C,QAAIJ,KAAJ,EAAW;AACTK,MAAAA,YAAY,CAACL,KAAD,CAAZ;AACD;;AAEDD,IAAAA,OAAO,CAAC;AAAEO,MAAAA,QAAQ,EAAEH,GAAZ;AAAiBI,MAAAA,OAAO,EAAEL;AAA1B,KAAD,CAAP;AACAF,IAAAA,KAAK,GAAGQ,UAAU,CAAC,MAAM;AACvBT,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAFiB,EAEfK,OAFe,CAAlB;AAGD;;AAED,WAASK,YAAT,GAAwB;AACtB,QAAIT,KAAJ,EAAW;AACTK,MAAAA,YAAY,CAACL,KAAD,CAAZ;AACD;;AACDD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AAEDP,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY,CAACK,UAAD,EAAaQ,YAAb,CAAZ;AACD,GAFQ,EAEN,CAACV,OAAD,CAFM,CAAT;;AAIA,MAAI,CAACD,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,QAAM;AAAES,IAAAA,OAAF;AAAWD,IAAAA;AAAX,MAAwBR,IAA9B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAED,MAAM,CAACa,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,EAAD;AACE,IAAA,IAAI,EAAEJ,QADR;AAEE,IAAA,OAAO,EAAEG,YAFX;AAGE,IAAA,OAAO,EAAEF,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AASD;;GA1CQb,Q;;KAAAA,Q;AA4CT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { SnackBar as SB } from 'phoenix-components';\nimport { setCallbacks } from 'services/snackbar';\nimport styles from './SnackBar.module.css';\n\nfunction SnackBar() {\n  const [data, setData] = useState(null);\n\n  let timer = null;\n\n  function setMessage(msg, sev, timeout = 4000) {\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    setData({ severity: sev, message: msg });\n    timer = setTimeout(() => {\n      setData(null);\n    }, timeout);\n  }\n\n  function clearMessage() {\n    if (timer) {\n      clearTimeout(timer);\n    }\n    setData(null);\n  }\n\n  useEffect(() => {\n    setCallbacks(setMessage, clearMessage);\n  }, [setData]);\n\n  if (!data) {\n    return null;\n  }\n\n  const { message, severity } = data;\n\n  return (\n    <div className={styles.root}>\n      <SB\n        type={severity}\n        onClose={clearMessage}\n        message={message}\n      />\n    </div>\n  );\n}\n\nexport default SnackBar;\n"]},"metadata":{},"sourceType":"module"}