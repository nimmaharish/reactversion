{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/payments/ActiveModes.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { usePaymentRules } from \"../../contexts/userContext\";\nimport { useShop } from \"../../contexts/userContext\";\nimport cx from 'classnames';\nimport { get } from 'lodash';\nimport checkIcon from \"../../assets/images/payments/check.svg\";\nimport Accordion from \"./Accordion\";\nimport styles from \"./ActiveModes.module.css\";\nexport function ActiveModes() {\n  _s();\n\n  const paymentRules = usePaymentRules(true);\n  const onlineModes = paymentRules.filter(x => x.type === 'online');\n  const customPaymentModes = paymentRules.filter(x => x.type === 'customPayment');\n  const codModes = paymentRules.filter(x => x.type === 'cod');\n  const shop = useShop();\n\n  const getFeeTypeText = data => {\n    const {\n      feeType\n    } = data;\n\n    if (feeType === 'additional') {\n      return 'Additional Fee';\n    }\n\n    return 'Discount';\n  };\n\n  const isPercentage = data => get(data, 'advanced.type', '') === 'percentage';\n\n  const getText = data => {\n    if (isPercentage(data)) {\n      return `${data.advanced.value ? `${data.advanced.value} %` : 'Not Set'}`;\n    }\n\n    return `${data.advanced.value ? `${shop === null || shop === void 0 ? void 0 : shop.currency} ${data.advanced.value}` : 'Not Set'}`;\n  };\n\n  const getAccordionBody = x => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.codOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.lWidth50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.codHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Min order value\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.codPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, `${x.cartValue.min ? `${shop === null || shop === void 0 ? void 0 : shop.currency} ${x.cartValue.min}` : 'Not Set'}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.lineVertical,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.rWidth50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.codHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Max order value\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.codPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, `${x.cartValue.max ? `${shop === null || shop === void 0 ? void 0 : shop.currency} ${x.cartValue.max}` : 'Not Set'}`))), x.enabled && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.configOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexStart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.feeType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, getFeeTypeText(x.advanced)), /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.check,\n    src: checkIcon,\n    alt: \"rules\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, x.advanced.type), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.codOptions, styles.noBorder),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.lWidth50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.codHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, isPercentage(x) ? 'Percentage Value' : 'Amount'), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.codPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, getText(x))), isPercentage(x) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.lineVertical,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.rWidth50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.codHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, \"Maximum amount \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.codPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, `${x.advanced.maxValue ? `${shop === null || shop === void 0 ? void 0 : shop.currency} ${x.advanced.maxValue}` : 'Not Set'}`))))));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, onlineModes.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.head,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Online Payments\"), onlineModes.map(x => /*#__PURE__*/React.createElement(Accordion, {\n    name: x.value,\n    label: x.name,\n    isActive: x.paymentEnabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, getAccordionBody(x)))), customPaymentModes.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.head,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Custom Payments\"), customPaymentModes.map(x => /*#__PURE__*/React.createElement(Accordion, {\n    name: x.value,\n    label: x.name,\n    isActive: x.paymentEnabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.smallHead,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, \"Payment Details:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.details2,\n    dangerouslySetInnerHTML: {\n      __html: x === null || x === void 0 ? void 0 : x.details\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }), getAccordionBody(x)))), codModes.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.head,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"Cash\"), codModes.map(x => /*#__PURE__*/React.createElement(Accordion, {\n    name: x.value,\n    label: x.name,\n    isActive: x.paymentEnabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, getAccordionBody(x)))));\n}\n\n_s(ActiveModes, \"oQ+BBypE1HVjuXS84j6P0BWhon8=\", false, function () {\n  return [usePaymentRules, useShop];\n});\n\n_c = ActiveModes;\nActiveModes.propTypes = {};\nActiveModes.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveModes\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/payments/ActiveModes.jsx"],"names":["React","usePaymentRules","useShop","cx","get","Accordion","styles","ActiveModes","paymentRules","onlineModes","filter","x","type","customPaymentModes","codModes","shop","getFeeTypeText","data","feeType","isPercentage","getText","advanced","value","currency","getAccordionBody","codOptions","lWidth50","codHeading","codPrice","cartValue","min","lineVertical","rWidth50","max","enabled","configOptions","check","checkIcon","noBorder","maxValue","container","length","card","head","map","name","paymentEnabled","smallHead","details2","__html","details","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  usePaymentRules\n} from 'contexts/userContext';\nimport {\n  useShop\n} from 'contexts/userContext';\nimport cx from 'classnames';\nimport { get } from 'lodash';\nimport checkIcon from 'assets/images/payments/check.svg';\nimport Accordion from './Accordion';\nimport styles from './ActiveModes.module.css';\n\nexport function ActiveModes() {\n  const paymentRules = usePaymentRules(true);\n  const onlineModes = paymentRules.filter(x => x.type === 'online');\n  const customPaymentModes = paymentRules.filter(x => x.type === 'customPayment');\n  const codModes = paymentRules.filter(x => x.type === 'cod');\n  const shop = useShop();\n\n  const getFeeTypeText = (data) => {\n    const { feeType } = data;\n    if (feeType === 'additional') {\n      return 'Additional Fee';\n    }\n    return 'Discount';\n  };\n\n  const isPercentage = (data) => get(data, 'advanced.type', '') === 'percentage';\n\n  const getText = (data) => {\n    if (isPercentage(data)) {\n      return `${data.advanced.value ? `${data.advanced.value} %` : 'Not Set'}`;\n    }\n    return `${data.advanced.value ? `${shop?.currency} ${data.advanced.value}` : 'Not Set'}`;\n  };\n\n  const getAccordionBody = (x) => (\n    <>\n      <div className={styles.codOptions}>\n        <div className={styles.lWidth50}>\n          <div className={styles.codHeading}>Min order value</div>\n          <div className={styles.codPrice}>\n            {`${x.cartValue.min ? `${shop?.currency} ${x.cartValue.min}` : 'Not Set'}`}\n          </div>\n        </div>\n        <div className={styles.lineVertical}></div>\n        <div className={styles.rWidth50}>\n          <div className={styles.codHeading}>Max order value</div>\n          <div className={styles.codPrice}>\n            {`${x.cartValue.max ? `${shop?.currency} ${x.cartValue.max}` : 'Not Set'}`}\n          </div>\n        </div>\n      </div>\n      { x.enabled && (\n        <div className={styles.configOptions}>\n          <div className=\"flexStart\">\n            <div className={styles.feeType}>\n              {getFeeTypeText(x.advanced)}\n            </div>\n            <img className={styles.check} src={checkIcon} alt=\"rules\" />\n          </div>\n          <div className={styles.type}>{x.advanced.type}</div>\n          <div className={cx(styles.codOptions, styles.noBorder)}>\n            <div className={styles.lWidth50}>\n              <div className={styles.codHeading}>\n                {isPercentage(x) ? 'Percentage Value' : 'Amount'}\n              </div>\n              <div className={styles.codPrice}>\n                {getText(x)}\n              </div>\n            </div>\n            {isPercentage(x) && (\n              <>\n                <div className={styles.lineVertical}></div>\n                <div className={styles.rWidth50}>\n                  <div className={styles.codHeading}>Maximum amount </div>\n                  <div className={styles.codPrice}>\n                    {`${x.advanced.maxValue ? `${shop?.currency} ${x.advanced.maxValue}` : 'Not Set'}`}\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n\n  return (\n    <div className={styles.container}>\n      {onlineModes.length > 0 && (\n        <div className={styles.card}>\n          <div className={styles.head}>\n            Online Payments\n          </div>\n          {onlineModes.map(x => (\n            <Accordion name={x.value} label={x.name} isActive={x.paymentEnabled}>\n              {getAccordionBody(x)}\n            </Accordion>\n          ))}\n        </div>\n      )}\n      {customPaymentModes.length > 0 && (\n        <div className={styles.card}>\n          <div className={styles.head}>\n            Custom Payments\n          </div>\n          {customPaymentModes.map(x => (\n            <Accordion name={x.value} label={x.name} isActive={x.paymentEnabled}>\n              <div className={styles.smallHead}>\n                Payment Details:\n              </div>\n              <div\n                className={styles.details2}\n                dangerouslySetInnerHTML={{ __html: x?.details }}\n              >\n              </div>\n              {getAccordionBody(x)}\n            </Accordion>\n          ))}\n        </div>\n      )}\n      {codModes.length > 0 && (\n        <div className={styles.card}>\n          <div className={styles.head}>\n            Cash\n          </div>\n          {codModes.map(x => (\n            <Accordion name={x.value} label={x.name} isActive={x.paymentEnabled}>\n              {getAccordionBody(x)}\n            </Accordion>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nActiveModes.propTypes = {\n};\n\nActiveModes.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}