{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useSetLanguage } from \"../contexts\";\nimport { Becca } from \"../api\";\nexport function useSyncLanguage(shop, refresh) {\n  _s();\n\n  var _shop$config2;\n\n  const setLanguage = useSetLanguage();\n  useEffect(() => {\n    var _shop$config;\n\n    const lang = localStorage.getItem('language');\n    const shopLang = shop === null || shop === void 0 ? void 0 : (_shop$config = shop.config) === null || _shop$config === void 0 ? void 0 : _shop$config.sellerLang;\n\n    if (!lang && shopLang || lang === 'en' && shopLang !== 'en') {\n      setLanguage(shopLang);\n      return;\n    }\n\n    if (lang && shopLang && lang !== shopLang && lang !== 'en') {\n      const config = shop.config || {};\n      config.sellerLang = lang;\n      Becca.updateShop({\n        config\n      }).then(() => refresh()).catch(console.error);\n    }\n  }, [shop === null || shop === void 0 ? void 0 : (_shop$config2 = shop.config) === null || _shop$config2 === void 0 ? void 0 : _shop$config2.sellerLang]);\n}\n\n_s(useSyncLanguage, \"N7oUmuN2JJGfKUuBCGxGvRMVrnM=\", false, function () {\n  return [useSetLanguage];\n});","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/hooks/lang.js"],"names":["useEffect","useSetLanguage","Becca","useSyncLanguage","shop","refresh","setLanguage","lang","localStorage","getItem","shopLang","config","sellerLang","updateShop","then","catch","console","error"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT;AACA,SAASC,KAAT;AAEA,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,OAA/B,EAAwC;AAAA;;AAAA;;AAC7C,QAAMC,WAAW,GAAGL,cAAc,EAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,UAAMO,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAb;AACA,UAAMC,QAAQ,GAAGN,IAAH,aAAGA,IAAH,uCAAGA,IAAI,CAAEO,MAAT,iDAAG,aAAcC,UAA/B;;AACA,QAAK,CAACL,IAAD,IAASG,QAAV,IAAwBH,IAAI,KAAK,IAAT,IAAiBG,QAAQ,KAAK,IAA1D,EAAiE;AAC/DJ,MAAAA,WAAW,CAACI,QAAD,CAAX;AACA;AACD;;AACD,QAAIH,IAAI,IAAIG,QAAR,IAAoBH,IAAI,KAAKG,QAA7B,IAAyCH,IAAI,KAAK,IAAtD,EAA4D;AAC1D,YAAMI,MAAM,GAAGP,IAAI,CAACO,MAAL,IAAe,EAA9B;AACAA,MAAAA,MAAM,CAACC,UAAP,GAAoBL,IAApB;AACAL,MAAAA,KAAK,CAACW,UAAN,CAAiB;AAAEF,QAAAA;AAAF,OAAjB,EAA6BG,IAA7B,CAAkC,MAAMT,OAAO,EAA/C,EAAmDU,KAAnD,CAAyDC,OAAO,CAACC,KAAjE;AACD;AACF,GAZQ,EAYN,CAACb,IAAD,aAACA,IAAD,wCAACA,IAAI,CAAEO,MAAP,kDAAC,cAAcC,UAAf,CAZM,CAAT;AAaD;;GAhBeT,e;UACMF,c","sourcesContent":["import { useEffect } from 'react';\nimport { useSetLanguage } from 'contexts';\nimport { Becca } from 'api';\n\nexport function useSyncLanguage(shop, refresh) {\n  const setLanguage = useSetLanguage();\n\n  useEffect(() => {\n    const lang = localStorage.getItem('language');\n    const shopLang = shop?.config?.sellerLang;\n    if ((!lang && shopLang) || (lang === 'en' && shopLang !== 'en')) {\n      setLanguage(shopLang);\n      return;\n    }\n    if (lang && shopLang && lang !== shopLang && lang !== 'en') {\n      const config = shop.config || {};\n      config.sellerLang = lang;\n      Becca.updateShop({ config }).then(() => refresh()).catch(console.error);\n    }\n  }, [shop?.config?.sellerLang]);\n}\n"]},"metadata":{},"sourceType":"module"}