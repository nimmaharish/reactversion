{"ast":null,"code":"import { connector } from \"./axios\";\n\nasync function getInCartOrders(page = 0, filters = {}, sorts = {}) {\n  const {\n    data\n  } = await connector.get('seller/orders/order/abandoned', {\n    params: {\n      page,\n      filters,\n      sorts\n    }\n  });\n  return data;\n}\n\nasync function getOrders(page = 0, filters = {}, sorts = {}) {\n  const {\n    data\n  } = await connector.get('seller/orders', {\n    params: {\n      page,\n      filters,\n      sorts\n    }\n  });\n  return data;\n}\n\nasync function getChatRooms(page) {\n  const {\n    data\n  } = await connector.get(`seller/orders/chat/rooms?page=${page}`);\n  return data;\n}\n\nasync function getOrder(id) {\n  const {\n    data\n  } = await connector.get(`seller/orders/${id}`);\n  return data;\n}\n\nasync function addCharge(id, payload) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/addCustomizationCharges`, payload);\n  return data;\n}\n\nasync function confirm(id, payload) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/confirm`, payload);\n  return data;\n}\n\nasync function deliver(id, grpId) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/${grpId}/delivered`);\n  return data;\n}\n\nasync function outForDelivery(id, grpId) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/${grpId}/outfordelivery`);\n  return data;\n}\n\nasync function picked(id, grpId) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/${grpId}/picked`);\n  return data;\n}\n\nasync function cancelOrder(id) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/cancel`);\n  return data;\n}\n\nasync function shipOrder(id, grpid, payload) {\n  const {\n    data\n  } = await connector.post(`seller/orders/shipping/v2/${id}/ship/${grpid}`, payload);\n  return data;\n}\n\nasync function getIndiaPricing(id, payload) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/ship/pricing`, payload);\n  return data;\n}\n\nasync function getLabel(id, grpId) {\n  return connector.get(`seller/orders/${id}/${grpId}/label`, {\n    responseType: 'blob'\n  });\n}\n\nasync function sendEmailLabel(id, grpId) {\n  return connector.post(`seller/orders/${id}/${grpId}/label/email`);\n}\n\nasync function trackOrder(id) {\n  const {\n    data\n  } = await connector.get(`seller/orders/${id}/track`);\n  return data;\n}\n\nasync function trackOrderWithGroup(id, grpId) {\n  const {\n    data\n  } = await connector.get(`seller/orders/${id}/${grpId}/track`);\n  return data;\n}\n\nasync function getSettlements(type = '', page, filters, sorts) {\n  if (type === 'all') {\n    const {\n      data\n    } = await connector.get('seller/settlements', {\n      params: {\n        page,\n        filters,\n        sorts: JSON.stringify(sorts)\n      }\n    });\n    return data;\n  }\n\n  const {\n    data\n  } = await connector.get(`seller/settlements/${type}`, {\n    params: {\n      page,\n      filters,\n      sorts: JSON.stringify(sorts)\n    }\n  });\n  return data;\n}\n\nasync function getShippingMeta(id, payload) {\n  const {\n    data\n  } = await connector.post(`seller/orders/shipping/v2/${id}/meta`, payload);\n  return data;\n}\n\nasync function getShippingMetaWithGroup(id, grpId, payload) {\n  const {\n    data\n  } = await connector.post(`seller/orders/shipping/v2/${id}/meta/${grpId}`, payload);\n  return data;\n}\n\nasync function getShippingRates(id, grpid, payload) {\n  const {\n    data\n  } = await connector.post(`seller/orders/shipping/v2/${id}/pricing/${grpid}`, payload);\n  return data;\n}\n\nasync function getPartnerShippingRates(id, grpid, pid, payload) {\n  const {\n    data\n  } = await connector.post(`seller/orders/shipping/v2/${id}/pricing/${grpid}/${pid}`, payload);\n  return data;\n}\n\nasync function getShippingRatesWithGroup(id, grpid, payload) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/${grpid}/ship/pricing`, payload);\n  return data;\n}\n\nasync function createPickup(id, grpId, payload) {\n  const {\n    data\n  } = await connector.post(`seller/orders/shipping/v2/${id}/pickUp/${grpId}`, payload);\n  return data;\n}\n\nasync function getShopRatings(page = 0, sorts = {}) {\n  const {\n    data\n  } = await connector.get('seller/ratings/', {\n    params: {\n      page,\n      sorts\n    }\n  });\n  return data;\n}\n\nasync function updateRating(id, payload) {\n  const {\n    data\n  } = await connector.post(`seller/ratings/${id}`, payload);\n  return data;\n}\n\nasync function createOrder(id, payload) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/ship/createOrder`, payload);\n  return data;\n}\n\nasync function createOrderWithGroup(id, grpId, payload) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/${grpId}/ship/createOrder`, payload);\n  return data;\n}\n\nasync function markAsPaid(id) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/markAsPaid`);\n  return data;\n}\n\nasync function paymentSummary(filters = {}) {\n  const {\n    data\n  } = await connector.get('seller/common/shop/paymentStats', {\n    params: {\n      filters\n    }\n  });\n  return data;\n}\n\nasync function paymentStatusSummary(filters = {}) {\n  const {\n    data\n  } = await connector.get('seller/common/shop/paymentStatusStats', {\n    params: {\n      filters\n    }\n  });\n  return data;\n}\n\nasync function updateStatus(id, statusType, status, items, note, data, media = []) {\n  const {\n    data: response\n  } = await connector.post(`seller/orders/${id}/updateStatus`, {\n    status,\n    statusType,\n    note,\n    data,\n    items,\n    media\n  });\n  return response;\n}\n\nasync function getPaymentLink(orderId) {\n  const {\n    data\n  } = await connector.get(`seller/orders/${orderId}/paymentLink`);\n  return data;\n}\n\nasync function generatePaymentLink({\n  orderId,\n  modes\n}) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${orderId}/generatePaymentLink`, modes);\n  return data;\n}\n\nconst Factory = {\n  markAsPaid,\n  getOrders,\n  getOrder,\n  addCharge,\n  confirm,\n  shipOrder,\n  getLabel,\n  getChatRooms,\n  trackOrder,\n  deliver,\n  picked,\n  outForDelivery,\n  cancelOrder,\n  sendEmailLabel,\n  getSettlements,\n  getShippingMeta,\n  getShippingRates,\n  createPickup,\n  createOrder,\n  getInCartOrders,\n  getShippingRatesWithGroup,\n  getPartnerShippingRates,\n  createOrderWithGroup,\n  getShippingMetaWithGroup,\n  trackOrderWithGroup,\n  getIndiaPricing,\n  paymentSummary,\n  paymentStatusSummary,\n  updateStatus,\n  getShopRatings,\n  updateRating,\n  getPaymentLink,\n  generatePaymentLink\n};\nexport default Factory;","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/api/factory/index.js"],"names":["connector","getInCartOrders","page","filters","sorts","data","get","params","getOrders","getChatRooms","getOrder","id","addCharge","payload","post","confirm","deliver","grpId","outForDelivery","picked","cancelOrder","shipOrder","grpid","getIndiaPricing","getLabel","responseType","sendEmailLabel","trackOrder","trackOrderWithGroup","getSettlements","type","JSON","stringify","getShippingMeta","getShippingMetaWithGroup","getShippingRates","getPartnerShippingRates","pid","getShippingRatesWithGroup","createPickup","getShopRatings","updateRating","createOrder","createOrderWithGroup","markAsPaid","paymentSummary","paymentStatusSummary","updateStatus","statusType","status","items","note","media","response","getPaymentLink","orderId","generatePaymentLink","modes","Factory"],"mappings":"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","sourcesContent":["import { connector } from './axios';\n\nasync function getInCartOrders(page = 0, filters = {}, sorts = {}) {\n  const {\n    data\n  } = await connector.get('seller/orders/order/abandoned', {\n    params: {\n      page,\n      filters,\n      sorts,\n    }\n  });\n  return data;\n}\n\nasync function getOrders(page = 0, filters = {}, sorts = {}) {\n  const {\n    data\n  } = await connector.get('seller/orders', {\n    params: {\n      page,\n      filters,\n      sorts,\n    }\n  });\n  return data;\n}\n\nasync function getChatRooms(page) {\n  const {\n    data\n  } = await connector.get(`seller/orders/chat/rooms?page=${page}`);\n  return data;\n}\n\nasync function getOrder(id) {\n  const {\n    data\n  } = await connector.get(`seller/orders/${id}`);\n  return data;\n}\n\nasync function addCharge(id, payload) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/addCustomizationCharges`, payload);\n  return data;\n}\n\nasync function confirm(id, payload) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/confirm`, payload);\n  return data;\n}\n\nasync function deliver(id, grpId) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/${grpId}/delivered`);\n  return data;\n}\n\nasync function outForDelivery(id, grpId) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/${grpId}/outfordelivery`);\n  return data;\n}\n\nasync function picked(id, grpId) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/${grpId}/picked`);\n  return data;\n}\n\nasync function cancelOrder(id) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/cancel`);\n  return data;\n}\n\nasync function shipOrder(id, grpid, payload) {\n  const {\n    data\n  } = await connector.post(`seller/orders/shipping/v2/${id}/ship/${grpid}`, payload);\n  return data;\n}\n\nasync function getIndiaPricing(id, payload) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/ship/pricing`, payload);\n  return data;\n}\n\nasync function getLabel(id, grpId) {\n  return connector.get(`seller/orders/${id}/${grpId}/label`, {\n    responseType: 'blob'\n  });\n}\n\nasync function sendEmailLabel(id, grpId) {\n  return connector.post(`seller/orders/${id}/${grpId}/label/email`);\n}\n\nasync function trackOrder(id) {\n  const { data } = await connector.get(`seller/orders/${id}/track`);\n  return data;\n}\n\nasync function trackOrderWithGroup(id, grpId) {\n  const { data } = await connector.get(`seller/orders/${id}/${grpId}/track`);\n  return data;\n}\n\nasync function getSettlements(type = '', page, filters, sorts) {\n  if (type === 'all') {\n    const {\n      data\n    } = await connector.get('seller/settlements', {\n      params: {\n        page,\n        filters,\n        sorts: JSON.stringify(sorts)\n      }\n    });\n    return data;\n  }\n  const {\n    data\n  } = await connector.get(`seller/settlements/${type}`, {\n    params: {\n      page,\n      filters,\n      sorts: JSON.stringify(sorts)\n    }\n  });\n  return data;\n}\n\nasync function getShippingMeta(id, payload) {\n  const { data } = await connector.post(`seller/orders/shipping/v2/${id}/meta`, payload);\n  return data;\n}\n\nasync function getShippingMetaWithGroup(id, grpId, payload) {\n  const { data } = await connector.post(`seller/orders/shipping/v2/${id}/meta/${grpId}`, payload);\n  return data;\n}\n\nasync function getShippingRates(id, grpid, payload) {\n  const { data } = await connector.post(`seller/orders/shipping/v2/${id}/pricing/${grpid}`, payload);\n  return data;\n}\n\nasync function getPartnerShippingRates(id, grpid, pid, payload) {\n  const { data } = await connector.post(`seller/orders/shipping/v2/${id}/pricing/${grpid}/${pid}`, payload);\n  return data;\n}\n\nasync function getShippingRatesWithGroup(id, grpid, payload) {\n  const { data } = await connector.post(`seller/orders/${id}/${grpid}/ship/pricing`, payload);\n  return data;\n}\n\nasync function createPickup(id, grpId, payload) {\n  const {\n    data\n  } = await connector.post(`seller/orders/shipping/v2/${id}/pickUp/${grpId}`, payload);\n  return data;\n}\n\nasync function getShopRatings(page = 0, sorts = {}) {\n  const {\n    data\n  } = await connector.get('seller/ratings/', {\n    params: {\n      page,\n      sorts,\n    }\n  });\n  return data;\n}\n\nasync function updateRating(id, payload) {\n  const {\n    data\n  } = await connector.post(`seller/ratings/${id}`, payload);\n  return data;\n}\n\nasync function createOrder(id, payload) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/ship/createOrder`, payload);\n  return data;\n}\n\nasync function createOrderWithGroup(id, grpId, payload) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/${grpId}/ship/createOrder`, payload);\n  return data;\n}\n\nasync function markAsPaid(id) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${id}/markAsPaid`);\n  return data;\n}\n\nasync function paymentSummary(filters = {}) {\n  const {\n    data\n  } = await connector.get('seller/common/shop/paymentStats', {\n    params: {\n      filters,\n    }\n  });\n  return data;\n}\n\nasync function paymentStatusSummary(filters = {}) {\n  const {\n    data\n  } = await connector.get('seller/common/shop/paymentStatusStats', {\n    params: {\n      filters,\n    }\n  });\n  return data;\n}\n\nasync function updateStatus(id, statusType, status, items, note, data, media = []) {\n  const {\n    data: response\n  } = await connector.post(`seller/orders/${id}/updateStatus`, {\n    status,\n    statusType,\n    note,\n    data,\n    items,\n    media\n  });\n  return response;\n}\n\nasync function getPaymentLink(orderId) {\n  const {\n    data\n  } = await connector.get(`seller/orders/${orderId}/paymentLink`);\n  return data;\n}\n\nasync function generatePaymentLink({ orderId, modes }) {\n  const {\n    data\n  } = await connector.post(`seller/orders/${orderId}/generatePaymentLink`, modes);\n  return data;\n}\n\nconst Factory = {\n  markAsPaid,\n  getOrders,\n  getOrder,\n  addCharge,\n  confirm,\n  shipOrder,\n  getLabel,\n  getChatRooms,\n  trackOrder,\n  deliver,\n  picked,\n  outForDelivery,\n  cancelOrder,\n  sendEmailLabel,\n  getSettlements,\n  getShippingMeta,\n  getShippingRates,\n  createPickup,\n  createOrder,\n  getInCartOrders,\n  getShippingRatesWithGroup,\n  getPartnerShippingRates,\n  createOrderWithGroup,\n  getShippingMetaWithGroup,\n  trackOrderWithGroup,\n  getIndiaPricing,\n  paymentSummary,\n  paymentStatusSummary,\n  updateStatus,\n  getShopRatings,\n  updateRating,\n  getPaymentLink,\n  generatePaymentLink\n};\n\nexport default Factory;\n"]},"metadata":{},"sourceType":"module"}