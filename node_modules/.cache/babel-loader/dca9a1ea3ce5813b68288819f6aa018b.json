{"ast":null,"code":"import * as Yup from 'yup';\nconst customPaymentsSchema = Yup.object().shape({\n  mode: Yup.string().required().label('Payment Mode'),\n  details: Yup.string().required().label('Payment Details'),\n  receiptsRequired: Yup.boolean().required(),\n  status: Yup.string().required()\n});\nexport const getInitialValues = (values = {}) => {\n  var _values$online$enable, _values$online, _values$cod$enabled, _values$cod, _values$cod2, _values$cod2$orderVal, _values$cod3, _values$cod3$orderVal, _values$custompayment, _values$custompayment2, _values$custompayment3, _values$custompayment4;\n\n  return {\n    online: { ...((values === null || values === void 0 ? void 0 : values.online) || {}),\n      enabled: (_values$online$enable = values === null || values === void 0 ? void 0 : (_values$online = values.online) === null || _values$online === void 0 ? void 0 : _values$online.enabled) !== null && _values$online$enable !== void 0 ? _values$online$enable : false\n    },\n    cod: {\n      enabled: (_values$cod$enabled = values === null || values === void 0 ? void 0 : (_values$cod = values.cod) === null || _values$cod === void 0 ? void 0 : _values$cod.enabled) !== null && _values$cod$enabled !== void 0 ? _values$cod$enabled : false,\n      orderValue: {\n        min: (values === null || values === void 0 ? void 0 : (_values$cod2 = values.cod) === null || _values$cod2 === void 0 ? void 0 : (_values$cod2$orderVal = _values$cod2.orderValue) === null || _values$cod2$orderVal === void 0 ? void 0 : _values$cod2$orderVal.min) || '',\n        max: (values === null || values === void 0 ? void 0 : (_values$cod3 = values.cod) === null || _values$cod3 === void 0 ? void 0 : (_values$cod3$orderVal = _values$cod3.orderValue) === null || _values$cod3$orderVal === void 0 ? void 0 : _values$cod3$orderVal.max) || ''\n      }\n    },\n    custompayment: {\n      enabled: (_values$custompayment = values === null || values === void 0 ? void 0 : (_values$custompayment2 = values.custompayment) === null || _values$custompayment2 === void 0 ? void 0 : _values$custompayment2.enabled) !== null && _values$custompayment !== void 0 ? _values$custompayment : false,\n      configured: (_values$custompayment3 = values === null || values === void 0 ? void 0 : (_values$custompayment4 = values.custompayment) === null || _values$custompayment4 === void 0 ? void 0 : _values$custompayment4.configured) !== null && _values$custompayment3 !== void 0 ? _values$custompayment3 : []\n    }\n  };\n};\nexport const schema = Yup.object({\n  online: Yup.object({\n    enabled: Yup.bool().required()\n  }),\n  cod: Yup.object({\n    enabled: Yup.bool().required(),\n    orderValue: Yup.object({\n      min: Yup.number().transform(x => +x || 0).min(0).nullable().notRequired().label('Min order value'),\n      max: Yup.number().when('min', {\n        is: value => value && value.length > 0,\n        then: Yup.number().transform(x => +x || 0).min(0).nullable().label('Max order value').notRequired().min(Yup.ref('min'), 'Max order value should be greater than min order value'),\n        otherwise: Yup.number().transform(x => +x || 0).min(0).nullable().label('Max order value').notRequired()\n      })\n    })\n  }),\n  custompayment: Yup.object({\n    enabled: Yup.bool().required(),\n    configured: Yup.array().when('enabled', {\n      is: true,\n      then: Yup.array().of(customPaymentsSchema).required().min(1),\n      otherwise: Yup.array().notRequired().nullable()\n    })\n  })\n});","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/profile/paymentMode/utils.js"],"names":["Yup","customPaymentsSchema","object","shape","mode","string","required","label","details","receiptsRequired","boolean","status","getInitialValues","values","online","enabled","cod","orderValue","min","max","custompayment","configured","schema","bool","number","transform","x","nullable","notRequired","when","is","value","length","then","ref","otherwise","array","of"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\n\nconst customPaymentsSchema = Yup.object().shape({\n  mode: Yup.string().required().label('Payment Mode'),\n  details: Yup.string().required().label('Payment Details'),\n  receiptsRequired: Yup.boolean().required(),\n  status: Yup.string().required(),\n});\n\nexport const getInitialValues = (values = {}) => ({\n  online: {\n    ...values?.online || {},\n    enabled: values?.online?.enabled ?? false,\n  },\n  cod: {\n    enabled: values?.cod?.enabled ?? false,\n    orderValue: {\n      min: values?.cod?.orderValue?.min || '',\n      max: values?.cod?.orderValue?.max || '',\n    },\n  },\n  custompayment: {\n    enabled: values?.custompayment?.enabled ?? false,\n    configured: values?.custompayment?.configured ?? [],\n  },\n});\n\nexport const schema = Yup.object({\n  online: Yup.object({\n    enabled: Yup.bool()\n      .required(),\n  }),\n  cod: Yup.object({\n    enabled: Yup.bool()\n      .required(),\n    orderValue: Yup.object({\n      min: Yup.number()\n        .transform(x => +x || 0)\n        .min(0)\n        .nullable()\n        .notRequired()\n        .label('Min order value'),\n      max: Yup.number()\n        .when('min', {\n          is: (value) => value && value.length > 0,\n          then: Yup.number()\n            .transform(x => +x || 0)\n            .min(0)\n            .nullable()\n            .label('Max order value')\n            .notRequired()\n            .min(Yup.ref('min'), 'Max order value should be greater than min order value'),\n          otherwise: Yup.number()\n            .transform(x => +x || 0)\n            .min(0)\n            .nullable()\n            .label('Max order value')\n            .notRequired()\n        }),\n    })\n  }),\n  custompayment: Yup.object({\n    enabled: Yup.bool()\n      .required(),\n    configured: Yup.array()\n      .when('enabled', {\n        is: true,\n        then: Yup.array().of(customPaymentsSchema).required().min(1),\n        otherwise: Yup.array().notRequired().nullable()\n      })\n  })\n});\n"]},"metadata":{},"sourceType":"module"}