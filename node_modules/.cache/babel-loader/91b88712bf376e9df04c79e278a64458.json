{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/components/orders/v2/PaymentList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useOrder } from \"../../../contexts/orderContext\";\nimport { KeyValue } from \"./KeyValue\";\nimport { Dialog, Grid } from '@material-ui/core';\nimport moment from 'moment';\nimport { Clickable } from 'phoenix-components';\nimport closeIcon from \"../../../assets/v2/orders/close.svg\";\nimport { useToggle } from \"../../../hooks/common\";\nimport chevUpIcon from \"../../../assets/v2/settings/paymentModes/chevUp.svg\";\nimport chevDownIcon from \"../../../assets/v2/settings/paymentModes/chevDown.svg\";\nimport styles from \"./PaymentList.module.css\";\n\nconst getPaymentMode = x => {\n  var _x$metaData$mode, _x$metaData;\n\n  switch (x.mode) {\n    case 'online':\n      return 'Online';\n\n    case 'cod':\n      return 'Cash';\n\n    case 'custompayment':\n      return (_x$metaData$mode = x === null || x === void 0 ? void 0 : (_x$metaData = x.metaData) === null || _x$metaData === void 0 ? void 0 : _x$metaData.mode) !== null && _x$metaData$mode !== void 0 ? _x$metaData$mode : 'Direct Payment';\n\n    default:\n      return 'Pending';\n  }\n};\n\nexport function PaymentList() {\n  _s();\n\n  const order = useOrder();\n  const [image, setImage] = useState(null);\n  const [openPaymentHistory, togglePaymentHistory] = useToggle();\n  const list = ((order === null || order === void 0 ? void 0 : order.paymentList) || []).filter(x => x.mode !== 'cod');\n\n  if (!list.length) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    className: styles.accordionTop,\n    onClick: togglePaymentHistory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Payment History\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: openPaymentHistory ? chevUpIcon : chevDownIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), openPaymentHistory && /*#__PURE__*/React.createElement(React.Fragment, null, list.map(x => {\n    var _x$metaData2, _x$metaData2$receipts, _x$metaData4;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: x._id,\n      className: styles.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(KeyValue, {\n      titleWidth: 6,\n      valueWidth: 6,\n      title: \"Mode\",\n      value: getPaymentMode(x),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(KeyValue, {\n      titleWidth: 6,\n      valueWidth: 6,\n      title: \"Amount\",\n      value: `${order.currency} ${x.amount.toFixed(2)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }), Math.abs(x.pgCharges) > 0 && /*#__PURE__*/React.createElement(KeyValue, {\n      titleWidth: 6,\n      valueWidth: 6,\n      title: \"Payment Gateway Fee\",\n      value: `${x.pgCharges > 0 ? '' : '-'}${order.currency} ${Math.abs(x.pgCharges).toFixed(2)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(KeyValue, {\n      titleWidth: 6,\n      valueWidth: 6,\n      title: \"Payment Date\",\n      value: moment(x.createdAt).format('DD-MMM-YYYY hh:mm A'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), x.mode === 'custompayment' && (x === null || x === void 0 ? void 0 : (_x$metaData2 = x.metaData) === null || _x$metaData2 === void 0 ? void 0 : (_x$metaData2$receipts = _x$metaData2.receipts) === null || _x$metaData2$receipts === void 0 ? void 0 : _x$metaData2$receipts.length) > 0 && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Clickable, {\n      className: \"fullWidth\",\n      onClick: () => {\n        var _x$metaData3;\n\n        return setImage(x === null || x === void 0 ? void 0 : (_x$metaData3 = x.metaData) === null || _x$metaData3 === void 0 ? void 0 : _x$metaData3.receipts);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: styles.icon,\n      src: x === null || x === void 0 ? void 0 : (_x$metaData4 = x.metaData) === null || _x$metaData4 === void 0 ? void 0 : _x$metaData4.receipts,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 23\n      }\n    })))));\n  }), image && /*#__PURE__*/React.createElement(Dialog, {\n    onClose: () => setImage(null),\n    open: Boolean(image),\n    className: styles.dialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, {\n    onClick: () => setImage(null),\n    className: styles.close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: closeIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.full,\n    src: image,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }))));\n}\n\n_s(PaymentList, \"MR32zbaAC3y5mfF11BE37kjh12w=\", false, function () {\n  return [useOrder, useToggle];\n});\n\n_c = PaymentList;\nPaymentList.propTypes = {};\nPaymentList.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentList\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/components/orders/v2/PaymentList.jsx"],"names":["React","useState","useOrder","KeyValue","Dialog","Grid","moment","Clickable","useToggle","styles","getPaymentMode","x","mode","metaData","PaymentList","order","image","setImage","openPaymentHistory","togglePaymentHistory","list","paymentList","filter","length","container","accordionTop","heading","chevUpIcon","chevDownIcon","map","_id","card","currency","amount","toFixed","Math","abs","pgCharges","createdAt","format","receipts","icon","Boolean","dialog","close","closeIcon","full","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useOrder } from 'contexts/orderContext';\nimport { KeyValue } from 'components/orders/v2/KeyValue';\nimport { Dialog, Grid } from '@material-ui/core';\nimport moment from 'moment';\nimport { Clickable } from 'phoenix-components';\nimport closeIcon from 'assets/v2/orders/close.svg';\nimport { useToggle } from 'hooks/common';\nimport chevUpIcon from 'assets/v2/settings/paymentModes/chevUp.svg';\nimport chevDownIcon from 'assets/v2/settings/paymentModes/chevDown.svg';\nimport styles from './PaymentList.module.css';\n\nconst getPaymentMode = (x) => {\n  switch (x.mode) {\n    case 'online':\n      return 'Online';\n    case 'cod':\n      return 'Cash';\n    case 'custompayment':\n      return x?.metaData?.mode ?? 'Direct Payment';\n    default:\n      return 'Pending';\n  }\n};\n\nexport function PaymentList() {\n  const order = useOrder();\n  const [image, setImage] = useState(null);\n  const [openPaymentHistory, togglePaymentHistory] = useToggle();\n\n  const list = (order?.paymentList || []).filter(x => x.mode !== 'cod');\n\n  if (!list.length) {\n    return null;\n  }\n\n  return (\n    <div className={styles.container}>\n      <Clickable className={styles.accordionTop} onClick={togglePaymentHistory}>\n        <div className={styles.heading}>Payment History</div>\n        <img src={openPaymentHistory ? chevUpIcon : chevDownIcon} alt=\"\" />\n      </Clickable>\n      {openPaymentHistory && (\n        <>\n          {list.map(x => (\n            <div key={x._id} className={styles.card}>\n              <Grid container spacing={0}>\n                <KeyValue titleWidth={6} valueWidth={6} title=\"Mode\" value={getPaymentMode(x)} />\n                <KeyValue\n                  titleWidth={6}\n                  valueWidth={6}\n                  title=\"Amount\"\n                  value={`${order.currency} ${x.amount.toFixed(2)}`} />\n                {Math.abs(x.pgCharges) > 0 && (\n                  <KeyValue\n                    titleWidth={6}\n                    valueWidth={6}\n                    title=\"Payment Gateway Fee\"\n                    value={\n                      `${x.pgCharges > 0 ? '' : '-'}${order.currency} ${Math.abs(x.pgCharges)\n                        .toFixed(2)}`\n                    }\n                  />\n                )}\n                <KeyValue\n                  titleWidth={6}\n                  valueWidth={6}\n                  title=\"Payment Date\"\n                  value={moment(x.createdAt)\n                    .format('DD-MMM-YYYY hh:mm A')}\n                />\n                {x.mode === 'custompayment' && x?.metaData?.receipts?.length > 0 && (\n                  <Grid item xs={12}>\n                    <Clickable className=\"fullWidth\" onClick={() => setImage(x?.metaData?.receipts)}>\n                      <img className={styles.icon} src={x?.metaData?.receipts} alt=\"\" />\n                    </Clickable>\n                  </Grid>\n                )}\n              </Grid>\n            </div>\n          ))}\n          {image && (\n            <Dialog\n              onClose={() => setImage(null)}\n              open={Boolean(image)}\n              className={styles.dialog}\n            >\n              <Clickable onClick={() => setImage(null)} className={styles.close}>\n                <img\n                  src={closeIcon}\n                  alt=\"\"\n                />\n              </Clickable>\n              <img className={styles.full} src={image} alt=\"\" />\n            </Dialog>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nPaymentList.propTypes = {};\n\nPaymentList.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}