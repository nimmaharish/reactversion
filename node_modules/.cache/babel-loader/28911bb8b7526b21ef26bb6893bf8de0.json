{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/containers/shippingTime/ShippingTime.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Drawer } from \"../../components/shared/Drawer\";\nimport estimateDelivery from \"../../assets/overview/estimateDelivery.svg\";\nimport { Button, FormikInput } from 'phoenix-components';\nimport { Select } from 'phoenix-components/lib/formik';\nimport { Formik, useField } from 'formik';\nimport { Becca } from \"../../api\";\nimport Loader from \"../../services/loader\";\nimport SnackBar from \"../../services/snackbar\";\nimport PropTypes from 'prop-types';\nimport Header from \"../products/Header\";\nimport { useHistory } from 'react-router-dom';\nimport { useDesktop, useRefreshShop, useShop } from \"../../contexts\";\nimport EventManager from \"../../utils/events\";\nimport { SideDrawer } from \"../../components/shared/SideDrawer\";\nimport { FooterButton } from \"../../components/common/FooterButton\";\nimport styles from \"./ShippingTime.module.css\";\nimport { getInitialValues, schema, typeOptions } from \"./utils\";\n\nfunction ShippingTime({\n  isProduct,\n  onBack\n}) {\n  _s();\n\n  const {\n    delivery: {\n      shippingTime = {}\n    }\n  } = useShop();\n  const history = useHistory();\n  const [{\n    value: updated = {}\n  },, {\n    setValue\n  }] = isProduct ? useField('shippingTime') : [{\n    value: {}\n  }, null, {\n    setValue: null\n  }];\n  const refresh = useRefreshShop();\n  const isDesktop = useDesktop();\n\n  const onSubmit = async values => {\n    try {\n      Loader.show();\n      const {\n        toItemValue,\n        fromItemValue,\n        itemType\n      } = values;\n      const from = {\n        type: itemType,\n        value: fromItemValue\n      };\n      const to = {\n        type: itemType,\n        value: toItemValue\n      };\n\n      if (!isProduct) {\n        await Becca.updateShop({\n          shippingTime: {\n            from,\n            to\n          }\n        });\n        EventManager.emitEvent('shipping_time_added');\n        refresh();\n        SnackBar.show('updated successfully', 'success');\n        history.goBack();\n        return;\n      }\n\n      setValue({\n        from,\n        to\n      });\n\n      if (Object.keys(shippingTime).length === 0) {\n        await Becca.updateShop({\n          shippingTime: {\n            from,\n            to\n          }\n        });\n        refresh();\n      }\n\n      onBack();\n    } catch (e) {\n      SnackBar.showError(e);\n      console.log(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const getInitial = () => {\n    if (isProduct && Object.keys(updated).length > 0) {\n      return getInitialValues(updated);\n    }\n\n    return getInitialValues(shippingTime);\n  };\n\n  if (isDesktop) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: schema,\n      initialValues: getInitial(),\n      onSubmit: onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, ({\n      values,\n      setFieldValue,\n      submitForm\n    }) => /*#__PURE__*/React.createElement(SideDrawer, {\n      backButton: true,\n      title: \"Shipping Time\",\n      onClose: () => history.goBack(),\n      onClick: () => submitForm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.desktopC,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.dtext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"Shipping Time\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.mainContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.formik,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.firstDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      label: \"Min. no. of days/hours to ship\",\n      name: \"fromItemValue\",\n      placeholder: \"Enter Days/Hours\",\n      type: \"number\",\n      inputClass: styles.input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.padding,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, \"Enter the minimum no.of days/hours it takes to get the order ready and ship\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.select,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      label: \"Days/hours\",\n      name: \"itemType\",\n      onChange: val => {\n        setFieldValue('itemType', val.value);\n      },\n      options: typeOptions,\n      value: typeOptions.find(x => x.value === (values === null || values === void 0 ? void 0 : values.itemType)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.formik,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.firstDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormikInput, {\n      label: \"Max. no. of days/hours to ship\",\n      name: \"toItemValue\",\n      placeholder: \"Enter Days/Hours\",\n      type: \"number\",\n      inputClass: styles.input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.padding,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, \"Enter the max no.of days/hours it takes to get the order ready and ship\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.select,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      name: \"itemType\",\n      label: \"Days/hours\",\n      isDisabled: true,\n      onChange: val => {\n        setFieldValue('itemType', val.value);\n      },\n      options: typeOptions,\n      value: typeOptions.find(x => x.value === (values === null || values === void 0 ? void 0 : values.itemType)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.preview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, \"Your Delivery Timeline\", /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.est,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: estimateDelivery,\n      alt: \"\",\n      className: styles.img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }), \"Estimated Delivery Time :\", ' ', values === null || values === void 0 ? void 0 : values.fromItemValue, ' ', \"-\", ' ', values === null || values === void 0 ? void 0 : values.toItemValue, ' ', values === null || values === void 0 ? void 0 : values.itemType))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.buttonD,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Save\",\n      size: \"large\",\n      onClick: submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    title: \"Shipping Timeline\",\n    hideHeader: isProduct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }\n  }, isProduct && /*#__PURE__*/React.createElement(Header, {\n    title: \"Shipping Time\",\n    onBack: onBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    validationSchema: schema,\n    initialValues: getInitial(),\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    setFieldValue,\n    submitForm\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.formik,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.firstDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Min. no. of days/hours to ship\",\n    name: \"fromItemValue\",\n    placeholder: \"Enter Days/Hours\",\n    type: \"number\",\n    inputClass: styles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.padding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  }, \"Enter the minimum no.of days/hours it takes to get the order ready and ship\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.select,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    label: \"Days/hours\",\n    name: \"itemType\",\n    onChange: val => {\n      setFieldValue('itemType', val.value);\n    },\n    options: typeOptions,\n    value: typeOptions.find(x => x.value === (values === null || values === void 0 ? void 0 : values.itemType)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.formik2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.firstDiv1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormikInput, {\n    label: \"Max. no. of days/hours to ship\",\n    name: \"toItemValue\",\n    placeholder: \"Enter Days/Hours\",\n    type: \"number\",\n    inputClass: styles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.padding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 19\n    }\n  }, \"Enter the max no.of days/hours it takes to get the order ready and ship\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.select,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: \"itemType\",\n    label: \"Days/hours\",\n    isDisabled: true,\n    onChange: val => {\n      setFieldValue('itemType', val.value);\n    },\n    options: typeOptions,\n    value: typeOptions.find(x => x.value === (values === null || values === void 0 ? void 0 : values.itemType)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 15\n    }\n  }, \"Your Delivery Timeline\", /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.est,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: estimateDelivery,\n    alt: \"\",\n    className: styles.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 19\n    }\n  }), \"Estimated Delivery Time :\", ' ', values === null || values === void 0 ? void 0 : values.fromItemValue, ' ', \"-\", ' ', values === null || values === void 0 ? void 0 : values.toItemValue, ' ', values === null || values === void 0 ? void 0 : values.itemType)), /*#__PURE__*/React.createElement(FooterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    bordered: false,\n    label: \"Save\",\n    size: \"large\",\n    onClick: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 17\n    }\n  }))))));\n}\n\n_s(ShippingTime, \"CU5W2v/9Ozxce+oG12YfWtECojk=\", false, function () {\n  return [useShop, useHistory, useField, useRefreshShop, useDesktop];\n});\n\n_c = ShippingTime;\nShippingTime.propTypes = {\n  isProduct: PropTypes.bool,\n  onBack: PropTypes.func\n};\nShippingTime.defaultProps = {\n  isProduct: false,\n  onBack: () => {}\n};\nexport default ShippingTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingTime\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/containers/shippingTime/ShippingTime.jsx"],"names":["React","Drawer","Button","FormikInput","Select","Formik","useField","Becca","Loader","SnackBar","PropTypes","Header","useHistory","useDesktop","useRefreshShop","useShop","EventManager","SideDrawer","FooterButton","styles","getInitialValues","schema","typeOptions","ShippingTime","isProduct","onBack","delivery","shippingTime","history","value","updated","setValue","refresh","isDesktop","onSubmit","values","show","toItemValue","fromItemValue","itemType","from","type","to","updateShop","emitEvent","goBack","Object","keys","length","e","showError","console","log","hide","getInitial","setFieldValue","submitForm","desktopC","dtext","mainContainer","container","formik","firstDiv","input","padding","select","val","find","x","preview","est","estimateDelivery","img","buttonD","formik2","firstDiv1","propTypes","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Drawer } from 'components/shared/Drawer';\nimport estimateDelivery from 'assets/overview/estimateDelivery.svg';\nimport { Button, FormikInput } from 'phoenix-components';\nimport { Select } from 'phoenix-components/lib/formik';\nimport { Formik, useField } from 'formik';\nimport { Becca } from 'api';\nimport Loader from 'services/loader';\nimport SnackBar from 'services/snackbar';\nimport PropTypes from 'prop-types';\nimport Header from 'containers/products/Header';\nimport { useHistory } from 'react-router-dom';\nimport { useDesktop, useRefreshShop, useShop } from 'contexts';\nimport EventManager from 'utils/events';\nimport { SideDrawer } from 'components/shared/SideDrawer';\nimport { FooterButton } from 'components/common/FooterButton';\nimport styles from './ShippingTime.module.css';\nimport { getInitialValues, schema, typeOptions } from './utils';\n\nfunction ShippingTime({\n  isProduct,\n  onBack\n}) {\n  const { delivery: { shippingTime = {} } } = useShop();\n  const history = useHistory();\n  const [{ value: updated = {} }, , { setValue }] = isProduct\n    ? useField('shippingTime') : [{ value: {} }, null, { setValue: null }];\n  const refresh = useRefreshShop();\n  const isDesktop = useDesktop();\n\n  const onSubmit = async (values) => {\n    try {\n      Loader.show();\n      const {\n        toItemValue,\n        fromItemValue,\n        itemType\n      } = values;\n      const from = {\n        type: itemType,\n        value: fromItemValue\n      };\n      const to = {\n        type: itemType,\n        value: toItemValue\n      };\n      if (!isProduct) {\n        await Becca.updateShop({\n          shippingTime: {\n            from,\n            to\n          },\n        });\n        EventManager.emitEvent('shipping_time_added');\n        refresh();\n        SnackBar.show('updated successfully', 'success');\n        history.goBack();\n        return;\n      }\n      setValue({\n        from,\n        to\n      });\n      if (Object.keys(shippingTime).length === 0) {\n        await Becca.updateShop({\n          shippingTime: {\n            from,\n            to\n          },\n        });\n        refresh();\n      }\n      onBack();\n    } catch (e) {\n      SnackBar.showError(e);\n      console.log(e);\n    } finally {\n      Loader.hide();\n    }\n  };\n\n  const getInitial = () => {\n    if (isProduct && Object.keys(updated).length > 0) {\n      return getInitialValues(updated);\n    }\n    return getInitialValues(shippingTime);\n  };\n\n  if (isDesktop) {\n    return (\n      <>\n        <Formik\n          validationSchema={schema}\n          initialValues={getInitial()}\n          onSubmit={onSubmit}\n        >\n          {({\n            values,\n            setFieldValue,\n            submitForm\n          }) => (\n            <SideDrawer\n              backButton={true}\n              title=\"Shipping Time\"\n              onClose={() => history.goBack()}\n              onClick={() => submitForm()}\n            >\n              <div className={styles.desktopC}>\n                <div className={styles.dtext}>\n                  Shipping Time\n                </div>\n                <div className={styles.mainContainer}>\n                  <div className={styles.container}>\n                    <div className={styles.formik}>\n                      <div className={styles.firstDiv}>\n                        <FormikInput\n                          label=\"Min. no. of days/hours to ship\"\n                          name=\"fromItemValue\"\n                          placeholder=\"Enter Days/Hours\"\n                          type=\"number\"\n                          inputClass={styles.input}\n                        />\n                        <div className={styles.padding}>\n                          Enter the minimum no.of days/hours it takes\n                          to get the order ready and ship\n                        </div>\n                      </div>\n                      <div className={styles.select}>\n                        <Select\n                          label=\"Days/hours\"\n                          name=\"itemType\"\n                          onChange={(val) => {\n                            setFieldValue('itemType', val.value);\n                          }}\n                          options={typeOptions}\n                          value={typeOptions.find(x => x.value === values?.itemType)}\n                        />\n                      </div>\n                    </div>\n                    <div className={styles.formik}>\n                      <div className={styles.firstDiv}>\n                        <FormikInput\n                          label=\"Max. no. of days/hours to ship\"\n                          name=\"toItemValue\"\n                          placeholder=\"Enter Days/Hours\"\n                          type=\"number\"\n                          inputClass={styles.input}\n                        />\n                        <div className={styles.padding}>\n                          Enter the max no.of days/hours it takes\n                          to get the order ready and ship\n                        </div>\n                      </div>\n                      <div className={styles.select}>\n                        <Select\n                          name=\"itemType\"\n                          label=\"Days/hours\"\n                          isDisabled={true}\n                          onChange={(val) => {\n                            setFieldValue('itemType', val.value);\n                          }}\n                          options={typeOptions}\n                          value={typeOptions.find(x => x.value === values?.itemType)}\n                        />\n                      </div>\n                    </div>\n                    <div className={styles.preview}>\n                      Your Delivery Timeline\n                      <div className={styles.est}>\n                        <img src={estimateDelivery} alt=\"\" className={styles.img} />\n                        {}\n                        Estimated Delivery Time :\n                        {' '}\n                        {values?.fromItemValue}\n                        {' '}\n                        -\n                        {' '}\n                        {values?.toItemValue}\n                        {' '}\n                        {values?.itemType}\n                      </div>\n                      {/* <div className={styles.bottom}>\n                        3-4 days will be added to your order ready time to include pickup and\n                        delivery time for the customer\n                      </div> */}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className={styles.buttonD}>\n                <Button\n                  label=\"Save\"\n                  size=\"large\"\n                  onClick={submitForm}\n                />\n              </div>\n            </SideDrawer>\n          )}\n        </Formik>\n      </>\n\n    );\n  }\n\n  return (\n    <Drawer title=\"Shipping Timeline\" hideHeader={isProduct}>\n      {isProduct && <Header title=\"Shipping Time\" onBack={onBack} />}\n      <div className={styles.mainContainer}>\n        <Formik\n          validationSchema={schema}\n          initialValues={getInitial()}\n          onSubmit={onSubmit}\n        >\n          {({\n            values,\n            setFieldValue,\n            submitForm,\n          }) => (\n            <div className={styles.container}>\n              <div className={styles.formik}>\n                <div className={styles.firstDiv}>\n                  <FormikInput\n                    label=\"Min. no. of days/hours to ship\"\n                    name=\"fromItemValue\"\n                    placeholder=\"Enter Days/Hours\"\n                    type=\"number\"\n                    inputClass={styles.input}\n                  />\n                  <div className={styles.padding}>\n                    Enter the minimum no.of days/hours it takes\n                    to get the order ready and ship\n                  </div>\n                </div>\n                <div className={styles.select}>\n                  <Select\n                    label=\"Days/hours\"\n                    name=\"itemType\"\n                    onChange={(val) => {\n                      setFieldValue('itemType', val.value);\n                    }}\n                    options={typeOptions}\n                    value={typeOptions.find(x => x.value === values?.itemType)}\n                  />\n                </div>\n              </div>\n              <div className={styles.formik2}>\n                <div className={styles.firstDiv1}>\n                  <FormikInput\n                    label=\"Max. no. of days/hours to ship\"\n                    name=\"toItemValue\"\n                    placeholder=\"Enter Days/Hours\"\n                    type=\"number\"\n                    inputClass={styles.input}\n                  />\n                  <div className={styles.padding}>\n                    Enter the max no.of days/hours it takes\n                    to get the order ready and ship\n                  </div>\n                </div>\n                <div className={styles.select}>\n                  <Select\n                    name=\"itemType\"\n                    label=\"Days/hours\"\n                    isDisabled={true}\n                    onChange={(val) => {\n                      setFieldValue('itemType', val.value);\n                    }}\n                    options={typeOptions}\n                    value={typeOptions.find(x => x.value === values?.itemType)}\n                  />\n                </div>\n              </div>\n              <div className={styles.preview}>\n                Your Delivery Timeline\n                <div className={styles.est}>\n                  <img src={estimateDelivery} alt=\"\" className={styles.img} />\n                  {}\n                  Estimated Delivery Time :\n                  {' '}\n                  {values?.fromItemValue}\n                  {' '}\n                  -\n                  {' '}\n                  {values?.toItemValue}\n                  {' '}\n                  {values?.itemType}\n                </div>\n                {/* <div className={styles.bottom}>\n                  3-4 days will be added to your order ready time to include pickup and\n                  delivery time for the customer\n                </div> */}\n              </div>\n              <FooterButton>\n                <Button\n                  fullWidth\n                  bordered={false}\n                  label=\"Save\"\n                  size=\"large\"\n                  onClick={submitForm}\n                />\n              </FooterButton>\n            </div>\n          )}\n        </Formik>\n      </div>\n    </Drawer>\n  );\n}\n\nShippingTime.propTypes = {\n  isProduct: PropTypes.bool,\n  onBack: PropTypes.func,\n};\n\nShippingTime.defaultProps = {\n  isProduct: false,\n  onBack: () => {\n  }\n};\n\nexport default ShippingTime;\n"]},"metadata":{},"sourceType":"module"}