{"ast":null,"code":"var _jsxFileName = \"/home/harish/windo/phoenix/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport MomentUtils from '@date-io/moment';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport Container from \"./Container\";\nimport ErrorBoundary from \"./layouts/ErrorBoundary\";\nimport SnackBar from \"./components/shared/SnackBar\";\nimport Loader from \"./components/shared/Loader\";\nimport SwiperCore, { Lazy, Pagination } from 'swiper';\nimport \"./App.css\";\nimport { UpdateAlert } from \"./components/updateAlert\";\nimport { Theme } from 'phoenix-components';\nimport { AppContext } from \"./contexts\";\nimport { useIsDesktopJs } from \"./hooks/device\";\nimport { TranslateButton } from \"./components/global/TranslateButton\";\nimport _ from 'lodash';\nimport Ratings from \"./components/reviewProduct/Ratings\";\nimport theme from \"./theme\";\nSwiperCore.use([Pagination, Lazy]);\n\nfunction App() {\n  _s();\n\n  const isDesktop = useIsDesktopJs();\n  const [language, setLanguage] = useState(() => {\n    const lang = localStorage.getItem('language');\n    return _.isEmpty(lang) ? 'en' : lang;\n  });\n\n  const onSetLanguage = lang => {\n    localStorage.setItem('language', lang);\n    setLanguage(lang);\n  };\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      isDesktop,\n      language,\n      setLanguage: onSetLanguage\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Theme, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ErrorBoundary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SnackBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(UpdateAlert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Ratings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TranslateButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }))))));\n}\n\n_s(App, \"xLWPdr3mNpVQKG4gZhZQQwh8uZc=\", false, function () {\n  return [useIsDesktopJs];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/harish/windo/phoenix/src/App.js"],"names":["React","useState","ThemeProvider","MomentUtils","MuiPickersUtilsProvider","Container","ErrorBoundary","SnackBar","Loader","SwiperCore","Lazy","Pagination","UpdateAlert","Theme","AppContext","useIsDesktopJs","TranslateButton","_","Ratings","theme","use","App","isDesktop","language","setLanguage","lang","localStorage","getItem","isEmpty","onSetLanguage","setItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,uBAAT,QAAwC,sBAAxC;AACA,OAAOC,SAAP;AACA,OAAOC,aAAP;AACA,OAAOC,QAAP;AACA,OAAOC,MAAP;AACA,OAAOC,UAAP,IAAqBC,IAArB,EAA2BC,UAA3B,QAA6C,QAA7C;AACA;AACA,SAASC,WAAT;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,UAAT;AACA,SAASC,cAAT;AACA,SAASC,eAAT;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,OAAP;AACA,OAAOC,KAAP;AAEAV,UAAU,CAACW,GAAX,CAAe,CAACT,UAAD,EAAaD,IAAb,CAAf;;AAEA,SAASW,GAAT,GAAe;AAAA;;AACb,QAAMC,SAAS,GAAGP,cAAc,EAAhC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,MAAM;AAC7C,UAAMwB,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAb;AACA,WAAOV,CAAC,CAACW,OAAF,CAAUH,IAAV,IAAkB,IAAlB,GAAyBA,IAAhC;AACD,GAHuC,CAAxC;;AAKA,QAAMI,aAAa,GAAIJ,IAAD,IAAU;AAC9BC,IAAAA,YAAY,CAACI,OAAb,CAAqB,UAArB,EAAiCL,IAAjC;AACAD,IAAAA,WAAW,CAACC,IAAD,CAAX;AACD,GAHD;;AAKA,sBACE,oBAAC,UAAD,CAAY,QAAZ;AACE,IAAA,KAAK,EAAE;AACLH,MAAAA,SADK;AAELC,MAAAA,QAFK;AAGLC,MAAAA,WAAW,EAAEK;AAHR,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEV,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,uBAAD;AAAyB,IAAA,KAAK,EAAEhB,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CADF,CADF,CANF,CADF;AAwBD;;GApCQkB,G;UACWN,c;;;KADXM,G;AAsCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport MomentUtils from '@date-io/moment';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport Container from 'Container';\nimport ErrorBoundary from 'layouts/ErrorBoundary';\nimport SnackBar from 'components/shared/SnackBar';\nimport Loader from 'components/shared/Loader';\nimport SwiperCore, { Lazy, Pagination } from 'swiper';\nimport './App.css';\nimport { UpdateAlert } from 'components/updateAlert';\nimport { Theme } from 'phoenix-components';\nimport { AppContext } from 'contexts';\nimport { useIsDesktopJs } from 'hooks/device';\nimport { TranslateButton } from 'components/global/TranslateButton';\nimport _ from 'lodash';\nimport Ratings from 'components/reviewProduct/Ratings';\nimport theme from './theme';\n\nSwiperCore.use([Pagination, Lazy]);\n\nfunction App() {\n  const isDesktop = useIsDesktopJs();\n  const [language, setLanguage] = useState(() => {\n    const lang = localStorage.getItem('language');\n    return _.isEmpty(lang) ? 'en' : lang;\n  });\n\n  const onSetLanguage = (lang) => {\n    localStorage.setItem('language', lang);\n    setLanguage(lang);\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        isDesktop,\n        language,\n        setLanguage: onSetLanguage\n      }}>\n      <ThemeProvider theme={theme}>\n        <Theme>\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <ErrorBoundary>\n\n              <Container />\n              <SnackBar />\n              <Loader />\n              <UpdateAlert />\n              <Ratings />\n              <TranslateButton />\n            </ErrorBoundary>\n          </MuiPickersUtilsProvider>\n        </Theme>\n      </ThemeProvider>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}